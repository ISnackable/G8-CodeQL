{
  "$schema" : "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.5.4",
        "rules" : [ {
          "id" : "js/angular/disabling-sce",
          "name" : "js/angular/disabling-sce",
          "shortDescription" : {
            "text" : "Disabling SCE"
          },
          "fullDescription" : {
            "text" : "Disabling strict contextual escaping (SCE) can cause security vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "maintainability", "frameworks/angularjs" ],
            "description" : "Disabling strict contextual escaping (SCE) can cause security vulnerabilities.",
            "id" : "js/angular/disabling-sce",
            "kind" : "problem",
            "name" : "Disabling SCE",
            "precision" : "very-high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/angular/double-compilation",
          "name" : "js/angular/double-compilation",
          "shortDescription" : {
            "text" : "Double compilation"
          },
          "fullDescription" : {
            "text" : "Recompiling an already compiled part of the DOM can lead to unexpected behavior of directives, performance problems, and memory leaks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "reliability", "frameworks/angularjs", "security" ],
            "description" : "Recompiling an already compiled part of the DOM can lead to\n              unexpected behavior of directives, performance problems, and memory leaks.",
            "id" : "js/angular/double-compilation",
            "kind" : "problem",
            "name" : "Double compilation",
            "precision" : "very-high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/angular/insecure-url-whitelist",
          "name" : "js/angular/insecure-url-whitelist",
          "shortDescription" : {
            "text" : "Insecure URL whitelist"
          },
          "fullDescription" : {
            "text" : "URL whitelists that are too permissive can cause security vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "frameworks/angularjs", "external/cwe/cwe-183", "external/cwe/cwe-625" ],
            "description" : "URL whitelists that are too permissive can cause security vulnerabilities.",
            "id" : "js/angular/insecure-url-whitelist",
            "kind" : "problem",
            "name" : "Insecure URL whitelist",
            "precision" : "very-high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/unsafe-external-link",
          "name" : "js/unsafe-external-link",
          "shortDescription" : {
            "text" : "Potentially unsafe external link"
          },
          "fullDescription" : {
            "text" : "External links that open in a new tab or window but do not specify link type 'noopener' or 'noreferrer' are a potential security risk."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "maintainability", "security", "external/cwe/cwe-200", "external/cwe/cwe-1022" ],
            "description" : "External links that open in a new tab or window but do not specify\n              link type 'noopener' or 'noreferrer' are a potential security risk.",
            "id" : "js/unsafe-external-link",
            "kind" : "problem",
            "name" : "Potentially unsafe external link",
            "precision" : "very-high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/enabling-electron-insecure-content",
          "name" : "js/enabling-electron-insecure-content",
          "shortDescription" : {
            "text" : "Enabling Electron allowRunningInsecureContent"
          },
          "fullDescription" : {
            "text" : "Enabling allowRunningInsecureContent can allow remote code execution."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "frameworks/electron" ],
            "description" : "Enabling allowRunningInsecureContent can allow remote code execution.",
            "id" : "js/enabling-electron-insecure-content",
            "kind" : "problem",
            "name" : "Enabling Electron allowRunningInsecureContent",
            "precision" : "very-high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/disabling-electron-websecurity",
          "name" : "js/disabling-electron-websecurity",
          "shortDescription" : {
            "text" : "Disabling Electron webSecurity"
          },
          "fullDescription" : {
            "text" : "Disabling webSecurity can cause critical security vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "frameworks/electron" ],
            "description" : "Disabling webSecurity can cause critical security vulnerabilities.",
            "id" : "js/disabling-electron-websecurity",
            "kind" : "problem",
            "name" : "Disabling Electron webSecurity",
            "precision" : "very-high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/polynomial-redos",
          "name" : "js/polynomial-redos",
          "shortDescription" : {
            "text" : "Polynomial regular expression used on uncontrolled data"
          },
          "fullDescription" : {
            "text" : "A regular expression that can require polynomial time to match may be vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-730", "external/cwe/cwe-400" ],
            "description" : "A regular expression that can require polynomial time\n              to match may be vulnerable to denial-of-service attacks.",
            "id" : "js/polynomial-redos",
            "kind" : "path-problem",
            "name" : "Polynomial regular expression used on uncontrolled data",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/redos",
          "name" : "js/redos",
          "shortDescription" : {
            "text" : "Inefficient regular expression"
          },
          "fullDescription" : {
            "text" : "A regular expression that requires exponential time to match certain inputs can be a performance bottleneck, and may be vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-730", "external/cwe/cwe-400" ],
            "description" : "A regular expression that requires exponential time to match certain inputs\n              can be a performance bottleneck, and may be vulnerable to denial-of-service\n              attacks.",
            "id" : "js/redos",
            "kind" : "problem",
            "name" : "Inefficient regular expression",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/identity-replacement",
          "name" : "js/identity-replacement",
          "shortDescription" : {
            "text" : "Replacement of a substring with itself"
          },
          "fullDescription" : {
            "text" : "Replacing a substring with itself has no effect and may indicate a mistake."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-116" ],
            "description" : "Replacing a substring with itself has no effect and may indicate a mistake.",
            "id" : "js/identity-replacement",
            "kind" : "problem",
            "name" : "Replacement of a substring with itself",
            "precision" : "very-high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/incomplete-hostname-regexp",
          "name" : "js/incomplete-hostname-regexp",
          "shortDescription" : {
            "text" : "Incomplete regular expression for hostnames"
          },
          "fullDescription" : {
            "text" : "Matching a URL or hostname against a regular expression that contains an unescaped dot as part of the hostname might match more hostnames than expected."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-020" ],
            "description" : "Matching a URL or hostname against a regular expression that contains an unescaped dot as part of the hostname might match more hostnames than expected.",
            "id" : "js/incomplete-hostname-regexp",
            "kind" : "problem",
            "name" : "Incomplete regular expression for hostnames",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/incomplete-url-scheme-check",
          "name" : "js/incomplete-url-scheme-check",
          "shortDescription" : {
            "text" : "Incomplete URL scheme check"
          },
          "fullDescription" : {
            "text" : "Checking for the \"javascript:\" URL scheme without also checking for \"vbscript:\" and \"data:\" suggests a logic error or even a security vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "correctness", "external/cwe/cwe-020" ],
            "description" : "Checking for the \"javascript:\" URL scheme without also checking for \"vbscript:\"\n              and \"data:\" suggests a logic error or even a security vulnerability.",
            "id" : "js/incomplete-url-scheme-check",
            "kind" : "problem",
            "name" : "Incomplete URL scheme check",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/incomplete-url-substring-sanitization",
          "name" : "js/incomplete-url-substring-sanitization",
          "shortDescription" : {
            "text" : "Incomplete URL substring sanitization"
          },
          "fullDescription" : {
            "text" : "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-020" ],
            "description" : "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.",
            "id" : "js/incomplete-url-substring-sanitization",
            "kind" : "problem",
            "name" : "Incomplete URL substring sanitization",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/incorrect-suffix-check",
          "name" : "js/incorrect-suffix-check",
          "shortDescription" : {
            "text" : "Incorrect suffix check"
          },
          "fullDescription" : {
            "text" : "Using indexOf to implement endsWith functionality is error-prone if the -1 case is not explicitly handled."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "correctness", "external/cwe/cwe-020" ],
            "description" : "Using indexOf to implement endsWith functionality is error-prone if the -1 case is not explicitly handled.",
            "id" : "js/incorrect-suffix-check",
            "kind" : "problem",
            "name" : "Incorrect suffix check",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/useless-regexp-character-escape",
          "name" : "js/useless-regexp-character-escape",
          "shortDescription" : {
            "text" : "Useless regular-expression character escape"
          },
          "fullDescription" : {
            "text" : "Prepending a backslash to an ordinary character in a string does not have any effect, and may make regular expressions constructed from this string behave unexpectedly."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-020" ],
            "description" : "Prepending a backslash to an ordinary character in a string\n              does not have any effect, and may make regular expressions constructed from this string\n              behave unexpectedly.",
            "id" : "js/useless-regexp-character-escape",
            "kind" : "problem",
            "name" : "Useless regular-expression character escape",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/path-injection",
          "name" : "js/path-injection",
          "shortDescription" : {
            "text" : "Uncontrolled data used in path expression"
          },
          "fullDescription" : {
            "text" : "Accessing paths influenced by users can allow an attacker to access unexpected resources."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-022", "external/cwe/cwe-023", "external/cwe/cwe-036", "external/cwe/cwe-073", "external/cwe/cwe-099" ],
            "description" : "Accessing paths influenced by users can allow an attacker to access\n              unexpected resources.",
            "id" : "js/path-injection",
            "kind" : "path-problem",
            "name" : "Uncontrolled data used in path expression",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/zipslip",
          "name" : "js/zipslip",
          "shortDescription" : {
            "text" : "Arbitrary file write during zip extraction (\"Zip Slip\")"
          },
          "fullDescription" : {
            "text" : "Extracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-022" ],
            "description" : "Extracting files from a malicious zip archive without validating that the\n              destination file path is within the destination directory can cause files outside\n              the destination directory to be overwritten.",
            "id" : "js/zipslip",
            "kind" : "path-problem",
            "name" : "Arbitrary file write during zip extraction (\"Zip Slip\")",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/template-object-injection",
          "name" : "js/template-object-injection",
          "shortDescription" : {
            "text" : "Template Object Injection"
          },
          "fullDescription" : {
            "text" : "Instantiating a template using a user-controlled object is vulnerable to local file read and potential remote code execution."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-073", "external/cwe/cwe-094" ],
            "description" : "Instantiating a template using a user-controlled object is vulnerable to local file read and potential remote code execution.",
            "id" : "js/template-object-injection",
            "kind" : "path-problem",
            "name" : "Template Object Injection",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/command-line-injection",
          "name" : "js/command-line-injection",
          "shortDescription" : {
            "text" : "Uncontrolled command line"
          },
          "fullDescription" : {
            "text" : "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-078", "external/cwe/cwe-088" ],
            "description" : "Using externally controlled strings in a command line may allow a malicious\n              user to change the meaning of the command.",
            "id" : "js/command-line-injection",
            "kind" : "path-problem",
            "name" : "Uncontrolled command line",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/shell-command-injection-from-environment",
          "name" : "js/shell-command-injection-from-environment",
          "shortDescription" : {
            "text" : "Shell command built from environment values"
          },
          "fullDescription" : {
            "text" : "Building a shell command string with values from the enclosing environment may cause subtle bugs or vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-078", "external/cwe/cwe-088" ],
            "description" : "Building a shell command string with values from the enclosing\n              environment may cause subtle bugs or vulnerabilities.",
            "id" : "js/shell-command-injection-from-environment",
            "kind" : "path-problem",
            "name" : "Shell command built from environment values",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/shell-command-constructed-from-input",
          "name" : "js/shell-command-constructed-from-input",
          "shortDescription" : {
            "text" : "Unsafe shell command constructed from library input"
          },
          "fullDescription" : {
            "text" : "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-078", "external/cwe/cwe-088" ],
            "description" : "Using externally controlled strings in a command line may allow a malicious\n              user to change the meaning of the command.",
            "id" : "js/shell-command-constructed-from-input",
            "kind" : "path-problem",
            "name" : "Unsafe shell command constructed from library input",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/unnecessary-use-of-cat",
          "name" : "js/unnecessary-use-of-cat",
          "shortDescription" : {
            "text" : "Unnecessary use of `cat` process"
          },
          "fullDescription" : {
            "text" : "Using the `cat` process to read a file is unnecessarily complex, inefficient, unportable, and can lead to subtle bugs, or even security vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "maintainability" ],
            "description" : "Using the  `cat` process to read a file is unnecessarily complex, inefficient, unportable, and can lead to subtle bugs, or even security vulnerabilities.",
            "id" : "js/unnecessary-use-of-cat",
            "kind" : "problem",
            "name" : "Unnecessary use of `cat` process",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/xss-through-exception",
          "name" : "js/xss-through-exception",
          "shortDescription" : {
            "text" : "Exception text reinterpreted as HTML"
          },
          "fullDescription" : {
            "text" : "Reinterpreting text from an exception as HTML can lead to a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Reinterpreting text from an exception as HTML\n              can lead to a cross-site scripting vulnerability.",
            "id" : "js/xss-through-exception",
            "kind" : "path-problem",
            "name" : "Exception text reinterpreted as HTML",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/reflected-xss",
          "name" : "js/reflected-xss",
          "shortDescription" : {
            "text" : "Reflected cross-site scripting"
          },
          "fullDescription" : {
            "text" : "Writing user input directly to an HTTP response allows for a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Writing user input directly to an HTTP response allows for\n              a cross-site scripting vulnerability.",
            "id" : "js/reflected-xss",
            "kind" : "path-problem",
            "name" : "Reflected cross-site scripting",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/stored-xss",
          "name" : "js/stored-xss",
          "shortDescription" : {
            "text" : "Stored cross-site scripting"
          },
          "fullDescription" : {
            "text" : "Using uncontrolled stored values in HTML allows for a stored cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Using uncontrolled stored values in HTML allows for\n              a stored cross-site scripting vulnerability.",
            "id" : "js/stored-xss",
            "kind" : "path-problem",
            "name" : "Stored cross-site scripting",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/unsafe-jquery-plugin",
          "name" : "js/unsafe-jquery-plugin",
          "shortDescription" : {
            "text" : "Unsafe jQuery plugin"
          },
          "fullDescription" : {
            "text" : "A jQuery plugin that unintentionally constructs HTML from some of its options may be unsafe to use for clients."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116", "frameworks/jquery" ],
            "description" : "A jQuery plugin that unintentionally constructs HTML from some of its options may be unsafe to use for clients.",
            "id" : "js/unsafe-jquery-plugin",
            "kind" : "path-problem",
            "name" : "Unsafe jQuery plugin",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/xss",
          "name" : "js/xss",
          "shortDescription" : {
            "text" : "Client-side cross-site scripting"
          },
          "fullDescription" : {
            "text" : "Writing user input directly to the DOM allows for a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Writing user input directly to the DOM allows for\n              a cross-site scripting vulnerability.",
            "id" : "js/xss",
            "kind" : "path-problem",
            "name" : "Client-side cross-site scripting",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/xss-through-dom",
          "name" : "js/xss-through-dom",
          "shortDescription" : {
            "text" : "DOM text reinterpreted as HTML"
          },
          "fullDescription" : {
            "text" : "Reinterpreting text from the DOM as HTML can lead to a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Reinterpreting text from the DOM as HTML\n              can lead to a cross-site scripting vulnerability.",
            "id" : "js/xss-through-dom",
            "kind" : "path-problem",
            "name" : "DOM text reinterpreted as HTML",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/sql-injection",
          "name" : "js/sql-injection",
          "shortDescription" : {
            "text" : "Database query built from user-controlled sources"
          },
          "fullDescription" : {
            "text" : "Building a database query from user-controlled sources is vulnerable to insertion of malicious code by the user."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-089" ],
            "description" : "Building a database query from user-controlled sources is vulnerable to insertion of\n              malicious code by the user.",
            "id" : "js/sql-injection",
            "kind" : "path-problem",
            "name" : "Database query built from user-controlled sources",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/code-injection",
          "name" : "js/code-injection",
          "shortDescription" : {
            "text" : "Code injection"
          },
          "fullDescription" : {
            "text" : "Interpreting unsanitized user input as code allows a malicious user arbitrary code execution."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-094", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Interpreting unsanitized user input as code allows a malicious user arbitrary\n              code execution.",
            "id" : "js/code-injection",
            "kind" : "path-problem",
            "name" : "Code injection",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/bad-code-sanitization",
          "name" : "js/bad-code-sanitization",
          "shortDescription" : {
            "text" : "Improper code sanitization"
          },
          "fullDescription" : {
            "text" : "Escaping code as HTML does not provide protection against code injection."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-094", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Escaping code as HTML does not provide protection against code injection.",
            "id" : "js/bad-code-sanitization",
            "kind" : "path-problem",
            "name" : "Improper code sanitization",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/unsafe-dynamic-method-access",
          "name" : "js/unsafe-dynamic-method-access",
          "shortDescription" : {
            "text" : "Unsafe dynamic method access"
          },
          "fullDescription" : {
            "text" : "Invoking user-controlled methods on certain objects can lead to remote code execution."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-094" ],
            "description" : "Invoking user-controlled methods on certain objects can lead to remote code execution.",
            "id" : "js/unsafe-dynamic-method-access",
            "kind" : "path-problem",
            "name" : "Unsafe dynamic method access",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/double-escaping",
          "name" : "js/double-escaping",
          "shortDescription" : {
            "text" : "Double escaping or unescaping"
          },
          "fullDescription" : {
            "text" : "When escaping special characters using a meta-character like backslash or ampersand, the meta-character has to be escaped first to avoid double-escaping, and conversely it has to be unescaped last to avoid double-unescaping."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-116", "external/cwe/cwe-020" ],
            "description" : "When escaping special characters using a meta-character like backslash or\n              ampersand, the meta-character has to be escaped first to avoid double-escaping,\n              and conversely it has to be unescaped last to avoid double-unescaping.",
            "id" : "js/double-escaping",
            "kind" : "problem",
            "name" : "Double escaping or unescaping",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/incomplete-html-attribute-sanitization",
          "name" : "js/incomplete-html-attribute-sanitization",
          "shortDescription" : {
            "text" : "Incomplete HTML attribute sanitization"
          },
          "fullDescription" : {
            "text" : "Writing incompletely sanitized values to HTML attribute strings can lead to a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116", "external/cwe/cwe-020" ],
            "description" : "Writing incompletely sanitized values to HTML\n              attribute strings can lead to a cross-site\n              scripting vulnerability.",
            "id" : "js/incomplete-html-attribute-sanitization",
            "kind" : "path-problem",
            "name" : "Incomplete HTML attribute sanitization",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/incomplete-multi-character-sanitization",
          "name" : "js/incomplete-multi-character-sanitization",
          "shortDescription" : {
            "text" : "Incomplete multi-character sanitization"
          },
          "fullDescription" : {
            "text" : "A sanitizer that removes a sequence of characters may reintroduce the dangerous sequence."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-116", "external/cwe/cwe-020" ],
            "description" : "A sanitizer that removes a sequence of characters may reintroduce the dangerous sequence.",
            "id" : "js/incomplete-multi-character-sanitization",
            "kind" : "problem",
            "name" : "Incomplete multi-character sanitization",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/incomplete-sanitization",
          "name" : "js/incomplete-sanitization",
          "shortDescription" : {
            "text" : "Incomplete string escaping or encoding"
          },
          "fullDescription" : {
            "text" : "A string transformer that does not replace or escape all occurrences of a meta-character may be ineffective."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-116", "external/cwe/cwe-020" ],
            "description" : "A string transformer that does not replace or escape all occurrences of a\n              meta-character may be ineffective.",
            "id" : "js/incomplete-sanitization",
            "kind" : "problem",
            "name" : "Incomplete string escaping or encoding",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/unsafe-html-expansion",
          "name" : "js/unsafe-html-expansion",
          "shortDescription" : {
            "text" : "Unsafe expansion of self-closing HTML tag"
          },
          "fullDescription" : {
            "text" : "Using regular expressions to expand self-closing HTML tags may lead to cross-site scripting vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Using regular expressions to expand self-closing HTML\n              tags may lead to cross-site scripting vulnerabilities.",
            "id" : "js/unsafe-html-expansion",
            "kind" : "problem",
            "name" : "Unsafe expansion of self-closing HTML tag",
            "precision" : "very-high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/tainted-format-string",
          "name" : "js/tainted-format-string",
          "shortDescription" : {
            "text" : "Use of externally-controlled format string"
          },
          "fullDescription" : {
            "text" : "Using external input in format strings can lead to garbled output."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-134" ],
            "description" : "Using external input in format strings can lead to garbled output.",
            "id" : "js/tainted-format-string",
            "kind" : "path-problem",
            "name" : "Use of externally-controlled format string",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/exposure-of-private-files",
          "name" : "js/exposure-of-private-files",
          "shortDescription" : {
            "text" : "Exposure of private files"
          },
          "fullDescription" : {
            "text" : "Exposing a node_modules folder, or the project folder to the public, can cause exposure of private information."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-200" ],
            "description" : "Exposing a node_modules folder, or the project folder to the public, can cause exposure\n              of private information.",
            "id" : "js/exposure-of-private-files",
            "kind" : "problem",
            "name" : "Exposure of private files",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/cross-window-information-leak",
          "name" : "js/cross-window-information-leak",
          "shortDescription" : {
            "text" : "Cross-window communication with unrestricted target origin"
          },
          "fullDescription" : {
            "text" : "When sending sensitive information to another window using `postMessage`, the origin of the target window should be restricted to avoid unintentional information leaks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-201", "external/cwe/cwe-359" ],
            "description" : "When sending sensitive information to another window using `postMessage`,\n              the origin of the target window should be restricted to avoid unintentional\n              information leaks.",
            "id" : "js/cross-window-information-leak",
            "kind" : "path-problem",
            "name" : "Cross-window communication with unrestricted target origin",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/stack-trace-exposure",
          "name" : "js/stack-trace-exposure",
          "shortDescription" : {
            "text" : "Information exposure through a stack trace"
          },
          "fullDescription" : {
            "text" : "Propagating stack trace information to an external user can unintentionally reveal implementation details that are useful to an attacker for developing a subsequent exploit."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-209" ],
            "description" : "Propagating stack trace information to an external user can\n              unintentionally reveal implementation details that are useful\n              to an attacker for developing a subsequent exploit.",
            "id" : "js/stack-trace-exposure",
            "kind" : "path-problem",
            "name" : "Information exposure through a stack trace",
            "precision" : "very-high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/disabling-certificate-validation",
          "name" : "js/disabling-certificate-validation",
          "shortDescription" : {
            "text" : "Disabling certificate validation"
          },
          "fullDescription" : {
            "text" : "Disabling cryptographic certificate validation can cause security vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe-295" ],
            "description" : "Disabling cryptographic certificate validation can cause security vulnerabilities.",
            "id" : "js/disabling-certificate-validation",
            "kind" : "problem",
            "name" : "Disabling certificate validation",
            "precision" : "very-high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/build-artifact-leak",
          "name" : "js/build-artifact-leak",
          "shortDescription" : {
            "text" : "Storage of sensitive information in build artifact"
          },
          "fullDescription" : {
            "text" : "Including sensitive information in a build artifact can expose it to an attacker."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-312", "external/cwe/cwe-315", "external/cwe/cwe-359" ],
            "description" : "Including sensitive information in a build artifact can\n              expose it to an attacker.",
            "id" : "js/build-artifact-leak",
            "kind" : "path-problem",
            "name" : "Storage of sensitive information in build artifact",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/clear-text-logging",
          "name" : "js/clear-text-logging",
          "shortDescription" : {
            "text" : "Clear-text logging of sensitive information"
          },
          "fullDescription" : {
            "text" : "Logging sensitive information without encryption or hashing can expose it to an attacker."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-312", "external/cwe/cwe-315", "external/cwe/cwe-359" ],
            "description" : "Logging sensitive information without encryption or hashing can\n              expose it to an attacker.",
            "id" : "js/clear-text-logging",
            "kind" : "path-problem",
            "name" : "Clear-text logging of sensitive information",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/clear-text-storage-of-sensitive-data",
          "name" : "js/clear-text-storage-of-sensitive-data",
          "shortDescription" : {
            "text" : "Clear text storage of sensitive information"
          },
          "fullDescription" : {
            "text" : "Sensitive information stored without encryption or hashing can expose it to an attacker."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-312", "external/cwe/cwe-315", "external/cwe/cwe-359" ],
            "description" : "Sensitive information stored without encryption or hashing can expose it to an\n              attacker.",
            "id" : "js/clear-text-storage-of-sensitive-data",
            "kind" : "path-problem",
            "name" : "Clear text storage of sensitive information",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/biased-cryptographic-random",
          "name" : "js/biased-cryptographic-random",
          "shortDescription" : {
            "text" : "Creating biased random numbers from a cryptographically secure source."
          },
          "fullDescription" : {
            "text" : "Some mathematical operations on random numbers can cause bias in the results and compromise security."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-327" ],
            "description" : "Some mathematical operations on random numbers can cause bias in\n              the results and compromise security.",
            "id" : "js/biased-cryptographic-random",
            "kind" : "problem",
            "name" : "Creating biased random numbers from a cryptographically secure source.",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/weak-cryptographic-algorithm",
          "name" : "js/weak-cryptographic-algorithm",
          "shortDescription" : {
            "text" : "Use of a broken or weak cryptographic algorithm"
          },
          "fullDescription" : {
            "text" : "Using broken or weak cryptographic algorithms can compromise security."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-327" ],
            "description" : "Using broken or weak cryptographic algorithms can compromise security.",
            "id" : "js/weak-cryptographic-algorithm",
            "kind" : "path-problem",
            "name" : "Use of a broken or weak cryptographic algorithm",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/insecure-randomness",
          "name" : "js/insecure-randomness",
          "shortDescription" : {
            "text" : "Insecure randomness"
          },
          "fullDescription" : {
            "text" : "Using a cryptographically weak pseudo-random number generator to generate a security-sensitive value may allow an attacker to predict what value will be generated."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-338" ],
            "description" : "Using a cryptographically weak pseudo-random number generator to generate a\n              security-sensitive value may allow an attacker to predict what value will\n              be generated.",
            "id" : "js/insecure-randomness",
            "kind" : "path-problem",
            "name" : "Insecure randomness",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/cors-misconfiguration-for-credentials",
          "name" : "js/cors-misconfiguration-for-credentials",
          "shortDescription" : {
            "text" : "CORS misconfiguration for credentials transfer"
          },
          "fullDescription" : {
            "text" : "Misconfiguration of CORS HTTP headers allows for leaks of secret credentials."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-346", "external/cwe/cwe-639" ],
            "description" : "Misconfiguration of CORS HTTP headers allows for leaks of secret credentials.",
            "id" : "js/cors-misconfiguration-for-credentials",
            "kind" : "path-problem",
            "name" : "CORS misconfiguration for credentials transfer",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/missing-token-validation",
          "name" : "js/missing-token-validation",
          "shortDescription" : {
            "text" : "Missing CSRF middleware"
          },
          "fullDescription" : {
            "text" : "Using cookies without CSRF protection may allow malicious websites to submit requests on behalf of the user."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-352" ],
            "description" : "Using cookies without CSRF protection may allow malicious websites to\n              submit requests on behalf of the user.",
            "id" : "js/missing-token-validation",
            "kind" : "problem",
            "name" : "Missing CSRF middleware",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/resource-exhaustion-from-deep-object-traversal",
          "name" : "js/resource-exhaustion-from-deep-object-traversal",
          "shortDescription" : {
            "text" : "Resources exhaustion from deep object traversal"
          },
          "fullDescription" : {
            "text" : "Processing user-controlled object hierarchies inefficiently can lead to denial of service."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-400" ],
            "description" : "Processing user-controlled object hierarchies inefficiently can lead to denial of service.",
            "id" : "js/resource-exhaustion-from-deep-object-traversal",
            "kind" : "path-problem",
            "name" : "Resources exhaustion from deep object traversal",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/unsafe-deserialization",
          "name" : "js/unsafe-deserialization",
          "shortDescription" : {
            "text" : "Deserialization of user-controlled data"
          },
          "fullDescription" : {
            "text" : "Deserializing user-controlled data may allow attackers to execute arbitrary code."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-502" ],
            "description" : "Deserializing user-controlled data may allow attackers to\n              execute arbitrary code.",
            "id" : "js/unsafe-deserialization",
            "kind" : "path-problem",
            "name" : "Deserialization of user-controlled data",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/client-side-unvalidated-url-redirection",
          "name" : "js/client-side-unvalidated-url-redirection",
          "shortDescription" : {
            "text" : "Client-side URL redirect"
          },
          "fullDescription" : {
            "text" : "Client-side URL redirection based on unvalidated user input may cause redirection to malicious web sites."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116", "external/cwe/cwe-601" ],
            "description" : "Client-side URL redirection based on unvalidated user input\n              may cause redirection to malicious web sites.",
            "id" : "js/client-side-unvalidated-url-redirection",
            "kind" : "path-problem",
            "name" : "Client-side URL redirect",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/server-side-unvalidated-url-redirection",
          "name" : "js/server-side-unvalidated-url-redirection",
          "shortDescription" : {
            "text" : "Server-side URL redirect"
          },
          "fullDescription" : {
            "text" : "Server-side URL redirection based on unvalidated user input may cause redirection to malicious web sites."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-601" ],
            "description" : "Server-side URL redirection based on unvalidated user input\n              may cause redirection to malicious web sites.",
            "id" : "js/server-side-unvalidated-url-redirection",
            "kind" : "path-problem",
            "name" : "Server-side URL redirect",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/xxe",
          "name" : "js/xxe",
          "shortDescription" : {
            "text" : "XML external entity expansion"
          },
          "fullDescription" : {
            "text" : "Parsing user input as an XML document with external entity expansion is vulnerable to XXE attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-611", "external/cwe/cwe-827" ],
            "description" : "Parsing user input as an XML document with external\n              entity expansion is vulnerable to XXE attacks.",
            "id" : "js/xxe",
            "kind" : "path-problem",
            "name" : "XML external entity expansion",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/host-header-forgery-in-email-generation",
          "name" : "js/host-header-forgery-in-email-generation",
          "shortDescription" : {
            "text" : "Host header poisoning in email generation"
          },
          "fullDescription" : {
            "text" : "Using the HTTP Host header to construct a link in an email can facilitate phishing attacks and leak password reset tokens."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-640" ],
            "description" : "Using the HTTP Host header to construct a link in an email can facilitate phishing\n              attacks and leak password reset tokens.",
            "id" : "js/host-header-forgery-in-email-generation",
            "kind" : "path-problem",
            "name" : "Host header poisoning in email generation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/xpath-injection",
          "name" : "js/xpath-injection",
          "shortDescription" : {
            "text" : "XPath injection"
          },
          "fullDescription" : {
            "text" : "Building an XPath expression from user-controlled sources is vulnerable to insertion of malicious code by the user."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-643" ],
            "description" : "Building an XPath expression from user-controlled sources is vulnerable to insertion of\n              malicious code by the user.",
            "id" : "js/xpath-injection",
            "kind" : "path-problem",
            "name" : "XPath injection",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/regex-injection",
          "name" : "js/regex-injection",
          "shortDescription" : {
            "text" : "Regular expression injection"
          },
          "fullDescription" : {
            "text" : "User input should not be used in regular expressions without first being escaped, otherwise a malicious user may be able to inject an expression that could require exponential time on certain inputs."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-730", "external/cwe/cwe-400" ],
            "description" : "User input should not be used in regular expressions without first being escaped,\n              otherwise a malicious user may be able to inject an expression that could require\n              exponential time on certain inputs.",
            "id" : "js/regex-injection",
            "kind" : "path-problem",
            "name" : "Regular expression injection",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/server-crash",
          "name" : "js/server-crash",
          "shortDescription" : {
            "text" : "Server crash"
          },
          "fullDescription" : {
            "text" : "A server that can be forced to crash may be vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-730" ],
            "description" : "A server that can be forced to crash may be vulnerable to denial-of-service\n              attacks.",
            "id" : "js/server-crash",
            "kind" : "path-problem",
            "name" : "Server crash",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/unvalidated-dynamic-method-call",
          "name" : "js/unvalidated-dynamic-method-call",
          "shortDescription" : {
            "text" : "Unvalidated dynamic method call"
          },
          "fullDescription" : {
            "text" : "Calling a method with a user-controlled name may dispatch to an unexpected target, which could cause an exception."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-754" ],
            "description" : "Calling a method with a user-controlled name may dispatch to\n              an unexpected target, which could cause an exception.",
            "id" : "js/unvalidated-dynamic-method-call",
            "kind" : "path-problem",
            "name" : "Unvalidated dynamic method call",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/missing-rate-limiting",
          "name" : "js/missing-rate-limiting",
          "shortDescription" : {
            "text" : "Missing rate limiting"
          },
          "fullDescription" : {
            "text" : "An HTTP request handler that performs expensive operations without restricting the rate at which operations can be carried out is vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-770", "external/cwe/cwe-307", "external/cwe/cwe-400" ],
            "description" : "An HTTP request handler that performs expensive operations without\n              restricting the rate at which operations can be carried out is vulnerable\n              to denial-of-service attacks.",
            "id" : "js/missing-rate-limiting",
            "kind" : "problem",
            "name" : "Missing rate limiting",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/xml-bomb",
          "name" : "js/xml-bomb",
          "shortDescription" : {
            "text" : "XML internal entity expansion"
          },
          "fullDescription" : {
            "text" : "Parsing user input as an XML document with arbitrary internal entity expansion is vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-776", "external/cwe/cwe-400" ],
            "description" : "Parsing user input as an XML document with arbitrary internal\n              entity expansion is vulnerable to denial-of-service attacks.",
            "id" : "js/xml-bomb",
            "kind" : "path-problem",
            "name" : "XML internal entity expansion",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/hardcoded-credentials",
          "name" : "js/hardcoded-credentials",
          "shortDescription" : {
            "text" : "Hard-coded credentials"
          },
          "fullDescription" : {
            "text" : "Hard-coding credentials in source code may enable an attacker to gain unauthorized access."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-259", "external/cwe/cwe-321", "external/cwe/cwe-798" ],
            "description" : "Hard-coding credentials in source code may enable an attacker\n              to gain unauthorized access.",
            "id" : "js/hardcoded-credentials",
            "kind" : "path-problem",
            "name" : "Hard-coded credentials",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/insecure-download",
          "name" : "js/insecure-download",
          "shortDescription" : {
            "text" : "Download of sensitive file through insecure connection"
          },
          "fullDescription" : {
            "text" : "Downloading executables and other sensitive files over an insecure connection opens up for potential man-in-the-middle attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-829" ],
            "description" : "Downloading executables and other sensitive files over an insecure connection\n              opens up for potential man-in-the-middle attacks.",
            "id" : "js/insecure-download",
            "kind" : "path-problem",
            "name" : "Download of sensitive file through insecure connection",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/loop-bound-injection",
          "name" : "js/loop-bound-injection",
          "shortDescription" : {
            "text" : "Loop bound injection"
          },
          "fullDescription" : {
            "text" : "Iterating over an object with a user-controlled .length property can cause indefinite looping."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-834" ],
            "description" : "Iterating over an object with a user-controlled .length\n              property can cause indefinite looping.",
            "id" : "js/loop-bound-injection",
            "kind" : "path-problem",
            "name" : "Loop bound injection",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/type-confusion-through-parameter-tampering",
          "name" : "js/type-confusion-through-parameter-tampering",
          "shortDescription" : {
            "text" : "Type confusion through parameter tampering"
          },
          "fullDescription" : {
            "text" : "Sanitizing an HTTP request parameter may be ineffective if the user controls its type."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-843" ],
            "description" : "Sanitizing an HTTP request parameter may be ineffective if the user controls its type.",
            "id" : "js/type-confusion-through-parameter-tampering",
            "kind" : "path-problem",
            "name" : "Type confusion through parameter tampering",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/prototype-polluting-assignment",
          "name" : "js/prototype-polluting-assignment",
          "shortDescription" : {
            "text" : "Prototype-polluting assignment"
          },
          "fullDescription" : {
            "text" : "Modifying an object obtained via a user-controlled property name may lead to accidental mutation of the built-in Object prototype, and possibly escalate to remote code execution or cross-site scripting."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-078", "external/cwe/cwe-079", "external/cwe/cwe-094", "external/cwe/cwe-400", "external/cwe/cwe-915" ],
            "description" : "Modifying an object obtained via a user-controlled property name may\n              lead to accidental mutation of the built-in Object prototype,\n              and possibly escalate to remote code execution or cross-site scripting.",
            "id" : "js/prototype-polluting-assignment",
            "kind" : "path-problem",
            "name" : "Prototype-polluting assignment",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/prototype-pollution-utility",
          "name" : "js/prototype-pollution-utility",
          "shortDescription" : {
            "text" : "Prototype-polluting function"
          },
          "fullDescription" : {
            "text" : "Functions recursively assigning properties on objects may be the cause of accidental modification of a built-in prototype object."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-078", "external/cwe/cwe-079", "external/cwe/cwe-094", "external/cwe/cwe-400", "external/cwe/cwe-915" ],
            "description" : "Functions recursively assigning properties on objects may be\n              the cause of accidental modification of a built-in prototype object.",
            "id" : "js/prototype-pollution-utility",
            "kind" : "path-problem",
            "name" : "Prototype-polluting function",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/prototype-pollution",
          "name" : "js/prototype-pollution",
          "shortDescription" : {
            "text" : "Prototype-polluting merge call"
          },
          "fullDescription" : {
            "text" : "Recursively merging a user-controlled object into another object can allow an attacker to modify the built-in Object prototype, and possibly escalate to remote code execution or cross-site scripting."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-078", "external/cwe/cwe-079", "external/cwe/cwe-094", "external/cwe/cwe-400", "external/cwe/cwe-915" ],
            "description" : "Recursively merging a user-controlled object into another object\n              can allow an attacker to modify the built-in Object prototype,\n              and possibly escalate to remote code execution or cross-site scripting.",
            "id" : "js/prototype-pollution",
            "kind" : "path-problem",
            "name" : "Prototype-polluting merge call",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/insufficient-password-hash",
          "name" : "js/insufficient-password-hash",
          "shortDescription" : {
            "text" : "Use of password hash with insufficient computational effort"
          },
          "fullDescription" : {
            "text" : "Creating a hash of a password with low computational effort makes the hash vulnerable to password cracking attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-916" ],
            "description" : "Creating a hash of a password with low computational effort makes the hash vulnerable to password cracking attacks.",
            "id" : "js/insufficient-password-hash",
            "kind" : "path-problem",
            "name" : "Use of password hash with insufficient computational effort",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/regex/missing-regexp-anchor",
          "name" : "js/regex/missing-regexp-anchor",
          "shortDescription" : {
            "text" : "Missing regular expression anchor"
          },
          "fullDescription" : {
            "text" : "Regular expressions without anchors can be vulnerable to bypassing."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-020" ],
            "description" : "Regular expressions without anchors can be vulnerable to bypassing.",
            "id" : "js/regex/missing-regexp-anchor",
            "kind" : "problem",
            "name" : "Missing regular expression anchor",
            "precision" : "medium",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/indirect-command-line-injection",
          "name" : "js/indirect-command-line-injection",
          "shortDescription" : {
            "text" : "Indirect uncontrolled command line"
          },
          "fullDescription" : {
            "text" : "Forwarding command-line arguments to a child process executed within a shell may indirectly introduce command-line injection vulnerabilities."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-078", "external/cwe/cwe-088" ],
            "description" : "Forwarding command-line arguments to a child process\n              executed within a shell may indirectly introduce\n              command-line injection vulnerabilities.",
            "id" : "js/indirect-command-line-injection",
            "kind" : "path-problem",
            "name" : "Indirect uncontrolled command line",
            "precision" : "medium",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/log-injection",
          "name" : "js/log-injection",
          "shortDescription" : {
            "text" : "Log injection"
          },
          "fullDescription" : {
            "text" : "Building log entries from user-controlled sources is vulnerable to insertion of forged log entries by a malicious user."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-117" ],
            "description" : "Building log entries from user-controlled sources is vulnerable to\n              insertion of forged log entries by a malicious user.",
            "id" : "js/log-injection",
            "kind" : "path-problem",
            "name" : "Log injection",
            "precision" : "medium",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/file-access-to-http",
          "name" : "js/file-access-to-http",
          "shortDescription" : {
            "text" : "File data in outbound network request"
          },
          "fullDescription" : {
            "text" : "Directly sending file data in an outbound network request can indicate unauthorized information disclosure."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-200" ],
            "description" : "Directly sending file data in an outbound network request can indicate unauthorized information disclosure.",
            "id" : "js/file-access-to-http",
            "kind" : "path-problem",
            "name" : "File data in outbound network request",
            "precision" : "medium",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/password-in-configuration-file",
          "name" : "js/password-in-configuration-file",
          "shortDescription" : {
            "text" : "Password in configuration file"
          },
          "fullDescription" : {
            "text" : "Storing unencrypted passwords in configuration files is unsafe."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-256", "external/cwe/cwe-260", "external/cwe/cwe-313" ],
            "description" : "Storing unencrypted passwords in configuration files is unsafe.",
            "id" : "js/password-in-configuration-file",
            "kind" : "problem",
            "name" : "Password in configuration file",
            "precision" : "medium",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/remote-property-injection",
          "name" : "js/remote-property-injection",
          "shortDescription" : {
            "text" : "Remote property injection"
          },
          "fullDescription" : {
            "text" : "Allowing writes to arbitrary properties of an object may lead to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-250", "external/cwe/cwe-400" ],
            "description" : "Allowing writes to arbitrary properties of an object may lead to\n              denial-of-service attacks.",
            "id" : "js/remote-property-injection",
            "kind" : "path-problem",
            "name" : "Remote property injection",
            "precision" : "medium",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/hardcoded-data-interpreted-as-code",
          "name" : "js/hardcoded-data-interpreted-as-code",
          "shortDescription" : {
            "text" : "Hard-coded data interpreted as code"
          },
          "fullDescription" : {
            "text" : "Transforming hard-coded data (such as hexadecimal constants) into code to be executed is a technique often associated with backdoors and should be avoided."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-506" ],
            "description" : "Transforming hard-coded data (such as hexadecimal constants) into code\n              to be executed is a technique often associated with backdoors and should\n              be avoided.",
            "id" : "js/hardcoded-data-interpreted-as-code",
            "kind" : "path-problem",
            "name" : "Hard-coded data interpreted as code",
            "precision" : "medium",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/user-controlled-bypass",
          "name" : "js/user-controlled-bypass",
          "shortDescription" : {
            "text" : "User-controlled bypass of security check"
          },
          "fullDescription" : {
            "text" : "Conditions that the user controls are not suited for making security-related decisions."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-807", "external/cwe/cwe-290" ],
            "description" : "Conditions that the user controls are not suited for making security-related decisions.",
            "id" : "js/user-controlled-bypass",
            "kind" : "path-problem",
            "name" : "User-controlled bypass of security check",
            "precision" : "medium",
            "problem.severity" : "error"
          }
        }, {
          "id" : "js/http-to-file-access",
          "name" : "js/http-to-file-access",
          "shortDescription" : {
            "text" : "Network data written to file"
          },
          "fullDescription" : {
            "text" : "Writing network data directly to the file system allows arbitrary file upload and might indicate a backdoor."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-912", "external/cwe/cwe-434" ],
            "description" : "Writing network data directly to the file system allows arbitrary file upload and might indicate a backdoor.",
            "id" : "js/http-to-file-access",
            "kind" : "path-problem",
            "name" : "Network data written to file",
            "precision" : "medium",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "js/request-forgery",
          "name" : "js/request-forgery",
          "shortDescription" : {
            "text" : "Uncontrolled data used in network request"
          },
          "fullDescription" : {
            "text" : "Sending network requests with user-controlled data allows for request forgery attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-918" ],
            "description" : "Sending network requests with user-controlled data allows for request forgery attacks.",
            "id" : "js/request-forgery",
            "kind" : "path-problem",
            "name" : "Uncontrolled data used in network request",
            "precision" : "medium",
            "problem.severity" : "error"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "legacy-upgrades",
        "semanticVersion" : "0.0.0",
        "locations" : [ {
          "uri" : "file:///H:/codeql-home/codeql/legacy-upgrades/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///H:/codeql-home/codeql/legacy-upgrades/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      }, {
        "name" : "codeql-suite-helpers",
        "semanticVersion" : "0.0.0",
        "locations" : [ {
          "uri" : "file:///H:/GitHub/CodeQL-Scanner/codeql/misc/suite-helpers/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///H:/GitHub/CodeQL-Scanner/codeql/misc/suite-helpers/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      }, {
        "name" : "codeql-javascript",
        "semanticVersion" : "0.0.0",
        "locations" : [ {
          "uri" : "file:///H:/GitHub/CodeQL-Scanner/codeql/javascript/ql/src/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///H:/GitHub/CodeQL-Scanner/codeql/javascript/ql/src/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "div_1.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      },
      "contents" : {
        "text" : "<script language=\"JavaScript\" type=\"text/javascript\">\n\nvar dftGtw; \nvar currGtwIndex = null;\nvar dftGtw6 = null;\nvar currGtw6Index = null;\n\nvar wanArg = {};\nvar wanDsl = {};\n\nfunction init() \n{\t\n\t$.loadPage(\"divDslCfg\", \"dsl.htm\");\n\t$.removeClass($.id(\"divDslCfg\"), \"nd\");\n\t$.id(\"link_type\").value = ($.wd.editIndex == $.wd.conn.length)? $.id(\"link_type\").value:$.wd.conn[$.wd.editIndex].type;\n\t$.h($.id(\"linkTypeText\"), $.id(\"link_type\").value);\n\t\n\tif($.wd.editIndex == $.wd.conn.length)\n\t{\n\t\t$.removeClass($.id(\"link_type\"), \"nd\");\n\t\tvar connObj = {type:null, obj:{}, dsl:{}};\n\t\t$.wd.conn.push(connObj);\n\t}\n\telse\n\t{\n\t\t$.removeClass($.id(\"linkTypeText\"), \"nd\");\n\t\tif($.wd.conn[$.wd.editIndex].type == \"bridge\")\n\t\t{\n\t\t\t$.id(\"saveBtn\").disabled = 1;\n\t\t}\n\t}\t\n\t\n\tdoSync($.id(\"link_type\").value);\n}\n\nfunction doSync(val)\n{\n\tswitch(val)\n\t{\n\tcase \"staticIp\":\n\t\t$.removeClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.loadPage(\"divStaIp\", \"staticIp.htm\");\t\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"Static IP\");\n\t\tbreak;\n\tcase \"dynamicIp\":\n\t\t$.removeClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.loadPage(\"divDynIp\", \"dynamicIp.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"Dynamic IP\");\n\t\tbreak;\n\tcase \"pppoe\":\n\t\t$.removeClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.loadPage(\"divPPPoE\", \"pppoe.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"PPPoE\");\n\t\tbreak;\n\tcase \"pppoa\":\n\t\t$.removeClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.loadPage(\"divPPPoA\", \"pppoa.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"PPPoA\");\n\t\tbreak;\n\tcase \"ipoa\":\n\t\t$.removeClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.loadPage(\"divIPoA\", \"ipoa.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"IPoA\");\n\t\tbreak;\n\tcase \"bridge\":\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"Bridge\");\n\t\tbreak;\n\tdefault:\n\t\t$.removeClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.loadPage(\"divPPPoE\", \"pppoe.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"PPPoE\");\n\t\tbreak;\n\t}\n\t\n\tif($.wd.conn[$.wd.editIndex].type == null)\n\t{\n\t\tif($.id(\"atm_encapsulation\") )\n\t\t{\n\t\t\t$.id(\"atm_encapsulation\").value = (val == \"pppoa\") ? \"VCMUX\":\"LLC\";\n\t\t\t\n\t\t\tdetectPvcConflict();\n\t\t\n\t\t\tif (($.id(\"p_note\")) && (!$.hasClass($.id(\"p_note\"), \"nd\")))\n\t\t\t{\n\t\t\t\tvar element = $.id(\"vpi\");\n\t\t\t\tif(element){\n\t\t\t\t\telement.focus();\n\t\t\t\t\telement.select();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isConnDeviceExist()\n{\n\tvar length = ($.wd.conn[$.wd.editIndex].type == null) ? ($.wd.conn.length - 1): $.wd.conn.length;\n\n\tfor(var i = 0; i< length; i++)\n\t{\n\t\tif($.wd.conn[i].dsl.destinationAddress == wanDsl.destinationAddress)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn (-1);\n}\n\nfunction doSave()\n{\n\tvar newConnect;\n\tvar linkType = $.id(\"link_type\").value;\n\twanDsl = {};\n\twanArg = {};\n\t$.addLoading($.id(\"saveBtn\"));\n\t\n\tvar result = addAttrs();\n\tif (result == false)\n\t{\n\t\t$.removeLoading();\n\t\treturn;\n\t}\n\n\t$.wd.l3ForwardingObj.__ifName = \"\";\n\t$.wd.l3ForwardingObj.defaultConnectionService = \"\";\n\tif (INCLUDE_IPV6)\n\t{\n\t\t$.wd.l3Ip6ForwardingObj.__ifName = \"\";\n\t\t$.wd.l3Ip6ForwardingObj.defaultConnectionService = \"\";\n\t}\n\tif ($.wd.conn[$.wd.editIndex].type == null)\n\t{\n\t\tvar wanDevice = {};\n\t\tvar index = isConnDeviceExist();\n\t\tif( index < 0 )\n\t\t{\n\t\t\twanDevice = $.act(ACT_ADD, WAN_CONN_DEVICE, null, $.wd.pStk);\n\t\t\tif ($.exe()) return;\n\t\t}\n\t\telse\n\t\t{\n\t\t\twanDevice.__stack = $.wd.conn[index].dsl.__stack;\n\t\t}\n\n\t\t$.act(ACT_SET, WAN_DSL_LINK_CFG, wanDevice.__stack, null, wanDsl);\n\t\tnewConnect = $.act(ACT_ADD, (linkType.indexOf(\"ppp\") < 0) ? WAN_IP_CONN:WAN_PPP_CONN, null,  \n\t\t\t\t\t\t\t\t\t   wanDevice.__stack, wanArg);\n\t\n\t\t$.exe(function(ret)\n\t\t{\n\t\t\tif (ret)\n\t\t\t{\n\t\t\t\tif(index < 0)\n\t\t\t\t{\n\t\t\t\t\t$.act(ACT_DEL, WAN_CONN_DEVICE, wanDevice.__stack, null);\n\t\t\t\t\t$.exe();\n\t\t\t\t}\n\t\t\t\t$.removeLoading();\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(linkType == \"bridge\")\n\t\t\t\t{\t\n\t\t\t\t\t$.loadMain(\"wan.htm\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconn = $.act(ACT_GET, (linkType.indexOf(\"ppp\") < 0) ? WAN_IP_CONN:WAN_PPP_CONN, newConnect.__stack, null, [\"name\"]);\n\n\t\t\t\t$.exe(function(ret)\n\t\t\t\t{\n\t\t\t\t\tif (!ret)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (currGtwIndex == dftGtw.selectedIndex)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$.wd.l3ForwardingObj.__ifAliasName = conn.name;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$.wd.l3ForwardingObj.__ifAliasName = dftGtw.options[dftGtw.selectedIndex].text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!INCLUDE_IPV6 || wanArg.X_TP_IPv4Enabled == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, $.wd.l3ForwardingObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (INCLUDE_IPV6 && (dftGtw6 != null))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (currGtw6Index == dftGtw6.selectedIndex)\n\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t$.wd.l3Ip6ForwardingObj.__ifAliasName = conn.name;\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$.wd.l3Ip6ForwardingObj.__ifAliasName = dftGtw6.options[dftGtw6.selectedIndex].text;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (wanArg.X_TP_IPv6Enabled == 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, $.wd.l3Ip6ForwardingObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$.exe(function(ret){if (!ret) $.loadMain(\"wan.htm\");});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\t\n\t}\n\telse \n\t{\n\t\t$.act(ACT_SET, (linkType.indexOf(\"ppp\") < 0) ? WAN_IP_CONN:WAN_PPP_CONN, $.wd.conn[$.wd.editIndex].obj.__stack, null, wanArg);\t\n\t\t\t\t\n\t\tif (linkType != \"bridge\" && (!INCLUDE_IPV6 || wanArg.X_TP_IPv4Enabled == 1))\n\t\t{\n\t\t\tif (currGtwIndex == dftGtw.selectedIndex)\n\t\t\t{\n\t\t\t\t$.wd.l3ForwardingObj.__ifAliasName = $.wd.conn[$.wd.editIndex].obj.name;\n\t\t\t}\n\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, $.wd.l3ForwardingObj);\n\t\t}\n\t\t\n\t\tif (INCLUDE_IPV6 && (dftGtw6 != null))\n\t\t{\n\t\t\tif (currGtw6Index == dftGtw6.selectedIndex)\n\t\t\t{\n\t\t\t\t$.wd.l3Ip6ForwardingObj.__ifAliasName = $.wd.conn[$.wd.editIndex].obj.name;\n\t\t\t}\n\t\t\n\t\t\tif (linkType != \"bridge\" && wanArg.X_TP_IPv6Enabled == 1)\n\t\t\t{\n\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, $.wd.l3Ip6ForwardingObj);\n\t\t\t}\n\t\t}\n\t\t$.exe(function(ret){if (!ret) $.loadMain(\"wan.htm\");});\n\t}\n}\n\nfunction addAttrs()\n{\n\tvar retCntCfg = true;\n\t\n\tif($.wd.conn[$.wd.editIndex].type == null)\n\t{\n\t\tif (false == addDslCfgAttrs())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tswitch($.id(\"link_type\").value)\n\t{\n\tcase  \"staticIp\":\n\t\tretCntCfg = addStaIpAttrs();\t\n\t\tbreak;\n\tcase \"dynamicIp\":\n\t\tretCntCfg = addDynIpAttrs();\n\t\tbreak;\n\tcase \"pppoe\":\n\t\tretCntCfg = addPPPoEAttrs();\n\t\tbreak;\n\tcase \"pppoa\":\n\t\tretCntCfg = addPPPoAAttrs();\n\t\tbreak;\n\tcase \"ipoa\":\n\t\tretCntCfg = addIPoAAttrs();\n\t\tbreak;\n\tcase \"bridge\":\n\t\twanArg.NATEnabled = 0;\n\t\twanArg.X_TP_FullconeNATEnabled = 0;\n\t\twanArg.X_TP_FirewallEnabled = 0;\n\t\twanArg.X_TP_IGMPProxyEnabled = 0;\n\t\twanArg.maxMTUSize = 1500;\n\t\twanArg.enable = 1;\n\t\twanArg.connectionType = \"IP_Bridged\";\n\t\tretCntCfg = true;\n\t\tbreak;\n\t}\n\t\t\n\treturn retCntCfg;\n}\n\nfunction showIPv6()\n{\n\tvar elements = document.getElementsByTagName(\"p\");\n\t$.each(elements, function()\n\t{\n\t\tif ($.hasClass(this, \"IPv6\"))\n\t\t{\n\t\t\t$.removeClass(this, \"nd\");\n\t\t}\n\t});\n}\n\nfunction initDefaultGwDNS()\n{\n\tvar index = 0;\n\tvar opt1;\n\tvar connType = $.wd.conn[$.wd.editIndex].type;\n\tvar length = (connType == null) ? ($.wd.conn.length-1) : $.wd.conn.length;\n\t\n\tif (INCLUDE_USB_3G_DONGLE && INCLUDE_WAN_MODE)\n\t{\n\t\tif ($.wd.l3ForwardingObj.__ifAliasName.match(\"USB_3G\") != null)\n\t\t{\n\t\t\tvar pStack;\n\t\t\tvar wanUsb3g;\n\t\t\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\n\t\t\tvar usb3gList = $.act(ACT_GL, WAN_USB_3G_LINK_CFG, null, null, [\"backupEnable\"]);\n\t\t\tvar sysMode = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\n\t\t\t\n\t\t\tif (!$.exe())\n\t\t\t{\n\t\t\t\t$.each(wanTypes, function()\n\t\t\t\t{\n\t\t\t\t\tif (this.WANAccessType == \"USB_3G\")\n\t\t\t\t\t{\n\t\t\t\t\t\tpStack = this.__stack;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t$.each(usb3gList, function()\n\t\t\t\t{\n\t\t\t\t\tvar tmpStk = $.stkPop(this.__stack, 1);\n\t\t\t\t\tif (pStack == tmpStk) \n\t\t\t\t\t{\n\t\t\t\t\t\twanUsb3g = $.act(ACT_GET, WAN_USB_3G_LINK_CFG, this.__stack, null, [\"mainConnObjName\"]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (!$.exe())\n\t\t\t\t{\n\t\t\t\t\tif (sysMode.mode != \"USB_3G\")\n\t\t\t\t\t{\n\t\t\t\t\t\t$.wd.l3ForwardingObj.__ifAliasName = wanUsb3g.mainConnObjName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(var i = 0; i < length; i++)\n\t{\n\t\tif (($.wd.conn[i].type != \"bridge\") && (!INCLUDE_IPV6 || $.wd.conn[i].obj.X_TP_IPv4Enabled == 1))\n\t\t{\n\t\t\topt1 = $.c(\"option\");\n\t\t\topt1.value = $.wd.conn[i].obj.name;\n\t\t\topt1.text = $.wd.conn[i].obj.name;\n\t\t\ttry{dftGtw.add(opt1, null);}catch(e){dftGtw.add(opt1);}\n\t\t\tif ($.wd.conn[i].obj.name == $.wd.l3ForwardingObj.__ifAliasName)\n\t\t\t{\n\t\t\t\tdftGtw.selectedIndex = index;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n\tif ((connType == null) || (dftGtw.length == 0) || \n\t(!INCLUDE_IPV6 || $.wd.conn[$.wd.editIndex].obj.X_TP_IPv4Enabled == 0))\n\t{\n\t\topt1 = $.c(\"option\");\n\t\topt1.text = s_str.cur_con;\n\t\ttry{dftGtw.add(opt1, null);}catch(e){dftGtw.add(opt1);}\n\t\tcurrGtwIndex = index;\n\t\tindex++;\n\t}\n\t\n\tif (INCLUDE_IPV6 && (dftGtw6 != null))\n\t{\n\t\tindex = 0;\n\t\t\n\t\tfor (var i = 0; i < length; i++)\n\t\t{\n\t\t\tif (($.wd.conn[i].type != \"bridge\") && ($.wd.conn[i].obj.X_TP_IPv6Enabled == 1))\n\t\t\t{\n\t\t\t\topt1 = $.c(\"option\");\n\t\t\t\topt1.value = $.wd.conn[i].obj.name;\n\t\t\t\topt1.text = $.wd.conn[i].obj.name;\n\t\t\t\ttry{dftGtw6.add(opt1, null);}catch(e){dftGtw6.add(opt1);}\n\t\t\t\tif ($.wd.conn[i].obj.name == $.wd.l3Ip6ForwardingObj.__ifAliasName)\n\t\t\t\t{\n\t\t\t\t\tdftGtw6.selectedIndex = index;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ((connType == null) || ($.wd.conn[$.wd.editIndex].obj.X_TP_IPv6Enabled == 0) || (dftGtw6.length == 0))\n\t\t{\n\t\t\topt1 = $.c(\"option\");\n\t\t\topt1.text = s_str.cur_con;\n\t\t\ttry{dftGtw6.add(opt1, null);}catch(e){dftGtw6.add(opt1);}\n\t\t\tcurrGtw6Index = index;\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n}\n\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\n{\n\tvar count = 0;\n\tlan1a = lan1Ip.split('.');\n\tlan1m = lan1Mask.split('.');\n\tlan2a = lan2Ip.split('.');\n\tlan2m = lan2Mask.split('.');\n\tfor (i = 0; i < 4; i++) \n\t{\n\t\tl1a_n = parseInt(lan1a[i]);\n\t\tl1m_n = parseInt(lan1m[i]);\n\t\tl2a_n = parseInt(lan2a[i]);\n\t\tl2m_n = parseInt(lan2m[i]);\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\n\t\t\tcount++;\n\t}\n   if (count == 4)\n\t{\n\t\tvar testIp = $.ip2num(lan1Ip);\n\t\tvar lanMask = $.ip2num(lan1Mask);\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\n\t\t\treturn false;\n\t\telse\n\t\t\treturn true;\n\t}\n\telse\n\t\treturn false;\n}\n\nfunction charCompareA(szname, en_limit, cn_limit)\n{\n\tvar c;\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\n\tif (szname.length > en_limit)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < szname.length; i++)\n\t{\n\t\tc = szname.charAt(i);\n\t\tif (ch.indexOf(c) == -1)\n\t\t{\n\t\t\tif(szname.length > cn_limit)\n\t\t\t{\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction isValidGLUIP6AddrStrict(ip6Addr)\n{\n\tvar flag;\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\n\tif (regExp.test(ip6Addr))\n\t{\n\t\tflag = true;\n\t}\n\telse\n\t{\n\t\tflag = false;\n\t}\n\t\n\tregExp = /::/;\n\tif (flag)\n\t{\n\t\tif (regExp.test(ip6Addr))\n\t\t{\t\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\n\t\t\tif (regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\t/* found more than one ::*/\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* process the substr if found only one :: */\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\n\t\t\t\tvar len = ip6Addr.length;\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\n\t\t\t\tvar num = 0;\n\t\t\t\t\t\t\t\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t\telse if (\"\" == substr2)\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t\telse if (\"\" == substr1)\n\t\t\t\t{\n\t\t\t\t\n\t\t\t\t\tif (!regExp.test(substr2))\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\n\t\t\t\t{\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (num > 5)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* no :: */\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\n\t\t\tif (!regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (flag)\n\t{\n\t\t/* former 16 bit*/\n\t\tvar index;\n\t\tindex = ip6Addr.indexOf(\":\");\n\t\tvar substr = ip6Addr.substr(0,index);\n\t\tif (0 == index || parseInt(substr,16) == 0)\n\t\t{\n\t\t\t/* undefined address */\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\n\t\t\tif (regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\t\n\t\t\t/* loopback address */\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\n\t\t\tif (regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\telse if (parseInt(substr,16) >= 65280)\n\t\t{\n\t\t\t/* FF00 = 65280, exclude broadcast address */\n\t\t\tflag = false;\n\t\t}\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\n\t\t{\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\n\t\t\tflag = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\n\t\t\t{\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn flag;\n}\n\n</script>\n<p class=\"et T\" id=\"et\">WAN Settings</p>\n<div class=\"con1 L\">\n<p class=\"ct\"></p>\n<p class=\"bl\"></p>\n<div class=\"con2\">\n\n<p class=\"st nd\">DIV1</p>\n<div id=\"divDslCfg\"  class=\"nd\"></div>\n\n<p class=\"bl\"></p>\t\n<p class=\"br\"></p>\n<p class=\"L1\"><b class=\"T T_service\">WAN Service Setup</b></p>\n\t<p><b class=\"item L T T_conntype\">Connection Type</b>\n\t<select id=\"link_type\" class=\"M nd\" onchange=\"doSync(this.value);\">\n\t<option class=\"T T_staip\" value=\"staticIp\">Static IP</option>\n\t<option class=\"T T_dynip\" value=\"dynamicIp\">Dynamic IP</option>\n\t<option value=\"pppoe\" selected=\"selected\">PPPoE</option>\n\t<option value=\"pppoa\">PPPoA</option>\n\t<option value=\"ipoa\">IPoA</option>\n\t<option class=\"T T_bridge\" value=\"bridge\">Bridge</option>\n\t</select> <b  class= \"nd\" id=\"linkTypeText\"></b></p>\n\t\n<p class=\"st nd\">DIV2</p>\n<div id=\"divStaIp\" class=\"nd\"></div>\n<p class=\"st nd\">DIV3</p>\n<div id=\"divDynIp\" class=\"nd\"></div>\n<p class=\"st nd\">DIV4</p>\n<div id=\"divPPPoE\" class=\"nd\"></div>\n<p class=\"st nd\">DIV5</p>\n<div id=\"divPPPoA\" class=\"nd\"></div>\n<p class=\"st nd\">DIV6</p>\n<div id=\"divIPoA\" class=\"nd\"></div>\n\n</div>\n<p class=\"bl\"></p>\n<p class=\"tail\"><input type=\"button\" class=\"button L T\" id=\"saveBtn\" value=\"Save \" onclick=\"doSave()\"/>\n<input type=\"button\" class=\"button L T T_back\" id=\"return\" value=\"Back\" onclick=\"$.loadMain('wan.htm');\" /></p>\n</div>\n<script language=\"JavaScript\" type=\"text/javascript\">\ninit();\n</script>"
      }
    }, {
      "location" : {
        "uri" : "div_2.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      },
      "contents" : {
        "text" : "<script language=\"JavaScript\" type=\"text/javascript\">\nvar dftGtw; \nvar currGtwIndex = null;\nvar dftGtw6;\nvar currGtw6Index = null;\n\nvar wanArg = {};\n\nvar wanEpon = {};\n\nfunction init() \n{\n\t$.loadPage(\"divVlanCfg\", \"vlanCfg.htm\");\n\t$.removeClass($.id(\"divVlanCfg\"), \"nd\");\n\t$.id(\"link_type\").value = ($.wd.editIndex == $.wd.conn.length)? $.id(\"link_type\").value:$.wd.conn[$.wd.editIndex].type;\n\t$.h($.id(\"linkTypeText\"), $.id(\"link_type\").value);\n\t\n\tif($.wd.editIndex == $.wd.conn.length)\n\t{\n\t\t$.removeClass($.id(\"link_type\"), \"nd\");\n\t\tvar connObj = {type:null, obj:{}, epon:{}};\n\t\t$.wd.conn.push(connObj);\n\t}\n\telse\n\t{\n\t\t$.removeClass($.id(\"linkTypeText\"), \"nd\");\n\t}\n\t\n\tdoSync($.id(\"link_type\").value);\n\t\n\t$.loadPage(\"divVlanBind\",\"infBind.htm\");\n\t$.removeClass($.id(\"divVlanBind\"), \"nd\");\n}\n\nfunction doSync(val)\n{\n\tswitch(val)\n\t{\n\tcase \"staticIp\":\n\t\t$.removeClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.loadPage(\"divStaIp\", \"staticIp.htm\");\t\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"Static IP\");\n\t\tbreak;\n\tcase \"dynamicIp\":\n\t\t$.removeClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.loadPage(\"divDynIp\", \"dynamicIp.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"Dynamic IP\");\n\t\tbreak;\n\tcase \"pppoe\":\n\t\t$.removeClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.loadPage(\"divPPPoE\", \"pppoe.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"PPPoE\");\n\t\tbreak;\n\tcase \"pppoa\":\n\t\t$.removeClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.loadPage(\"divPPPoA\", \"pppoa.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"PPPoA\");\n\t\tbreak;\n\tcase \"ipoa\":\n\t\t$.removeClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.loadPage(\"divIPoA\", \"ipoa.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"IPoA\");\n\t\tbreak;\n\tcase \"bridge\":\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"Bridge\");\n\t\tbreak;\n\tdefault:\n\t\t$.removeClass($.id(\"divPPPoE\"), \"nd\");\n\t\t$.loadPage(\"divPPPoE\", \"pppoe.htm\");\t\n\t\t$.addClass($.id(\"divStaIp\"), \"nd\");\n\t\t$.addClass($.id(\"divDynIp\"), \"nd\");\n\t\t$.addClass($.id(\"divPPPoA\"), \"nd\");\n\t\t$.addClass($.id(\"divIPoA\"), \"nd\");\n\t\t$.h($.id(\"linkTypeText\"), \"PPPoE\");\n\t\tbreak;\n\t}\n\t\n\tif($.wd.conn[$.wd.editIndex].type == null)\n\t{\n\t\tif($.id(\"atm_encapsulation\") )\n\t\t{\n\t\t\t$.id(\"atm_encapsulation\").value = (val == \"pppoa\") ? \"VCMUX\":\"LLC\";\n\t\t\t\n\t\t\tdetectPvcConflict();\n\t\t\n\t\t\tif (($.id(\"p_note\")) && (!$.hasClass($.id(\"p_note\"), \"nd\")))\n\t\t\t{\n\t\t\t\tvar element = $.id(\"vpi\");\n\t\t\t\tif(element){\n\t\t\t\t\telement.focus();\n\t\t\t\t\telement.select();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isConnDeviceExist()\n{\n\tvar length = ($.wd.conn[$.wd.editIndex].type == null) ? ($.wd.conn.length - 1): $.wd.conn.length;\n\n\tfor(var i = 0; i< length; i++)\n\t{\n\t\tif($.wd.conn[i].epon.VLANIDMark == wanEpon.VLANIDMark)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn (-1);\n}\n\nfunction doSave()\n{\n\tvar newConnect;\n\tvar link_type = $.id(\"link_type\").value;\n\n\tvar conn;\n\tvar pStk;\n\t\n\t$.addLoading($.id(\"saveBtn\"));\n\t\n\tvar result = addAttrs();\n\tif (result == false)\n\t{\n\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\treturn;\n\t}\n\n\t$.wd.l3ForwardingObj.__ifName = \"\";\n\t$.wd.l3ForwardingObj.defaultConnectionService = \"\";\n\tif (INCLUDE_IPV6)\n\t{\n\t\t$.wd.l3Ip6ForwardingObj.__ifName = \"\";\n\t\t$.wd.l3Ip6ForwardingObj.defaultConnectionService = \"\";\n\t}\n\tif($.wd.conn[$.wd.editIndex].type == null)\n\t{\n\t\tvar index;\n\t\tvar wanDevice = {};\n\t\tindex = isConnDeviceExist();\n\t\tif (index < 0)\n\t\t{\n\t\t\twanDevice = $.act(ACT_ADD, WAN_CONN_DEVICE, null, $.wd.pStk);\n\t\t}\n\t\telse\n\t\t{\n\t\t\twanDevice.__stack = $.wd.conn[index].epon.__stack;\n\t\t}\n\t\t\t\t$.exe(function(err)\n\t\t\t\t{\n\t\t\t\t\tif(!err)\n\t\t\t\t\t{\n\t\t\t\tif (index < 0)\n\t\t\t\t\t\t$.act(ACT_SET, WAN_PON_LINK_CFG, wanDevice.__stack, null, wanEpon);\n\t\t\t\t\n\t\t\t\t\t\tif($.id(\"link_type\").value == \"pppoe\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewConnect = $.act(ACT_ADD, WAN_PPP_CONN, null, wanDevice.__stack, wanArg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewConnect = $.act(ACT_ADD, WAN_IP_CONN, null, wanDevice.__stack, wanArg);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.exe(function(err)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(!err)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif($.id(\"link_type\").value == \"bridge\")\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t$.loadMain(\"wan.htm\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (dftGtw.selectedIndex == currGtwIndex)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif($.id(\"link_type\").value == \"pppoe\")\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tconn = $.act(ACT_GET, WAN_PPP_CONN, newConnect.__stack, null, [\"name\"]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse \n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tconn = $.act(ACT_GET, WAN_IP_CONN, newConnect.__stack, null, [\"name\"]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$.exe(function(err)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(!err)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$.wd.l3ForwardingObj.__ifAliasName = conn.name;\n\t\t\t\t\t\t\t\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, $.wd.l3ForwardingObj);\n\t\t\t\t\t\t\t\t\t\t\t\t$.exe(function(err)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(!err)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$.loadMain(\"wan.htm\");\n\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t$.wd.l3ForwardingObj.__ifAliasName = dftGtw.options[dftGtw.selectedIndex].text;\n\t\t\t\t\t\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, $.wd.l3ForwardingObj);\n\t\t\t\t\t\t\t\t\t\t$.exe(function(err)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif(!err)\n\t\t\t\t\t\t\t\t\t\t\t\t$.loadMain(\"wan.htm\");\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t}\n\telse \n\t{\n\t\tif ($.wd.conn[$.wd.editIndex].type == \"pppoe\")\n\t\t{\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, $.wd.conn[$.wd.editIndex].obj.__stack, null, wanArg);\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, $.wd.conn[$.wd.editIndex].obj.__stack, null, wanArg);\n\t\t}\n\t\t\n\t\tif($.id(\"link_type\").value != \"bridge\")\n\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, $.wd.l3ForwardingObj);\n\t\t\n\t\t$.exe(function(err)\n\t\t{\n\t\t\tif (!err)\n\t\t\t{\n\t\t\t\t$.loadMain(\"wan.htm\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\t\n\t}\n}\n\nfunction addAttrs()\n{\t\n\tvar retVlanCfg,retCntCfg,retInfBind;\n\tretVlanCfg = addVlanCfgAttrs();\n\n\tswitch($.id(\"link_type\").value)\n\t{\n\tcase  \"staticIp\":\n\t\tretCntCfg = addStaIpAttrs();\t\n\t\tbreak;\n\tcase \"dynamicIp\":\n\t\tretCntCfg = addDynIpAttrs();\n\t\tbreak;\n\tcase \"pppoe\":\n\t\tretCntCfg = addPPPoEAttrs();\n\t\tbreak;\n\tcase \"pppoa\":\n\t\tretCntCfg = addPPPoAAttrs();\n\t\tbreak;\n\tcase \"ipoa\":\n\t\tretCntCfg = addIPoAAttrs();\n\t\tbreak;\n\tcase \"bridge\":\n\t\twanArg.NATEnabled = 0;\n\t\twanArg.X_TP_FullconeNATEnabled = 0;\n\t\twanArg.X_TP_FirewallEnabled = 0;\n\t\twanArg.X_TP_IGMPProxyEnabled = 0;\n\t\twanArg.maxMTUSize = 1500;\n\t\twanArg.enable = 1;\n\t\twanArg.connectionType = \"IP_Bridged\";\n\t\tretCntCfg = true;\n\t\tbreak;\n\t}\n\t\n\tretInfBind = addInfBindAttrs();\n\t\t\n\tif((retVlanCfg == true) && (retCntCfg == true) && (retInfBind == true))\n\t{\t\n\t\treturn true;\n\t}\n\telse\n\t{\t\n\t\t$.removeLoading($.id(\"saveBtn\"));\n\t\treturn false;\n\t}\n}\n\nfunction showIPv6()\n{\n\tvar elements = document.getElementsByTagName(\"p\");\n\t$.each(elements, function()\n\t{\n\t\tif ($.hasClass(this, \"IPv6\"))\n\t\t{\n\t\t\t$.removeClass(this, \"nd\");\n\t\t}\n\t});\n}\n\nfunction initDefaultGwDNS()\n{\n\tvar index = 0;\n\tvar opt1;\n\tvar connType = $.wd.conn[$.wd.editIndex].type;\n\tvar length = (connType == null) ? ($.wd.conn.length-1) : $.wd.conn.length;\n\t\n\tif (INCLUDE_USB_3G_DONGLE && INCLUDE_WAN_MODE)\n\t{\n\t\tif ($.wd.l3ForwardingObj.__ifAliasName.match(\"ttyUSB\") != null)\n\t\t{\n\t\t\tvar pStack;\n\t\t\tvar wanUsb3g;\n\t\t\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\n\t\t\tvar usb3gList = $.act(ACT_GL, WAN_USB_3G_LINK_CFG, null, null, [\"backupEnable\"]);\n\t\t\tvar sysMode = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\n\t\t\t\n\t\t\tif (!$.exe())\n\t\t\t{\n\t\t\t\t$.each(wanTypes, function()\n\t\t\t\t{\n\t\t\t\t\tif (this.WANAccessType == \"USB_3G\")\n\t\t\t\t\t{\n\t\t\t\t\t\tpStack = this.__stack;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t$.each(usb3gList, function()\n\t\t\t\t{\n\t\t\t\t\tvar tmpStk = $.stkPop(this.__stack, 1);\n\t\t\t\t\tif (pStack == tmpStk) \n\t\t\t\t\t{\n\t\t\t\t\t\twanUsb3g = $.act(ACT_GET, WAN_USB_3G_LINK_CFG, this.__stack, null, [\"mainConnObjName\"]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (!$.exe())\n\t\t\t\t{\n\t\t\t\t\tif (sysMode.mode != \"USB_3G\")\n\t\t\t\t\t{\n\t\t\t\t\t\t$.wd.l3ForwardingObj.__ifAliasName = wanUsb3g.mainConnObjName;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(var i = 0; i < length; i++)\n\t{\n\t\tif (($.wd.conn[i].type != \"bridge\") && (!INCLUDE_IPV6 || $.wd.conn[i].obj.X_TP_IPv4Enabled == 1))\n\t\t{\n\t\t\topt1 = $.c(\"option\");\n\t\t\topt1.value = $.wd.conn[i].obj.name;\n\t\t\topt1.text = $.wd.conn[i].obj.name;\n\t\t\ttry{dftGtw.add(opt1, null);}catch(e){dftGtw.add(opt1);}\n\t\t\tif ($.wd.conn[i].obj.name == $.wd.l3ForwardingObj.__ifAliasName)\n\t\t\t{\n\t\t\t\tdftGtw.selectedIndex = index;\n\t\t\t}\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n\tif ((connType == null) || (dftGtw.length == 0) || \n\t(!INCLUDE_IPV6 || $.wd.conn[$.wd.editIndex].obj.X_TP_IPv4Enabled == 0))\n\t{\n\t\topt1 = $.c(\"option\");\n\t\topt1.text = s_str.cur_con;\n\t\ttry{dftGtw.add(opt1, null);}catch(e){dftGtw.add(opt1);}\n\t\tcurrGtwIndex = index;\n\t\tindex++;\n\t}\n\t\n\tif (INCLUDE_IPV6)\n\t{\n\t\tindex = 0;\n\t\t\n\t\tfor (var i = 0; i < length; i++)\n\t\t{\n\t\t\tif (($.wd.conn[i].type != \"bridge\") && ($.wd.conn[i].obj.X_TP_IPv6Enabled == 1))\n\t\t\t{\n\t\t\t\topt1 = $.c(\"option\");\n\t\t\t\topt1.value = $.wd.conn[i].obj.name;\n\t\t\t\topt1.text = $.wd.conn[i].obj.name;\n\t\t\t\ttry{dftGtw6.add(opt1, null);}catch(e){dftGtw6.add(opt1);}\n\t\t\t\tif ($.wd.conn[i].obj.name == $.wd.l3Ip6ForwardingObj.__ifAliasName)\n\t\t\t\t{\n\t\t\t\t\tdftGtw6.selectedIndex = index;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ((connType == null) || ($.wd.conn[$.wd.editIndex].obj.X_TP_IPv6Enabled == 0) || (dftGtw6.length == 0))\n\t\t{\n\t\t\topt1 = $.c(\"option\");\n\t\t\topt1.text = s_str.cur_con;\n\t\t\ttry{dftGtw6.add(opt1, null);}catch(e){dftGtw6.add(opt1);}\n\t\t\tcurrGtw6Index = index;\n\t\t\tindex++;\n\t\t}\n\t}\n\t\n}\n\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\n{\n\tvar count = 0;\n\tlan1a = lan1Ip.split('.');\n\tlan1m = lan1Mask.split('.');\n\tlan2a = lan2Ip.split('.');\n\tlan2m = lan2Mask.split('.');\n\tfor (i = 0; i < 4; i++) \n\t{\n\t\tl1a_n = parseInt(lan1a[i], 10);\n\t\tl1m_n = parseInt(lan1m[i], 10);\n\t\tl2a_n = parseInt(lan2a[i], 10);\n\t\tl2m_n = parseInt(lan2m[i], 10);\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\n\t\t\tcount++;\n\t}\n   if (count == 4)\n\t{\n\t\tvar testIp = $.ip2num(lan1Ip);\n\t\tvar lanMask = $.ip2num(lan1Mask);\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\n\t\t\treturn false;\n\t\telse\n\t\t\treturn true;\n\t}\n\telse\n\t\treturn false;\n}\n\nfunction charCompareA(szname, en_limit, cn_limit)\n{\n\tvar c;\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\n\tif (szname.length > en_limit)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < szname.length; i++)\n\t{\n\t\tc = szname.charAt(i);\n\t\tif (ch.indexOf(c) == -1)\n\t\t{\n\t\t\tif(szname.length > cn_limit)\n\t\t\t{\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction isValidGLUIP6AddrStrict(ip6Addr)\n{\n\tvar flag;\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\n\tif (regExp.test(ip6Addr))\n\t{\n\t\tflag = true;\n\t}\n\telse\n\t{\n\t\tflag = false;\n\t}\n\t\n\tregExp = /::/;\n\tif (flag)\n\t{\n\t\tif (regExp.test(ip6Addr))\n\t\t{\t\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\n\t\t\tif (regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\n\t\t\t\tvar len = ip6Addr.length;\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\n\t\t\t\tvar num = 0;\n\t\t\t\t\t\t\t\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t\telse if (\"\" == substr2)\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t\telse if (\"\" == substr1)\n\t\t\t\t{\n\t\t\t\t\n\t\t\t\t\tif (!regExp.test(substr2))\n\t\t\t\t\t{\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t}\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\n\t\t\t\t{\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnum += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (num > 5)\n\t\t\t\t\t{\t\n\t\t\t\t\t\tflag = false;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\n\t\t\tif (!regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (flag)\n\t{\n\t\tvar index;\n\t\tindex = ip6Addr.indexOf(\":\");\n\t\tvar substr = ip6Addr.substr(0,index);\n\t\tif (0 == index || parseInt(substr,16) == 0)\n\t\t{\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\n\t\t\tif (regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\t\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\n\t\t\tif (regExp.test(ip6Addr))\n\t\t\t{\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\telse if (parseInt(substr,16) >= 65280)\n\t\t{\n\t\t\tflag = false;\n\t\t}\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\n\t\t{\n\t\t\tflag = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\n\t\t\t{\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn flag;\n}\n\n</script>\n<p class=\"et T\" id=\"et\">WAN Settings</p>\n<div class=\"con1 L\">\n<p class=\"ct\"></p>\n<p class=\"bl\"></p>\n<div class=\"con2\">\n\n<p class=\"st nd\">DIV1</p>\n<div id=\"divVlanCfg\"  class=\"nd\"></div>\n\n<p class=\"bl\"></p>\t\n<p class=\"br\"></p>\n<p class=\"L1\"><b class=\"T T_service\">WAN Service Setup</b></p>\n\t<p><b class=\"item L T T_conntype\">Connection Type</b>\n\t<select id=\"link_type\" class=\"M nd\" onchange=\"doSync(this.value);\">\n\t<option class=\"T T_staip\" value=\"staticIp\">Static IP</option>\n\t<option class=\"T T_dynip\" value=\"dynamicIp\">Dynamic IP</option>\n\t<option value=\"pppoe\" selected=\"selected\">PPPoE</option>\n\t<option class=\"T T_bridge\" value=\"bridge\">Bridge</option>\n</select> <b  class= \"nd\" id=\"linkTypeText\"></b></p>\n\n<p class=\"st nd\">DIV2</p>\n<div id=\"divStaIp\" class=\"nd\"></div>\n<p class=\"st nd\">DIV3</p>\n<div id=\"divDynIp\" class=\"nd\"></div>\n<p class=\"st nd\">DIV4</p>\n<div id=\"divPPPoE\" class=\"nd\"></div>\n<p class=\"st  nd\">DIV5</p>\n<div id=\"divVlanBind\" class=\"nd\"></div>\n\n</div>\n<p class=\"bl\"></p>\n<p class=\"tail\"><input type=\"button\" class=\"button L T\" id=\"saveBtn\" value=\"Save \" onclick=\"doSave()\"/>\n<input type=\"button\" class=\"button L T T_back\" id=\"return\" value=\"Back\" onclick=\"$.loadMain('wan.htm');\" /></p>\n</div>\n<script language=\"JavaScript\" type=\"text/javascript\">\ninit();\n</script>"
      }
    }, {
      "location" : {
        "uri" : "ethWan.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus() {\r\n    var pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n    var bConnecting = false;\r\n    if (!$.exe() && (pppoelist.enable == 1)) {\r\n        if (true) {\r\n            if (pppoelist.connectionStatus == \"Connecting\") {\r\n                bConnecting = true;\r\n            }\r\n        /*} else {\r\n            if (pppoelist.X_TP_IPv4Enabled == true && pppoelist.connectionStatus == \"Connecting\") {\r\n                bConnecting = true;\r\n            } else if (pppoelist.X_TP_IPv4Enabled == false && pppoelist.X_TP_IPv6Enabled == true && pppoelist.X_TP_IPv6ConnStatus == \"Connecting\") {\r\n                bConnecting = true;\r\n            }*/\r\n        }\r\n\r\n        if (bConnecting) {\r\n            $(\"#PPPoEConnecting\").removeClass(\"nd\");\r\n        } else {\r\n            $(\"#PPPoEConnecting\").addClass(\"nd\");\r\n        }\r\n\r\n        if (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0) {\r\n            $(\"#conn\").prop(\"disabled\", true);\r\n            $(\"#disConn\").prop(\"disabled\", true);\r\n        } else if (pppoelist.connectionStatus == \"Connected\") {\r\n            $(\"#conn\").prop(\"disabled\", true);\r\n            $(\"#disConn\").prop(\"disabled\", false);\r\n        } else if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\")) {\r\n            $(\"#conn\").prop(\"disabled\", false);\r\n            $(\"#disConn\").prop(\"disabled\", true);\r\n        } else {\r\n            $(\"#conn\").prop(\"disabled\", true);\r\n            $(\"#disConn\").prop(\"disabled\", false);\r\n        }\r\n\r\n        if (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\") {\r\n            $(\"#secondDynIpAddress\").html(iplist_dyn.externalIPAddress);\r\n            $(\"#secondDynIpMask\").html(iplist_dyn.subnetMask);\r\n            if (iplist_dyn.enable == 1) {\r\n                if (iplist_dyn.connectionStatus == \"Connecting\") {\r\n                    $(\"#secondDynIpConnecting\").removeClass(\"nd\");\r\n                    $(\"#secondDynIpRenew\").prop(\"disabled\", true);\r\n                    $(\"#secondDynIpRelease\").prop(\"disabled\", true);\r\n                } else if (iplist_dyn.connectionStatus == \"Connected\") {\r\n                    $(\"#secondDynIpConnecting\").addClass(\"nd\");\r\n                    $(\"#secondDynIpRenew\").prop(\"disabled\", true);\r\n                    $(\"#secondDynIpRelease\").prop(\"disabled\", false);\r\n                } else {\r\n                    $(\"#secondDynIpConnecting\").addClass(\"nd\");\r\n                    $(\"#secondDynIpRenew\").prop(\"disabled\", false);\r\n                    $(\"#secondDynIpRelease\").prop(\"disabled\", true);\r\n                }\r\n           }\r\n        }\r\n    }\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr) {\r\n    var flag;\r\n    /* judge the amount of total character*/\r\n    var regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n    if (regExp.test(ip6Addr)) {\r\n        flag = true;\r\n    } else {\r\n        flag = false;\r\n    }\r\n\r\n    /* whether contain ::*/\r\n    regExp = /::/;\r\n    if (flag) {\r\n        if (regExp.test(ip6Addr)) { /* found :: */\r\n            regExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n            if (regExp.test(ip6Addr)) {\r\n                /* found more than one ::*/\r\n                flag = false;\r\n            } else {\r\n                /* process the substr if found only one :: */\r\n                var index = ip6Addr.indexOf(\"::\");\r\n                var len = ip6Addr.length;\r\n                var substr1 = ip6Addr.substr(0, index);\r\n                var substr2 = ip6Addr.substr(index + 2, len - index - 2);\r\n                regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                var num = 0;\r\n\r\n                if (\"\" == substr1 && \"\" == substr2) {\r\n                    flag = false;\r\n                } else if (\"\" == substr2) {\r\n                    flag = false;\r\n                } else if (\"\" == substr1) {\r\n\r\n                    if (!regExp.test(substr2)) {\r\n                        flag = false;\r\n                    }\r\n                } else if (!regExp.test(substr1) || !regExp.test(substr2)) {\r\n                    flag = false;\r\n                } else if (regExp.test(substr1) && regExp.test(substr2)) {\r\n                    /* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n                    for (var i = 0; i < substr1.length; i++) {\r\n                        if (substr1.charAt(i) == \":\") {\r\n                            num += 1;\r\n                        }\r\n                    }\r\n\r\n                    for (var i = 0; i < substr2.length; i++) {\r\n                        if (substr1.charAt(i) == \":\") {\r\n                            num += 1;\r\n                        }\r\n                    }\r\n\r\n                    if (num > 5) {\r\n                        flag = false;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            /* no :: */\r\n            regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n            if (!regExp.test(ip6Addr)) {\r\n                flag = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* type judgement */\r\n    if (flag) {\r\n        /* former 16 bit*/\r\n        var index;\r\n        index = ip6Addr.indexOf(\":\");\r\n        var substr = ip6Addr.substr(0, index);\r\n        if (0 == index || parseInt(substr, 16) == 0) {\r\n            /* undefined address */\r\n            regExp = /^((0{0,4})|::|:)*$/;\r\n            if (regExp.test(ip6Addr)) {\r\n                flag = false;\r\n            }\r\n\r\n            /* loopback address */\r\n            regExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n            if (regExp.test(ip6Addr)) {\r\n                flag = false;\r\n            }\r\n        } else if (parseInt(substr, 16) >= 65280) {\r\n            /* FF00 = 65280, exclude broadcast address */\r\n            flag = false;\r\n        } else if (parseInt(substr, 16) >= 65152 && parseInt(substr, 16) <= 65215) {\r\n            /* FE80 = 65152, FEBF = 65215, local address */\r\n            flag = true;\r\n        } else {\r\n            /* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n            if (parseInt(substr, 16) >= 8192 && parseInt(substr, 16) <= 16383) {\r\n                flag = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return flag;\r\n}\r\n\r\nfunction showLnkType(type) {\r\n    if (type == \"\") {\r\n        switch (ethWan.X_TP_lastUsedIntf) {\r\n            case \"ipoe_eth3_d\":\r\n                $(\"#link_type option[value='dynamicIp']\").prop(\"selected\", \"selected\");\r\n                initDynamicIP();\r\n                doManualDns();\r\n                break;\r\n            case \"ipoe_eth3_s\":\r\n                $(\"#link_type option[value='staticIp']\").prop(\"selected\", \"selected\");\r\n                initStaticIP();\r\n                break;\r\n            case \"pppoe_eth3_d\":\r\n                $(\"#link_type option[value='pppoe']\").prop(\"selected\", \"selected\");\r\n                initPPPoE();\r\n                break;\r\n            case \"l2tp_eth3_d\":\r\n                $(\"#link_type option[value='l2tp']\").prop(\"selected\", \"selected\");\r\n                initL2TP();\r\n                break;\r\n            case \"pptp_eth3_d\":\r\n                $(\"#link_type option[value='pptp']\").prop(\"selected\", \"selected\");\r\n                initPPTP();\r\n                break;\r\n\t\t\tcase \"bpa_eth3_d\":\r\n                $(\"#link_type option[value='bpa']\").prop(\"selected\", \"selected\");\r\n                initBPA();\r\n                break;\r\n            default:\r\n                $(\"#link_type option[value='dynamicIp']\").prop(\"selected\", \"selected\");\r\n                initDynamicIP();\r\n                doManualDns();\r\n                break;\r\n        }\r\n    } else {\r\n        switch (type) {\r\n            case \"staticIp\":\r\n                $(\"#link_type option[value='staticIp']\").prop(\"selected\", \"selected\");\r\n                initStaticIP();\r\n                break;\r\n            case \"dynamicIp\":\r\n                $(\"#link_type option[value='dynamicIp']\").prop(\"selected\", \"selected\");\r\n                initDynamicIP();\r\n                doManualDns();\r\n                break;\r\n            case \"pppoe\":\r\n                $(\"#link_type option[value='pppoe']\").prop(\"selected\", \"selected\");\r\n                initPPPoE();\r\n                break;\r\n            case \"l2tp\":\r\n                $(\"#link_type option[value='l2tp']\").prop(\"selected\", \"selected\");\r\n                initL2TP();\r\n                break;\r\n            case \"pptp\":\r\n                $(\"#link_type option[value='pptp']\").prop(\"selected\", \"selected\");\r\n                initPPTP();\r\n                break;\r\n\t\t\tcase \"bpa\":\r\n                $(\"#link_type option[value='bpa']\").prop(\"selected\", \"selected\");\r\n                initBPA();\r\n                break;\r\n            default:\r\n                $(\"#link_type option[value='dynamicIp']\").prop(\"selected\", \"selected\");\r\n                initDynamicIP();\r\n                doManualDns();\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction natClick(val) {\r\n    if (val == \"static\") {\r\n        if ($(\"#enable_nat\").prop(\"data-checked\")) {\r\n            $(\"#enable_fullnat\").prop(\"disabled\", false);\r\n        } else {\r\n            $(\"#enable_fullnat\").prop(\"checked\", false);\r\n            $(\"#enable_fullnat\").prop(\"disabled\", true);\r\n        }\r\n        $(\"#enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n    } else if (val == \"dynamic\") {\r\n        if ($(\"#dyn_enable_nat\").prop(\"data-checked\")) {\r\n            $(\"#dyn_enable_fullnat\").prop(\"disabled\", false);\r\n        } else {\r\n            $(\"#dyn_enable_fullnat\").prop(\"checked\", false);\r\n            $(\"#dyn_enable_fullnat\").prop(\"disabled\", true);\r\n        }\r\n        $(\"#dyn_enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n    } else if (val == \"pppoe\") {\r\n        if ($(\"#ppp_enable_nat\").prop(\"data-checked\")) {\r\n            $(\"#ppp_fullnat_en\").prop(\"disabled\", false);\r\n        } else {\r\n            $(\"#ppp_fullnat_en\").prop(\"checked\", false);\r\n            $(\"#ppp_fullnat_en\").prop(\"disabled\", true);\r\n        }\r\n        $(\"#ppp_fullnat_en\").data(\"tpCheckbox\").refresh();\r\n    }\r\n}\r\n\r\nfunction IPClick(obj) {\r\n    if ($(obj).hasClass(\"cln\")) {\r\n        $(\"#ip_elem_adv\").addClass(\"nd\");\r\n        $(obj).removeClass(\"cln\");\r\n    } else {\r\n        $(\"#ip_elem_adv\").removeClass(\"nd\");\r\n        $(obj).addClass(\"cln\");\r\n    }\r\n}\r\n\r\nfunction DynIPClick(obj) {\r\n    if ($(obj).hasClass(\"cln\")) {\r\n        $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n        $(obj).removeClass(\"cln\");\r\n    } else {\r\n        $(\"#dyn_ip_elem_adv\").removeClass(\"nd\");\r\n        $(obj).addClass(\"cln\");\r\n    }\r\n}\r\n\r\nfunction PPPoEClick(obj) {\r\n    if ($(obj).hasClass(\"cln\")) {\r\n        $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n        $(obj).removeClass(\"cln\");\r\n    } else {\r\n        $(\"#pppoe_elem_adv\").removeClass(\"nd\");\r\n        $(obj).addClass(\"cln\");\r\n    }\r\n}\r\n\r\nfunction doManualDns() {\r\n    if ($(\"#dynamic_manual_dns\").prop(\"data-checked\")) {\r\n        $(\"#dyn_ip_dns_tbl\").removeClass(\"nd\");\r\n    } else {\r\n        $(\"#dyn_ip_dns_tbl\").addClass(\"nd\");\r\n    }\r\n}\r\n\r\nfunction doManualDns6() {\r\n    if ($(\"#dynamic_manual_dns6\").prop(\"data-checked\")) {\r\n        $(\"#dyn_ip_dns6_tbl\").removeClass(\"nd\");\r\n    } else {\r\n        $(\"#dyn_ip_dns6_tbl\").addClass(\"nd\");\r\n    }\r\n}\r\n\r\nfunction PPPoEShowDiv(val) {\r\n    switch (val) {\r\n        case 2:\r\n            if ($(\"#externIp_en\").prop(\"data-checked\"))\r\n                $(\"#exIp_tbl\").removeClass(\"nd\");\r\n            else\r\n                $(\"#exIp_tbl\").addClass(\"nd\");\r\n            break;\r\n        case 3:\r\n            if ($(\"#dns_en\").prop(\"data-checked\"))\r\n                $(\"#dns_tbl\").removeClass(\"nd\");\r\n            else\r\n                $(\"#dns_tbl\").addClass(\"nd\");\r\n            break;\r\n        default:\r\n            ;\r\n    }\r\n}\r\n\r\nfunction ShowDiv(val) {\r\n    if (val == null || val.attr(\"id\") == null)\r\n        return;\r\n\r\n    var objId = val.attr(\"id\");\r\n    var pattern1 = /_enable/i;\r\n    var pattern2 = /ppp_/i;\r\n\r\n    if (objId.search(pattern1) != -1) {\r\n        var obj = $(\"#\" + objId.replace(pattern1, \"_basic\"));\r\n        if (obj != null) {\r\n            if (val.prop(\"data-checked\") == true)\r\n                obj.removeClass(\"nd\");\r\n            else\r\n                obj.addClass(\"nd\");\r\n        }\r\n        obj = $(\"#\" + objId.replace(pattern1, \"_adv\"));\r\n        if (obj != null) {\r\n            if (val.prop(\"data-checked\") == true)\r\n                obj.removeClass(\"nd\");\r\n            else\r\n                obj.addClass(\"nd\");\r\n        }\r\n        if (objId.search(pattern2) != -1) {\r\n            if ($(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == false && $(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == true) {\r\n                $(\"#connAlwaysOn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n                $(\"#connOnDemand\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n                $(\"#connManual\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n            } else {\r\n                $(\"#connOnDemand\").prop(\"disabled\", false).data(\"tpRadio\").refresh();\r\n                $(\"#connManual\").prop(\"disabled\", false).data(\"tpRadio\").refresh();\r\n            }\r\n\r\n            if ($(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == false) {\r\n                $(\"#ipv6_cfg_ppp_slaac\").addClass(\"nd\");\r\n            } else if ($(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == true) {\r\n                $(\"#ipv6_cfg_ppp_slaac\").removeClass(\"nd\");\r\n            }\r\n        }\r\n    } else if (objId == \"externIp6_en\") {\r\n        if (val.prop(\"data-checked\") == true) {\r\n            $(\"#exIp6_tbl\").removeClass(\"nd\");\r\n            if (INCLUDE_IPV6_SLAAC) {\r\n                $(\"#ppp_ip6addr_type\").prop(\"disabled\", true);\r\n            }\r\n        } else {\r\n            $(\"#exIp6_tbl\").addClass(\"nd\");\r\n            if (INCLUDE_IPV6_SLAAC) {\r\n                $(\"#ppp_ip6addr_type\").prop(\"disabled\", false);\r\n            }\r\n        }\r\n    } else if (objId == \"dns6_en\") {\r\n        if (val.prop(\"data-checked\") == true)\r\n            $(\"#dns6_tbl\").removeClass(\"nd\");\r\n        else\r\n            $(\"#dns6_tbl\").addClass(\"nd\");\r\n    }\r\n}\r\n\r\nfunction initStaticIP() {\r\n    $(\"#ip_elem_basic\").removeClass(\"nd\");\r\n    $(\"#ipoeClick\").removeClass(\"nd\");\r\n    $(\"#ipoeClick\").removeClass(\"cln\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n\r\n    $(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#dynipClick\").addClass(\"nd\");\r\n\r\n    $(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n    $(\"#pppoeClick\").addClass(\"nd\");\r\n\r\n    if (INCLUDE_PPTP || INCLUDE_L2TP) {\r\n        $(\"#l2tp_pptp_elem_basic\").addClass(\"nd\");\r\n    }\r\n\tif(INCLUDE_BPA)\r\n\t{\r\n\t\t$(\"#bpa_elem_basic\").addClass(\"nd\");\r\n\t}\r\n    $(\"#ip_address\").tpAddress('val', wan_iplist_sta.externalIPAddress);\r\n    $(\"#netmask\").tpAddress('val', wan_iplist_sta.subnetMask);\r\n    $(\"#ip_gateway\").tpAddress('val', wan_iplist_sta.defaultGateway);\r\n    $(\"#mtu\").val(wan_iplist_sta.maxMTUSize);\r\n    if (wan_iplist_sta.NATEnabled == 1) {\r\n        $(\"#enable_nat\").prop(\"checked\", \"checked\");\r\n        $(\"#enable_fullnat\").prop(\"checked\", (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? true : false);\r\n    } else if (wan_iplist_sta.NATEnabled == 0) {\r\n        $(\"#enable_nat\").prop(\"checked\", false);\r\n        $(\"#enable_fullnat\").prop(\"disabled\", true);\r\n        $(\"#enable_fullnat\").prop(\"checked\", false);\r\n    }\r\n    $(\"#enable_nat\").data(\"tpCheckbox\").refresh();\r\n    $(\"#enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n\r\n    $(\"#ip_igmp_en\").prop(\"checked\", (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0);\r\n\r\n    $(\"#ip_igmp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n    if (wan_iplist_sta.DNSOverrideAllowed == 1) {\r\n        $(\"#dns_address\").tpAddress('val', (wan_iplist_sta.DNSServers).split(\",\")[0]);\r\n        $(\"#second_dns\").tpAddress('val', (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\");\r\n    }\r\n\r\n    if (INCLUDE_IPV6) {\r\n        $(\"#stc_ip4_elem_enable\").prop(\"checked\", (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0);\r\n        $(\"#stc_ip4_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#stc_ip4_elem_enable\"));\r\n\r\n        $(\"#stc_ip6_elem_enable\").prop(\"checked\", (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0);\r\n        $(\"#stc_ip6_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#stc_ip6_elem_enable\"));\r\n\r\n        if (INCLUDE_IPV6_MLD) {\r\n            $(\"#ip_mld\").removeClass(\"nd\");\r\n            $(\"#ip_mld_en\").prop(\"checked\", (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0);\r\n            $(\"#ip_mld_en\").data(\"tpCheckbox\").refresh();\r\n        } else {\r\n            $(\"#ip_mld\").addClass(\"nd\");\r\n        }\r\n\r\n        $(\"#stc_ip6_addr\").val(wan_iplist_sta.X_TP_ExternalIPv6Address);\r\n        $(\"#stc_prefix_len\").val(\"64\");\r\n        $(\"#stc_ip6_gateway\").val(wan_iplist_sta.X_TP_DefaultIPv6Gateway);\r\n\r\n        $(\"#dns6_address\").val((wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0]);\r\n        $(\"#second_dns6\").val((wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\");\r\n    }\r\n\r\n    initMacClone(wan_iplist_sta);\r\n}\r\n\r\nfunction initDynamicIP() {\r\n    $(\"#dyn_ip_elem_basic\").removeClass(\"nd\");\r\n\t\r\n    $(\"#dynipClick\").removeClass(\"nd\");\r\n    $(\"#dynipClick\").removeClass(\"cln\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n\r\n    $(\"#ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#ipoeClick\").addClass(\"nd\");\r\n\t\r\n\t$(\"#ipoeClick\").addClass(\"nd\");\r\n\r\n    $(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n    $(\"#pppoeClick\").addClass(\"nd\");\r\n\r\n    if (INCLUDE_PPTP || INCLUDE_L2TP) {\r\n        $(\"#l2tp_pptp_elem_basic\").addClass(\"nd\");\r\n    }\r\n\t\r\n\tif(INCLUDE_BPA)\r\n\t{\r\n\t\t$(\"#bpa_elem_basic\").addClass(\"nd\");\r\n\t}\r\n\t\r\n    $(\"#dyn_ip\").html(wan_iplist_dyn.externalIPAddress);\r\n    $(\"#dyn_mask\").html(wan_iplist_dyn.subnetMask);\r\n    $(\"#dyn_gw\").html(wan_iplist_dyn.defaultGateway);\r\n    $(\"#dyn_mtu\").val(wan_iplist_dyn.maxMTUSize);\r\n    if (wan_iplist_dyn.NATEnabled == 1) {\r\n        $(\"#dyn_enable_nat\").prop(\"checked\", true);\r\n        $(\"#dyn_enable_fullnat\").prop(\"checked\", (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0);\r\n    } else if (wan_iplist_dyn.NATEnabled == 0) {\r\n        $(\"#dyn_enable_nat\").prop(\"checked\", false);\r\n        $(\"#dyn_enable_fullnat\").prop(\"disabled\", true);\r\n        $(\"#dyn_enable_fullnat\").prop(\"checked\", false);\r\n    }\r\n    $(\"#dyn_enable_nat\").data(\"tpCheckbox\").refresh();\r\n    $(\"#dyn_enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n\r\n    if (wan_iplist_dyn.DNSOverrideAllowed == 1) {\r\n        $(\"#dyn_dns1\").tpAddress('val', (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#dyn_dns2\").tpAddress('val', (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\");\r\n    }\r\n\r\n    $(\"#dynamic_manual_dns\").prop(\"checked\", wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0);\r\n    $(\"#dynamic_manual_dns\").data(\"tpCheckbox\").refresh();\r\n    $(\"#hostname\").val(wan_iplist_dyn.X_TP_Hostname);\r\n    $(\"#unicast\").prop(\"checked\", wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0);\r\n    $(\"#dyn_ip_igmp_en\").prop(\"checked\", (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0);\r\n\r\n    $(\"#unicast\").data(\"tpCheckbox\").refresh();\r\n    $(\"#dyn_ip_igmp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n    doManualDns();\r\n\r\n    if (wan_iplist_dyn.enable == 1) {\r\n        if (wan_iplist_dyn.connectionStatus == \"Connected\") {\r\n            $(\"#renew\").prop(\"disabled\", true);\r\n            $(\"#release\").prop(\"disabled\", false);\r\n        } else if (wan_iplist_dyn.connectionStatus == \"Disconnected\") {\r\n            $(\"#renew\").prop(\"disabled\", false);\r\n            $(\"#release\").prop(\"disabled\", true);\r\n        } else {\r\n            $(\"#DynIpConnecting\").removeClass(\"nd\");\r\n            $(\"#renew\").prop(\"disabled\", true);\r\n            $(\"#release\").prop(\"disabled\", true);\r\n            connStatusTimeout = $.timeout($.reload, 10000);\r\n        }\r\n    }\r\n\r\n    if (INCLUDE_IPV6) {\r\n        $(\"#dyn_ip4_elem_enable\").prop(\"checked\", (wan_iplist_dyn.X_TP_IPv4Enabled == 1) ? 1 : 0);\r\n        $(\"#dyn_ip4_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#dyn_ip4_elem_enable\"));\r\n\r\n        $(\"#dyn_ip6_elem_enable\").prop(\"checked\", (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0);\r\n        $(\"#dyn_ip6_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#dyn_ip6_elem_enable\"));\r\n\r\n        if (INCLUDE_IPV6_MLD) {\r\n            $(\"#dyn_ip_mld\").removeClass(\"nd\");\r\n            $(\"#dyn_ip_mld_en\").prop(\"checked\", (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0);\r\n            $(\"#dyn_ip_mld_en\").data(\"tpCheckbox\").refresh();\r\n        } else {\r\n            $(\"#dyn_ip_mld\").addClass(\"nd\");\r\n        }\r\n\r\n        $(\"#dyn_ip6_addr\").html(wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n        $(\"#dyn_prefix_len\").html(wan_iplist_dyn.X_TP_PrefixLength);\r\n        $(\"#dyn_ip6_gw\").html(wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\r\n        $(\"#dynamic_manual_dns6\").prop(\"checked\", (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0);\r\n        $(\"#dynamic_manual_dns6\").data(\"tpCheckbox\").refresh();\r\n        doManualDns6();\r\n        if (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) {\r\n            $(\"#dyn_dns6_1\").val((wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\");\r\n            $(\"#dyn_dns6_2\").val((wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\");\r\n        }\r\n\r\n        if (INCLUDE_IPV6_SLAAC) {\r\n            var optVal = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? \"dhcp\" : \"autoip\";\r\n            $(\"#dyn_ip6addr_type option[value='\" + optVal + \"']\").prop(\"selected\", \"selected\");\r\n        }\r\n    }\r\n\r\n    initMacClone(wan_iplist_dyn);\r\n}\r\n\r\nfunction initSecConnStaIp() {\r\n    $(\"#secConnType_sta\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n    $(\"#secondStaIp\").removeClass(\"nd\");\r\n    $(\"#secondStaIpAddress\").tpAddress('val', wan_iplist_sta.externalIPAddress);\r\n    $(\"#secondStaIpMask\").tpAddress('val', wan_iplist_sta.subnetMask);\r\n}\r\n\r\nfunction initSecConnDynIp() {\r\n    $(\"#secConnType_dyn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n    $(\"#secondDynIp\").removeClass(\"nd\");\r\n    $(\"#secondDynIpAddress\").html(wan_iplist_dyn.externalIPAddress);\r\n    $(\"#secondDynIpMask\").html(wan_iplist_dyn.subnetMask);\r\n\r\n    if (wan_iplist_dyn.enable == 1){\r\n        if (wan_iplist_dyn.connectionStatus == \"Connected\") {\r\n            /*$.removeLoading();*/\r\n            $(\"#secondDynIpRenew\").prop(\"disabled\", true);\r\n            $(\"#secondDynIpRelease\").prop(\"disabled\", false);\r\n        } else if (wan_iplist_dyn.connectionStatus == \"Disconnected\") {\r\n            /*$.removeLoading();*/\r\n            $(\"#secondDynIpRenew\").prop(\"disabled\", false);\r\n            $(\"#secondDynIpRelease\").prop(\"disabled\", true);\r\n        } else {\r\n            $(\"#secondDynIpConnecting\").removeClass(\"nd\");\r\n            $(\"#secondDynIpRenew\").prop(\"disabled\", true);\r\n            $(\"#secondDynIpRelease\").prop(\"disabled\", true);\r\n        }\r\n    }\r\n}\r\n\r\nfunction initSecondaryConn() {\r\n    if (wan_pppoelist.secondConnection == \"sec_conn_dynip\") {\r\n        initSecConnDynIp();\r\n    } else if (wan_pppoelist.secondConnection == \"sec_conn_staip\") {\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t\tinitSecConnStaIp();\r\n\t\t}\r\n    } else {\r\n        $(\"#secConnType_disable\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n    }\r\n}\r\n\r\nfunction initPPPoE() {\r\n    $(\"#pppoe_elem_basic\").removeClass(\"nd\");\r\n    $(\"#pppoeClick\").removeClass(\"nd\");\r\n    $(\"#pppoeClick\").removeClass(\"cln\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n\r\n    $(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#dynipClick\").addClass(\"nd\");\r\n\r\n    $(\"#ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#ipoeClick\").addClass(\"nd\");\r\n\r\n    if (INCLUDE_PPTP || INCLUDE_L2TP) {\r\n        $(\"#l2tp_pptp_elem_basic\").addClass(\"nd\");\r\n    }\r\n\t\r\n\tif(INCLUDE_BPA)\r\n\t{\r\n\t\t$(\"#bpa_elem_basic\").addClass(\"nd\");\r\n\t}\r\n    $(\"#username\").val(wan_pppoelist.username);\r\n    $(\"#pwd\").tpPassword('val', wan_pppoelist.password);\r\n    $(\"#pwd2\").tpPassword('val', wan_pppoelist.password);\r\n    if (INCLUDE_SPECIAL_DIAL_MODE) $(\"#speDail\").val(wan_pppoelist.X_TP_SpecialDail);\r\n    $(\"#idleTime\").val(wan_pppoelist.idleDisconnectTime);\r\n    if (wan_pppoelist.connectionTrigger == \"OnDemand\") {\r\n        $(\"#connOnDemand\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n        $('#maxIdle-container').removeClass('nd');\r\n    } else if (wan_pppoelist.connectionTrigger == \"AlwaysOn\") {\r\n        $(\"#connAlwaysOn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n        $('#maxIdle-container').addClass('nd');\r\n    } else if (wan_pppoelist.connectionTrigger == \"Manual\") {\r\n        $(\"#connManual\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n        $('#maxIdle-container').removeClass('nd');\r\n    }\r\n    $(\"#ppp_authpro option[value='\" + wan_pppoelist.PPPAuthenticationProtocol + \"']\").prop(\"selected\", true);\r\n    $(\"#acName\").val(wan_pppoelist.PPPoEACName);\r\n    $(\"#serviceName\").val(wan_pppoelist.PPPoEServiceName);\r\n    $(\"#pppmtu\").val(wan_pppoelist.maxMRUSize);\r\n    if (wan_pppoelist.NATEnabled == 1) {\r\n        $(\"#ppp_enable_nat\").prop(\"checked\", true);\r\n        $(\"#ppp_fullnat_en\").prop(\"checked\", (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? true : false);\r\n    } else if (wan_pppoelist.NATEnabled == 0) {\r\n        $(\"#ppp_enable_nat\").prop(\"checked\", false);\r\n        $(\"#ppp_fullnat_en\").prop(\"disabled\", true);\r\n        $(\"#ppp_fullnat_en\").prop(\"checked\", false);\r\n    }\r\n    $(\"#ppp_enable_nat\").data(\"tpCheckbox\").refresh();\r\n    $(\"#ppp_fullnat_en\").data(\"tpCheckbox\").refresh();\r\n    $(\"#ppp_igmp_en\").prop(\"checked\", (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? true : false);\r\n\r\n    $(\"#ppp_fullnat_en\").data(\"tpCheckbox\").refresh();\r\n    $(\"#ppp_igmp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n    if (wan_pppoelist.X_TP_UseStaticIP == 1) {\r\n        $(\"#externIp_en\").prop(\"checked\", true);\r\n        $(\"#exIp_tbl\").removeClass(\"nd\");\r\n        $(\"#externIpAddr\").tpAddress('val', wan_pppoelist.externalIPAddress);\r\n    } else {\r\n        $(\"#externIp_en\").prop(\"checked\", false);\r\n        $(\"#exIp_tbl\").addClass(\"nd\");\r\n    }\r\n\r\n    $(\"#externIp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n    $(\"#ppp_echotime\").val(wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0);\r\n    if (wan_pppoelist.DNSOverrideAllowed == 1) {\r\n        $(\"#dns_en\").prop(\"checked\", true);\r\n        $(\"#dns_en\").tpCheckbox();\r\n        $(\"#dns_tbl\").removeClass(\"nd\");\r\n        $(\"#dns1\").tpAddress('val', (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#dns2\").tpAddress('val', (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n    } else {\r\n        $(\"#dns_en\").prop(\"checked\", false);\r\n        $(\"#dns_en\").tpCheckbox();\r\n        $(\"#dns_tbl\").addClass(\"nd\");\r\n    }\r\n\r\n    if (INCLUDE_DUAL_ACCESS) {\r\n        initSecondaryConn();\r\n    }\r\n\r\n    if (wan_pppoelist.enable == 1) {\r\n        $.auto(function() {\r\n            if (!$.locked()) getPPPoEConnStatus();\r\n        }, 5000, true);\r\n    }\r\n\r\n    if (INCLUDE_IPV6) {\r\n        $(\"#ppp_ip4_elem_enable\").prop(\"checked\", (wan_pppoelist.X_TP_IPv4Enabled == 1) ? true : false);\r\n        $(\"#ppp_ip4_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#ppp_ip4_elem_enable\"));\r\n        $(\"#ppp_ip6_elem_enable\").prop(\"checked\", (wan_pppoelist.X_TP_IPv6Enabled == 1) ? true : false);\r\n        $(\"#ppp_ip6_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#ppp_ip6_elem_enable\"));\r\n\r\n        $(\"#externIp6_en\").prop(\"checked\", (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? true : false);\r\n        $(\"#externIp6_en\").data(\"tpCheckbox\").refresh();\r\n\r\n        if ($(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == false && $(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == true) {\r\n            $(\"#connAlwaysOn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n            $(\"#connOnDemand\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n            $(\"#connManual\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n        }\r\n\r\n        if (INCLUDE_IPV6_MLD) {\r\n            $(\"#ppp_mld\").removeClass(\"nd\");\r\n            $(\"#ppp_mld_en\").prop(\"checked\", (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0);\r\n            $(\"#ppp_mld_en\").data(\"tpCheckbox\").refresh();\r\n        } else {\r\n            $(\"#ppp_mld\").addClass(\"nd\");\r\n        }\r\n\r\n        if (INCLUDE_IPV6_SLAAC) {\r\n            if (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") {\r\n                $(\"#ppp_ip6addr_type\").prop(\"disabled\", true);\r\n            } else {\r\n                $(\"#ppp_ip6addr_type\").prop(\"disabled\", false);\r\n                if (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\") {\r\n                    $(\"#ppp_ip6addr_type option[value='autoip']\").prop(\"selected\", \"selected\");\r\n                }\r\n            }\r\n        }\r\n\r\n        $(\"#externIp6Addr\").val(wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\");\r\n        $(\"#externIp6Gateway\").val(wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\");\r\n\r\n        $(\"#dns6_en\").prop(\"checked\", (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? true : false);\r\n        $(\"#dns6_en\").data(\"tpCheckbox\").refresh();\r\n\r\n        ShowDiv($(\"#dns6_en\"));\r\n        if (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) {\r\n            $(\"#dns6_1\").val((wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[0]) ? wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[0] : \"::\");\r\n            $(\"#dns6_2\").val((wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[1]) ? wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[1] : \"::\");\r\n        }\r\n    }\r\n    $(\"input[type='radio']\").tpRadio();\r\n\r\n    initMacClone(wan_pppoelist);\r\n}\r\n\r\nfunction initL2TP() {\r\n    $(\"#l2tp_pptp_elem_basic\").removeClass(\"nd\");\r\n\r\n    $(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#dynipClick\").addClass(\"nd\");\r\n\r\n    $(\"#ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#ipoeClick\").addClass(\"nd\");\r\n\r\n    $(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n    $(\"#pppoeClick\").addClass(\"nd\");\r\n\r\n    $(\"#defgw_elem\").removeClass(\"nd\");\r\n\r\n    $(\"#l2tp_mtu_msg\").removeClass(\"nd\");\r\n    $(\"#pptp_mtu_msg\").addClass(\"nd\");\r\n\t\r\n\tif(INCLUDE_BPA)\r\n\t{\r\n\t\t$(\"#bpa_elem_basic\").addClass(\"nd\");\r\n\t}\r\n\t\r\n    $(\"#ppp_username\").val(wan_l2tp_list.username);\r\n    $(\"#ppp_pwd\").val(wan_l2tp_list.password);\r\n    $(\"#srvAddrName\").val(wan_l2tp_list.serverIpOrName);\r\n\r\n    if (wan_l2tp_list.enable == 0) {\r\n        $(\"#conn2\").prop(\"disabled\", true);\r\n        $(\"#disConn2\").prop(\"disabled\", true);\r\n    } else if (wan_l2tp_list.connectionStatus == \"Connected\") {\r\n        $(\"#conn2\").prop(\"disabled\", true);\r\n        $(\"#disConn2\").prop(\"disabled\", false);\r\n    } else if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") ||\r\n        (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n        ((wan_l2tp_list.addressingType == \"Static\") &&\r\n            (wan_l2tp_list.connectionStatusIP == \"Connected\") &&\r\n            ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\")))) {\r\n        $(\"#conn2\").prop(\"disabled\", false);\r\n        $(\"#disConn2\").prop(\"disabled\", true);\r\n    } else {\r\n        $(\"#conn2\").prop(\"disabled\", true);\r\n        $(\"#disConn2\").prop(\"disabled\", false);\r\n    }\r\n\r\n    if (wan_l2tp_list.addressingType == \"DHCP\") {\r\n        $(\"#ipType_stc\").prop(\"checked\", false);\r\n        $(\"#ipType_stc\").data(\"tpRadio\").refresh();\r\n        $(\"#ipType_dyn\").prop(\"checked\", true);\r\n        $(\"#ipType_dyn\").data(\"tpRadio\").refresh();\r\n        $(\"#l2tp_pptp_dyn_ip_elem\").removeClass(\"nd\");\r\n        $(\"#l2tp_pptp_stc_ip_elem\").addClass(\"nd\");\r\n        $(\"#isp_ip_dyn\").html(wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n        $(\"#isp_net_mask_dyn\").html(wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP : \"0.0.0.0\");\r\n        $(\"#isp_gw_dyn\").html(wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n        $(\"#isp_dns_1_dyn\").html(wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#isp_dns_2_dyn\").html(wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n    } else if (wan_l2tp_list.addressingType == \"Static\") {\r\n        $(\"#ipType_dyn\").prop(\"checked\", false);\r\n        $(\"#ipType_dyn\").data(\"tpRadio\").refresh();\r\n        $(\"#ipType_stc\").prop(\"checked\", true);\r\n        $(\"#ipType_stc\").data(\"tpRadio\").refresh();\r\n        $(\"#l2tp_pptp_stc_ip_elem\").removeClass(\"nd\");\r\n        $(\"#l2tp_pptp_dyn_ip_elem\").addClass(\"nd\");\r\n\r\n        $(\"#isp_ip_stc\").tpAddress('val', wan_l2tp_list.externalIPAddressIP);\r\n        $(\"#isp_net_mask_stc\").tpAddress('val', wan_l2tp_list.subnetMaskIP);\r\n        $(\"#isp_gw_stc\").tpAddress('val', wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n        $(\"#isp_dns_1_stc\").tpAddress('val', wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#isp_dns_2_stc\").tpAddress('val', wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n    }\r\n\r\n    $(\"#internet_ip\").html(wan_l2tp_list.externalIPAddress);\r\n    $(\"#internet_dns_1\").html(wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n    $(\"#internet_dns_2\").html(wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\r\n    $(\"#l2tp_mtu\").val(wan_l2tp_list.maxMRUSize);\r\n\r\n    $(\"#da_connOnDemand\").prop(\"checked\", false);\r\n    $(\"#da_connAlwaysOn\").prop(\"checked\", false);\r\n    $(\"#da_connManual\").prop(\"checked\", false);\r\n    $(\"#da_connOnDemand\").data(\"tpRadio\").refresh();\r\n    $(\"#da_connAlwaysOn\").data(\"tpRadio\").refresh();\r\n    $(\"#da_connManual\").data(\"tpRadio\").refresh();\r\n    if (wan_l2tp_list.connectionTrigger == \"OnDemand\") {\r\n        $(\"#da_connOnDemand\").prop(\"checked\", true);\r\n        $(\"#da_connOnDemand\").data(\"tpRadio\").refresh();\r\n        $('#da_maxIdle-container').removeClass('nd');\r\n    } else if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\") {\r\n        $(\"#da_connAlwaysOn\").prop(\"checked\", true);\r\n        $(\"#da_connAlwaysOn\").data(\"tpRadio\").refresh();\r\n        $('#da_maxIdle-container').addClass('nd');\r\n    } else if (wan_l2tp_list.connectionTrigger == \"Manual\") {\r\n        $(\"#da_connManual\").prop(\"checked\", true);\r\n        $(\"#da_connManual\").data(\"tpRadio\").refresh();\r\n        $('#da_maxIdle-container').removeClass('nd');\r\n    }\r\n    $(\"#da_idleTime\").val(wan_l2tp_list.idleDisconnectTime);\r\n\r\n    initMacClone(wan_l2tp_list);\r\n}\r\n\r\nfunction initPPTP() {\r\n    $(\"#l2tp_pptp_elem_basic\").removeClass(\"nd\");\r\n\r\n    $(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#dynipClick\").addClass(\"nd\");\r\n    $(\"#ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#ipoeClick\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n    $(\"#pppoeClick\").addClass(\"nd\");\r\n    //DNS & GateWay\r\n    $(\"#defgw_elem\").removeClass(\"nd\");\r\n    //MTU\r\n    $(\"#pptp_mtu_msg\").removeClass(\"nd\");\r\n    $(\"#l2tp_mtu_msg\").addClass(\"nd\");\r\n\t\r\n\tif(INCLUDE_BPA)\r\n\t{\r\n\t\t$(\"#bpa_elem_basic\").addClass(\"nd\");\r\n\t}\r\n    $(\"#ppp_username\").val(wan_pptp_list.username);\r\n    $(\"#ppp_pwd\").val(wan_pptp_list.password);\r\n    $(\"#srvAddrName\").val(wan_pptp_list.serverIpOrName);\r\n\r\n    if (wan_pptp_list.enable == 0) {\r\n        $(\"#conn2\").prop(\"disabled\", true);\r\n        $(\"#disConn2\").prop(\"disabled\", true);\r\n    } else if (wan_pptp_list.connectionStatus == \"Connected\") {\r\n        $(\"#conn2\").prop(\"disabled\", true);\r\n        $(\"#disConn2\").prop(\"disabled\", false);\r\n    } else if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") ||\r\n        (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n        ((wan_pptp_list.addressingType == \"Static\") &&\r\n            (wan_pptp_list.connectionStatusIP == \"Connected\") &&\r\n            ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\")))) {\r\n        $(\"#conn2\").prop(\"disabled\", false);\r\n        $(\"#disConn2\").prop(\"disabled\", true);\r\n    } else {\r\n        $(\"#conn2\").prop(\"disabled\", true);\r\n        $(\"#disConn2\").prop(\"disabled\", false);\r\n    }\r\n\r\n    if (wan_pptp_list.addressingType == \"DHCP\") {\r\n        $(\"#ipType_stc\").prop(\"checked\", false);\r\n        $(\"#ipType_stc\").data(\"tpRadio\").refresh();\r\n        $(\"#ipType_dyn\").prop(\"checked\", true);\r\n        $(\"#ipType_dyn\").data(\"tpRadio\").refresh();\r\n        $(\"#l2tp_pptp_dyn_ip_elem\").removeClass(\"nd\");\r\n        $(\"#l2tp_pptp_stc_ip_elem\").addClass(\"nd\");\r\n        $(\"#isp_ip_dyn\").html(wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n        $(\"#isp_net_mask_dyn\").html(wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n        $(\"#isp_gw_dyn\").html(wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n        $(\"#isp_dns_1_dyn\").html(wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#isp_dns_2_dyn\").html(wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\r\n    } else if (wan_pptp_list.addressingType == \"Static\") {\r\n        $(\"#ipType_dyn\").prop(\"checked\", false);\r\n        $(\"#ipType_dyn\").data(\"tpRadio\").refresh();\r\n        $(\"#ipType_stc\").prop(\"checked\", true);\r\n        $(\"#ipType_stc\").data(\"tpRadio\").refresh();\r\n        $(\"#l2tp_pptp_stc_ip_elem\").removeClass(\"nd\");\r\n        $(\"#l2tp_pptp_dyn_ip_elem\").addClass(\"nd\");\r\n\r\n        $(\"#isp_ip_stc\").tpAddress('val', wan_pptp_list.externalIPAddressIP);\r\n        $(\"#isp_net_mask_stc\").tpAddress('val', wan_pptp_list.subnetMaskIP);\r\n        $(\"#isp_gw_stc\").tpAddress('val', wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n        $(\"#isp_dns_1_stc\").tpAddress('val', wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#isp_dns_2_stc\").tpAddress('val', wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n    }\r\n\r\n\r\n    $(\"#internet_ip\").html(wan_pptp_list.externalIPAddress);\r\n    $(\"#internet_dns_1\").html(wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n    $(\"#internet_dns_2\").html(wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\r\n    $(\"#pptp_mtu\").val(wan_pptp_list.maxMRUSize);\r\n\r\n    $(\"#da_connOnDemand\").prop(\"checked\", false);\r\n    $(\"#da_connAlwaysOn\").prop(\"checked\", false);\r\n    $(\"#da_connManual\").prop(\"checked\", false);\r\n    $(\"#da_connOnDemand\").data(\"tpRadio\").refresh();\r\n    $(\"#da_connAlwaysOn\").data(\"tpRadio\").refresh();\r\n    $(\"#da_connManual\").data(\"tpRadio\").refresh();\r\n    if (wan_pptp_list.connectionTrigger == \"OnDemand\") {\r\n        $(\"#da_connOnDemand\").prop(\"checked\", true);\r\n        $(\"#da_connOnDemand\").data(\"tpRadio\").refresh();\r\n    } else if (wan_pptp_list.connectionTrigger == \"AlwaysOn\") {\r\n        $(\"#da_connAlwaysOn\").prop(\"checked\", true);\r\n        $(\"#da_connAlwaysOn\").data(\"tpRadio\").refresh();\r\n    } else if (wan_pptp_list.connectionTrigger == \"Manual\") {\r\n        $(\"#da_connManual\").prop(\"checked\", true);\r\n        $(\"#da_connManual\").data(\"tpRadio\").refresh();\r\n    }\r\n    $(\"#da_idleTime\").val(wan_pptp_list.idleDisconnectTime);\r\n    initMacClone(wan_pptp_list);\r\n}\r\n\r\nfunction initBPA()\r\n{\r\n\t/*\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t*/\r\n\t\r\n\t$(\"#bpa_elem_basic\").removeClass(\"nd\");\r\n\t\r\n\t$(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n    $(\"#pppoeClick\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n   \r\n\t$(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#dynipClick\").addClass(\"nd\");\r\n\t\r\n\t$(\"#ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#ipoeClick\").addClass(\"nd\");\r\n\t\r\n\tif (INCLUDE_PPTP || INCLUDE_L2TP) {\r\n\t\t$(\"#l2tp_pptp_elem_basic\").addClass(\"nd\");\r\n\t}\r\n\t\r\n\t/*\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\t*/\r\n\t$(\"#bpa_username\").val(wan_bpa_list.X_TP_BpaUsername);\r\n\t$(\"#bpa_pwd\").tpPassword('val',  wan_bpa_list.X_TP_BpaPassword);\r\n\t$(\"#bpa_authserver\").val( wan_bpa_list.X_TP_BpaAuthServer);\r\n\t$(\"#bpa_authdomain\").val( wan_bpa_list.X_TP_BpaAuthDomain);\r\n\t$(\"#bpa_mtu\").val(wan_bpa_list.maxMTUSize);\r\n\t\r\n\t/*\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t}\r\n\t*/\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t//$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t\t$(\"#bpa_connOnDemand\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n\t\t$('#bpa_maxIdle-container').removeClass('nd');\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t//$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t\t$(\"#bpa_connAlwaysOn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n\t\t$('#bpa_maxIdle-container').addClass('nd');\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t//$.id(\"bpa_connManual\").checked = 1;\r\n\t\t$(\"#bpa_connManual\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n\t\t$('#bpa_maxIdle-container').removeClass('nd');\r\n\t}\r\n\t//$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\t$(\"#bpa_idleTime\").val(wan_bpa_list.X_TP_BpaIdleDisconnectTime);\r\n\t/*\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\t\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\t*/\r\n}\r\n\r\nfunction init() {\r\n\tif (INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$(\"#dyn_ip_igmp\").addClass(\"nd\");\r\n\t\t$(\"#ip_igmp\").addClass(\"nd\");\r\n\t\t$(\"#ppp_igmp\").addClass(\"nd\");\r\n\t}\r\n    if (!INCLUDE_3G4G_BACKUP) {\r\n\t    $(\"#lteBackup\").addClass(\"nd\");\r\n\t    $(\"#lteBackup_space\").addClass(\"nd\");\r\n    }\r\n    if (INCLUDE_WAN_MODE) {\r\n        $(\"#ethEnable\").addClass(\"nd\");\r\n    }\r\n    if (INCLUDE_IPV6) {\r\n        $(\"div\").each(function() {\r\n            if ($(this).hasClass(\"IPv6\")) $(this).removeClass(\"nd\");\r\n        });\r\n\r\n        if (INCLUDE_IPV6_SLAAC) {\r\n            $(\"#ipv6_cfg_dynamic_slaac\").removeClass(\"nd\");\r\n            $(\"#ipv6_cfg_ppp_slaac\").removeClass(\"nd\");\r\n        } else {\r\n            $(\"#ipv6_cfg_dynamic_slaac\").addClass(\"nd\");\r\n            $(\"#ipv6_cfg_ppp_slaac\").addClass(\"nd\");\r\n        }\r\n    } else {\r\n        $(\"input[type='checkbox'][id$='_elem_enable']\").each(function() {\r\n            $(this).prop(\"checked\", true);\r\n            $(this).tpCheckbox();\r\n            ShowDiv($(this));\r\n        });\r\n    }\r\n\r\n    if (INCLUDE_DUAL_ACCESS) {\r\n        $(\"#div_secConn\").removeClass(\"nd\");\r\n    }\r\n\r\n    var type = \"\";\r\n    var wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\r\n    if (INCLUDE_L2TP) {\r\n        $(\"#link_type\").append(\"<option value='l2tp' text='L2TP'>L2TP</option>\");\r\n        var wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n    }\r\n    if (INCLUDE_PPTP) {\r\n        $(\"#link_type\").append(\"<option value='pptp' text='PPTP'>PPTP</option>\");\r\n        var wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n    }\r\n\tif (INCLUDE_BPA){\r\n        $(\"#link_type\").append(\"<option value='bpa' text='PPTP'>\"+s_str.bpa_cable+\"</option>\");\t\r\n\t}\r\n    if (INCLUDE_3G4G_BACKUP) {\r\n\t    sysMode = $.act(ACT_GET, SYS_MODE, null, null, [\"lteBackupEnable\"]);\r\n    }\r\n\r\n    if (!$.exe()) {\r\n\tif (INCLUDE_3G4G_BACKUP) {\r\n\t\t$(\"#lteBackup\").removeClass(\"nd\");\r\n\t\t$(\"#lteBackup_space\").removeClass(\"nd\");\r\n\t\tif (sysMode.lteBackupEnable == 1) {\r\n\t\t\t$('#lteBackup_en').addClass(\"selected\");\r\n\t\t} else {\r\n\t\t\t$('#lteBackup_dis').addClass(\"selected\");\r\n\t\t}\r\n\t}\r\n\r\n        $.each(wanTypes, function() {\r\n            if (this.WANAccessType == \"Ethernet\")\r\n                pStk = this.__stack;\r\n        });\r\n        ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n        $.each(wanIPList, function() {\r\n            var tmpStk = $.stkPop(this.__stack, 2);\r\n            if (pStk == tmpStk) {\r\n                if (this.addressingType == \"Static\") {\r\n                    staticStk = this.__stack;\r\n                    staticEnable = this.enable;\r\n                    if (this.enable == 1) type = \"staticIp\";\r\n                    wan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n                }\r\n                if (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0) {\r\n                    dynStk = this.__stack;\r\n                    dynEnable = this.enable;\r\n                    if (this.enable == 1) type = \"dynamicIp\";\r\n                    wan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n                }\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\t if (this.enable == 1) type = \"bpa\";\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n            }\r\n        });\r\n        $.each(wanPPPList, function() {\r\n            var tmpStk = $.stkPop(this.__stack, 2);\r\n            if (pStk == tmpStk) {\r\n                if (this.transportType == \"PPPoE\") {\r\n                    PPPoEStk = this.__stack;\r\n                    PPPoEEnable = this.enable;\r\n                    if (this.enable == 1) type = \"pppoe\";\r\n                    wan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n                }\r\n            }\r\n        });\r\n        if (INCLUDE_L2TP) {\r\n            $.each(wanL2tpList, function() {\r\n                var tmpStk = $.stkPop(this.__stack, 1);\r\n                if (pStk == tmpStk) {\r\n                    l2tpStk = this.__stack;\r\n                    l2tpEnable = this.enable;\r\n                    wan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n                    if (this.enable == 1) type = \"l2tp\";\r\n                }\r\n            });\r\n        }\r\n        if (INCLUDE_PPTP) {\r\n            $.each(wanPptpList, function() {\r\n                var tmpStk = $.stkPop(this.__stack, 1);\r\n                if (pStk == tmpStk) {\r\n                    pptpStk = this.__stack;\r\n                    pptpEnable = this.enable;\r\n                    wan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n                    if (this.enable == 1) type = \"pptp\";\r\n                }\r\n            });\r\n        }\r\n        if (!$.exe()) {\r\n            $(\"#ethWan_en\").prop(\"checked\", (ethWan.enable == 1) ? 1 : 0).data(\"tpCheckbox\").refresh();\r\n            showLnkType(type);\r\n        }\r\n    }\r\n}\r\n\r\nfunction addStaticIpAttrs() {\r\n    var temp_ip = $(\"#ip_address\").tpAddress('val');\r\n    var temp_mask = $(\"#netmask\").tpAddress('val');\r\n    var temp_gateway = $(\"#ip_gateway\").tpAddress('val');\r\n    if (!INCLUDE_IPV6 || $(\"#stc_ip4_elem_enable\").prop(\"data-checked\")) {\r\n        if ((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip, temp_mask))) {\r\n            wan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n            wan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n        } else {\r\n            return false;\r\n        }\r\n        if ($.ifip(temp_gateway, true)) {\r\n            $.alert(ERR_IP_FORMAT);\r\n            $(\"#ip_gateway\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        if (!$.isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)) {\r\n            $.alert(ERR_GATEWAY_INVAD);\r\n            $(\"#ip_gateway\").tpAddress('focus');\r\n            return false;\r\n        }\r\n    }\r\n    wan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n    wan_iplistarg_sta.NATEnabled = $(\"#enable_nat\").prop(\"data-checked\") ? 1 : 0;\r\n    wan_iplistarg_sta.X_TP_FullconeNATEnabled = $(\"#enable_fullnat\").prop(\"data-checked\") ? 1 : 0;\r\n    if(!INCLUDE_UN_IPTV){\r\n        wan_iplistarg_sta.X_TP_IGMPProxyEnabled = $(\"#ip_igmp_en\").prop(\"data-checked\") ? 1 : 0;\r\n\t}\r\n    if (($(\"#mtu\").val() >= 576) && ($(\"#mtu\").val() <= 1500)) {\r\n        wan_iplistarg_sta.maxMTUSize = parseInt($(\"#mtu\").val(), 10);\r\n    } else {\r\n        $.alert(ERR_WAN_MTU_INVAD);\r\n        $(\"#mtu\").focus().select();\r\n        return false;\r\n    }\r\n\r\n    var temp_dnsaddr = $(\"#dns_address\").tpAddress('val');\r\n    var temp_secdnsaddr = $(\"#second_dns\").tpAddress('val');\r\n    var temp_dnsServers = \"\";\r\n    if (!INCLUDE_IPV6 || $(\"#stc_ip4_elem_enable\").prop(\"data-checked\")) {\r\n        if ($.ifip(temp_dnsaddr, true)) {\r\n            $.alert(ERR_WAN_DNSADDR_INVAD);\r\n            $(\"#dns_address\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        if ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true))) {\r\n            $.alert(ERR_WAN_SECDNS_INVAD);\r\n            $(\"#second_dns\").tpAddress('focus');\r\n            return false;\r\n        }\r\n    }\r\n    temp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n    temp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n    temp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n    wan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n    wan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\r\n\tif (INCLUDE_IPV6) {\r\n        wan_iplistarg_sta.X_TP_IPv4Enabled = ($(\"#stc_ip4_elem_enable\").prop(\"data-checked\")) ? 1 : 0;\r\n    }\r\n\r\n    if (false == addMacCloneAttrs(wan_iplistarg_sta)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction addDynIpAttrs() {\r\n    wan_iplistarg_dyn.NATEnabled = $(\"#dyn_enable_nat\").prop(\"data-checked\") ? 1 : 0;\r\n    wan_iplistarg_dyn.X_TP_FullconeNATEnabled = $(\"#dyn_enable_fullnat\").prop(\"data-checked\") ? 1 : 0;\r\n    if(!INCLUDE_UN_IPTV){\r\n        wan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $(\"#dyn_ip_igmp_en\").prop(\"data-checked\") ? 1 : 0;\r\n    }\r\n\r\n    if (($(\"#dyn_mtu\").val() >= 576) && ($(\"#dyn_mtu\").val() <= 1500)) {\r\n        wan_iplistarg_dyn.MaxMTUSize = parseInt($(\"#dyn_mtu\").val(), 10);\r\n    } else {\r\n        $.alert(ERR_WAN_MTU_INVAD);\r\n        $(\"#dyn_mtu\").focus().select();\r\n        return false;\r\n    }\r\n    if ($(\"#dynamic_manual_dns\").prop(\"data-checked\")) {\r\n        wan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\r\n        var temp_dnsaddr = $(\"#dyn_dns1\").tpAddress('val');\r\n        var temp_secdnsaddr = $(\"#dyn_dns2\").tpAddress('val');\r\n        var temp_dnsServers = \"\";\r\n        if (!INCLUDE_IPV6 || $(\"#dyn_ip4_elem_enable\").prop(\"data-checked\")) {\r\n            if ($.ifip(temp_dnsaddr, true)) {\r\n                $.alert(ERR_WAN_DNSADDR_INVAD);\r\n                $(\"#dns_address\").tpAddress('focus');\r\n                return false;\r\n            }\r\n            if ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true))) {\r\n                $.alert(ERR_WAN_SECDNS_INVAD);\r\n                $(\"#second_dns\").focus().select();\r\n                return false;\r\n            }\r\n        }\r\n        temp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n        temp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n        if (!INCLUDE_IPV6 || $(\"#dyn_ip4_elem_enable\").prop(\"data-checked\")) {\r\n            if ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\") {\r\n                $.alert(ERR_WAN_DNS_INVAD);\r\n                $(\"#dns_address\").tpAddress('focus');\r\n                return false;\r\n            }\r\n        }\r\n        wan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n    } else {\r\n        wan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n    }\r\n    if (!$.charCompareA($(\"#hostname\").val(), 63, 0)) {\r\n        $.alert(ERR_WAN_HOST_NAME_INVALID);\r\n        $(\"#hostname\").focus().select();\r\n        return false;\r\n    }\r\n    wan_iplistarg_dyn.X_TP_Hostname = $(\"#hostname\").val();\r\n    wan_iplistarg_dyn.X_TP_Unicast = $(\"#unicast\").prop(\"data-checked\") ? 1 : 0;\r\n\r\n    if (INCLUDE_IPV6) {\r\n        wan_iplistarg_dyn.X_TP_IPv4Enabled = ($(\"#dyn_ip4_elem_enable\").prop(\"data-checked\")) ? 1 : 0;\r\n    }\r\n    if (false == addMacCloneAttrs(wan_iplistarg_dyn)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs() {\r\n    if ($(\"#secConnType_dyn\").prop(\"checked\")) {\r\n        wan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n        wan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n        wan_iplistarg_dyn.MaxMTUSize = 1500;\r\n    } else if ($(\"#secConnType_sta\").prop(\"checked\")) {\r\n        var temp_ip = $(\"#secondStaIpAddress\").tpAddress('val');\r\n        var temp_mask = $(\"#secondStaIpMask\").tpAddress('val');\r\n\r\n        if ((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip, temp_mask))) {\r\n            wan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n            wan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n            wan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n            wan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n            wan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n            wan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n            wan_iplistarg_sta.maxMTUSize = 1500;\r\n        } else {\r\n            return false;\r\n        }\r\n    } else {\r\n        wan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nfunction addPPPoEAttrs() {\r\n    if ($(\"#username\").val() == \"\") {\r\n        $.alert(ERR_USERNAME_INVAD);\r\n        $(\"#username\").focus().select();\r\n        return false;\r\n    }\r\n    wan_pppoelistarg.username = $(\"#username\").val();\r\n    if ($(\"#pwd\").tpPassword('val') != $(\"#pwd2\").tpPassword('val')) {\r\n\t\t$(\"#pwd\").tpPassword('val', '');\r\n\t\t$(\"#pwd2\").tpPassword('val', '');\r\n        $.alert(ERR_PWD_INVAD);\r\n        $(\"#pwd\").tpPassword('focus');\r\n        return false;\r\n    }\r\n    wan_pppoelistarg.password = $(\"#pwd\").val();\r\n    if (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $(\"#speDail\").val();\r\n\r\n    if ($(\"#connAlwaysOn\").prop(\"checked\") == 1) {\r\n        wan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n    } else {\r\n        if (($(\"#idleTime\").val()) && ($.isnum($(\"#idleTime\").val()))) {\r\n            wan_pppoelistarg.idleDisconnectTime = parseInt($(\"#idleTime\").val(), 10);\r\n        } else {\r\n            $.alert(ERR_IDLETIME_INVAD);\r\n            $(\"#idleTime\").focus().select();\r\n            return false;\r\n        }\r\n\r\n        if ($(\"#connOnDemand\").prop(\"checked\") == 1)\r\n            wan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n        else if ($(\"#connManual\").prop(\"checked\") == 1)\r\n            wan_pppoelistarg.connectionTrigger = \"Manual\";\r\n    }\r\n    wan_pppoelistarg.PPPAuthenticationProtocol = $(\"#ppp_authpro\").data(\"value\");\r\n\r\n    wan_pppoelistarg.PPPoEACName = $(\"#acName\").val();\r\n    wan_pppoelistarg.PPPoEServiceName = $(\"#serviceName\").val();\r\n    if (($(\"#pppmtu\").val() >= 576) && ($(\"#pppmtu\").val() <= 1492)) {\r\n        wan_pppoelistarg.maxMRUSize = parseInt($(\"#pppmtu\").val(), 10);\r\n    } else {\r\n        $.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n        $(\"#pppmtu\").focus().select();\r\n        return false;\r\n    }\r\n    wan_pppoelistarg.NATEnabled = $(\"#ppp_enable_nat\").prop(\"data-checked\") ? 1 : 0;\r\n    wan_pppoelistarg.X_TP_FullconeNATEnabled = ($(\"#ppp_fullnat_en\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n    if(!INCLUDE_UN_IPTV){\r\n        wan_pppoelistarg.X_TP_IGMPProxyEnabled = ($(\"#ppp_igmp_en\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n    }\r\n    if ($(\"#externIp_en\").prop(\"data-checked\") == 1) {\r\n        var externIpAddr = $(\"#externIpAddr\").tpAddress('val');\r\n        if ((externIpAddr != \"\") && (externIpAddr != \"0.0.0.0\") && ($.ifip(externIpAddr, true)) && (!INCLUDE_IPV6 || $(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == 1)) {\r\n            $.alert(ERR_IP_FORMAT);\r\n            $(\"#externIpAddr\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        wan_pppoelistarg.externalIPAddress = (externIpAddr) ? $.ip2ip(externIpAddr) : \"0.0.0.0\";\r\n        wan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n    } else if ($(\"#externIp_en\").prop(\"data-checked\") == 0) {\r\n        wan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n    }\r\n    if ((parseInt($(\"#ppp_echotime\").val(), 10) >= 0) && (parseInt($(\"#ppp_echotime\").val(), 10) <= 120)) {\r\n        wan_pppoelistarg.PPPLCPEcho = parseInt($(\"#ppp_echotime\").val(), 10);\r\n    } else {\r\n        $.alert(ERR_WAN_ECHOTIME_INVAD);\r\n        $(\"#ppp_echotime\").focus().select();\r\n        return false;\r\n    }\r\n    if ($(\"#dns_en\").prop(\"data-checked\") == 1 && (!INCLUDE_IPV6 || $(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == 1)) {\r\n        var dns1 = $('#dns1').tpAddress('val');\r\n        if ((dns1 != \"\") && (dns1 != \"0.0.0.0\") && ($.ifip(dns1, true))) {\r\n            $.alert(ERR_WAN_DNSADDR_INVAD);\r\n            $(\"#dns1\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        var dns2 = $('#dns2').tpAddress('val');\r\n        if ((dns2 != \"\") && (dns2 != \"0.0.0.0\") && ($.ifip(dns2, true))) {\r\n            $.alert(ERR_WAN_SECDNS_INVAD);\r\n            $(\"#dns2\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        var tmpDns1 = (dns1) ? $.ip2ip(dns1) : \"0.0.0.0\";\r\n        var tmpDns2 = (dns2) ? $.ip2ip(dns2) : \"0.0.0.0\";\r\n        wan_pppoelistarg.DNSOverrideAllowed = 1;\r\n        wan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n    } else {\r\n        wan_pppoelistarg.DNSOverrideAllowed = 0;\r\n    }\r\n\r\n    if (INCLUDE_IPV6) {\r\n        wan_pppoelistarg.X_TP_IPv4Enabled = ($(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n    }\r\n    if (false == addMacCloneAttrs(wan_pppoelistarg)) {\r\n        return false;\r\n    }\r\n\r\n    if (INCLUDE_DUAL_ACCESS) {\r\n        if (addSecondaryConnAttrs() == false)\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction addL2tpAttrs() {\r\n    if ($(\"#ppp_username\").val() == \"\") {\r\n        $.alert(ERR_USERNAME_INVAD);\r\n        $(\"#ppp_username\").focus().select();\r\n        return false;\r\n    }\r\n    wan_l2tp_listarg.username = $(\"#ppp_username\").val();\r\n    if ($(\"#ppp_pwd\").val() == \"\") {\r\n        $.alert(ERR_WAN_PWD_INVAD);\r\n        $(\"#ppp_pwd\").focus().select();\r\n        return false;\r\n    }\r\n    wan_l2tp_listarg.password = $(\"#ppp_pwd\").val();\r\n\r\n    if ($(\"#srvAddrName\").val() == \"\") {\r\n        $.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n        $(\"#srvAddrName\").focus().select();\r\n        return false;\r\n    }\r\n    wan_l2tp_listarg.serverIpOrName = $(\"#srvAddrName\").val();\r\n\r\n    if ($(\"#ipType_stc\").prop(\"checked\")) {\r\n        var temp_ip = $(\"#isp_ip_stc\").tpAddress('val');\r\n        var temp_mask = $(\"#isp_net_mask_stc\").tpAddress('val');\r\n        var temp_gateway = $(\"#isp_gw_stc\").tpAddress('val');\r\n\r\n        wan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n        if ((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip, temp_mask))) {\r\n            wan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n            wan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n        } else {\r\n            return false;\r\n        }\r\n        if ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true))) {\r\n            $.alert(ERR_IP_FORMAT);\r\n            $(\"#isp_gw_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        if ((temp_gateway == \"0.0.0.0\") || (!$.isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask))) {\r\n            $.alert(ERR_GATEWAY_INVAD);\r\n            $(\"#isp_gw_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n\r\n        wan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\r\n        var temp_dnsaddr = $(\"#isp_dns_1_stc\").tpAddress('val');\r\n        var temp_secdnsaddr = $(\"#isp_dns_2_stc\").tpAddress('val');\r\n        var temp_dnsServers = \"\";\r\n\r\n        if ($.ifip(temp_dnsaddr, true)) {\r\n            $.alert(ERR_WAN_DNSADDR_INVAD);\r\n            $(\"#isp_dns_1_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n\r\n        if ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true))) {\r\n            $.alert(ERR_WAN_DNSADDR_INVAD);\r\n            $(\"#isp_dns_1_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        if ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true))) {\r\n            $.alert(ERR_WAN_SECDNS_INVAD);\r\n            $(\"#isp_dns_2_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n\r\n        temp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n        temp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n        temp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n        wan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\r\n        if ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\") {\r\n            $.alert(ERR_WAN_DA_DNS_EMPTY);\r\n            $(\"#isp_dns_1_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n    } else {\r\n        wan_l2tp_listarg.addressingType = \"DHCP\";\r\n    }\r\n\r\n    if (($(\"#l2tp_mtu\").val() >= 576) && ($(\"#l2tp_mtu\").val() <= 1500)) {\r\n        wan_l2tp_listarg.maxMRUSize = parseInt($(\"#l2tp_mtu\").val(), 10);\r\n    } else {\r\n        $.alert(ERR_WAN_MTU_INVAD);\r\n        $(\"#l2tp_mtu\").focus().select();\r\n        return false;\r\n    }\r\n\r\n    if ($(\"#da_connAlwaysOn\").prop(\"checked\")) {\r\n        wan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n    } else {\r\n        if (($(\"#da_idleTime\").val()) && ($.isnum($(\"#da_idleTime\").val()))) {\r\n            wan_l2tp_listarg.idleDisconnectTime = parseInt($(\"#da_idleTime\").val(), 10);\r\n        } else {\r\n            $.alert(ERR_IDLETIME_INVAD);\r\n            $(\"#da_idleTime\").focus().select();\r\n            return false;\r\n        }\r\n\r\n        if ($(\"#da_connOnDemand\").prop(\"checked\") == 1)\r\n            wan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n        else if ($(\"#da_connManual\").prop(\"checked\") == 1)\r\n            wan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n    }\r\n    if (false == addMacCloneAttrs(wan_l2tp_listarg)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction addPptpAttrs() {\r\n    if ($(\"#ppp_username\").val() == \"\") {\r\n        $.alert(ERR_USERNAME_INVAD);\r\n        $(\"#ppp_username\").focus().select();\r\n        return false;\r\n    }\r\n    wan_pptp_listarg.username = $(\"#ppp_username\").val();\r\n    if ($(\"#ppp_pwd\").val() == \"\") {\r\n        $.alert(ERR_WAN_PWD_INVAD);\r\n        $(\"#ppp_pwd\").focus().select();\r\n        return false;\r\n    }\r\n    wan_pptp_listarg.password = $(\"#ppp_pwd\").val();\r\n\r\n    if ($(\"#srvAddrName\").val() == \"\") {\r\n        $.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n        $(\"#srvAddrName\").focus().select();\r\n        return false;\r\n    }\r\n    wan_pptp_listarg.serverIpOrName = $(\"#srvAddrName\").val();\r\n\r\n    if ($(\"#ipType_stc\").prop(\"checked\") == 1) {\r\n        var temp_ip = $(\"#isp_ip_stc\").tpAddress('val');\r\n        var temp_mask = $(\"#isp_net_mask_stc\").tpAddress('val');\r\n        var temp_gateway = $(\"#isp_gw_stc\").tpAddress('val');\r\n\r\n        wan_pptp_listarg.addressingType = \"Static\";\r\n\r\n        if ((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip, temp_mask))) {\r\n            wan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n            wan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n        } else {\r\n            return false;\r\n        }\r\n        if ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true))) {\r\n            $.alert(ERR_IP_FORMAT);\r\n            $(\"#isp_gw_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        if ((temp_gateway == \"0.0.0.0\") || (!$.isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask))) {\r\n            $.alert(ERR_GATEWAY_INVAD);\r\n            $(\"#isp_gw_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n\r\n        wan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\r\n        var temp_dnsaddr = $(\"#isp_dns_1_stc\").tpAddress('val');\r\n        var temp_secdnsaddr = $(\"#isp_dns_2_stc\").tpAddress('val');\r\n        var temp_dnsServers = \"\";\r\n\r\n        if ($.ifip(temp_dnsaddr, true)) {\r\n            $.alert(ERR_WAN_DNSADDR_INVAD);\r\n            $(\"#isp_dns_1_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n\r\n        if ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true))) {\r\n            $.alert(ERR_WAN_DNSADDR_INVAD);\r\n            $(\"#isp_dns_1_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n        if ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true))) {\r\n            $.alert(ERR_WAN_SECDNS_INVAD);\r\n            $(\"#isp_dns_2_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n\r\n        temp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n        temp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n        temp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n        wan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\r\n        if ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\") {\r\n            $.alert(ERR_WAN_DA_DNS_EMPTY);\r\n            $(\"#isp_dns_1_stc\").tpAddress('focus');\r\n            return false;\r\n        }\r\n    } else {\r\n        wan_pptp_listarg.addressingType = \"DHCP\";\r\n    }\r\n\r\n    if (($(\"#pptp_mtu\").val() >= 576) && ($(\"#pptp_mtu\").val() <= 1500)) {\r\n        wan_pptp_listarg.maxMRUSize = parseInt($(\"#pptp_mtu\").val(), 10);\r\n    } else {\r\n        $.alert(ERR_WAN_MTU_INVAD);\r\n        $(\"#pptp_mtu\").focus().select();\r\n        return false;\r\n    }\r\n\r\n    if ($(\"#da_connAlwaysOn\").prop(\"checked\") == 1) {\r\n        wan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n    } else {\r\n        if (($(\"#da_idleTime\").val()) && ($.isnum($(\"#da_idleTime\").val()))) {\r\n            wan_pptp_listarg.idleDisconnectTime = parseInt($(\"#da_idleTime\").val(), 10);\r\n        } else {\r\n            $.alert(ERR_IDLETIME_INVAD);\r\n            $(\"#da_idleTime\").focus().select();\r\n            return false;\r\n        }\r\n\r\n        if ($(\"#da_connOnDemand\").prop(\"checked\") == 1)\r\n            wan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n        else if ($(\"#da_connManual\").prop(\"checked\") == 1)\r\n            wan_pptp_listarg.connectionTrigger = \"Manual\";\r\n    }\r\n    if (false == addMacCloneAttrs(wan_pptp_listarg)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction addBpaAttrs()\r\n{\r\n\t/*\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t\t}\r\n\t}\r\n\t*/\r\n\t\r\n\t//if(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\tif(($(\"#bpa_mtu\").val() >= 576) && ($(\"#bpa_mtu\").val() <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($(\"#bpa_mtu\").val(), 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\t//element = $.id(\"bpa_mtu\");\r\n\t\telement = $(\"#bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t//if ($.id(\"bpa_username\").value == \"\")\r\n\tif ($(\"#bpa_username\").val() == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\t///element = $.id(\"bpa_username\");\r\n\t\telement = $(\"#bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t//wan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\twan_bpa_listarg.X_TP_BpaUsername = $(\"#bpa_username\").val();\r\n\t//if ($.id(\"bpa_pwd\").value == \"\")\r\n\tif ($(\"#bpa_pwd\").val() == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\t//element = $.id(\"bpa_pwd\");\r\n\t\telement = $(\"#bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t//wan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\twan_bpa_listarg.X_TP_BpaPassword = $(\"#bpa_pwd\").val();\r\n\t\r\n\t//if ($.id(\"bpa_authserver\").value == \"\")\r\n\tif ($(\"#bpa_authserver\").val() == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\t//element = $.id(\"bpa_authserver\");\r\n\t\telement = $(\"#bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t//wan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $(\"#bpa_authserver\").val();\r\n\t//if ($.id(\"bpa_authdomain\").value == \"\")\r\n\tif ($(\"#bpa_authdomain\").val() == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\t//element = $.id(\"bpa_authdomain\");\r\n\t\telement = $(\"#bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t//wan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $(\"#bpa_authdomain\").val();\r\n\t\r\n\t//if ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\tif ($(\"#bpa_connAlwaysOn\").prop(\"data-checked\") == true)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//if (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\t//wan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($(\"#bpa_idleTime\").val(), 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\t//element = $.id(\"bpa_idleTime\");\r\n\t\t\telement = $(\"#bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\t//if ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\tif ($(\"#bpa_connOnDemand\").prop(\"checked\") == 1)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\t}\r\n\t\t//else if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\telse if ($(\"#bpa_connManual\").prop(\"checked\") == 1)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t\t}else{\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction doSave(val) {\r\n    var ret;\r\n    var type = $(\"#link_type\").data(\"value\");\r\n    if (type == \"staticIp\") {\r\n        if (!(ret = addStaticIpAttrs())) return;\r\n    } else if (type == \"dynamicIp\") {\r\n        if (!(ret = addDynIpAttrs())) return;\r\n    } else if (type == \"pppoe\") {\r\n        if (!(ret = addPPPoEAttrs())) return;\r\n    } else if (type == \"l2tp\") {\r\n        if (!(ret = addL2tpAttrs())) return;\r\n    } else if (type == \"pptp\") {\r\n        if (!(ret = addPptpAttrs())) return;\r\n    } else if (type == \"bpa\") {\r\n        if (!(ret = addBpaAttrs())) return;\r\n    }\r\n\r\n    var ethEnable = $(\"#ethWan_en\").prop(\"data-checked\") ? 1 : 0;\r\n    $.addLoading($(\"#saveBtn\"));\r\n    if (ethEnable == 0)\r\n        $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n    else if (ethEnable == 1)\r\n        $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n    if (type == \"staticIp\") {\r\n        if (dynEnable == 1)\r\n            $.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n        if (PPPoEEnable == 1)\r\n            $.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n        if (l2tpEnable == 1)\r\n            $.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n        if (pptpEnable == 1)\r\n            $.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n        if ((ethEnable == 0) && (staticEnable == 1))\r\n            $.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\t\t\r\n        if (!$.exe()) {\r\n            wan_iplistarg_sta.enable = 1;\r\n            $.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n            $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\"]);\r\n        } else\r\n            return;\r\n    } else if (type == \"dynamicIp\") {\r\n        if (staticEnable == 1)\r\n            $.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n        if (PPPoEEnable == 1)\r\n            $.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n        if (l2tpEnable == 1)\r\n            $.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n        if (pptpEnable == 1)\r\n            $.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n        if ((ethEnable == 0) && (dynEnable == 1))\r\n            $.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\t\t\r\n        if (!$.exe()) {\r\n            wan_iplistarg_dyn.enable = 1;\r\n\r\n            $.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n            $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\"]);\r\n        } else\r\n            return;\r\n    } else if (type == \"pppoe\") {\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (staticEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (dynEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//staic always on for igmp with ip 169.254.x.x\r\n            //if (staticEnable == 1)\r\n            //    $.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n            if (dynEnable == 1)\r\n                $.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n        }\r\n        if (l2tpEnable == 1)\r\n            $.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n        if (pptpEnable == 1)\r\n            $.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n        if ((ethEnable == 0) && (PPPoEEnable == 1))\r\n            $.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\t\t\r\n        if (!$.exe()) {\r\n            wan_pppoelistarg.enable = 1;\r\n\r\n            $.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\r\n            $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\"]);\r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        } else\r\n            return;\r\n    } else if (type == \"l2tp\") {\r\n        if (staticEnable == 1)\r\n            $.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n        if (dynEnable == 1)\r\n            $.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n        if (PPPoEEnable == 1)\r\n            $.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n        if (pptpEnable == 1)\r\n            $.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n        if ((ethEnable == 0) && (l2tpEnable == 1))\r\n            $.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n        \r\n\t\tif (!$.exe()) {\r\n            wan_l2tp_listarg.enable = 1;\r\n\r\n            $.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n            $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\"]);\r\n        } else {\r\n            return;\r\n        }\r\n    } else if (type == \"pptp\") {\r\n        if (staticEnable == 1)\r\n            $.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n        if (dynEnable == 1)\r\n            $.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n        if (PPPoEEnable == 1)\r\n            $.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n        if (l2tpEnable == 1)\r\n            $.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n        if ((ethEnable == 0) && (pptpEnable == 1))\r\n            $.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\t\t\r\n        if (!$.exe()) {\r\n            wan_pptp_listarg.enable = 1;\r\n\r\n            $.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n            $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\"]);\r\n        } else {\r\n            return;\r\n        }\r\n    }else if (type == \"bpa\") {\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\t\t\r\n        if (!$.exe()) {\r\n            wan_bpa_listarg.enable = 1;\r\n\r\n            $.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n            $.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\"]);\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    $.exe(function(err) {\r\n        if (!err) {\r\n            $.removeLoading();\r\n            if (val == 0) {\r\n                if (type == \"staticIp\") {\r\n                    var ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n                    if (!$.exe()) {\r\n                        l3ForwardingObj.__ifAliasName = ipConn.name;\r\n                    } else\r\n                        return;\r\n                } else if (type == \"dynamicIp\") {\r\n                    var ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n                    if (!$.exe()) {\r\n                        l3ForwardingObj.__ifAliasName = ipConn.name;\r\n                    } else\r\n                        return;\r\n                } else if (type == \"pppoe\") {\r\n                    var pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n                    if (!$.exe()) {\r\n                        l3ForwardingObj.__ifAliasName = pppConn.name;\r\n                    } else\r\n                        return;\r\n                } else if (type == \"l2tp\") {\r\n                    var l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n                    if (!$.exe()) {\r\n                        l3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n                    } else\r\n                        return;\r\n                } else if (type == \"pptp\") {\r\n                    var pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n                    if (!$.exe()) {\r\n                        l3ForwardingObj.__ifAliasName = pptpConn.name;\r\n                    } else\r\n                        return;\r\n                } else if (type == \"bpa\") {\r\n                    var ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n                    if (!$.exe()) {\r\n                        l3ForwardingObj.__ifAliasName = ipConn.name;\r\n                    } else\r\n                        return;\r\n                }\r\n\r\n                l3ForwardingObj.__ifName = \"\";\r\n                l3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n                if (INCLUDE_IPV6) {\r\n                    l3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n                    l3Ip6ForwardingObj.__ifName = \"\";\r\n                    l3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\r\n                    ip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1 ) ? 1 : 0;\r\n                    ip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n                }\r\n\r\n                if (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n                    $.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\r\n                if (INCLUDE_IPV6 && ip6Enable == 1)\r\n                    $.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n                if (!$.exe()) $.reload();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction doDhcp6Renew() {}\r\n\r\nfunction doDhcp6Release() {}\r\n\r\nfunction doDhcpRenew() {\r\n    $(\"#renew\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n    $(\"#DynIpConnecting\").removeClass(\"nd\");\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n}\r\n\r\nfunction doDhcpRelease() {\r\n    $(\"#release\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n}\r\n\r\nfunction doConn() {\r\n    doSave(1);\r\n    $(\"#conn\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n    $(\"#PPPoEConnecting\").removeClass(\"nd\");\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n}\r\n\r\nfunction doDisConn() {\r\n    $(\"#disConn\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n    if (!$.exe()) {\r\n        doSave(1);\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n    }\r\n}\r\n\r\nfunction doConn2() {\r\n    doSave(1);\r\n    $(\"#conn2\").prop(\"disabled\", true);\r\n    if ($(\"#link_type\").data(\"value\") == \"l2tp\") {\r\n        $.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n    } else if ($(\"#link_type\").data(\"value\") == \"pptp\") {\r\n        $.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n    }\r\n    $(\"#L2tpPptpConnecting\").removeClass(\"nd\");\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 3000);\r\n}\r\n\r\nfunction doDisConn2() {\r\n    $(\"#disConn2\").prop(\"disabled\", true);\r\n    if ($(\"#link_type\").data(\"value\") == \"l2tp\") {\r\n        $.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n    } else if ($(\"#link_type\").data(\"value\") == \"pptp\") {\r\n        $.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n    }\r\n    if (!$.exe()) {\r\n        doSave(1);\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n    }\r\n}\r\n\r\nfunction checkPwd() {\r\n    if ($(\"#pwd2\").tpPassword('val') != $(\"#pwd\").tpPassword('val')) {\r\n        $.alert(ERR_PWD_INVAD);\r\n        $(\"#pwd\").tpPassword('focus');\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction showDyn() {\r\n    $(\"#l2tp_pptp_dyn_ip_elem\").removeClass(\"nd\");\r\n    $(\"#l2tp_pptp_stc_ip_elem\").addClass(\"nd\");\r\n}\r\n\r\nfunction showStc() {\r\n    $(\"#l2tp_pptp_stc_ip_elem\").removeClass(\"nd\");\r\n    $(\"#l2tp_pptp_dyn_ip_elem\").addClass(\"nd\");\r\n}\r\n\r\n\r\nfunction showSecondConnect(type) {\r\n    if (type == \"disable\") {\r\n        $(\"#secondStaIp\").hide('fast');\r\n        $(\"#secondDynIp\").hide('fast');\r\n    } else if (type == \"dynamic\") {\r\n        $(\"#secondStaIp\").hide('fast');\r\n        $(\"#secondDynIp\").show('fast');\r\n    } else if (type == \"static\") {\r\n        $(\"#secondStaIp\").show('fast');\r\n        $(\"#secondDynIp\").hide('fast');\r\n       // $(\"#secondStaIpAddress\").tpAddress('val', wan_iplist_sta.externalIPAddress);\r\n       //$(\"#secondStaIpMask\").tpAddress('val', wan_iplist_sta.subnetMask);\r\n    }\r\n}\r\n\r\nfunction doDualAccessRenew() {\r\n    $(\"#secondDynIpRenew\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_DUAL_ACCESS_RENEW, wan_pppoelist.__stack);\r\n    $(\"#secondDynIpConnecting\").removeClass(\"nd\");\r\n    /*$.addLoading($(\"#secondDynIpRelease\"));*/\r\n    if (!$.exe()) {\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n    }\r\n}\r\n\r\nfunction doDualAccessRelease() {\r\n    $(\"#secondDynIpRelease\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_DUAL_ACCESS_RELEASE, wan_pppoelist.__stack);\r\n    /*$.addLoading($(\"#secondDynIpRelease\"));*/\r\n    if (!$.exe()) {\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n    }\r\n}\r\n$(\"#link_type\").click(function() {\r\n    clearTimeout(connStatusTimeout);\r\n    showLnkType($(\"#link_type\").data(\"value\"));\r\n});\r\n$(\"#externIp_en\").click(function() {\r\n    PPPoEShowDiv(2);\r\n});\r\n$(\"#dns_en\").click(function() {\r\n    PPPoEShowDiv(3);\r\n});\r\n\r\nvar pcMacAddr;\r\n\r\nfunction addMacCloneAttrs(wanArg) {\r\n    var type = $(\"#link_type\").data(\"value\");\r\n    var macAddr;\r\n    if ($(\"#dftMac\").prop(\"checked\")) {\r\n        wanArg.MACAddressOverride = 0;\r\n        return true;\r\n    } else if ($(\"#pcMac\").prop(\"checked\")) {\r\n        macAddr = pcMacAddr;\r\n    } else if ($(\"#customMac\").prop(\"checked\")) {\r\n        macAddr = $(\"#customMacAddr\").tpAddress('val');\r\n        if ($.mac(macAddr)) {\r\n            $(\"#customMacAddr\").tpAddress('focus');\r\n            return false;\r\n        }\r\n    }\r\n    wanArg.MACAddressOverride = 1;\r\n    if (type == \"l2tp\" || type == \"pptp\") {\r\n        wanArg.clonedMACAddress = macAddr.toUpperCase();\r\n    } else {\r\n        wanArg.X_TP_ClonedMACAddress = macAddr.toUpperCase();\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction initMacClone(wanConn) {\r\n\t$.act(ACT_CGI, \"/cgi/info\");\r\n\t//$.act(ACT_CGI, \"../xml/info.txt\");\r\n\t//var clientMac = \"74:D4:35:A1:0C:CB\";\r\n    if ($.exe()) return false;\r\n    pcMacAddr = clientMac;\r\n\r\n    $('#computerMacAddr').tpAddress('val', pcMacAddr);\r\n\r\n    var type = $(\"#link_type\").data(\"value\");\r\n    if (wanConn.MACAddressOverride == 1) {\r\n        if (wanConn.X_TP_ClonedMACAddress == pcMacAddr || wanConn.clonedMACAddress == pcMacAddr) {\r\n            $(\"#pcMac\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n            $(\"#customMac\").prop(\"checked\", false).data(\"tpRadio\").refresh();\r\n            $(\"#dftMac\").prop(\"checked\", false).data(\"tpRadio\").refresh();\r\n            $(\"#customMacAddr\").tpAddress('val', '');\r\n        } else {\r\n            $(\"#customMac\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n            if (type == \"l2tp\" || type == \"pptp\") {\r\n                $(\"#customMacAddr\").tpAddress('val', wanConn.clonedMACAddress);\r\n            } else {\r\n                $(\"#customMacAddr\").tpAddress('val', wanConn.X_TP_ClonedMACAddress);\r\n            }\r\n\r\n            $(\"#pcMac\").prop(\"checked\", false).data(\"tpRadio\").refresh();\r\n            $(\"#dftMac\").prop(\"checked\", false).data(\"tpRadio\").refresh();\r\n        }\r\n    } else {\r\n        $(\"#dftMac\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n        $(\"#pcMac\").prop(\"checked\", false).data(\"tpRadio\").refresh();\r\n        $(\"#customMac\").prop(\"checked\", false).data(\"tpRadio\").refresh();\r\n        $(\"#customMacAddr\").tpAddress('val', '');\r\n    }\r\n\r\n}\r\n\r\nif (INCLUDE_3G4G_BACKUP) {\r\n\t$('#lteBackup_en').on('click.ethWan', function(e) {\r\n\t\t$.addLoading($(this));\r\n\t\t$.act(ACT_SET, SYS_MODE, null, null, [\"lteBackupEnable=1\"]);\r\n\t\t$.exe(function(ret) {\r\n\t\t\tif (!ret) {\r\n\t\t\t} else {\r\n\t\t\t\tif (sysMode.lteBackupEnable == 1) {\r\n\t\t\t\t\t$('#lteBackup_en').addClass(\"selected\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$('#lteBackup_dis').addClass(\"selected\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.removeLoading();\r\n\t\t});\r\n\t});\r\n\r\n\t$('#lteBackup_dis').on('click.ethWan', function(e) {\r\n\t\t$.addLoading($(this));\r\n\t\t$.act(ACT_SET, SYS_MODE, null, null, [\"lteBackupEnable=0\"]);\r\n\t\t$.exe(function(ret) {\r\n\t\t\tif (!ret) {\r\n\t\t\t} else {\r\n\t\t\t\tif (sysMode.lteBackupEnable == 1) {\r\n\t\t\t\t\t$('#lteBackup_en').addClass(\"selected\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$('#lteBackup_dis').addClass(\"selected\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.removeLoading();\r\n\t\t});\r\n\r\n\t});\r\n}\r\n\r\n/*=====================UI 2.0====================================*/\r\n$('#divMacClone').on('click', 'input[type=radio]', function(e) {\r\n    var selectedId = this.id;\r\n    switch (selectedId) {\r\n        case 'dftMac':\r\n            $('#computerMacAddr').tpAddress('hide');\r\n            $('#customMacAddr').tpAddress('hide');\r\n            break;\r\n        case 'pcMac':\r\n            $('#customMacAddr').tpAddress('hide');\r\n            $('#computerMacAddr').tpAddress('show');\r\n            break;\r\n        case 'customMac':\r\n            $('#computerMacAddr').tpAddress('hide');\r\n            $('#customMacAddr').tpAddress('show');\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n})\r\n\r\n$('#connAlwaysOn').click(function(e) {\r\n    $('#maxIdle-container').addClass('nd');\r\n});\r\n$('#connOnDemand').click(function(e) {\r\n    $('#maxIdle-container').removeClass('nd');\r\n});\r\n$('#connManual').click(function(e) {\r\n    $('#maxIdle-container').removeClass('nd');\r\n});\r\n\r\n$('#da_connAlwaysOn').click(function(e) {\r\n    $('#da_maxIdle-container').addClass('nd');\r\n});\r\n$('#da_connOnDemand').click(function(e) {\r\n    $('#da_maxIdle-container').removeClass('nd');\r\n});\r\n$('#da_connManual').click(function(e) {\r\n    $('#da_maxIdle-container').removeClass('nd');\r\n});\r\n\r\n$('#bpa_connAlwaysOn').click(function(e) {\r\n    $('#bpa_maxIdle-container').addClass('nd');\r\n});\r\n$('#bpa_connOnDemand').click(function(e) {\r\n    $('#bpa_maxIdle-container').removeClass('nd');\r\n});\r\n$('#bpa_connManual').click(function(e) {\r\n    $('#bpa_maxIdle-container').removeClass('nd');\r\n});\r\n</script>\r\n<h3 id=\"et\">WAN Interface</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n\t\t<div class=\"button-group-container nd\" id=\"lteBackup\">\r\n\t\t\t<b class=\"T_lteBackup\">3G/4G Backup</b>\r\n\t\t\t<ul><li><button id=\"lteBackup_en\" class=\"fst\" value=\"on\">On</button></li>\r\n\t\t\t\t<li><button id=\"lteBackup_dis\" class=\"lst\" value=\"off\">Off</button></li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t\t<div class=\"part-separate-m nd\" id=\"lteBackup_space\">\r\n\t\t</div>\r\n        <div id=\"ethEnable\"><b></b>\r\n            <input type=\"checkbox\" id=\"ethWan_en\" checked=\"checked\" />\r\n            <label id=\"t_en\">Enable EWAN connection</label>\r\n        </div>\r\n        <b class=\"T_conntype\">Connetion Type:</b>\r\n        <select id=\"link_type\" class=\"xl\">\r\n            <option class=\"T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\">Dynamic IP</option>\r\n            <option class=\"T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n            <option id=\"pppoe\" value=\"pppoe\">PPPoE</option>\r\n        </select>\r\n\r\n        <div id=\"dyn_ip_elem_basic\">\r\n            <div id=\"dyn_ipx_check4\" class=\"nd\">\r\n            <div class=\"IPv6 nd\"><b>IPv4:</b>\r\n                <input type=\"checkbox\" id=\"dyn_ip4_elem_enable\" />\r\n                <label class=\"T_enable\"></label>\r\n            </div>\r\n            </div>\r\n            <div id=\"dyn_ip4_elem_basic\">\r\n                <div class=\"pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_ipaddr\">IP Address:</label>\r\n                    <span class=\"text\" id=\"dyn_ip\">0.0.0.0</span>\r\n                </div>\r\n                <div class=\"pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_netmask\">Subnet Mask:</label>\r\n                    <span class=\"text\" id=\"dyn_mask\">0.0.0.0</span>\r\n                </div>\r\n                <div class=\"pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_defgw\">Default Gateway:</label>\r\n                    <span class=\"text\" id=\"dyn_gw\">0.0.0.0</span>\r\n                </div>\r\n                <div class=\"part-separate-m\">\r\n                    <div class=\"inline\" style=\"margin-right:10px\">\r\n                        <button type=\"submit\" class=\"blue T_renew\" id=\"renew\" value=\"Renew\" disabled=\"disabled\" onclick=\"doDhcpRenew()\">Renew</button>\r\n                    </div>\r\n                    <div class=\"inline\">\r\n                        <button type=\"submit\" class=\"blue T_release\" id=\"release\" value=\"Release\" disabled=\"disabled\" onclick=\"doDhcpRelease()\">Release</button>\r\n                    </div>\r\n                    <span id=\"DynIpConnecting\" class=\"nd\">\r\n                        <span class=\"T_connecting\">Connecting</span>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div class=\"IPv6 nd part-separate-m\">\r\n\t\t\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n                <b>IPv6:</b>\r\n                <input type=\"checkbox\" id=\"dyn_ip6_elem_enable\" />\r\n                <label class=\"T_enable\"></label>\r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n                <div class=\"IPv6 nd pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_ip6addr\">IPv6 Address:</label>\r\n                    <span class=\"text\" id=\"dyn_ip6_addr\">::</span>\r\n                </div>\r\n                <div class=\"IPv6 nd pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_plen\">Prefix Length:</label>\r\n                    <span class=\"text\" id=\"dyn_prefix_len\">0</span>\r\n                </div>\r\n                <div class=\"IPv6 nd pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_ip6gw\">IPv6 Default Gateway:</label>\r\n                    <span class=\"text\" id=\"dyn_ip6_gw\">::</span>\r\n                </div>\r\n                <div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n                    <b class=\"T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n                    <select id=\"dyn_ip6addr_type\" class=\"l\">\r\n                        <option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n                        <option value=\"autoip\">SLAAC</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"ip_elem_basic\" class=\"nd\">\r\n\t\t\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n            <div class=\"IPv6 nd\"><b>IPv4:</b>\r\n                <input type=\"checkbox\" id=\"stc_ip4_elem_enable\" />\r\n                <label class=\"T_enable\"></label>\r\n            </div>\r\n            </div>\r\n            <div id=\"stc_ip4_elem_basic\">\r\n                <div><b class=\"T_ipaddr\">IP Address:</b>\r\n                    <input type=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"xl ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_netmask\">Subnet Mask:</b>\r\n                    <input type=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"xl ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_defgw\">Default Gateway:</b>\r\n                    <input type=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"xl ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_dns\">DNS Server:</b>\r\n                    <input type=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"xl ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_secdns\">Secondary DNS server:</b>\r\n                    <input type=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"xl ip-address\" />\r\n                    <span class=\"T_optional\">(Optional)</span>\r\n                </div>\r\n            </div>\r\n            <div id=\"stc_ipx_check6\" class=\"nd\">\r\n            <div class=\"IPv6 nd\"><b>IPv6:</b>\r\n                <input type=\"checkbox\" id=\"stc_ip6_elem_enable\" />\r\n                <label class=\"T_enable\"></label>\r\n            </div>\r\n            </div>\r\n            <div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n                <div class=\"IPv6 nd\"><b class=\"T_ip6addr\">IPv6 Address:</b>\r\n                    <input type=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" class=\"xl\" />\r\n                </div>\r\n                <div class=\"IPv6 nd\"><b class=\"T_plen\">Prefix Length:</b>\r\n                    <input type=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" class=\"xl\" />\r\n                </div>\r\n                <div class=\"IPv6 nd\"><b class=\"T_ip6gw\">IPv6 Default Gateway:</b>\r\n                    <input type=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" class=\"xl\" />\r\n                </div>\r\n                <div class=\"IPv6 nd\"><b class=\"T_dns\">Primary IPv6 DNS:</b>\r\n                    <input type=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" class=\"xl\" />\r\n                </div>\r\n                <div class=\"IPv6 nd\"><b class=\"T_secdns\">Secondary IPv6 DNS:</b>\r\n                    <input type=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" class=\"xl\" />\r\n                    <span class=\"T_optional\">(Optional)</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"pppoe_elem_basic\" class=\"nd\">\r\n            <div><b class=\"T_pppusr\">PPP Username:</b>\r\n                <input type=\"text\" size=\"15\" id=\"username\" maxlength=\"255\" class=\"xl\" />\r\n            </div>\r\n            <div><b class=\"T_ppppwd\">PPP Password:</b>\r\n                <input type=\"password\" size=\"15\" id=\"pwd\" maxlength=\"255\" class=\"xl\" />\r\n            </div>\r\n            <div><b class=\"T_cfmpwd\">Confirm Password:</b>\r\n                <input type=\"password\" size=\"15\" id=\"pwd2\" maxlength=\"255\" onchange=\"checkPwd();\" class=\"xl\" />\r\n            </div>\r\n            <div class=\"nd\"><b id=\"t_speDial\">Special Dial:</b>\r\n                <select id=\"speDail\" onchange=\"\">\r\n                    <option id=\"dail0\" value=0 selected=\"selected\">Normal dial mode</option>\r\n                    <option id=\"dail1\" value=1>Special dial mode 1</option>\r\n                    <option id=\"dail2\" value=2>Special dial mode 2</option>\r\n                    <option id=\"dail3\" value=3>Special dial mode 3</option>\r\n                    <option id=\"dail4\" value=4>Special dial mode 4</option>\r\n                    <option id=\"dail5\" value=5>Special dial mode 5</option>\r\n                    <option id=\"dail6\" value=6>Special dial mode 6</option>\r\n                    <option id=\"dail7\" value=7>Special dial mode 7</option>\r\n                </select>\r\n            </div>\r\n            <div id=\"div_secConn\" class=\"nd\">\r\n                <div><b id=\"t_secondConn\">Secondary Connection:</b>\r\n                    <input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect('disable')\" checked />\r\n                    <label>Disabled</label>\r\n                </div>\r\n                <div><b>&nbsp;</b>\r\n                    <input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" />\r\n                    <label>Dynamic IP</label>\r\n                </div>\r\n                <div><b>&nbsp;</b>\r\n                    <input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" />\r\n                    <label>Static IP</label>\r\n                </div>\r\n                <div id=\"secondDynIp\" class=\"nd\">\r\n                    <div class=\"pure-control-group cfg-line\">\r\n                        <label class=\"label-title T_ipaddr\">IP Address:</label>\r\n                        <span class=\"text\" id=\"secondDynIpAddress\">0.0.0.0</span>\r\n                    </div>\r\n                    <div class=\"pure-control-group cfg-line\">\r\n                        <label class=\"label-title T_netmask\">Subnet Mask:</label>\r\n                        <span class=\"text\" id=\"secondDynIpMask\">0.0.0.0</span>\r\n                    </div>\r\n                    <div class=\"inline\" style=\"margin-right:10px\">\r\n                        <button type=\"submit\" class=\"blue T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled=\"disabled\" onclick=\"doDualAccessRenew()\">Renew</button>\r\n                    </div>\r\n                    <div class=\"inline\">\r\n                        <button type=\"submit\" class=\"blue T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled=\"disabled\" onclick=\"doDualAccessRelease()\">Release</button>\r\n                    </div>\r\n                    <span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;\r\n                        <span class=\"T_connecting\">Connecting</span>\r\n                    </span>\r\n                </div>\r\n                <div id=\"secondStaIp\" class=\"nd\">\r\n                    <div><b class=\"T_ipaddr\">IP Address:</b>\r\n                        <input type=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"ip-address\" />\r\n                    </div>\r\n                    <div><b class=\"T_netmask\">Subnet Mask:</b>\r\n                        <input type=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"ip-address\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div><b class=\"T_connmode\">Connection Mode:</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" />\r\n                <label class=\"T_typeauto\">Always on</label>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" />\r\n                <label class=\"T_typedemand\">Connect on demand</label>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"connManual\" />\r\n                <label class=\"T_typemanual\">Connect manually</label>\r\n            </div>\r\n            <div id='maxIdle-container'>\r\n                <b class=\"T_midle\">Max Idle Time:</b>\r\n                <input type=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" class=\"s\" />\r\n                <div class=\"textbox-tips\">\r\n                    <span class=\"T_minutes\">minutes.</span>\r\n                    <span class=\"T_zmean\">(0 means always active.)</span>\r\n                </div>\r\n            </div>\r\n            <b class=\"T_authtype\">Authentication Method:</b>\r\n            <select id=\"ppp_authpro\" class=\"l\">\r\n                <option id=\"auto_auth\" value=\"AUTO_AUTH\" selected=\"selected\" class='T_c_auto_auth'>AUTO_AUTH</option>\r\n                <option id=\"pap\" value=\"PAP\">PAP</option>\r\n                <option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n                <option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n            </select>\r\n            <div class=\"part-separate-m\">\r\n                <div class=\"inline\" style=\"margin-right:10px\">\r\n                    <button type=\"submit\" class=\"blue T_conn\" id=\"conn\" value=\"Connect\" disabled=\"disabled\" onclick=\"doConn()\">Connect</button>\r\n                </div>\r\n                <div class=\"inline\">\r\n                    <button type=\"submit\" class=\"blue T_disconn\" id=\"disConn\" value=\"Disconnect\" disabled=\"disabled\" onclick=\"doDisConn()\">Disconnect</button>\r\n                </div>\r\n                <span id=\"PPPoEConnecting\" class=\"nd\">\r\n                    <span class=\"T_connecting\">Connecting</span>\r\n                </span>\r\n            </div>\r\n            <div id=\"ppp_ipx_check\" class=\"nd\">\r\n            <div class=\"IPv6 nd part-separate-m\"><b>IPv4:</b>\r\n                <input type=\"checkbox\" id=\"ppp_ip4_elem_enable\" />\r\n                <label class=\"T_enable\"></label>\r\n            </div>\r\n            <div class=\"IPv6 nd\"><b>IPv6:</b>\r\n                <input type=\"checkbox\" id=\"ppp_ip6_elem_enable\" />\r\n                <label class=\"T_enable\"></label>\r\n            </div>\r\n            </div>\r\n            <div id=\"ipv6_cfg_ppp_slaac\">\r\n                <div class=\"IPv6 nd\"><b class=\"T_ip6addrconf\">IPv6 Autoconfiguration Type:</b>\r\n                    <select id=\"ppp_ip6addr_type\">\r\n                        <option value=\"dhcp\">DHCPv6</option>\r\n                        <option value=\"autoip\">SLAAC</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n            <div><b class=\"T_username\">Username:</b>\r\n                <input type=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"255\" class=\"xl\" />\r\n            </div>\r\n            <div><b class=\"T_passwd\">Password:</b>\r\n                <input type=\"password\" size=\"15\" id=\"ppp_pwd\" maxlength=\"255\" class=\"xl\" />\r\n            </div>\r\n\r\n            <div class=\"part-separate-m\">\r\n                <div class=\"inline\" style=\"margin-right:10px\">\r\n                    <button type=\"submit\" class=\"blue T_conn\" id=\"conn2\" value=\"Connect\" disabled=\"disabled\" onclick=\"doConn2()\">Connect</button>\r\n                    <span id=\"test2\"></span>\r\n                </div>\r\n                <div class=\"inline\">\r\n                    <button type=\"submit\" class=\"blue T_disconn\" id=\"disConn2\" value=\"Disconnect\" disabled=\"disabled\" onclick=\"doDisConn2()\">Disconnect</button>\r\n                </div>\r\n                <span id=\"L2tpPptpConnecting\" class=\"nd\">&nbsp;&nbsp;\r\n                    <span class=\"T_connecting\">Connecting</span>\r\n                </span>\r\n            </div>\r\n\r\n            <div><b id=\"t_addrType\">Addressing Type:</b>\r\n                <input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked=\"checked\" />\r\n                <label class=\"T_dynip\">Dynamic IP</label>\r\n                <input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" />\r\n                <label class=\"T_staip\">Static IP</label>\r\n            </div>\r\n\r\n            <div><b class=\"T_srvIpName\">Server IP Address/Name:</b>\r\n                <input type=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" />\r\n            </div>\r\n            <div id=\"l2tp_pptp_dyn_ip_elem\">\r\n                <div class=\"pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_ipaddr\" id=\"isp_ip_addr\">IP Address:</label>\r\n                    <span class=\"text\" id=\"isp_ip_dyn\">0.0.0.0</span>\r\n                </div>\r\n                <div class=\"pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</label>\r\n                    <span class=\"text\" id=\"isp_net_mask_dyn\">0.0.0.0</span>\r\n                </div>\r\n                <div class=\"pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_gateway\" id=\"isp_gateway\">Gateway:</label>\r\n                    <span class=\"text\" id=\"isp_gw_dyn\">0.0.0.0</span>\r\n                </div>\r\n                <div class=\"pure-control-group cfg-line\">\r\n                    <label class=\"label-title T_dns\" id=\"isp_dns\">DNS:</label>\r\n                    <span class=\"text\" id=\"isp_dns_1_dyn\">0.0.0.0</span>\r\n                    <span class=\"text\" id=\"isp_dns_2_dyn\">0.0.0.0</span>\r\n                </div>\r\n            </div>\r\n            <div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n                <div><b class=\"T_ipaddr\">IP Address:</b>\r\n                    <input type=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_netmask\">Subnet Mask:</b>\r\n                    <input type=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_gateway\">Gateway:</b>\r\n                    <input type=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_dns\">DNS Server:</b>\r\n                    <input type=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"ip-address\" />\r\n                </div>\r\n                <div><b class=\"T_secdns\">Secondary DNS:</b>\r\n                    <input type=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" class=\"ip-address\" />\r\n                    <span class=\"T_optional\">(Optional)</span>\r\n                </div>\r\n            </div>\r\n            <p class=\"br\"></p>\r\n            <div class=\"pure-control-group cfg-line\">\r\n                <label class=\"label-title T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</label>\r\n                <span class=\"text\" id=\"internet_ip\">0.0.0.0</span>\r\n            </div>\r\n            <div class=\"pure-control-group cfg-line\">\r\n                <label class=\"label-title T_dns\" id=\"internet_dns\">Internet DNS:</label>\r\n                <span class=\"text\" id=\"internet_dns_1\">0.0.0.0</span>\r\n                <span class=\"text\" id=\"internet_dns_2\">0.0.0.0</span>\r\n            </div>\r\n            <p class=\"br\"></p>\r\n            <div>\r\n                <div id=\"l2tp_mtu_msg\">\r\n                    <b class=\"T_mtuSize\">MTU Size:</b>\r\n                    <input type=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\" />\r\n                    <div class=\"textbox-tips\">\r\n                        <span class=\"T_mtu1460\">1460 as default</span>,\r\n                        <span class=\"T_nochg\">do not change unless necessary</span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"pptp_mtu_msg\">\r\n                    <b class=\"T_mtuSize\">MTU Size:</b>\r\n                    <input type=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\" />\r\n                    <div class=\"textbox-tips\">\r\n                        <span class=\"T_mtu1420\">1420 as default</span>,\r\n                        <span class=\"T_nochg\">do not change unless necessary</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div><b class=\"T_connmode\">Connection Mode:</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" />\r\n                <label class=\"T_typeauto\">Always on</label>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" />\r\n                <label class=\"T_typedemand\">Connect on demand</label>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"da_connManual\" />\r\n                <label class=\"T_typemanual\">Connect manually</label>\r\n            </div>\r\n            <div id='da_maxIdle-container'>\r\n                <b class=\"T_midle\">Max Idle Time:</b>\r\n                <input type=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" class=\"s\" />\r\n                <div class=\"textbox-tips\">\r\n                    <span class=\"T_minutes\">minutes.</span>\r\n                    <span class=\"T_zmean\">(0 means always active.)</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\t\t<div id=\"bpa_elem_basic\" class=\"nd\">\r\n            <div>\r\n\t\t\t\t<b class=\"T_username\">Username:</b>\r\n                <input type=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"24\" class=\"xl\" />\r\n            </div>\r\n            <div>\r\n\t\t\t\t<b class=\"T_passwd\">Password:</b>\r\n                <input type=\"password\" size=\"15\" id=\"bpa_pwd\" maxlength=\"24\" class=\"xl\" />\r\n            </div>\r\n\t\t\t<div>\r\n\t\t\t\t<b class=\"T_bpa_authServer\">Auth Server:</b>\r\n                <input type=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"255\" class=\"xl\" />\r\n            </div>\r\n\t\t\t<div>\r\n\t\t\t\t<b class=\"T_bpa_authDomain\">Auth Domain:</b>\r\n                <input type=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"255\" class=\"xl\" />\r\n            </div>\r\n\t\t\t <p class=\"br\"></p>\r\n            <div>\r\n                <div id=\"bpa_mtu_msg\">\r\n                    <b class=\"T_mtuSize\">MTU Size:</b>\r\n                    <input type=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\" />\r\n                    <div class=\"textbox-tips\">\r\n                        <span class=\"T_mtu1500\">1500 as default</span>,\r\n                        <span class=\"T_nochg\">do not change unless necessary</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div><b class=\"T_connmode\">Connection Mode:</b>\r\n                <input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" />\r\n                <label class=\"T_typeauto\">Always on</label>\r\n                <input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" />\r\n                <label class=\"T_typedemand\">Connect on demand</label>\r\n                <input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\" />\r\n                <label class=\"T_typemanual\">Connect manually</label>\r\n            </div>\r\n            <div id='bpa_maxIdle-container'>\r\n                <b class=\"T_midle\">Max Idle Time:</b>\r\n                <input type=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" class=\"s\" />\r\n                <div class=\"textbox-tips\">\r\n                    <span class=\"T_minutes\">minutes.</span>\r\n                    <span class=\"T_zmean\">(0 means always active.)</span>\r\n                </div>\r\n            </div>\r\n\t\t</div>\r\n        <div class=\"advanced-block nd\" type=\"button\" id=\"dynipClick\" onclick=\"DynIPClick(this)\">\r\n            <span class=\"advanced-icon advanced-hide-icon\"></span>\r\n            <span class=\"T_adv\">Advanced</span>\r\n        </div>\r\n\r\n        <div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n            <div><b class=\"T_mtuSize\">MTU Size:</b>\r\n                <input type=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\" />\r\n                <div class=\"textbox-tips\">\r\n                    <span class=\"T_mtu1500\">1500 as default</span>,\r\n                    <span class=\"T_nochg\">do not change unless necessary</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"dyn_ip4_elem_adv\">\r\n                <div class=\"nd\"><b class=\"T_ennat\">NAT:</b>\r\n                    <input type=\"checkbox\" id=\"dyn_enable_nat\" onclick=\"natClick('dynamic');\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div  class=\"nd\"><b class=\"T_enfullcone\">Enable Fullcone NAT</b>\r\n                    <input type=\"checkbox\" id=\"dyn_enable_fullnat\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"dyn_ip_igmp\"><b class=\"T_enigmp\">Enable IGMP Proxy</b>\r\n                    <input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div><b class=\"T_unicast\">Get IP with Unicast</b>\r\n                    <input type=\"checkbox\" id=\"unicast\" />\r\n                    <label class=\"T_enable\"></label>\r\n                    <span class=\"T_noreq\">(It is usually not required)</span>\r\n                </div>\r\n                <div><b class=\"T_dnsmanual\">Set DNS server manually</b>\r\n                    <input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n                    <div><b class=\"T_dns\">DNS server:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" class=\"ip-address\" />\r\n                    </div>\r\n                    <div><b class=\"T_secdns\">Secondary DNS Server:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" class=\"ip-address\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n                <div id=\"dyn_ip_mld\" class=\"nd\">\r\n                    <b class=\"T_enmld\">MLD Proxy:</b>\r\n                    <input type=\"checkbox\" id=\"dyn_ip_mld_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div><b class=\"T_ip6dnsmanual\">Set IPv6 DNS Server manually</b>\r\n                    <input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n                    <div><b class=\"T_dns\">Primary IPv6 DNS:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" />\r\n                    </div>\r\n                    <div><b class=\"T_secdns\">Secondary IPv6 DNS:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div><b class=\"T_hostname\">Host Name:</b>\r\n                <input type=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"advanced-block nd\" type=\"button\" id=\"ipoeClick\" onclick=\"IPClick(this)\">\r\n            <span class=\"advanced-icon advanced-hide-icon\"></span>\r\n            <span class=\"T_adv\">Advanced</span>\r\n        </div>\r\n\r\n        <div id=\"ip_elem_adv\" class=\"nd\">\r\n            <div><b class=\"T_mtuSize\">MTU Size:</b>\r\n                <input type=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\" />\r\n                <div class=\"textbox-tips\">\r\n                    <span class=\"T_mtu1500\">1500 as default</span>,\r\n                    <span class=\"T_nochg\">do not change unless necessary</span>\r\n                </div>\r\n            </div>\r\n            <div id=\"stc_ip4_elem_adv\">\r\n                <div class=\"nd\"><b class=\"T_ennat\">NAT:</b>\r\n                    <input type=\"checkbox\" id=\"enable_nat\" onclick=\"natClick('static');\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div class=\"nd\"><b class=\"T_enfullcone\">Full-cone NAT:</b>\r\n                    <input type=\"checkbox\" id=\"enable_fullnat\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"ip_igmp\"><b class=\"T_enigmp\">IGMP Proxy:</b>\r\n                    <input type=\"checkbox\" id=\"ip_igmp_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n            </div>\r\n            <div id=\"stc_ip6_elem_adv\">\r\n                <div id=\"ip_mld\" class=\"IPv6 nd\">\r\n                    <b class=\"T_enmld\">MLD Proxy:</b>\r\n                    <input type=\"checkbox\" id=\"ip_mld_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"advanced-block nd\" type=\"button\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\">\r\n            <span class=\"advanced-icon advanced-hide-icon\"></span>\r\n            <span class=\"T_adv\">Advanced</span>\r\n        </div>\r\n\r\n        <div id=\"pppoe_elem_adv\" class=\"nd\">\r\n            <div><b class=\"T_srvname\">Service Name:</b>\r\n                <input type=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />\r\n                <div class=\"textbox-tips\">(\r\n                    <span class=\"T_nochg2\">do not change unless necessary</span>)</div>\r\n            </div>\r\n            <div><b class=\"T_acname\">Server Name:</b>\r\n                <input type=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />\r\n                <div class=\"textbox-tips\">(\r\n                    <span class=\"T_nochg2\">do not change unless necessary</span>)</div>\r\n            </div>\r\n            <div><b class=\"T_mtuSize\">MTU Size:</b>\r\n                <input type=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" />\r\n                <div class=\"textbox-tips\">\r\n                    <span class=\"T_mtu1480\">1480 as default</span>,\r\n                    <span class=\"T_nochg\">do not change unless necessary</span>\r\n                </div>\r\n            </div>\r\n            <div id=\"ppp_ip4_elem_adv\">\r\n                <div class=\"nd\"><b class=\"T_ennat\">NAT:</b>\r\n                    <input type=\"checkbox\" id=\"ppp_enable_nat\" onclick=\"natClick('pppoe');\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div class=\"nd\"><b class=\"T_enfullcone\">Enable Fullcone NAT</b>\r\n                    <input type=\"checkbox\" id=\"ppp_fullnat_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"ppp_igmp\"><b class=\"T_enigmp\">Enable IGMP Proxy</b>\r\n                    <input type=\"checkbox\" id=\"ppp_igmp_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div><b class=\"T_useispaddr\">Use IP address specified by ISP</b>\r\n                    <input type=\"checkbox\" id=\"externIp_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"exIp_tbl\" class=\"nd\"><b class=\"T_ispaddr\">ISP specified IP Address:</b>\r\n                    <input type=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" class=\"ip-address\" />\r\n                </div>\r\n                <div><b class=\"item L T_echo\">Echo request interval:</b>\r\n                    <input type=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" />\r\n                    <div class=\"textbox-tips\">\r\n                        <span class=\"T_echoinfo\">(0~120 seconds, 0 means no request)</span>\r\n                    </div>\r\n                </div>\r\n                <div><b class=\"T_dnsmanual\">Set DNS server manually</b>\r\n                    <input type=\"checkbox\" id=\"dns_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"dns_tbl\" class=\"nd\">\r\n                    <div><b class=\"T_dns\">Primary DNS:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" class=\"ip-address\" />\r\n                    </div>\r\n                    <div><b class=\"T_secdns\">Secondary DNS:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" class=\"ip-address\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n                <div id=\"ppp_mld\" class=\"IPv6 nd\">\r\n                    <b class=\"T_enmld\">MLD Proxy:</b>\r\n                    <input type=\"checkbox\" id=\"ppp_mld_en\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div class=\"IPv6 nd\"><b class=\"T_ip6useispaddr\">IPv6 address</b>\r\n                    <input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv($(this));\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"exIp6_tbl\" class=\"nd\">\r\n                    <div class=\"IPv6 nd\"><b class=\"T_ip6ispaddr\">ISP specified IPv6 Address:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" />\r\n                    </div>\r\n                    <div class=\"IPv6 nd\"><b class=\"T_ip6ispgw\">ISP specified IPv6 Gateway:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"IPv6 nd\"><b class=\"T_ip6dnsmanual\">Set IPv6 DNS manually</b>\r\n                    <input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv($(this));\" />\r\n                    <label class=\"T_enable\"></label>\r\n                </div>\r\n                <div id=\"dns6_tbl\" class=\"nd\">\r\n                    <div class=\"IPv6 nd\"><b class=\"T_dns\">Primary IPv6 DNS:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" />\r\n                    </div>\r\n                    <div class=\"IPv6 nd\"><b class=\"T_secdns\">Secondary IPv6 DNS:</b>\r\n                        <input type=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"divMacClone\" class=\"part-separate\">\r\n            <h3 id=\"et2\">MAC Clone</h3>\r\n            <div>\r\n                <input type=\"radio\" name=\"macClone\" id=\"dftMac\" checked=\"checked\" />\r\n                <label id=\"t_defMac\" class='xl'>Use Default MAC Address</label>\r\n            </div>\r\n            <div>\r\n                <input type=\"radio\" name=\"macClone\" id=\"pcMac\" />\r\n                <label id=\"t_computerMac\" class='xl'>Use Current Computer MAC Address</label>\r\n                <input type=\"text\" id='computerMacAddr' class=\"mac-address\" disabled=\"true\" />\r\n            </div>\r\n            <div>\r\n                <input type=\"radio\" name=\"macClone\" id=\"customMac\" />\r\n                <label id=\"t_customMac\" class='xl'>Use Custom MAC Address</label>\r\n                <input type=\"text\" id=\"customMacAddr\" class=\"mac-address\" />\r\n            </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"green T_save\" id=\"saveBtn\" value=\"Save\" onclick=\"doSave(0);\">Save</button>\r\n    </form>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\n\r\nvar pStk;\r\nvar loadType;\r\nvar ethWan;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar connStatusTimeout;\r\n\r\nif (INCLUDE_3G4G_BACKUP) {\r\n   var sysMode;\r\n}\r\n\r\n$.tpInit(init);\r\n\r\n$(\"input[type='checkbox'][id$='_elem_enable']\").click(function() {\r\n    ShowDiv($(this));\r\n});\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan6.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t\t{\r\n\t\t\t$.h($.id(\"dyn_ip6_addr\"), iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t$.h($.id(\"dyn_prefix_len\"), iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t$.h($.id(\"dyn_ip6_gw\"), iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t}\r\n}\r\n\r\nfunction formatIPv6(address)\r\n{\r\n\taddress = address.replace(/:(0){1,4}/g, ':0');\r\n\taddress = address.replace(/(?!((:0:)|(:0$)))(:0)/g, ':');\r\n\tif (-1 == address.indexOf(\"::\"))\r\n\t{\r\n\t\taddress = address.replace(/(:0)+:/, '::');\r\n\t}\r\n\telse\r\n\t{\r\n\t\taddress = address.replace(/(:0)*::/, '::');\r\n\t}\r\n\treturn address;\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//else if (parseInt(substr,16) >= 65280)\r\n\t\t//{\r\n\t\t//\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t//\tflag = false;\r\n\t\t//}\r\n\t\t//else if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t//{\r\n\t\t//\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t//\tflag = true;\r\n\t\t//}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"6to4\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"6to4:1\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (INCLUDE_IPV6_PASS_THROUGH && linkType == \"passthrough\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"passthrough:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n\r\n\tif (linkType == \"disabled\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"disabled:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n}\r\n\r\nfunction showAdvanceGif(obj)\r\n{\r\n\tif (INCLUDE_RUSSIA_SPEC && INCLUDE_MULTILANGUAGE)\r\n\t{\r\n\tvar lang = window.localStorage.getItem(\"lang\");\r\n\tif (lang == \"en_US\")\r\n\t\tdocument.getElementById(obj).style.background=\"url(../locale/en_US/col_show.gif)\";\r\n\telse if (lang == \"uk_UA\")\r\n\t\tdocument.getElementById(obj).style.background=\"url(../locale/uk_UA/col_show.gif)\";\r\n\telse if (lang == \"ru_RU\")\r\n\t\tdocument.getElementById(obj).style.background=\"url(../locale/ru_RU/col_show.gif)\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tdocument.getElementById(obj).style.background=\"url(../img/col_show.gif)\";\r\n\t}\r\n\tdocument.getElementById(obj).style.backgroundRepeat=\"no-repeat\";\r\n\tdocument.getElementById(obj).style.backgroundPosition=\"right\";\r\n}\r\nfunction showHideGif(obj)\r\n{\r\n\tif (INCLUDE_RUSSIA_SPEC && INCLUDE_MULTILANGUAGE)\r\n\t{\r\n\tvar lang = window.localStorage.getItem(\"lang\");\r\n\tif (lang == \"en_US\")\r\n\t\tdocument.getElementById(obj).style.background=\"url(../locale/en_US/col_hide.gif)\";\r\n\telse if (lang == \"uk_UA\")\r\n\t\tdocument.getElementById(obj).style.background=\"url(../locale/uk_UA/col_hide.gif)\";\r\n\telse if (lang == \"ru_RU\")\r\n\t\tdocument.getElementById(obj).style.background=\"url(../locale/ru_RU/col_hide.gif)\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tdocument.getElementById(obj).style.background=\"url(../img/col_hide.gif)\";\r\n\t}\r\n\tdocument.getElementById(obj).style.backgroundRepeat=\"no-repeat\";\r\n\tdocument.getElementById(obj).style.backgroundPosition=\"right\";\r\n}\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction passThroughIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pass_through_elem_adv\"), \"nd\");\r\n\t\t$.addClass($.id(\"passthrough_mld\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pass_through_elem_adv\"), \"nd\");\r\n\t\t$.removeClass($.id(\"passthrough_mld\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t\tshowHideGif(\"ipoeClick\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t\tshowAdvanceGif(\"ipoeClick\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t\tshowHideGif(\"dynipClick\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t\tshowAdvanceGif(\"dynipClick\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t\tshowHideGif(\"pppoeClick\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t\tshowAdvanceGif(\"pppoeClick\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\tshowHideGif(\"ipoeClick\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t/* modify by liweijie,2014-10-10,for wan static ip address prefix length > 64 */\r\n\t\t/* $.id(\"stc_prefix_len\").value = \"64\";*/\r\n\t\t$.id(\"stc_prefix_len\").value = wan_iplist_sta.X_TP_PrefixLength;\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\tshowHideGif(\"dynipClick\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"dyn_hide_addr_config\").checked = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"dyn\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\tshowHideGif(\"pppoeClick\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\t\t\t\r\n\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){if (!$.locked()) getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"ppp_hide_addr_config\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t$.id(\"ppp_hide_addr_config\").disabled = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"ppp\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t}\r\n\r\n\tshowPPPSameSession();\r\n\r\n\tif (PPPoEv4Enable == 0){\r\n\t\t$.id(\"ppp_same_session\").disabled = true;\r\n\t\t$.addClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t} else {\r\n\t\t$.id(\"ppp_same_session\").disabled = false;\r\n\t\t$.removeClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t}\r\n\r\n\t/* display PPPoE IPv4 IPv6 elem */\r\n\t$.addClass($.id(\"ppp_ip4_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ppp_ip4_elem_adv\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_l2tp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_l2tp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_l2tp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\r\n\tif (wan_pptp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_pptp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_pptp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_pptp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\n\r\nfunction initWan6to4()\r\n{\r\n\tvar found = 0;\r\n\tvar sel = $.id(\"waninf\");\r\n\tvar wanConn;\r\n\t\r\n\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n//\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\" && wanIPv4List[i].connectionStatus == \"Connected\")\r\n\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\")\r\n\t\t{\r\n\t\t\twanConn = wanIPv4List[i];\r\n//\t\t\tif (wanIPv4List[i].X_TP_IfName == wan6MainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPPPv4List.length; j++)\r\n\t{\r\n//\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1 && wanPPPv4List[j].connectionStatus == \"Connected\")\r\n\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1)\r\n\t\t{\r\n\t\t\twanConn = wanPPPv4List[j];\r\n//\t\t\tif (wanPPPv4List[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanL2tpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanL2tpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanL2tpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanPptpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanPptpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanPptpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (found == 1 && wanConn.connectionStatus == \"Connected\")\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), s_str.noAvailIntf);\r\n\t\twan4ConnName = \"\";\r\n\t}\r\n/*\t\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n*/\r\n}\r\n\r\nfunction initPassThrough()\r\n{\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tif (INCLUDE_IPV6_MLD)\r\n\t{\r\n\t\t//$.removeClass($.id(\"pass_through_ipv6_elem_adv\"), \"nd\");\r\n\t\t$.id(\"passthrough_mld_en\").checked = (pass_through_v6.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"pass_through_ipv6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction initPDEnable()\r\n{\r\n\tvar lan6Cfg = $.act(ACT_GL, LAN_IP6_HOST_CFG, null, null, [\"__ifName\", \"IPv6SitePrefixConfigType\"]);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var index = 0; index < lan6Cfg.length; index++)\r\n\t\t{\r\n\t\t\tif (lan6Cfg[index].__ifName == \"br0\")\r\n\t\t\t{\r\n\t\t\t\tif (lan6Cfg[index].IPv6SitePrefixConfigType == \"Delegated\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 1;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 0;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tinitPDEnable();\r\n\t\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv6ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv6Enabled\"]);\r\n\t\tvar wanPPPv6ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv6Enabled\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv6ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\twanv4Index = 0;\r\n\t\t\t$.each(wanPPPv6ListAll,function(){\r\n\t\t\t\t//if (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n/*\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}*/\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\t\r\n\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\twan6MainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tvar IPv6Cfg  = $.act(ACT_GET, IPV6_CFG, null, null);\r\n\r\n\tif (INCLUDE_IPV6_PASS_THROUGH)\r\n\t{\r\n\t\tpass_through_v6 = $.act(ACT_GET, IPV6_PASS_THROUGH, null, null);\r\n\t}\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t\t\r\n\t\t});\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\t\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\"))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv6Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv6Enable = this.enable;\r\n\t\t\t\t\twan_pppoev6list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv4Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv4Enable = this.enable;\r\n\t\t\t\t\tPPPoEv4v6Enable = this.X_TP_IPv6Enabled;\r\n\t\t\t\t\twan_pppoev4list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif ((this.enable == 1) && (this.transportType == \"PPPoE\") && (this.X_TP_IPv6Enabled == 1))\r\n\t\t\t\t{\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* show which pppoe connection */\r\n\t\tif ($.mainParam && $.mainParam.split(\":\")[2])\r\n\t\t{\r\n\t\t\tif ($.mainParam.split(\":\")[2] == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (PPPoEv4Enable == 1 && PPPoEv4v6Enable == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\t\tif (wan6MainTunnel)\r\n\t\t{\r\n\t\t\tif (wan6MainTunnel.enabled == 1)\r\n\t\t\t{\r\n\t\t\t\ttype = \"6to4\";\r\n\t\t\t}\r\n\t\t\twan6to4Enable = wan6MainTunnel.enabled;\r\n\t\t\twan6to4Stk = wan6MainTunnel.__stack;\r\n\t\t\twanIPv4List = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\t\t\twanPPPv4List = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\t\t\tif (INCLUDE_L2TP)\r\n\t\t\t{\r\n\t\t\t\twanL2tpConList = $.act(ACT_GL, WAN_L2TP_CONN, null, null);\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_PPTP)\r\n\t\t\t{\r\n\t\t\t\twanPptpConList = $.act(ACT_GL, WAN_PPTP_CONN, null, null);\r\n\t\t\t}\r\n\t\t}\r\n/*\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}*/\r\n\r\n\t\tif (INCLUDE_IPV6_PASS_THROUGH)\r\n\t\t{\r\n\t\t\tif (pass_through_v6.enable == 1) type = \"passthrough\";\r\n\t\t}\r\n\r\n\t\tif (IPv6Cfg.disableIPv6 == 1 && loadType ==  \"init\"){\r\n\t\t\ttype = \"disabled\";\r\n\t\t}\r\n\t\tIPv6CfgStk = IPv6Cfg.__stack;\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"6to4\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\tinitWan6to4();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"disabled\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\tinitDisabledIPv6();\r\n\t\t\t}\r\n\t\t\telse if (INCLUDE_IPV6_PASS_THROUGH && loadType == \"passthrough\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"passthrough\";\r\n\t\t\t\tinitPassThrough();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"6to4\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\t\tinitWan6to4();\r\n\t\t\t\t}\r\n\t\t\t\telse if (INCLUDE_IPV6_PASS_THROUGH && type == \"passthrough\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"passthrough\";\r\n\t\t\t\t\tinitPassThrough();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"disabled\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isLinkLocalAddr(addr)\r\n{\r\n\tvar addrArray = addr.split(\":\");\r\n\tvar str = addrArray[0];\r\n\tif (false == /[0-9a-fA-F]{4,4}/.test(str))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar delta = (\"0x\" + str) - 0xFE80;\r\n\tif (delta < 0 || delta  > 63)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddr = \"2001\";\r\n\tfor (var i = 1; i < addrArray.length; i++)\r\n\t{\r\n\t\taddr += \":\" + addrArray[i]; \r\n\t}\r\n\treturn isValidGLUIP6AddrStrict(addr);\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\twan_iplistarg_sta.X_TP_PDEnabled = PDEnable;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") && ($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") \r\n\t\t\t&& (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_ip6=formatIPv6(temp_ip6);\r\n\t\t\t}\r\n\t\t\t/* modify by liweijie,2014-10-10, for ipv6 prefix > 64*/\r\n\t\t\tif (temp_plen < 0 || temp_plen > 128)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" &&\r\n\t\t\t\t\t!isValidGLUIP6AddrStrict(temp_gateway) && !isLinkLocalAddr(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_gateway=formatIPv6(temp_gateway);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t}\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\r\n\t\tif (temp_dnsServers != \"::,::\" &&  temp_secdnsaddr == temp_dnsaddr)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\tif (element)\r\n\t\t\t{\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\t\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.X_TP_PDEnabled = PDEnable;\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\tif ($.id(\"dyn_hide_addr_config\").checked){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t\t}\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (temp_secdnsaddr == temp_dnsaddr)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPPPoEAttrs()\r\n{\r\n\twan_pppoelistarg.X_TP_PDEnabled = PDEnable;\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = 1;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = ($.id(\"ppp_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_pppoelistarg.X_TP_IPv4Enabled == 0 && wan_pppoelistarg.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"externIp6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict($.id(\"externIp6Addr\").value))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar tmp_ip6Gateway = $.id(\"externIp6Gateway\").value;\r\n\t\t\tif (tmp_ip6Gateway != \"\" && tmp_ip6Gateway != \"::\" && !isValidGLUIP6AddrStrict(tmp_ip6Gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmp_ip6Gateway=formatIPv6(tmp_ip6Gateway);\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Static\";\r\n\t\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = formatIPv6($.id(\"externIp6Addr\").value);\r\n\t\t\twan_pppoelistarg.X_TP_PrefixLength = 64;\r\n\t\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : \"::\";\r\n\t\t\tif (wan_pppoelistarg.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t\t{\r\n\t\t\t\twan_pppoelistarg.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"ppp_ip6addr_type\").value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t//\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = \"::\";\r\n\t//\t\twan_pppoelistarg.X_TP_PrefixLength = 0;\r\n\t//\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = \"::\";\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\tif ($.id(\"ppp_hide_addr_config\").checked){\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"dns6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tvar tmpDns1 = $.id(\"dns6_1\").value;\r\n\t\t\tvar tmpDns2 = $.id(\"dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif (tmpDns1 != \"\" && tmpDns1 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns1))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns1=formatIPv6(tmpDns1);\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 != \"\" && tmpDns2 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns2))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns2=formatIPv6(tmpDns2);\r\n\t\t\t}\r\n\t\t\ttmpDns1 = (tmpDns1) ? tmpDns1 : \"::\";\r\n\t\t\ttmpDns2 = (tmpDns2) ? tmpDns2 : \"::\";\r\n\r\n\t\t\tif ((tmpDns1 + \",\" + tmpDns2) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 == tmpDns1)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 0;\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = \"::,::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_MLDProxyEnabled = $.id(\"ppp_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* check PPPoE with same session */\r\n\tif ($.id(\"ppp_same_session\").checked == true){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = 1;\r\n\t\tPPPoESetConnection = \"ewan_pppoe\";\r\n\t} else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\tPPPoESetConnection = \"ewan_pppoev6\";\r\n\t} \r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addTunnelAttrs()\r\n{\r\n\tvar wanIntfName;\r\n\t\r\n\twan6MainTunnelAttrs.enabled = 1;\r\n\twan6MainTunnelAttrs.mechanism = 2;\r\n\t\r\n\twanInfName = wan4ConnName;\r\n\t//if ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\tif ((wanInfName == \"No available interface.\"))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!wanInfName)\r\n\t{\r\n\t\tif (!wan6MainTunnelAttrs.localAddress)\r\n\t\t\twan6MainTunnelAttrs.localAddress = \"0.0.0.0\"; \r\n\t}\r\n\telse\r\n\t{\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n\t\tif (wanIPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanIPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanIPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfor (var i = 0; i < wanPPPv4List.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPPPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPPPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPPPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanL2tpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanL2tpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanL2tpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanL2tpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanPptpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPptpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPptpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPptpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t}\r\n\treturn true;\r\n}\r\nfunction addPassThroughAttrs()\r\n{\r\n\tif (INCLUDE_IPV6_MLD)\r\n\t{\r\n\t\tpass_through_v6.X_TP_MLDProxyEnabled = $.id(\"passthrough_mld_en\").checked ? 1 : 0;\r\n\t} \r\n}\r\nfunction doSave(val)\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addTunnelAttrs()))\treturn;\r\n\t}\r\n\telse if (INCLUDE_IPV6_PASS_THROUGH && linkType == \"passthrough\")\r\n\t{\r\n\t\t// do nothing \r\n\t\taddPassThroughAttrs();\r\n\t}\r\n\telse if (linkType == \"disabled\")\r\n\t{\r\n\t\t//do nothing \r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\",\"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_sta.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t\tif ((PDEnable == 1) && (staticEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_s\"]);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\tif ((PDEnable == 1) && (dynEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_d\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n/*\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (PPPoEv6Enable == 1 && PPPoESetConnection != \"ewan_pppoev6\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1 && PPPoESetConnection != \"ewan_pppoe\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_pppoelistarg.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\tif (PDEnable == 1)\r\n\t\t\t{\r\n\t\t\t\tif (PPPoESetConnection == \"ewan_pppoev6\" && PPPoEv6Enable != 1){\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoev6\"]);\r\n\t\t\t\t} else if (PPPoESetConnection == \"ewan_pppoe\" && PPPoEv4v6Enable != 1){\r\n\t\t\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoe\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, wan6MainTunnelAttrs);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (INCLUDE_IPV6_PASS_THROUGH && linkType == \"passthrough\")\r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=1\",\"X_TP_MLDProxyEnabled=\"+pass_through_v6.X_TP_MLDProxyEnabled]);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=1\"]);\r\n\t\t}\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.reload();\r\n\t\t} \r\n\t}\r\n\telse if (linkType == \"disabled\") \r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=1\"]);\r\n                \r\n\t\tif (!$.exe()) $.reload();\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction showPPPSameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.addClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}else {\r\n\t\t$.removeClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.removeClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction checkPPPoESameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.reload(\"pppoe:1:1\");\r\n\t}else {\r\n\t\t$.reload(\"pppoe:1:0\");\r\n\t}\r\n}\r\n\r\nfunction initDisabledIPv6(){\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n}\r\nfunction changeIPv6Disable()\r\n{\r\n\tif ($.id(\"wan_enable_ipv6\").checked == true){\r\n\t\t$.id(\"link_type\").disabled = false;\t\r\n\t}else {\r\n\t\t$.id(\"link_type\").disabled = true;\r\n\t}\r\n\tshowLnkType();\r\n}\r\n\r\nfunction hideAutoAddrConfig(type)\r\n{\r\n\tif (type == \"dyn\"){\r\n\t\t$.id(\"dyn_ip6addr_type\").disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t} else if (type == \"ppp\"){\r\n\t\t$.id(\"ppp_ip6addr_type\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t$.id(\"externIp6_en\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t}\r\n}\r\n\r\n</script>\r\n<style type=\"text/css\">\r\nb.item {\r\n\twidth: 40% !important;\r\n}\r\n</style>\r\n<p class=\"et T\" id=\"et\">IPv6 WAN </p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p class=\"IPv6 nd\">\r\n\t<b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n\t<input type=\"checkbox\" class=\"T\" id=\"wan_enable_ipv6\" onclick=\"changeIPv6Disable();\" checked />\r\n</p>\r\n<p id=\"wan_conn_type\"><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"XL\" onchange=\"showLnkType();\" >\r\n<option id=\"t_passthrough\" value=\"passthrough\">Pass-Through (Bridge)</option>\r\n<option class=\"T T_dynip6\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IPv6</option>\r\n<option class=\"T T_staip6\" id=\"staticIp\" value=\"staticIp\">Static IPv6</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoEv6</option>\r\n<option class=\"T T_type6to4\" id=\"t_6to4\" value=\"6to4\">Tunnel 6to4</option>\r\n</select></p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"pass_through_ipv6_elem_adv\" class=\"nd\">\r\n\t<div class=\"cl\" id=\"passThroughipClick\" onclick=\"passThroughIPClick(this)\"><p class=\"cl\"></p></div>\r\n\t<div id=\"pass_through_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"passthrough_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"passthrough_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<p id=\"dyn_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"dyn_hide_addr_config\" onclick=\"hideAutoAddrConfig('dyn')\" />\r\n\t\t\t<span class=\"T\" id=\"t_dyn_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p>\r\n\t\t<b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_same_session\" onclick=\"checkPPPoESameSession();\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_same_sess\">PPPoE same session with IPv4 PPPoE connection</span>\r\n\t\t</label>\r\n\t</p>\r\n\t<div id=\"ppp_session_basic\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<div id=\"pppoe_conn_mode\" class=\"nd\">\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<div id=\"pppoe_conn_but\" class=\"nd\">\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<p id=\"ppp_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_hide_addr_config\" onclick=\"hideAutoAddrConfig('ppp')\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"wan_select\" class=\"nd\">\r\n<p class=\"nd\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></p>\r\n<p><b class=\"item L T T_wanconn\">cur WAN Connection:</b><span id=\"curwaninf\"></span></p>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_dns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" />&nbsp;</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<div id=\"ppp_session_adv\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar pass_through_v6 = {};\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar wan_pppoev4list = {};\r\nvar PPPoEv4Stk;\r\nvar PPPoEv4Enable;\r\nvar PPPoEv4v6Enable;\r\nvar wan_pppoev6list = {};\r\nvar PPPoEv6Stk; \r\nvar PPPoEv6Enable;\r\nvar PPPoESetConnection;\r\nvar IPv6CfgStk;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar wanIPv4List;\r\nvar wanPPPv4List;\r\nvar wan6to4Enable;\r\nvar wan6to4Stk;\r\nvar wan6MainTunnel;\r\nvar wan6MainTunnelAttrs = {};\r\nvar wan4ConnName;\r\nvar PDEnable = 0;\r\nvar lan6HostStk;\r\nvar wanL2tpConList;\r\nvar wanPptpConList;\r\ninit();\r\nif (!INCLUDE_IPV6_PASS_THROUGH)\r\n{\r\n\t$.id(\"t_passthrough\").parentNode.removeChild($.id(\"t_passthrough\"));\n}\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan6_1.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t\t{\r\n\t\t\t$.h($.id(\"dyn_ip6_addr\"), iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t$.h($.id(\"dyn_prefix_len\"), iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t$.h($.id(\"dyn_ip6_gw\"), iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t}\r\n}\r\nfunction formatIPv6(address)\r\n{\r\n\taddress = address.replace(/:(0){1,4}/g, ':0');\r\n\taddress = address.replace(/(?!((:0:)|(:0$)))(:0)/g, ':');\r\n\tif (-1 == address.indexOf(\"::\"))\r\n\t{\r\n\t\taddress = address.replace(/(:0)+:/, '::');\r\n\t}\r\n\telse\r\n\t{\r\n\t\taddress = address.replace(/(:0)*::/, '::');\r\n\t}\r\n\treturn address;\r\n}\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//else if (parseInt(substr,16) >= 65280)\r\n\t\t//{\r\n\t\t//\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t//\tflag = false;\r\n\t\t//}\r\n\t\t//else if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t//{\r\n\t\t//\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t//\tflag = true;\r\n\t\t//}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"6to4\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"6to4:1\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"disabled\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"disabled:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t/* modify by liweijie,2014-10-10,for wan static ip address prefix length > 64 */\r\n\t\t/* $.id(\"stc_prefix_len\").value = \"64\";*/\r\n\t\t$.id(\"stc_prefix_len\").value = wan_iplist_sta.X_TP_PrefixLength;\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"dyn_ip6addr_type_auto\");\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"dyn_ip6addr_type_slaac\");\r\n\t\t}\r\n\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\taddressingTypeSelect.selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"Auto\") ? 0 :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 1 :2;\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\taddressingTypeSelect.selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"dyn_hide_addr_config\").checked = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"dyn\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\t\t\t\r\n\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){if (!$.locked()) getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tif (INCLUDE_IPV6_AUTO) \r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"ppp_ip6addr_type_auto\");\r\n\t\t}\r\n\t\telse if(INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"ppp_ip6addr_type_slaac\");\r\n\t\t}\r\n\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Auto\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (wan_pppoelist.X_TP_IPv6AddressingType == \"DHCPv6\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"ppp_hide_addr_config\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t$.id(\"ppp_hide_addr_config\").disabled = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"ppp\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t}\r\n\r\n\tshowPPPSameSession();\r\n\r\n\tif (PPPoEv4Enable == 0){\r\n\t\t$.id(\"ppp_same_session\").disabled = true;\r\n\t\t$.addClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t} else {\r\n\t\t$.id(\"ppp_same_session\").disabled = false;\r\n\t\t$.removeClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t}\r\n\r\n\t/* display PPPoE IPv4 IPv6 elem */\r\n\t$.addClass($.id(\"ppp_ip4_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ppp_ip4_elem_adv\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_l2tp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_l2tp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_l2tp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\r\n\tif (wan_pptp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_pptp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_pptp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_pptp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\n\r\nfunction initWan6to4()\r\n{\r\n\tvar found = 0;\r\n\tvar sel = $.id(\"waninf\");\r\n\tvar wanConn;\r\n\t\r\n\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n//\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\" && wanIPv4List[i].connectionStatus == \"Connected\")\r\n\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\")\r\n\t\t{\r\n\t\t\twanConn = wanIPv4List[i];\r\n//\t\t\tif (wanIPv4List[i].X_TP_IfName == wan6MainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPPPv4List.length; j++)\r\n\t{\r\n//\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1 && wanPPPv4List[j].connectionStatus == \"Connected\")\r\n\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1)\r\n\t\t{\r\n\t\t\twanConn = wanPPPv4List[j];\r\n//\t\t\tif (wanPPPv4List[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanL2tpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanL2tpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanL2tpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanPptpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanPptpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanPptpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (found == 1 && wanConn.connectionStatus == \"Connected\")\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), s_str.noAvailIntf);\r\n\t\twan4ConnName = \"\";\r\n\t}\r\n/*\t\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n*/\r\n}\r\n\r\nfunction initPDEnable()\r\n{\r\n\tvar lan6Cfg = $.act(ACT_GL, LAN_IP6_HOST_CFG, null, null, [\"__ifName\", \"IPv6SitePrefixConfigType\"]);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var index = 0; index < lan6Cfg.length; index++)\r\n\t\t{\r\n\t\t\tif (lan6Cfg[index].__ifName == \"br0\")\r\n\t\t\t{\r\n\t\t\t\tif (lan6Cfg[index].IPv6SitePrefixConfigType == \"Delegated\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 1;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 0;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tinitPDEnable();\r\n\t\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\t\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv6ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv6Enabled\"]);\r\n\t\tvar wanPPPv6ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv6Enabled\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv6ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\twanv4Index = 0;\r\n\t\t\t$.each(wanPPPv6ListAll,function(){\r\n\t\t\t\t//if (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n/*\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}*/\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\t\r\n\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\twan6MainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tvar IPv6Cfg  = $.act(ACT_GET, IPV6_CFG, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\"))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv6Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv6Enable = this.enable;\r\n\t\t\t\t\twan_pppoev6list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv4Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv4Enable = this.enable;\r\n\t\t\t\t\tPPPoEv4v6Enable = this.X_TP_IPv6Enabled;\r\n\t\t\t\t\twan_pppoev4list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif ((this.enable == 1) && (this.transportType == \"PPPoE\") && (this.X_TP_IPv6Enabled == 1))\r\n\t\t\t\t{\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* show which pppoe connection */\r\n\t\tif ($.mainParam && $.mainParam.split(\":\")[2])\r\n\t\t{\r\n\t\t\tif ($.mainParam.split(\":\")[2] == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (PPPoEv4Enable == 1 && PPPoEv4v6Enable == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\t\tif (wan6MainTunnel)\r\n\t\t{\r\n\t\t\tif (wan6MainTunnel.enabled == 1)\r\n\t\t\t{\r\n\t\t\t\ttype = \"6to4\";\r\n\t\t\t}\r\n\t\t\twan6to4Enable = wan6MainTunnel.enabled;\r\n\t\t\twan6to4Stk = wan6MainTunnel.__stack;\r\n\t\t\twanIPv4List = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\t\t\twanPPPv4List = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\t\t\tif (INCLUDE_L2TP)\r\n\t\t\t{\r\n\t\t\t\twanL2tpConList = $.act(ACT_GL, WAN_L2TP_CONN, null, null);\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_PPTP)\r\n\t\t\t{\r\n\t\t\t\twanPptpConList = $.act(ACT_GL, WAN_PPTP_CONN, null, null);\r\n\t\t\t}\r\n\t\t}\r\n/*\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}*/\r\n\r\n\t\tif (IPv6Cfg.disableIPv6 == 1 && loadType ==  \"init\"){\r\n\t\t\ttype = \"disabled\";\r\n\t\t}\r\n\t\tIPv6CfgStk = IPv6Cfg.__stack;\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"6to4\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\tinitWan6to4();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"disabled\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\tinitDisabledIPv6();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"6to4\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\t\tinitWan6to4();\r\n\t\t\t\t}else if (type == \"disabled\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isLinkLocalAddr(addr)\r\n{\r\n\tvar addrArray = addr.split(\":\");\r\n\tvar str = addrArray[0];\r\n\tif (false == /[0-9a-fA-F]{4,4}/.test(str))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar delta = (\"0x\" + str) - 0xFE80;\r\n\tif (delta < 0 || delta  > 63)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddr = \"2001\";\r\n\tfor (var i = 1; i < addrArray.length; i++)\r\n\t{\r\n\t\taddr += \":\" + addrArray[i]; \r\n\t}\r\n\treturn isValidGLUIP6AddrStrict(addr);\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\twan_iplistarg_sta.X_TP_PDEnabled = PDEnable;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") && ($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") \r\n\t\t\t&& (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_ip6=formatIPv6(temp_ip6);\r\n\t\t\t}\r\n\t\t\t/* modify by liweijie,2014-10-10, for ipv6 prefix > 64*/\r\n\t\t\tif (temp_plen < 0 || temp_plen > 128)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" &&\r\n\t\t\t\t\t!isValidGLUIP6AddrStrict(temp_gateway) && !isLinkLocalAddr(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_gateway=formatIPv6(temp_gateway);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t}\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\r\n\t\tif (temp_dnsServers != \"::,::\" &&  temp_secdnsaddr == temp_dnsaddr)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\tif (element)\r\n\t\t\t{\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\t\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.X_TP_PDEnabled = PDEnable;\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t\telse if (addressingTypeSelect.value == \"auto\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"Auto\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\tif ($.id(\"dyn_hide_addr_config\").checked){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t\t}\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (temp_secdnsaddr == temp_dnsaddr)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPPPoEAttrs()\r\n{\r\n\twan_pppoelistarg.X_TP_PDEnabled = PDEnable;\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = 1;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = ($.id(\"ppp_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_pppoelistarg.X_TP_IPv4Enabled == 0 && wan_pppoelistarg.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"externIp6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict($.id(\"externIp6Addr\").value))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar tmp_ip6Gateway = $.id(\"externIp6Gateway\").value;\r\n\t\t\tif (tmp_ip6Gateway != \"\" && tmp_ip6Gateway != \"::\" && !isValidGLUIP6AddrStrict(tmp_ip6Gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmp_ip6Gateway=formatIPv6(tmp_ip6Gateway);\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Static\";\r\n\t\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = formatIPv6($.id(\"externIp6Addr\").value);\r\n\t\t\twan_pppoelistarg.X_TP_PrefixLength = 64;\r\n\t\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : \"::\";\r\n\t\t\tif (wan_pppoelistarg.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t\t{\r\n\t\t\t\twan_pppoelistarg.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\t\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t\t{\r\n\t\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (addressingTypeSelect.value == \"auto\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Auto\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t//\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = \"::\";\r\n\t//\t\twan_pppoelistarg.X_TP_PrefixLength = 0;\r\n\t//\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = \"::\";\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\tif ($.id(\"ppp_hide_addr_config\").checked){\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"dns6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tvar tmpDns1 = $.id(\"dns6_1\").value;\r\n\t\t\tvar tmpDns2 = $.id(\"dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif (tmpDns1 != \"\" && tmpDns1 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns1))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns1=formatIPv6(tmpDns1);\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 != \"\" && tmpDns2 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns2))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns2=formatIPv6(tmpDns2);\r\n\t\t\t}\r\n\t\t\ttmpDns1 = (tmpDns1) ? tmpDns1 : \"::\";\r\n\t\t\ttmpDns2 = (tmpDns2) ? tmpDns2 : \"::\";\r\n\r\n\t\t\tif ((tmpDns1 + \",\" + tmpDns2) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 == tmpDns1)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 0;\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = \"::,::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_MLDProxyEnabled = $.id(\"ppp_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* check PPPoE with same session */\r\n\tif ($.id(\"ppp_same_session\").checked == true){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = 1;\r\n\t\tPPPoESetConnection = \"ewan_pppoe\";\r\n\t} else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\tPPPoESetConnection = \"ewan_pppoev6\";\r\n\t} \r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addTunnelAttrs()\r\n{\r\n\tvar wanInfName;\r\n\t\r\n\twan6MainTunnelAttrs.enabled = 1;\r\n\twan6MainTunnelAttrs.mechanism = 2;\r\n\t\r\n\twanInfName = wan4ConnName;\r\n\t//if ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\tif ((wanInfName == \"No available interface.\"))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!wanInfName)\r\n\t{\r\n\t\tif (!wan6MainTunnelAttrs.localAddress)\r\n\t\t\twan6MainTunnelAttrs.localAddress = \"0.0.0.0\"; \r\n\t}\r\n\telse\r\n\t{\r\n        for (var i = 0; i < wanIPv4List.length; i++)\r\n        {\r\n            if (wanIPv4List[i].name == wanInfName)\r\n            {\r\n                wan6MainTunnelAttrs.associatedWanIfName = wanIPv4List[i].X_TP_IfName;\r\n                wan6MainTunnelAttrs.localAddress = wanIPv4List[i].externalIPAddress;\r\n                break;\r\n            }\r\n        }\r\n            \r\n        for (var i = 0; i < wanPPPv4List.length; i++)\r\n        {\t\t\t\r\n            if (wanPPPv4List[i].name == wanInfName)\r\n            {\r\n                wan6MainTunnelAttrs.associatedWanIfName = wanPPPv4List[i].X_TP_IfName;\r\n                wan6MainTunnelAttrs.localAddress = wanPPPv4List[i].externalIPAddress;\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0; i < wanL2tpConList.length; i++)\r\n        {\t\t\t\r\n            if (wanL2tpConList[i].name == wanInfName)\r\n            {\r\n                wan6MainTunnelAttrs.associatedWanIfName = wanL2tpConList[i].ifName;\r\n                wan6MainTunnelAttrs.localAddress = wanL2tpConList[i].externalIPAddress;\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0; i < wanPptpConList.length; i++)\r\n        {\t\t\t\r\n            if (wanPptpConList[i].name == wanInfName)\r\n            {\r\n                wan6MainTunnelAttrs.associatedWanIfName = wanPptpConList[i].ifName;\r\n                wan6MainTunnelAttrs.localAddress = wanPptpConList[i].externalIPAddress;\r\n                break;\r\n            }\r\n        }\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction doSave(val)\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addTunnelAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"disabled\")\r\n\t{\r\n\t\t//do nothing \r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\",\"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_sta.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t\tif ((PDEnable == 1) && (staticEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_s\"]);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\tif ((PDEnable == 1) && (dynEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_d\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n/*\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (PPPoEv6Enable == 1 && PPPoESetConnection != \"ewan_pppoev6\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1 && PPPoESetConnection != \"ewan_pppoe\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_pppoelistarg.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\tif (PDEnable == 1)\r\n\t\t\t{\r\n\t\t\t\tif (PPPoESetConnection == \"ewan_pppoev6\" && PPPoEv6Enable != 1){\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoev6\"]);\r\n\t\t\t\t} else if (PPPoESetConnection == \"ewan_pppoe\" && PPPoEv4v6Enable != 1){\r\n\t\t\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoe\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, wan6MainTunnelAttrs);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"disabled\") \r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=1\"]);\r\n\r\n\t\tif (!$.exe()) $.reload();\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction showPPPSameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.addClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}else {\r\n\t\t$.removeClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.removeClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction checkPPPoESameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.reload(\"pppoe:1:1\");\r\n\t}else {\r\n\t\t$.reload(\"pppoe:1:0\");\r\n\t}\r\n}\r\n\r\nfunction initDisabledIPv6(){\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n}\r\nfunction changeIPv6Disable()\r\n{\r\n\tif ($.id(\"wan_enable_ipv6\").checked == true){\r\n\t\t$.id(\"link_type\").disabled = false;\t\r\n\t}else {\r\n\t\t$.id(\"link_type\").disabled = true;\r\n\t}\r\n\tshowLnkType();\r\n}\r\n\r\nfunction hideAutoAddrConfig(type)\r\n{\r\n\tif (type == \"dyn\"){\r\n\t\taddressingTypeSelect.disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t\taddressingTypeSelect.disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t} else if (type == \"ppp\"){\r\n\t\taddressingTypeSelect.disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\taddressingTypeSelect.disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t$.id(\"externIp6_en\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t}\r\n}\r\n\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 WAN </p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p class=\"IPv6 nd\">\r\n\t<b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n\t<input type=\"checkbox\" class=\"T\" id=\"wan_enable_ipv6\" onclick=\"changeIPv6Disable();\" checked />\r\n</p>\r\n<p id=\"wan_conn_type\"><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"M\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip6\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IPv6</option>\r\n<option class=\"T T_staip6\" id=\"staticIp\" value=\"staticIp\">Static IPv6</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoEv6</option>\r\n<option class=\"T T_type6to4\" id=\"t_6to4\" value=\"6to4\">Tunnel 6to4</option>\r\n</select></p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<p id=\"dyn_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"dyn_hide_addr_config\" onclick=\"hideAutoAddrConfig('dyn')\" />\r\n\t\t\t<span class=\"T\" id=\"t_dyn_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type_slaac\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t\t<div id=\"ipv6_cfg_dynamic_auto\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type_auto\" class=\"L\">\r\n\t\t\t<option value=\"auto\" selected=\"selected\">Auto</option>\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p>\r\n\t\t<b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_same_session\" onclick=\"checkPPPoESameSession();\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_same_sess\">PPPoE same session with IPv4 PPPoE connection</span>\r\n\t\t</label>\r\n\t</p>\r\n\t<div id=\"ppp_session_basic\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<div id=\"pppoe_conn_mode\" class=\"nd\">\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<div id=\"pppoe_conn_but\" class=\"nd\">\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<p id=\"ppp_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_hide_addr_config\" onclick=\"hideAutoAddrConfig('ppp')\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type_slaac\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t\t<div id=\"ipv6_cfg_ppp_auto\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type_auto\" class=\"L\" >\r\n\t\t\t<option value=\"auto\" selected=\"selected\">Auto</option>\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"wan_select\" class=\"nd\">\r\n<p class=\"nd\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></p>\r\n<p><b class=\"item L T T_wanconn\">cur WAN Connection:</b><span id=\"curwaninf\"></span></p>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_dns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" />&nbsp;</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<div id=\"ppp_session_adv\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar wan_pppoev4list = {};\r\nvar PPPoEv4Stk;\r\nvar PPPoEv4Enable;\r\nvar PPPoEv4v6Enable;\r\nvar wan_pppoev6list = {};\r\nvar PPPoEv6Stk; \r\nvar PPPoEv6Enable;\r\nvar PPPoESetConnection;\r\nvar IPv6CfgStk;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar wanIPv4List;\r\nvar wanPPPv4List;\r\nvar wan6to4Enable;\r\nvar wan6to4Stk;\r\nvar wan6MainTunnel;\r\nvar wan6MainTunnelAttrs = {};\r\nvar wan4ConnName;\r\nvar PDEnable = 0;\r\nvar lan6HostStk;\r\nvar wanL2tpConList;\r\nvar wanPptpConList;\r\nvar addressingTypeSelect;\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan6_2.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t\t{\r\n\t\t\t$.h($.id(\"dyn_ip6_addr\"), iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t$.h($.id(\"dyn_prefix_len\"), iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t$.h($.id(\"dyn_ip6_gw\"), iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t}\r\n}\r\nfunction formatIPv6(address)\r\n{\r\n\taddress = address.replace(/:(0){1,4}/g, ':0');\r\n\taddress = address.replace(/(?!((:0:)|(:0$)))(:0)/g, ':');\r\n\tif (-1 == address.indexOf(\"::\"))\r\n\t{\r\n\t\taddress = address.replace(/(:0)+:/, '::');\r\n\t}\r\n\telse\r\n\t{\r\n\t\taddress = address.replace(/(:0)*::/, '::');\r\n\t}\r\n\treturn address;\r\n}\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//else if (parseInt(substr,16) >= 65280)\r\n\t\t//{\r\n\t\t//\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t//\tflag = false;\r\n\t\t//}\r\n\t\t//else if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t//{\r\n\t\t//\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t//\tflag = true;\r\n\t\t//}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"6to4\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"6to4:1\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"disabled\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"disabled:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t/* modify by liweijie,2014-10-10,for wan static ip address prefix length > 64 */\r\n\t\t/* $.id(\"stc_prefix_len\").value = \"64\";*/\r\n\t\t$.id(\"stc_prefix_len\").value = wan_iplist_sta.X_TP_PrefixLength;\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"dyn_ip6addr_type_auto\");\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"dyn_ip6addr_type_slaac\");\r\n\t\t}\r\n\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\taddressingTypeSelect.selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"Auto\") ? 0 :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 1 :2;\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\taddressingTypeSelect.selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"dyn_hide_addr_config\").checked = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"dyn\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\t\t\t\r\n\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){if (!$.locked()) getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tif (INCLUDE_IPV6_AUTO) \r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"ppp_ip6addr_type_auto\");\r\n\t\t}\r\n\t\telse if(INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"ppp_ip6addr_type_slaac\");\r\n\t\t}\r\n\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Auto\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (wan_pppoelist.X_TP_IPv6AddressingType == \"DHCPv6\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"ppp_hide_addr_config\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t$.id(\"ppp_hide_addr_config\").disabled = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"ppp\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t}\r\n\r\n\tshowPPPSameSession();\r\n\r\n\tif (PPPoEv4Enable == 0){\r\n\t\t$.id(\"ppp_same_session\").disabled = true;\r\n\t\t$.addClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t} else {\r\n\t\t$.id(\"ppp_same_session\").disabled = false;\r\n\t\t$.removeClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t}\r\n\r\n\t/* display PPPoE IPv4 IPv6 elem */\r\n\t$.addClass($.id(\"ppp_ip4_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ppp_ip4_elem_adv\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_l2tp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_l2tp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_l2tp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\r\n\tif (wan_pptp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_pptp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_pptp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_pptp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\n\r\nfunction initWan6to4()\r\n{\r\n\tvar found = 0;\r\n\tvar sel = $.id(\"waninf\");\r\n\tvar wanConn;\r\n\t\r\n\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n//\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\" && wanIPv4List[i].connectionStatus == \"Connected\")\r\n\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\")\r\n\t\t{\r\n\t\t\twanConn = wanIPv4List[i];\r\n//\t\t\tif (wanIPv4List[i].X_TP_IfName == wan6MainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPPPv4List.length; j++)\r\n\t{\r\n//\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1 && wanPPPv4List[j].connectionStatus == \"Connected\")\r\n\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1)\r\n\t\t{\r\n\t\t\twanConn = wanPPPv4List[j];\r\n//\t\t\tif (wanPPPv4List[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanL2tpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanL2tpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanL2tpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanPptpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanPptpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanPptpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (found == 1 && wanConn.connectionStatus == \"Connected\")\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), s_str.noAvailIntf);\r\n\t\twan4ConnName = \"\";\r\n\t}\r\n/*\t\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n*/\r\n}\r\n\r\nfunction initPDEnable()\r\n{\r\n\tvar lan6Cfg = $.act(ACT_GL, LAN_IP6_HOST_CFG, null, null, [\"__ifName\", \"IPv6SitePrefixConfigType\"]);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var index = 0; index < lan6Cfg.length; index++)\r\n\t\t{\r\n\t\t\tif (lan6Cfg[index].__ifName == \"br0\")\r\n\t\t\t{\r\n\t\t\t\tif (lan6Cfg[index].IPv6SitePrefixConfigType == \"Delegated\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 1;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 0;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tinitPDEnable();\r\n\t\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\t\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv6ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv6Enabled\"]);\r\n\t\tvar wanPPPv6ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv6Enabled\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv6ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\twanv4Index = 0;\r\n\t\t\t$.each(wanPPPv6ListAll,function(){\r\n\t\t\t\t//if (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n/*\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}*/\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\t\r\n\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\twan6MainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tvar IPv6Cfg  = $.act(ACT_GET, IPV6_CFG, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\"))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv6Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv6Enable = this.enable;\r\n\t\t\t\t\twan_pppoev6list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv4Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv4Enable = this.enable;\r\n\t\t\t\t\tPPPoEv4v6Enable = this.X_TP_IPv6Enabled;\r\n\t\t\t\t\twan_pppoev4list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif ((this.enable == 1) && (this.transportType == \"PPPoE\") && (this.X_TP_IPv6Enabled == 1))\r\n\t\t\t\t{\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* show which pppoe connection */\r\n\t\tif ($.mainParam && $.mainParam.split(\":\")[2])\r\n\t\t{\r\n\t\t\tif ($.mainParam.split(\":\")[2] == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (PPPoEv4Enable == 1 && PPPoEv4v6Enable == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\t\tif (wan6MainTunnel)\r\n\t\t{\r\n\t\t\tif (wan6MainTunnel.enabled == 1)\r\n\t\t\t{\r\n\t\t\t\ttype = \"6to4\";\r\n\t\t\t}\r\n\t\t\twan6to4Enable = wan6MainTunnel.enabled;\r\n\t\t\twan6to4Stk = wan6MainTunnel.__stack;\r\n\t\t\twanIPv4List = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\t\t\twanPPPv4List = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\t\t\tif (INCLUDE_L2TP)\r\n\t\t\t{\r\n\t\t\t\twanL2tpConList = $.act(ACT_GL, WAN_L2TP_CONN, null, null);\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_PPTP)\r\n\t\t\t{\r\n\t\t\t\twanPptpConList = $.act(ACT_GL, WAN_PPTP_CONN, null, null);\r\n\t\t\t}\r\n\t\t}\r\n/*\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}*/\r\n\r\n\t\tif (IPv6Cfg.disableIPv6 == 1 && loadType ==  \"init\"){\r\n\t\t\ttype = \"disabled\";\r\n\t\t}\r\n\t\tIPv6CfgStk = IPv6Cfg.__stack;\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"6to4\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\tinitWan6to4();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"disabled\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\tinitDisabledIPv6();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"6to4\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\t\tinitWan6to4();\r\n\t\t\t\t}else if (type == \"disabled\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isLinkLocalAddr(addr)\r\n{\r\n\tvar addrArray = addr.split(\":\");\r\n\tvar str = addrArray[0];\r\n\tif (false == /[0-9a-fA-F]{4,4}/.test(str))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar delta = (\"0x\" + str) - 0xFE80;\r\n\tif (delta < 0 || delta  > 63)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddr = \"2001\";\r\n\tfor (var i = 1; i < addrArray.length; i++)\r\n\t{\r\n\t\taddr += \":\" + addrArray[i]; \r\n\t}\r\n\treturn isValidGLUIP6AddrStrict(addr);\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\twan_iplistarg_sta.X_TP_PDEnabled = PDEnable;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") && ($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") \r\n\t\t\t&& (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_ip6=formatIPv6(temp_ip6);\r\n\t\t\t}\r\n\t\t\t/* modify by liweijie,2014-10-10, for ipv6 prefix > 64*/\r\n\t\t\tif (temp_plen < 0 || temp_plen > 128)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" &&\r\n\t\t\t\t\t!isValidGLUIP6AddrStrict(temp_gateway) && !isLinkLocalAddr(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_gateway=formatIPv6(temp_gateway);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t}\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\r\n\t\tif (temp_dnsServers != \"::,::\" &&  temp_secdnsaddr == temp_dnsaddr)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\tif (element)\r\n\t\t\t{\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\t\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.X_TP_PDEnabled = PDEnable;\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t\telse if (addressingTypeSelect.value == \"auto\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"Auto\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\tif ($.id(\"dyn_hide_addr_config\").checked){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t\t}\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (temp_secdnsaddr == temp_dnsaddr)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPPPoEAttrs()\r\n{\r\n\twan_pppoelistarg.X_TP_PDEnabled = PDEnable;\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = 1;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = ($.id(\"ppp_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_pppoelistarg.X_TP_IPv4Enabled == 0 && wan_pppoelistarg.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"externIp6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict($.id(\"externIp6Addr\").value))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar tmp_ip6Gateway = $.id(\"externIp6Gateway\").value;\r\n\t\t\tif (tmp_ip6Gateway != \"\" && tmp_ip6Gateway != \"::\" && !isValidGLUIP6AddrStrict(tmp_ip6Gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmp_ip6Gateway=formatIPv6(tmp_ip6Gateway);\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Static\";\r\n\t\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = formatIPv6($.id(\"externIp6Addr\").value);\r\n\t\t\twan_pppoelistarg.X_TP_PrefixLength = 64;\r\n\t\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : \"::\";\r\n\t\t\tif (wan_pppoelistarg.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t\t{\r\n\t\t\t\twan_pppoelistarg.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\t\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t\t{\r\n\t\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (addressingTypeSelect.value == \"auto\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Auto\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t//\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = \"::\";\r\n\t//\t\twan_pppoelistarg.X_TP_PrefixLength = 0;\r\n\t//\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = \"::\";\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\tif ($.id(\"ppp_hide_addr_config\").checked){\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"dns6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tvar tmpDns1 = $.id(\"dns6_1\").value;\r\n\t\t\tvar tmpDns2 = $.id(\"dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif (tmpDns1 != \"\" && tmpDns1 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns1))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns1=formatIPv6(tmpDns1);\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 != \"\" && tmpDns2 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns2))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns2=formatIPv6(tmpDns2);\r\n\t\t\t}\r\n\t\t\ttmpDns1 = (tmpDns1) ? tmpDns1 : \"::\";\r\n\t\t\ttmpDns2 = (tmpDns2) ? tmpDns2 : \"::\";\r\n\r\n\t\t\tif ((tmpDns1 + \",\" + tmpDns2) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 == tmpDns1)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 0;\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = \"::,::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_MLDProxyEnabled = $.id(\"ppp_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* check PPPoE with same session */\r\n\tif ($.id(\"ppp_same_session\").checked == true){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = 1;\r\n\t\tPPPoESetConnection = \"ewan_pppoe\";\r\n\t} else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\tPPPoESetConnection = \"ewan_pppoev6\";\r\n\t} \r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addTunnelAttrs()\r\n{\r\n\tvar wanInfName;\r\n\t\r\n\twan6MainTunnelAttrs.enabled = 1;\r\n\twan6MainTunnelAttrs.mechanism = 2;\r\n\t\r\n\twanInfName = wan4ConnName;\r\n\t//if ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\tif ((wanInfName == \"No available interface.\"))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!wanInfName)\r\n\t{\r\n\t\tif (!wan6MainTunnelAttrs.localAddress)\r\n\t\t\twan6MainTunnelAttrs.localAddress = \"0.0.0.0\"; \r\n\t}\r\n\telse\r\n\t{\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n\t\tif (wanIPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanIPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanIPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfor (var i = 0; i < wanPPPv4List.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPPPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPPPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPPPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanL2tpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanL2tpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanL2tpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanL2tpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanPptpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPptpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPptpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPptpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction doSave(val)\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addTunnelAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"disabled\")\r\n\t{\r\n\t\t//do nothing \r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\",\"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_sta.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t\tif ((PDEnable == 1) && (staticEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_s\"]);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\tif ((PDEnable == 1) && (dynEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_d\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n/*\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (PPPoEv6Enable == 1 && PPPoESetConnection != \"ewan_pppoev6\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1 && PPPoESetConnection != \"ewan_pppoe\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_pppoelistarg.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\tif (PDEnable == 1)\r\n\t\t\t{\r\n\t\t\t\tif (PPPoESetConnection == \"ewan_pppoev6\" && PPPoEv6Enable != 1){\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoev6\"]);\r\n\t\t\t\t} else if (PPPoESetConnection == \"ewan_pppoe\" && PPPoEv4v6Enable != 1){\r\n\t\t\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoe\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, wan6MainTunnelAttrs);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"disabled\") \r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=1\"]);\r\n\r\n\t\tif (!$.exe()) $.reload();\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction showPPPSameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.addClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}else {\r\n\t\t$.removeClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.removeClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction checkPPPoESameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.reload(\"pppoe:1:1\");\r\n\t}else {\r\n\t\t$.reload(\"pppoe:1:0\");\r\n\t}\r\n}\r\n\r\nfunction initDisabledIPv6(){\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n}\r\nfunction changeIPv6Disable()\r\n{\r\n\tif ($.id(\"wan_enable_ipv6\").checked == true){\r\n\t\t$.id(\"link_type\").disabled = false;\t\r\n\t}else {\r\n\t\t$.id(\"link_type\").disabled = true;\r\n\t}\r\n\tshowLnkType();\r\n}\r\n\r\nfunction hideAutoAddrConfig(type)\r\n{\r\n\tif (type == \"dyn\"){\r\n\t\taddressingTypeSelect.disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t\taddressingTypeSelect.disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t} else if (type == \"ppp\"){\r\n\t\taddressingTypeSelect.disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\taddressingTypeSelect.disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t$.id(\"externIp6_en\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t}\r\n}\r\n\r\n</script>\r\n<style type=\"text/css\">\r\nb.item {\r\n\twidth: 45% !important;\r\n}\r\n</style>\r\n<p class=\"et T\" id=\"et\">IPv6 WAN </p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p class=\"IPv6 nd\">\r\n\t<b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n\t<input type=\"checkbox\" class=\"T\" id=\"wan_enable_ipv6\" onclick=\"changeIPv6Disable();\" checked />\r\n</p>\r\n<p id=\"wan_conn_type\"><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"M\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip6\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IPv6</option>\r\n<option class=\"T T_staip6\" id=\"staticIp\" value=\"staticIp\">Static IPv6</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoEv6</option>\r\n<option class=\"T T_type6to4\" id=\"t_6to4\" value=\"6to4\">Tunnel 6to4</option>\r\n</select></p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<p id=\"dyn_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"dyn_hide_addr_config\" onclick=\"hideAutoAddrConfig('dyn')\" />\r\n\t\t\t<span class=\"T\" id=\"t_dyn_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type_slaac\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t\t<div id=\"ipv6_cfg_dynamic_auto\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type_auto\" class=\"L\">\r\n\t\t\t<option value=\"auto\" selected=\"selected\">Auto</option>\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p>\r\n\t\t<b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_same_session\" onclick=\"checkPPPoESameSession();\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_same_sess\">PPPoE same session with IPv4 PPPoE connection</span>\r\n\t\t</label>\r\n\t</p>\r\n\t<div id=\"ppp_session_basic\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<div id=\"pppoe_conn_mode\" class=\"nd\">\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<div id=\"pppoe_conn_but\" class=\"nd\">\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<p id=\"ppp_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_hide_addr_config\" onclick=\"hideAutoAddrConfig('ppp')\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type_slaac\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t\t<div id=\"ipv6_cfg_ppp_auto\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type_auto\" class=\"L\" >\r\n\t\t\t<option value=\"auto\" selected=\"selected\">Auto</option>\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"wan_select\" class=\"nd\">\r\n<p class=\"nd\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></p>\r\n<p><b class=\"item L T T_wanconn\">cur WAN Connection:</b><span id=\"curwaninf\"></span></p>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_dns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" />&nbsp;</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<div id=\"ppp_session_adv\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar wan_pppoev4list = {};\r\nvar PPPoEv4Stk;\r\nvar PPPoEv4Enable;\r\nvar PPPoEv4v6Enable;\r\nvar wan_pppoev6list = {};\r\nvar PPPoEv6Stk; \r\nvar PPPoEv6Enable;\r\nvar PPPoESetConnection;\r\nvar IPv6CfgStk;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar wanIPv4List;\r\nvar wanPPPv4List;\r\nvar wan6to4Enable;\r\nvar wan6to4Stk;\r\nvar wan6MainTunnel;\r\nvar wan6MainTunnelAttrs = {};\r\nvar wan4ConnName;\r\nvar PDEnable = 0;\r\nvar lan6HostStk;\r\nvar wanL2tpConList;\r\nvar wanPptpConList;\r\nvar addressingTypeSelect;\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan6_3.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t\t{\r\n\t\t\t$.h($.id(\"dyn_ip6_addr\"), iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t$.h($.id(\"dyn_prefix_len\"), iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t$.h($.id(\"dyn_ip6_gw\"), iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t}\r\n}\r\n\r\nfunction formatIPv6(address)\r\n{\r\n\taddress = address.replace(/:(0){1,4}/g, ':0');\r\n\taddress = address.replace(/(?!((:0:)|(:0$)))(:0)/g, ':');\r\n\tif (-1 == address.indexOf(\"::\"))\r\n\t{\r\n\t\taddress = address.replace(/(:0)+:/, '::');\r\n\t}\r\n\telse\r\n\t{\r\n\t\taddress = address.replace(/(:0)*::/, '::');\r\n\t}\r\n\treturn address;\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//else if (parseInt(substr,16) >= 65280)\r\n\t\t//{\r\n\t\t//\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t//\tflag = false;\r\n\t\t//}\r\n\t\t//else if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t//{\r\n\t\t//\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t//\tflag = true;\r\n\t\t//}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"6to4\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"6to4:1\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (INCLUDE_IPV6_PASS_THROUGH && linkType == \"passthrough\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"passthrough:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n\r\n\tif (linkType == \"disabled\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"disabled:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction passThroughIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pass_through_elem_adv\"), \"nd\");\r\n\t\t$.addClass($.id(\"passthrough_mld\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pass_through_elem_adv\"), \"nd\");\r\n\t\t$.removeClass($.id(\"passthrough_mld\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\t//console.log(\"val.id: \", val.id);\r\n\t//console.log(\"val.checked: \", val.checked);\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t/* modify by liweijie,2014-10-10,for wan static ip address prefix length > 64 */\r\n\t\t/* $.id(\"stc_prefix_len\").value = \"64\";*/\r\n\t\t$.id(\"stc_prefix_len\").value = wan_iplist_sta.X_TP_PrefixLength;\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"dyn_ip6addr_type_auto\");\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"dyn_ip6addr_type_slaac\");\r\n\t\t}\r\n\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\taddressingTypeSelect.selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"Auto\") ? 0 :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 1 :2;\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\taddressingTypeSelect.selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"dyn_hide_addr_config\").checked = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"dyn\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\t\t\t\r\n\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){if (!$.locked()) getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tif (INCLUDE_IPV6_AUTO) \r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"ppp_ip6addr_type_auto\");\r\n\t\t}\r\n\t\telse if(INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\taddressingTypeSelect = $.id(\"ppp_ip6addr_type_slaac\");\r\n\t\t}\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Auto\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (wan_pppoelist.X_TP_IPv6AddressingType == \"DHCPv6\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\taddressingTypeSelect.disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\taddressingTypeSelect.selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"ppp_hide_addr_config\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t$.id(\"ppp_hide_addr_config\").disabled = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"ppp\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t}\r\n\r\n\tshowPPPSameSession();\r\n\r\n\tif (PPPoEv4Enable == 0){\r\n\t\t$.id(\"ppp_same_session\").disabled = true;\r\n\t\t$.addClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t} else {\r\n\t\t$.id(\"ppp_same_session\").disabled = false;\r\n\t\t$.removeClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t}\r\n\r\n\t/* display PPPoE IPv4 IPv6 elem */\r\n\t$.addClass($.id(\"ppp_ip4_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ppp_ip4_elem_adv\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_l2tp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_l2tp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_l2tp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\r\n\tif (wan_pptp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_pptp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_pptp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_pptp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\n\r\nfunction initWan6to4()\r\n{\r\n\tvar found = 0;\r\n\tvar sel = $.id(\"waninf\");\r\n\tvar wanConn;\r\n\t\r\n\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n//\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\" && wanIPv4List[i].connectionStatus == \"Connected\")\r\n\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\")\r\n\t\t{\r\n\t\t\twanConn = wanIPv4List[i];\r\n//\t\t\tif (wanIPv4List[i].X_TP_IfName == wan6MainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPPPv4List.length; j++)\r\n\t{\r\n//\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1 && wanPPPv4List[j].connectionStatus == \"Connected\")\r\n\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1)\r\n\t\t{\r\n\t\t\twanConn = wanPPPv4List[j];\r\n//\t\t\tif (wanPPPv4List[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanL2tpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanL2tpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanL2tpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanPptpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanPptpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanPptpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (found == 1 && wanConn.connectionStatus == \"Connected\")\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), s_str.noAvailIntf);\r\n\t\twan4ConnName = \"\";\r\n\t}\r\n/*\t\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n*/\r\n}\r\n\r\nfunction initPassThrough()\r\n{\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tif (INCLUDE_IPV6_MLD)\r\n\t{\r\n\t\t//$.removeClass($.id(\"pass_through_ipv6_elem_adv\"), \"nd\");\r\n\t\t$.id(\"passthrough_mld_en\").checked = (pass_through_v6.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"pass_through_ipv6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction initPDEnable()\r\n{\r\n\tvar lan6Cfg = $.act(ACT_GL, LAN_IP6_HOST_CFG, null, null, [\"__ifName\", \"IPv6SitePrefixConfigType\"]);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var index = 0; index < lan6Cfg.length; index++)\r\n\t\t{\r\n\t\t\tif (lan6Cfg[index].__ifName == \"br0\")\r\n\t\t\t{\r\n\t\t\t\tif (lan6Cfg[index].IPv6SitePrefixConfigType == \"Delegated\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 1;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 0;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tinitPDEnable();\r\n\t\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\t\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_auto\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_auto\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv6ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv6Enabled\"]);\r\n\t\tvar wanPPPv6ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv6Enabled\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv6ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\twanv4Index = 0;\r\n\t\t\t$.each(wanPPPv6ListAll,function(){\r\n\t\t\t\t//if (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n/*\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}*/\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\t\r\n\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\twan6MainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tvar IPv6Cfg  = $.act(ACT_GET, IPV6_CFG, null, null);\r\n\r\n\tif (INCLUDE_IPV6_PASS_THROUGH)\r\n\t{\r\n\t\tpass_through_v6 = $.act(ACT_GET, IPV6_PASS_THROUGH, null, null);\r\n\t}\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t\t\r\n\t\t});\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\t\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\"))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv6Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv6Enable = this.enable;\r\n\t\t\t\t\twan_pppoev6list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv4Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv4Enable = this.enable;\r\n\t\t\t\t\tPPPoEv4v6Enable = this.X_TP_IPv6Enabled;\r\n\t\t\t\t\twan_pppoev4list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif ((this.enable == 1) && (this.transportType == \"PPPoE\") && (this.X_TP_IPv6Enabled == 1))\r\n\t\t\t\t{\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* show which pppoe connection */\r\n\t\tif ($.mainParam && $.mainParam.split(\":\")[2])\r\n\t\t{\r\n\t\t\tif ($.mainParam.split(\":\")[2] == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (PPPoEv4Enable == 1 && PPPoEv4v6Enable == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\t\tif (wan6MainTunnel)\r\n\t\t{\r\n\t\t\tif (wan6MainTunnel.enabled == 1)\r\n\t\t\t{\r\n\t\t\t\ttype = \"6to4\";\r\n\t\t\t}\r\n\t\t\twan6to4Enable = wan6MainTunnel.enabled;\r\n\t\t\twan6to4Stk = wan6MainTunnel.__stack;\r\n\t\t\twanIPv4List = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\t\t\twanPPPv4List = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\t\t\tif (INCLUDE_L2TP)\r\n\t\t\t{\r\n\t\t\t\twanL2tpConList = $.act(ACT_GL, WAN_L2TP_CONN, null, null);\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_PPTP)\r\n\t\t\t{\r\n\t\t\t\twanPptpConList = $.act(ACT_GL, WAN_PPTP_CONN, null, null);\r\n\t\t\t}\r\n\t\t}\r\n/*\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n*/\r\n\r\n\t\tif (INCLUDE_IPV6_PASS_THROUGH)\r\n\t\t{\r\n\t\t\t/*default change to dyn from*/\r\n\t\t\tif (pass_through_v6.enable == 1) type = \"passthrough\";\r\n\t\t}\r\n\r\n\t\tif (IPv6Cfg.disableIPv6 == 1 && loadType ==  \"init\"){\r\n\t\t\ttype = \"disabled\";\r\n\t\t}\r\n\t\tIPv6CfgStk = IPv6Cfg.__stack;\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"6to4\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\tinitWan6to4();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"disabled\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\tinitDisabledIPv6();\r\n\t\t\t}\r\n\t\t\telse if (INCLUDE_IPV6_PASS_THROUGH && loadType == \"passthrough\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"passthrough\";\r\n\t\t\t\tinitPassThrough();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"6to4\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\t\tinitWan6to4();\r\n\t\t\t\t}\r\n\t\t\t\telse if (INCLUDE_IPV6_PASS_THROUGH && type == \"passthrough\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"passthrough\";\r\n\t\t\t\t\tinitPassThrough();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"disabled\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isLinkLocalAddr(addr)\r\n{\r\n\tvar addrArray = addr.split(\":\");\r\n\tvar str = addrArray[0];\r\n\tif (false == /[0-9a-fA-F]{4,4}/.test(str))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar delta = (\"0x\" + str) - 0xFE80;\r\n\tif (delta < 0 || delta  > 63)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddr = \"2001\";\r\n\tfor (var i = 1; i < addrArray.length; i++)\r\n\t{\r\n\t\taddr += \":\" + addrArray[i]; \r\n\t}\r\n\treturn isValidGLUIP6AddrStrict(addr);\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\twan_iplistarg_sta.X_TP_PDEnabled = PDEnable;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") && ($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") \r\n\t\t\t&& (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_ip6=formatIPv6(temp_ip6);\r\n\t\t\t}\r\n\t\t\t/* modify by liweijie,2014-10-10, for ipv6 prefix > 64*/\r\n\t\t\tif (temp_plen < 0 || temp_plen > 128)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" &&\r\n\t\t\t\t\t!isValidGLUIP6AddrStrict(temp_gateway) && !isLinkLocalAddr(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_gateway=formatIPv6(temp_gateway);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t}\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\r\n\t\tif (temp_dnsServers != \"::,::\" &&  temp_secdnsaddr == temp_dnsaddr)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\tif (element)\r\n\t\t\t{\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\t\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.X_TP_PDEnabled = PDEnable;\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t{\r\n\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t\telse if (addressingTypeSelect.value == \"auto\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"Auto\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\tif ($.id(\"dyn_hide_addr_config\").checked){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t\t}\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (temp_secdnsaddr == temp_dnsaddr)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPPPoEAttrs()\r\n{\r\n\twan_pppoelistarg.X_TP_PDEnabled = PDEnable;\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = 1;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = ($.id(\"ppp_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_pppoelistarg.X_TP_IPv4Enabled == 0 && wan_pppoelistarg.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"externIp6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict($.id(\"externIp6Addr\").value))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar tmp_ip6Gateway = $.id(\"externIp6Gateway\").value;\r\n\t\t\tif (tmp_ip6Gateway != \"\" && tmp_ip6Gateway != \"::\" && !isValidGLUIP6AddrStrict(tmp_ip6Gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmp_ip6Gateway=formatIPv6(tmp_ip6Gateway);\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Static\";\r\n\t\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = formatIPv6($.id(\"externIp6Addr\").value);\r\n\t\t\twan_pppoelistarg.X_TP_PrefixLength = 64;\r\n\t\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : \"::\";\r\n\t\t\tif (wan_pppoelistarg.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t\t{\r\n\t\t\t\twan_pppoelistarg.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\t\t\tif (INCLUDE_IPV6_AUTO)\r\n\t\t\t{\r\n\t\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (addressingTypeSelect.value == \"auto\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Auto\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\tif (addressingTypeSelect.value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t//\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = \"::\";\r\n\t//\t\twan_pppoelistarg.X_TP_PrefixLength = 0;\r\n\t//\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = \"::\";\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\tif ($.id(\"ppp_hide_addr_config\").checked){\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"dns6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tvar tmpDns1 = $.id(\"dns6_1\").value;\r\n\t\t\tvar tmpDns2 = $.id(\"dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif (tmpDns1 != \"\" && tmpDns1 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns1))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns1=formatIPv6(tmpDns1);\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 != \"\" && tmpDns2 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns2))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns2=formatIPv6(tmpDns2);\r\n\t\t\t}\r\n\t\t\ttmpDns1 = (tmpDns1) ? tmpDns1 : \"::\";\r\n\t\t\ttmpDns2 = (tmpDns2) ? tmpDns2 : \"::\";\r\n\r\n\t\t\tif ((tmpDns1 + \",\" + tmpDns2) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 == tmpDns1)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 0;\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = \"::,::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_MLDProxyEnabled = $.id(\"ppp_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* check PPPoE with same session */\r\n\tif ($.id(\"ppp_same_session\").checked == true){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = 1;\r\n\t\tPPPoESetConnection = \"ewan_pppoe\";\r\n\t} else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\tPPPoESetConnection = \"ewan_pppoev6\";\r\n\t} \r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addTunnelAttrs()\r\n{\r\n\tvar wanInfName;\r\n\t\r\n\twan6MainTunnelAttrs.enabled = 1;\r\n\twan6MainTunnelAttrs.mechanism = 2;\r\n\t\r\n\twanInfName = wan4ConnName;\r\n\t//if ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\tif ((wanInfName == \"No available interface.\"))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!wanInfName)\r\n\t{\r\n\t\tif (!wan6MainTunnelAttrs.localAddress)\r\n\t\t\twan6MainTunnelAttrs.localAddress = \"0.0.0.0\"; \r\n\t}\r\n\telse\r\n\t{\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n\t\tif (wanIPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanIPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanIPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfor (var i = 0; i < wanPPPv4List.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPPPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPPPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPPPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanL2tpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanL2tpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanL2tpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanL2tpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanPptpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPptpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPptpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPptpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t}\r\n\treturn true;\r\n}\r\nfunction addPassThroughAttrs()\r\n{\r\n\tif (INCLUDE_IPV6_MLD)\r\n\t{\r\n\t\tpass_through_v6.X_TP_MLDProxyEnabled = $.id(\"passthrough_mld_en\").checked ? 1 : 0;\r\n\t} \r\n}\r\nfunction doSave(val)\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addTunnelAttrs()))\treturn;\r\n\t}\r\n\telse if (INCLUDE_IPV6_PASS_THROUGH && linkType == \"passthrough\")\r\n\t{\r\n\t\t// do nothing \r\n\t\taddPassThroughAttrs();\r\n\t}\r\n\telse if (linkType == \"disabled\")\r\n\t{\r\n\t\t//do nothing \r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\",\"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_sta.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t\tif ((PDEnable == 1) && (staticEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_s\"]);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\tif ((PDEnable == 1) && (dynEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_d\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n/*\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (PPPoEv6Enable == 1 && PPPoESetConnection != \"ewan_pppoev6\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1 && PPPoESetConnection != \"ewan_pppoe\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_pppoelistarg.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\tif (PDEnable == 1)\r\n\t\t\t{\r\n\t\t\t\tif (PPPoESetConnection == \"ewan_pppoev6\" && PPPoEv6Enable != 1){\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoev6\"]);\r\n\t\t\t\t} else if (PPPoESetConnection == \"ewan_pppoe\" && PPPoEv4v6Enable != 1){\r\n\t\t\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoe\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, wan6MainTunnelAttrs);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (INCLUDE_IPV6_PASS_THROUGH && linkType == \"passthrough\")\r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=1\",\"X_TP_MLDProxyEnabled=\"+pass_through_v6.X_TP_MLDProxyEnabled]);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=1\"]);\r\n\t\t}\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.reload();\r\n\t\t} \r\n\t}\r\n\telse if (linkType == \"disabled\") \r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\tif(INCLUDE_IPV6_PASS_THROUGH && pass_through_v6.enable == 1)\t\r\n\t\t\t$.act(ACT_SET, IPV6_PASS_THROUGH, null, null, [\"enable=0\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=1\"]);\r\n                \r\n\t\tif (!$.exe()) $.reload();\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction showPPPSameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.addClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}else {\r\n\t\t$.removeClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.removeClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction checkPPPoESameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.reload(\"pppoe:1:1\");\r\n\t}else {\r\n\t\t$.reload(\"pppoe:1:0\");\r\n\t}\r\n}\r\n\r\nfunction initDisabledIPv6(){\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n}\r\nfunction changeIPv6Disable()\r\n{\r\n\tif ($.id(\"wan_enable_ipv6\").checked == true){\r\n\t\t$.id(\"link_type\").disabled = false;\t\r\n\t}else {\r\n\t\t$.id(\"link_type\").disabled = true;\r\n\t}\r\n\tshowLnkType();\r\n}\r\n\r\nfunction hideAutoAddrConfig(type)\r\n{\r\n\tif (type == \"dyn\"){\r\n\t\taddressingTypeSelect.disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t\taddressingTypeSelect.disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t} else if (type == \"ppp\"){\r\n\t\taddressingTypeSelect.disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\taddressingTypeSelect.disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t$.id(\"externIp6_en\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t}\r\n}\r\n\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 WAN </p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p class=\"IPv6 nd\">\r\n\t<b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n\t<input type=\"checkbox\" class=\"T\" id=\"wan_enable_ipv6\" onclick=\"changeIPv6Disable();\" checked />\r\n</p>\r\n<p id=\"wan_conn_type\"><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"XL\" onchange=\"showLnkType();\" >\r\n<option id=\"t_passthrough\" value=\"passthrough\">Pass-Through (Bridge)</option>\r\n<option class=\"T T_dynip6\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IPv6</option>\r\n<option class=\"T T_staip6\" id=\"staticIp\" value=\"staticIp\">Static IPv6</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoEv6</option>\r\n<option class=\"T T_type6to4\" id=\"t_6to4\" value=\"6to4\">Tunnel 6to4</option>\r\n</select></p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"pass_through_ipv6_elem_adv\" class=\"nd\">\r\n\t<div class=\"cl\" id=\"passThroughipClick\" onclick=\"passThroughIPClick(this)\"><p class=\"cl\"></p></div>\r\n\t<div id=\"pass_through_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"passthrough_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"passthrough_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<p id=\"dyn_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"dyn_hide_addr_config\" onclick=\"hideAutoAddrConfig('dyn')\" />\r\n\t\t\t<span class=\"T\" id=\"t_dyn_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type_slaac\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t\t<div id=\"ipv6_cfg_dynamic_auto\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type_auto\" class=\"L\">\r\n\t\t\t<option value=\"auto\" selected=\"selected\">Auto</option>\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p>\r\n\t\t<b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_same_session\" onclick=\"checkPPPoESameSession();\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_same_sess\">PPPoE same session with IPv4 PPPoE connection</span>\r\n\t\t</label>\r\n\t</p>\r\n\t<div id=\"ppp_session_basic\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<div id=\"pppoe_conn_mode\" class=\"nd\">\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<div id=\"pppoe_conn_but\" class=\"nd\">\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<p id=\"ppp_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_hide_addr_config\" onclick=\"hideAutoAddrConfig('ppp')\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type_slaac\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t\t<div id=\"ipv6_cfg_ppp_auto\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type_auto\" class=\"L\" >\r\n\t\t\t<option value=\"auto\" selected=\"selected\">Auto</option>\r\n\t\t\t<option value=\"dhcp\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"wan_select\" class=\"nd\">\r\n<p class=\"nd\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></p>\r\n<p><b class=\"item L T T_wanconn\">cur WAN Connection:</b><span id=\"curwaninf\"></span></p>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_dns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" />&nbsp;</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<div id=\"ppp_session_adv\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar pass_through_v6 = {};\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar wan_pppoev4list = {};\r\nvar PPPoEv4Stk;\r\nvar PPPoEv4Enable;\r\nvar PPPoEv4v6Enable;\r\nvar wan_pppoev6list = {};\r\nvar PPPoEv6Stk; \r\nvar PPPoEv6Enable;\r\nvar PPPoESetConnection;\r\nvar IPv6CfgStk;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar wanIPv4List;\r\nvar wanPPPv4List;\r\nvar wan6to4Enable;\r\nvar wan6to4Stk;\r\nvar wan6MainTunnel;\r\nvar wan6MainTunnelAttrs = {};\r\nvar wan4ConnName;\r\nvar PDEnable = 0;\r\nvar lan6HostStk;\r\nvar wanL2tpConList;\r\nvar wanPptpConList;\r\nvar addressingTypeSelect;\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan6_4.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t\t{\r\n\t\t\t$.h($.id(\"dyn_ip6_addr\"), iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t$.h($.id(\"dyn_prefix_len\"), iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t$.h($.id(\"dyn_ip6_gw\"), iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"6to4\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"6to4:1\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"disabled\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"disabled:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t/* modify by liweijie,2014-10-10,for wan static ip address prefix length > 64 */\r\n\t\t/* $.id(\"stc_prefix_len\").value = \"64\";*/\r\n\t\t$.id(\"stc_prefix_len\").value = wan_iplist_sta.X_TP_PrefixLength;\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"dyn_hide_addr_config\").checked = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"dyn\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (vlan_cfg.workingMode == \"unifi\" || vlan_cfg.workingMode == \"maxis\")\r\n\t{\r\n\t\t$.id(\"pwd\").type = \"text\";\r\n\t\t$.id(\"pwd2\").type = \"text\";\r\n\t}\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\t\t\t\r\n\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){if (!$.locked()) getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"ppp_hide_addr_config\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t$.id(\"ppp_hide_addr_config\").disabled = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"ppp\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t}\r\n\r\n\tshowPPPSameSession();\r\n\r\n\tif (PPPoEv4Enable == 0){\r\n\t\t$.id(\"ppp_same_session\").disabled = true;\r\n\t\t$.addClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t} else {\r\n\t\t$.id(\"ppp_same_session\").disabled = false;\r\n\t\t$.removeClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t}\r\n\r\n\t/* display PPPoE IPv4 IPv6 elem */\r\n\t$.addClass($.id(\"ppp_ip4_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ppp_ip4_elem_adv\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_l2tp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_l2tp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_l2tp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\r\n\tif (wan_pptp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_pptp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_pptp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_pptp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\n\r\nfunction initWan6to4()\r\n{\r\n\tvar found = 0;\r\n\tvar sel = $.id(\"waninf\");\r\n\tvar wanConn;\r\n\t\r\n\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n//\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\" && wanIPv4List[i].connectionStatus == \"Connected\")\r\n\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\")\r\n\t\t{\r\n\t\t\twanConn = wanIPv4List[i];\r\n//\t\t\tif (wanIPv4List[i].X_TP_IfName == wan6MainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPPPv4List.length; j++)\r\n\t{\r\n//\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1 && wanPPPv4List[j].connectionStatus == \"Connected\")\r\n\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1)\r\n\t\t{\r\n\t\t\twanConn = wanPPPv4List[j];\r\n//\t\t\tif (wanPPPv4List[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (found == 1 && wanConn.connectionStatus == \"Connected\")\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), s_str.noAvailIntf);\r\n\t\twan4ConnName = \"\";\r\n\t}\r\n/*\t\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n*/\r\n}\r\n\r\nfunction initPDEnable()\r\n{\r\n\tvar lan6Cfg = $.act(ACT_GL, LAN_IP6_HOST_CFG, null, null, [\"__ifName\", \"IPv6SitePrefixConfigType\"]);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var index = 0; index < lan6Cfg.length; index++)\r\n\t\t{\r\n\t\t\tif (lan6Cfg[index].__ifName == \"br0\")\r\n\t\t\t{\r\n\t\t\t\tif (lan6Cfg[index].IPv6SitePrefixConfigType == \"Delegated\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 1;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tinitPDEnable();\r\n\t\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv6ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv6Enabled\"]);\r\n\t\tvar wanPPPv6ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv6Enabled\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv6ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\twanv4Index = 0;\r\n\t\t\t$.each(wanPPPv6ListAll,function(){\r\n\t\t\t\t//if (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n/*\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}*/\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\t\r\n\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\twan6MainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tvar IPv6Cfg  = $.act(ACT_GET, IPV6_CFG, null, null);\r\n\tvlan_cfg = $.act(ACT_GET, VLAN, null, null, null);\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\"))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv6Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv6Enable = this.enable;\r\n\t\t\t\t\twan_pppoev6list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv4Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv4Enable = this.enable;\r\n\t\t\t\t\tPPPoEv4v6Enable = this.X_TP_IPv6Enabled;\r\n\t\t\t\t\twan_pppoev4list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif ((this.enable == 1) && (this.transportType == \"PPPoE\") && (this.X_TP_IPv6Enabled == 1))\r\n\t\t\t\t{\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* show which pppoe connection */\r\n\t\tif ($.mainParam && $.mainParam.split(\":\")[2])\r\n\t\t{\r\n\t\t\tif ($.mainParam.split(\":\")[2] == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (PPPoEv4Enable == 1 && PPPoEv4v6Enable == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\t\tif (wan6MainTunnel)\r\n\t\t{\r\n\t\t\tif (wan6MainTunnel.enabled == 1)\r\n\t\t{\r\n\t\t\ttype = \"6to4\";\r\n\t\t\t}\r\n\t\t\twan6to4Enable = wan6MainTunnel.enabled;\r\n\t\t\twan6to4Stk = wan6MainTunnel.__stack;\r\n\t\t\twanIPv4List = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\t\t\twanPPPv4List = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\t\t}\r\n/*\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}*/\r\n\r\n\t\tif (IPv6Cfg.disableIPv6 == 1 && loadType ==  \"init\"){\r\n\t\t\ttype = \"disabled\";\r\n\t\t}\r\n\t\tIPv6CfgStk = IPv6Cfg.__stack;\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"6to4\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\tinitWan6to4();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"disabled\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\tinitDisabledIPv6();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"6to4\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\t\tinitWan6to4();\r\n\t\t\t\t}else if (type == \"disabled\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isLinkLocalAddr(addr)\r\n{\r\n\tvar addrArray = addr.split(\":\");\r\n\tvar str = addrArray[0];\r\n\tif (false == /[0-9a-fA-F]{4,4}/.test(str))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar delta = (\"0x\" + str) - 0xFE80;\r\n\tif (delta < 0 || delta  > 63)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddr = \"2001\";\r\n\tfor (var i = 1; i < addrArray.length; i++)\r\n\t{\r\n\t\taddr += \":\" + addrArray[i]; \r\n\t}\r\n\treturn isValidGLUIP6AddrStrict(addr);\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\twan_iplistarg_sta.X_TP_PDEnabled = PDEnable;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") && ($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") \r\n\t\t\t&& (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* modify by liweijie,2014-10-10, for ipv6 prefix > 64*/\r\n\t\t\tif (temp_plen < 0 || temp_plen > 128)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" &&\r\n\t\t\t\t\t!isValidGLUIP6AddrStrict(temp_gateway) && !isLinkLocalAddr(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\r\n\t\tif (temp_dnsServers != \"::,::\" &&  temp_secdnsaddr == temp_dnsaddr)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\tif (element)\r\n\t\t\t{\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\t\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.X_TP_PDEnabled = PDEnable;\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\tif ($.id(\"dyn_hide_addr_config\").checked){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (temp_secdnsaddr == temp_dnsaddr)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPPPoEAttrs()\r\n{\r\n\twan_pppoelistarg.X_TP_PDEnabled = PDEnable;\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = 1;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = ($.id(\"ppp_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_pppoelistarg.X_TP_IPv4Enabled == 0 && wan_pppoelistarg.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"externIp6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict($.id(\"externIp6Addr\").value))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar tmp_ip6Gateway = $.id(\"externIp6Gateway\").value;\r\n\t\t\tif (tmp_ip6Gateway != \"\" && tmp_ip6Gateway != \"::\" && !isValidGLUIP6AddrStrict(tmp_ip6Gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Static\";\r\n\t\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = $.id(\"externIp6Addr\").value;\r\n\t\t\twan_pppoelistarg.X_TP_PrefixLength = 64;\r\n\t\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : \"::\";\r\n\t\t\tif (wan_pppoelistarg.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t\t{\r\n\t\t\t\twan_pppoelistarg.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"ppp_ip6addr_type\").value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t//\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = \"::\";\r\n\t//\t\twan_pppoelistarg.X_TP_PrefixLength = 0;\r\n\t//\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = \"::\";\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\tif ($.id(\"ppp_hide_addr_config\").checked){\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"dns6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tvar tmpDns1 = $.id(\"dns6_1\").value;\r\n\t\t\tvar tmpDns2 = $.id(\"dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif (tmpDns1 != \"\" && tmpDns1 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns1))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (tmpDns2 != \"\" && tmpDns2 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns2))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\ttmpDns1 = (tmpDns1) ? tmpDns1 : \"::\";\r\n\t\t\ttmpDns2 = (tmpDns2) ? tmpDns2 : \"::\";\r\n\r\n\t\t\tif ((tmpDns1 + \",\" + tmpDns2) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 == tmpDns1)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 0;\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = \"::,::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_MLDProxyEnabled = $.id(\"ppp_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* check PPPoE with same session */\r\n\tif ($.id(\"ppp_same_session\").checked == true){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = 1;\r\n\t\tPPPoESetConnection = \"ewan_pppoe\";\r\n\t} else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\tPPPoESetConnection = \"ewan_pppoev6\";\r\n\t} \r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addTunnelAttrs()\r\n{\r\n\tvar wanIntfName;\r\n\t\r\n\twan6MainTunnelAttrs.enabled = 1;\r\n\twan6MainTunnelAttrs.mechanism = 2;\r\n\t\r\n\twanInfName = wan4ConnName;\r\n\t//if ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\tif ((wanInfName == \"No available interface.\"))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!wanInfName)\r\n\t{\r\n\t\tif (!wan6MainTunnelAttrs.localAddress)\r\n\t\t\twan6MainTunnelAttrs.localAddress = \"0.0.0.0\"; \r\n\t}\r\n\telse\r\n\t{\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n\t\tif (wanIPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanIPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanIPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfor (var i = 0; i < wanPPPv4List.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPPPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPPPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPPPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction doSave(val)\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addTunnelAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"disabled\")\r\n\t{\r\n\t\t//do nothing \r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\",\"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_sta.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t\tif ((PDEnable == 1) && (staticEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_s\"]);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\tif ((PDEnable == 1) && (dynEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_d\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n/*\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (PPPoEv6Enable == 1 && PPPoESetConnection != \"ewan_pppoev6\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1 && PPPoESetConnection != \"ewan_pppoe\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_pppoelistarg.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\tif (PDEnable == 1)\r\n\t\t\t{\r\n\t\t\t\tif (PPPoESetConnection == \"ewan_pppoev6\" && PPPoEv6Enable != 1){\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoev6\"]);\r\n\t\t\t\t} else if (PPPoESetConnection == \"ewan_pppoe\" && PPPoEv4v6Enable != 1){\r\n\t\t\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoe\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, wan6MainTunnelAttrs);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"disabled\") \r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=1\"]);\r\n\r\n\t\tif (!$.exe()) $.reload();\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction showPPPSameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.addClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}else {\r\n\t\t$.removeClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.removeClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction checkPPPoESameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.reload(\"pppoe:1:1\");\r\n\t}else {\r\n\t\t$.reload(\"pppoe:1:0\");\r\n\t}\r\n}\r\n\r\nfunction initDisabledIPv6(){\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n}\r\nfunction changeIPv6Disable()\r\n{\r\n\tif ($.id(\"wan_enable_ipv6\").checked == true){\r\n\t\t$.id(\"link_type\").disabled = false;\t\r\n\t}else {\r\n\t\t$.id(\"link_type\").disabled = true;\r\n\t}\r\n\tshowLnkType();\r\n}\r\n\r\nfunction hideAutoAddrConfig(type)\r\n{\r\n\tif (type == \"dyn\"){\r\n\t\t$.id(\"dyn_ip6addr_type\").disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t} else if (type == \"ppp\"){\r\n\t\t$.id(\"ppp_ip6addr_type\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t$.id(\"externIp6_en\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t}\r\n}\r\n\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 WAN </p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p class=\"IPv6 nd\">\r\n\t<b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n\t<input type=\"checkbox\" class=\"T\" id=\"wan_enable_ipv6\" onclick=\"changeIPv6Disable();\" checked />\r\n</p>\r\n<p id=\"wan_conn_type\"><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"M\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip6\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IPv6</option>\r\n<option class=\"T T_staip6\" id=\"staticIp\" value=\"staticIp\">Static IPv6</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoEv6</option>\r\n<option id=\"t_6to4\" value=\"6to4\">Tunnel 6to4</option>\r\n</select></p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<p id=\"dyn_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"dyn_hide_addr_config\" onclick=\"hideAutoAddrConfig('dyn')\" />\r\n\t\t\t<span class=\"T\" id=\"t_dyn_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p>\r\n\t\t<b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_same_session\" onclick=\"checkPPPoESameSession();\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_same_sess\">PPPoE same session with IPv4 PPPoE connection</span>\r\n\t\t</label>\r\n\t</p>\r\n\t<div id=\"ppp_session_basic\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<div id=\"pppoe_conn_mode\" class=\"nd\">\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<div id=\"pppoe_conn_but\" class=\"nd\">\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<p id=\"ppp_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_hide_addr_config\" onclick=\"hideAutoAddrConfig('ppp')\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"wan_select\" class=\"nd\">\r\n<p class=\"nd\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></p>\r\n<p><b class=\"item L T T_wanconn\">cur WAN Connection:</b><span id=\"curwaninf\"></span></p>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_dns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" />&nbsp;</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<div id=\"ppp_session_adv\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar wan_pppoev4list = {};\r\nvar PPPoEv4Stk;\r\nvar PPPoEv4Enable;\r\nvar PPPoEv4v6Enable;\r\nvar wan_pppoev6list = {};\r\nvar PPPoEv6Stk; \r\nvar PPPoEv6Enable;\r\nvar PPPoESetConnection;\r\nvar IPv6CfgStk;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar wanIPv4List;\r\nvar wanPPPv4List;\r\nvar wan6to4Enable;\r\nvar wan6to4Stk;\r\nvar wan6MainTunnel;\r\nvar wan6MainTunnelAttrs = {};\r\nvar wan4ConnName;\r\nvar PDEnable = 0;\r\nvar lan6HostStk;\r\nvar vlan_cfg;\r\n\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan6_5.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 8
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t\t{\r\n\t\t\t$.h($.id(\"dyn_ip6_addr\"), iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t$.h($.id(\"dyn_prefix_len\"), iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t$.h($.id(\"dyn_ip6_gw\"), iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t}\r\n}\r\nfunction formatIPv6(address)\r\n{\r\n\taddress = address.replace(/:(0){1,4}/g, ':0');\r\n\taddress = address.replace(/(?!((:0:)|(:0$)))(:0)/g, ':');\r\n\tif (-1 == address.indexOf(\"::\"))\r\n\t{\r\n\t\taddress = address.replace(/(:0)+:/, '::');\r\n\t}\r\n\telse\r\n\t{\r\n\t\taddress = address.replace(/(:0)*::/, '::');\r\n\t}\r\n\treturn address;\r\n}\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//else if (parseInt(substr,16) >= 65280)\r\n\t\t//{\r\n\t\t//\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t//\tflag = false;\r\n\t\t//}\r\n\t\t//else if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t//{\r\n\t\t//\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t//\tflag = true;\r\n\t\t//}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"6to4\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"6to4:1\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"disabled\")\r\n\t{\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\t$.reload(\"disabled:1\");\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t$.id(\"ppp_hide_addr_config\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t/* modify by liweijie,2014-10-10,for wan static ip address prefix length > 64 */\r\n\t\t/* $.id(\"stc_prefix_len\").value = \"64\";*/\r\n\t\t$.id(\"stc_prefix_len\").value = wan_iplist_sta.X_TP_PrefixLength;\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"dyn_hide_addr_config\").checked = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"dyn\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\t\t\t\r\n\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){if (!$.locked()) getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t$.removeClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t$.id(\"ppp_hide_addr_config\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t$.id(\"ppp_hide_addr_config\").disabled = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t\thideAutoAddrConfig(\"ppp\");\r\n\t\t} else {\r\n\t\t\t$.addClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t}\r\n\r\n\tshowPPPSameSession();\r\n\r\n\tif (PPPoEv4Enable == 0){\r\n\t\t$.id(\"ppp_same_session\").disabled = true;\r\n\t\t$.addClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t} else {\r\n\t\t$.id(\"ppp_same_session\").disabled = false;\r\n\t\t$.removeClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t}\r\n\r\n\t/* display PPPoE IPv4 IPv6 elem */\r\n\t$.addClass($.id(\"ppp_ip4_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ppp_ip4_elem_adv\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_l2tp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_l2tp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_l2tp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\r\n\tif (wan_pptp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_pptp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_pptp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_pptp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\n\r\nfunction initWan6to4()\r\n{\r\n\tvar found = 0;\r\n\tvar sel = $.id(\"waninf\");\r\n\tvar wanConn;\r\n\t\r\n\t$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n//\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\" && wanIPv4List[i].connectionStatus == \"Connected\")\r\n\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\")\r\n\t\t{\r\n\t\t\twanConn = wanIPv4List[i];\r\n//\t\t\tif (wanIPv4List[i].X_TP_IfName == wan6MainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPPPv4List.length; j++)\r\n\t{\r\n//\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1 && wanPPPv4List[j].connectionStatus == \"Connected\")\r\n\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1)\r\n\t\t{\r\n\t\t\twanConn = wanPPPv4List[j];\r\n//\t\t\tif (wanPPPv4List[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanL2tpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanL2tpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanL2tpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanPptpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanPptpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanPptpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (found == 1 && wanConn.connectionStatus == \"Connected\")\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), s_str.noAvailIntf);\r\n\t\twan4ConnName = \"\";\r\n\t}\r\n/*\t\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n*/\r\n}\r\n\r\nfunction initPDEnable()\r\n{\r\n\tvar lan6Cfg = $.act(ACT_GL, LAN_IP6_HOST_CFG, null, null, [\"__ifName\", \"IPv6SitePrefixConfigType\"]);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var index = 0; index < lan6Cfg.length; index++)\r\n\t\t{\r\n\t\t\tif (lan6Cfg[index].__ifName == \"br0\")\r\n\t\t\t{\r\n\t\t\t\tif (lan6Cfg[index].IPv6SitePrefixConfigType == \"Delegated\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 1;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 0;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tinitPDEnable();\r\n\t\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv6ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv6Enabled\"]);\r\n\t\tvar wanPPPv6ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv6Enabled\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv6ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\twanv4Index = 0;\r\n\t\t\t$.each(wanPPPv6ListAll,function(){\r\n\t\t\t\t//if (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n/*\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}*/\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\t\r\n\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\twan6MainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tvar IPv6Cfg  = $.act(ACT_GET, IPV6_CFG, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\"))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv6Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv6Enable = this.enable;\r\n\t\t\t\t\twan_pppoev6list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv4Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv4Enable = this.enable;\r\n\t\t\t\t\tPPPoEv4v6Enable = this.X_TP_IPv6Enabled;\r\n\t\t\t\t\twan_pppoev4list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif ((this.enable == 1) && (this.transportType == \"PPPoE\") && (this.X_TP_IPv6Enabled == 1))\r\n\t\t\t\t{\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* show which pppoe connection */\r\n\t\tif ($.mainParam && $.mainParam.split(\":\")[2])\r\n\t\t{\r\n\t\t\tif ($.mainParam.split(\":\")[2] == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (PPPoEv4Enable == 1 && PPPoEv4v6Enable == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\t\tif (wan6MainTunnel)\r\n\t\t{\r\n\t\t\tif (wan6MainTunnel.enabled == 1)\r\n\t\t\t{\r\n\t\t\t\ttype = \"6to4\";\r\n\t\t\t}\r\n\t\t\twan6to4Enable = wan6MainTunnel.enabled;\r\n\t\t\twan6to4Stk = wan6MainTunnel.__stack;\r\n\t\t\twanIPv4List = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\t\t\twanPPPv4List = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\t\t\tif (INCLUDE_L2TP)\r\n\t\t\t{\r\n\t\t\t\twanL2tpConList = $.act(ACT_GL, WAN_L2TP_CONN, null, null);\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_PPTP)\r\n\t\t\t{\r\n\t\t\t\twanPptpConList = $.act(ACT_GL, WAN_PPTP_CONN, null, null);\r\n\t\t\t}\r\n\t\t}\r\n/*\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}*/\r\n\r\n\t\tif (IPv6Cfg.disableIPv6 == 1 && loadType ==  \"init\"){\r\n\t\t\ttype = \"disabled\";\r\n\t\t}\r\n\t\tIPv6CfgStk = IPv6Cfg.__stack;\r\n\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"6to4\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\tinitWan6to4();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"disabled\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\tinitDisabledIPv6();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"6to4\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"6to4\";\r\n\t\t\t\t\tinitWan6to4();\r\n\t\t\t\t}else if (type == \"disabled\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"wan_enable_ipv6\").checked = false;\r\n\t\t\t\t\t$.addClass($.id(\"wan_conn_type\"), \"nd\");\r\n\t\t\t\t\tinitDisabledIPv6();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isLinkLocalAddr(addr)\r\n{\r\n\tvar addrArray = addr.split(\":\");\r\n\tvar str = addrArray[0];\r\n\tif (false == /[0-9a-fA-F]{4,4}/.test(str))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar delta = (\"0x\" + str) - 0xFE80;\r\n\tif (delta < 0 || delta  > 63)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\taddr = \"2001\";\r\n\tfor (var i = 1; i < addrArray.length; i++)\r\n\t{\r\n\t\taddr += \":\" + addrArray[i]; \r\n\t}\r\n\treturn isValidGLUIP6AddrStrict(addr);\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\twan_iplistarg_sta.X_TP_PDEnabled = PDEnable;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") && ($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") \r\n\t\t\t&& (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_ip6=formatIPv6(temp_ip6);\r\n\t\t\t}\r\n\t\t\t/* modify by liweijie,2014-10-10, for ipv6 prefix > 64*/\r\n\t\t\tif (temp_plen < 0 || temp_plen > 128)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" &&\r\n\t\t\t\t\t!isValidGLUIP6AddrStrict(temp_gateway) && !isLinkLocalAddr(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_gateway=formatIPv6(temp_gateway);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t}\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\r\n\t\tif (temp_dnsServers != \"::,::\" &&  temp_secdnsaddr == temp_dnsaddr)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\tif (element)\r\n\t\t\t{\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\t\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.X_TP_PDEnabled = PDEnable;\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\tif ($.id(\"dyn_hide_addr_config\").checked){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t\t}\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (temp_secdnsaddr == temp_dnsaddr)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPPPoEAttrs()\r\n{\r\n\twan_pppoelistarg.X_TP_PDEnabled = PDEnable;\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = 1;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = ($.id(\"ppp_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_pppoelistarg.X_TP_IPv4Enabled == 0 && wan_pppoelistarg.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"externIp6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict($.id(\"externIp6Addr\").value))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar tmp_ip6Gateway = $.id(\"externIp6Gateway\").value;\r\n\t\t\tif (tmp_ip6Gateway != \"\" && tmp_ip6Gateway != \"::\" && !isValidGLUIP6AddrStrict(tmp_ip6Gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"externIp6Gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmp_ip6Gateway=formatIPv6(tmp_ip6Gateway);\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Static\";\r\n\t\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = formatIPv6($.id(\"externIp6Addr\").value);\r\n\t\t\twan_pppoelistarg.X_TP_PrefixLength = 64;\r\n\t\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : \"::\";\r\n\t\t\tif (wan_pppoelistarg.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t\t{\r\n\t\t\t\twan_pppoelistarg.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"ppp_ip6addr_type\").value == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t//\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = \"::\";\r\n\t//\t\twan_pppoelistarg.X_TP_PrefixLength = 0;\r\n\t//\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = \"::\";\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\tif ($.id(\"ppp_hide_addr_config\").checked){\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"dns6_en\").checked == 1)\r\n\t\t{\r\n\t\t\tvar tmpDns1 = $.id(\"dns6_1\").value;\r\n\t\t\tvar tmpDns2 = $.id(\"dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif (tmpDns1 != \"\" && tmpDns1 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns1))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns1=formatIPv6(tmpDns1);\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 != \"\" && tmpDns2 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns2))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns2=formatIPv6(tmpDns2);\r\n\t\t\t}\r\n\t\t\ttmpDns1 = (tmpDns1) ? tmpDns1 : \"::\";\r\n\t\t\ttmpDns2 = (tmpDns2) ? tmpDns2 : \"::\";\r\n\r\n\t\t\tif ((tmpDns1 + \",\" + tmpDns2) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 == tmpDns1)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_CONFLICT);\r\n\t\t\t\telement = $.id(\"dns6_2\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 0;\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = \"::,::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_MLDProxyEnabled = $.id(\"ppp_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* check PPPoE with same session */\r\n\tif ($.id(\"ppp_same_session\").checked == true){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = 1;\r\n\t\tPPPoESetConnection = \"ewan_pppoe\";\r\n\t} else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\tPPPoESetConnection = \"ewan_pppoev6\";\r\n\t} \r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addTunnelAttrs()\r\n{\r\n\tvar wanIntfName;\r\n\t\r\n\twan6MainTunnelAttrs.enabled = 1;\r\n\twan6MainTunnelAttrs.mechanism = 2;\r\n\t\r\n\twanInfName = wan4ConnName;\r\n\t//if ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\tif ((wanInfName == \"No available interface.\"))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!wanInfName)\r\n\t{\r\n\t\tif (!wan6MainTunnelAttrs.localAddress)\r\n\t\t\twan6MainTunnelAttrs.localAddress = \"0.0.0.0\"; \r\n\t}\r\n\telse\r\n\t{\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n\t\tif (wanIPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanIPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanIPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfor (var i = 0; i < wanPPPv4List.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPPPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPPPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPPPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanL2tpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanL2tpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanL2tpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanL2tpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanPptpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPptpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPptpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPptpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction doSave(val)\r\n{\r\n\tvar linkType = $.id(\"link_type\").value;\r\n\tif ($.id(\"wan_enable_ipv6\").checked == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addTunnelAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"disabled\")\r\n\t{\r\n\t\t//do nothing \r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\",\"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_sta.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t\tif ((PDEnable == 1) && (staticEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_s\"]);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\tif ((PDEnable == 1) && (dynEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_d\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n/*\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (PPPoEv6Enable == 1 && PPPoESetConnection != \"ewan_pppoev6\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1 && PPPoESetConnection != \"ewan_pppoe\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_pppoelistarg.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\tif (PDEnable == 1)\r\n\t\t\t{\r\n\t\t\t\tif (PPPoESetConnection == \"ewan_pppoev6\" && PPPoEv6Enable != 1){\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoev6\"]);\r\n\t\t\t\t} else if (PPPoESetConnection == \"ewan_pppoe\" && PPPoEv4v6Enable != 1){\r\n\t\t\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoe\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, wan6MainTunnelAttrs);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"disabled\") \r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=1\"]);\r\n\r\n\t\tif (!$.exe()) $.reload();\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction showPPPSameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.addClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}else {\r\n\t\t$.removeClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t$.removeClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction checkPPPoESameSession()\r\n{\r\n\tvar checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tif (checkSameSession == true){\r\n\t\t$.reload(\"pppoe:1:1\");\r\n\t}else {\r\n\t\t$.reload(\"pppoe:1:0\");\r\n\t}\r\n}\r\n\r\nfunction initDisabledIPv6(){\r\n\t$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n}\r\nfunction changeIPv6Disable()\r\n{\r\n\tif ($.id(\"wan_enable_ipv6\").checked == true){\r\n\t\t$.id(\"link_type\").disabled = false;\t\r\n\t}else {\r\n\t\t$.id(\"link_type\").disabled = true;\r\n\t}\r\n\tshowLnkType();\r\n}\r\n\r\nfunction hideAutoAddrConfig(type)\r\n{\r\n\tif (type == \"dyn\"){\r\n\t\t$.id(\"dyn_ip6addr_type\").disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t} else if (type == \"ppp\"){\r\n\t\t$.id(\"ppp_ip6addr_type\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t$.id(\"externIp6_en\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t}\r\n}\r\n\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 WAN </p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p class=\"IPv6 nd\">\r\n\t<b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n\t<input type=\"checkbox\" class=\"T\" id=\"wan_enable_ipv6\" onclick=\"changeIPv6Disable();\" checked />\r\n</p>\r\n<p id=\"wan_conn_type\"><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"M\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip6\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IPv6</option>\r\n<option class=\"T T_staip6\" id=\"staticIp\" value=\"staticIp\">Static IPv6</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoEv6</option>\r\n<option class=\"T T_type6to4\" id=\"t_6to4\" value=\"6to4\">Tunnel 6to4</option>\r\n</select></p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<p id=\"dyn_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"dyn_hide_addr_config\" onclick=\"hideAutoAddrConfig('dyn')\" />\r\n\t\t\t<span class=\"T\" id=\"t_dyn_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p>\r\n\t\t<b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_same_session\" onclick=\"checkPPPoESameSession();\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_same_sess\">PPPoE same session with IPv4 PPPoE connection</span>\r\n\t\t</label>\r\n\t</p>\r\n\t<div id=\"ppp_session_basic\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<div id=\"pppoe_conn_mode\" class=\"nd\">\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<div id=\"pppoe_conn_but\" class=\"nd\">\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<p id=\"ppp_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_hide_addr_config\" onclick=\"hideAutoAddrConfig('ppp')\" />\r\n\t\t\t<span class=\"T\" id=\"t_ppp_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></p>\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"wan_select\" class=\"nd\">\r\n<p class=\"nd\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></p>\r\n<p><b class=\"item L T T_wanconn\">cur WAN Connection:</b><span id=\"curwaninf\"></span></p>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_dns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" />&nbsp;</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<div id=\"ppp_session_adv\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1492\" /> (<span class=\"T T_mtu1492\">Valoarea implicită este 1492</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar wan_pppoev4list = {};\r\nvar PPPoEv4Stk;\r\nvar PPPoEv4Enable;\r\nvar PPPoEv4v6Enable;\r\nvar wan_pppoev6list = {};\r\nvar PPPoEv6Stk; \r\nvar PPPoEv6Enable;\r\nvar PPPoESetConnection;\r\nvar IPv6CfgStk;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar wanIPv4List;\r\nvar wanPPPv4List;\r\nvar wan6to4Enable;\r\nvar wan6to4Stk;\r\nvar wan6MainTunnel;\r\nvar wan6MainTunnelAttrs = {};\r\nvar wan4ConnName;\r\nvar PDEnable = 0;\r\nvar lan6HostStk;\r\nvar wanL2tpConList;\r\nvar wanPptpConList;\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan_2.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 9
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n\t/*add end*/\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t\t{\r\n\t\t\t$.h($.id(\"secondDynIpAddress\"), iplist_dyn.externalIPAddress);\r\n\t\t\t$.h($.id(\"secondDynIpMask\"), iplist_dyn.subnetMask);\r\n\t\t\tif (iplist_dyn.enable == 1) {\r\n\t\t\t\tif (iplist_dyn.connectionStatus == \"Connected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t\t\t} else if (iplist_dyn.connectionStatus == \"Disconnected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\r\n\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t{\r\n\t\t$.h($.id(\"dyn_ip\"), iplist_dyn.externalIPAddress);\r\n\t\t$.h($.id(\"dyn_mask\"), iplist_dyn.subnetMask);\r\n\t\t$.h($.id(\"dyn_gw\"), iplist_dyn.defaultGateway);\r\n\t\t\r\n\t\tif (iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), l2tplist.externalIPAddressIP ? l2tplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), l2tplist.subnetMaskIP ? l2tplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), l2tplist.defaultGatewayIP ? l2tplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), l2tplist.DNSServersIP.split(\",\")[0] ? l2tplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), l2tplist.DNSServersIP.split(\",\")[1] ? l2tplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), pptplist.externalIPAddressIP ? pptplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), pptplist.subnetMaskIP ? pptplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), pptplist.defaultGatewayIP ? pptplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), pptplist.DNSServersIP.split(\",\")[0] ? pptplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), pptplist.DNSServersIP.split(\",\")[1] ? pptplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"bpa:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"bpa:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameSubnet(wanip, wanmask, lanip, lanmask)\r\n{\r\n\twanip  = $.ip2num(wanip);\r\n\twanmask = $.ip2num(wanmask);\r\n\tlanip = $.ip2num(lanip);\r\n\tlanmask = $.ip2num(lanmask);\r\n\tif ((lanip & lanmask) == (wanip & lanmask) || ((lanip & wanmask) == (wanip & wanmask)))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\toldStaIp = wan_iplist_sta.externalIPAddress;\r\n\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t{\r\n\t\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"ip_address\").value = \"0.0.0.0\";\r\n\t\t$.id(\"netmask\").value = \"0.0.0.0\";\r\n\t}\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ip\", wan_iplist_sta.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$.id(\"stc_prefix_len\").value = \"64\";\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"dyn_ip\", wan_iplist_dyn.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initSecConnStaIp()\r\n{\r\n\t$.id(\"secConnType_sta\").checked = true;\r\n\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\r\n\t$.id(\"secondStaIpAddress\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"secondStaIpMask\").value = wan_iplist_sta.subnetMask;\r\n}\r\nfunction initSecConnDynIp()\r\n{\r\n\t$.id(\"secConnType_dyn\").checked = true;\r\n\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\r\n\t$.h($.id(\"secondDynIpAddress\"), wan_iplist_dyn.externalIPAddress);\r\n\t$.h($.id(\"secondDynIpMask\"), wan_iplist_dyn.subnetMask);\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n}\r\nfunction initSecondaryConn()\r\n{\t\t\t\r\n\tif (wan_pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t{\r\n\t\tinitSecConnDynIp();\r\n\t\tshowSecondConnect(\"dynamic\");\r\n\t}\r\n\telse if (wan_pppoelist.secondConnection == \"sec_conn_staip\")\r\n\t{\r\n\t\t/*initSecConnStaIp();\r\n\t\tshowSecondConnect(\"static\");*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t\tinitSecConnStaIp();\r\n\t\t\tshowSecondConnect(\"static\");\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"secConnType_disable\").checked = true;\r\n\t\tshowSecondConnect();\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (wan_pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n\tif (wan_pppoelist.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_pppoelist.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").disabled = 1;\t\r\n\t\t$.id(\"ppp_fullnat_en\").checked = 0;\t\r\n\t}\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ppp\", wan_pppoelist.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tinitSecondaryConn();\r\n\t}\r\n\t\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){ getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\r\n\t\t/* hide PPPoE IPv6 elem, liweijie */\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_igmp_msg\"), \"nd\");\t\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"l2tp_igmp_en\").checked = (wan_l2tp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"l2tp\", wan_l2tp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"pptp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicPptpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticPptpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"pptp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"pptp_igmp_en\").checked = (wan_pptp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"pptp\", wan_pptp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\nfunction initBPA()\r\n{\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"bpa_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n}\r\nfunction init()\r\n{\r\n\tif (INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ppp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"bpa_igmp\"),\"nd\");\r\n\t}\r\n\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\t$.removeClass($.id(\"div_secConn\"), \"nd\");\r\n\t}\r\n\t/* End Add */\r\n\t\r\n    if (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_BPA)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"bpa\";\r\n\t\toption.text = s_str.bpa_cable;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\tif(INCLUDE_KOREA_SPEC || INCLUDE_BR_SPEC)\r\n\t\t{\r\n\t\t    $.addClass(option,\"nd\");\r\n\t\t}\r\n\t}\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\tvar lanIpIntfObj = $.act(ACT_GL, LAN_IP_INTF, null, null, [\"IPInterfaceIPAddress\", \"IPInterfaceSubnetMask\"])\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\t\r\n\t\t$.each(lanIpIntfObj, function(){\r\n\t\t\tlanip = this.IPInterfaceIPAddress;\r\n\t\t\tlanmask = this.IPInterfaceSubnetMask;\r\n\t\t});\r\n\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\") && (this.X_TP_BpaEnable == 0))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\t\t\t\telse if ((this.enable == 1) && (this.X_TP_BpaEnable == 1))\r\n\t\t\t\t\ttype = \"bpa\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEStk = this.__stack;\r\n\t\t\t\t\tPPPoEEnable = this.enable;\r\n\t\t\t\t\twan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.transportType == \"PPPoE\"))\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"bpa\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\tinitBPA();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_s\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pppoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"l2tp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\t\tinitL2TP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pptp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\t\tinitPPTP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"bpa_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\t\tinitBPA();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.loadHelp(\"ethDynamicIp_h.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\tinitBPA();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_GW_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"ip_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n        }\r\n\t}\r\n\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_plen != 64)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"dyn_ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs()\r\n{\r\n\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t{\r\n\t\twan_iplistarg_dyn.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\tif(!INCLUDE_UN_IPTV)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t/*add by wanghao*/\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t\t/*add end*/\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_dyn.MaxMTUSize = 1500;\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n\t}\r\n\telse if($.id(\"secConnType_sta\").checked == true)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"secondStaIpAddress\").value;\r\n\t\tvar temp_mask = $.id(\"secondStaIpMask\").value;\r\n\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"secondStaIpAddress\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t\t/*add by wanghao*/\r\n\t\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled) \r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t\t}\r\n\t\t\t\t/*add end*/\r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction addPPPoEAttrs()\r\n{\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = wan_pppoelist.NATEnabled;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pppoelistarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t}\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\treturn addSecondaryConnAttrs();\r\n\t}\r\n\t/* End Add */\r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1460))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_L2TP_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_l2tp_listarg.IGMPProxyEnabled = $.id(\"l2tp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_l2tp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.IGMPForceVersion = setIGMPForceVersion(\"l2tp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1420))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPTP_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pptp_listarg.IGMPProxyEnabled = $.id(\"pptp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pptp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pptp_listarg.IGMPForceVersion = setIGMPForceVersion(\"pptp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addBpaAttrs()\r\n{\r\n/*\twan_bpa_listarg.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t*/\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($.id(\"bpa_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"bpa_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\tif ($.id(\"bpa_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\t\r\n\tif ($.id(\"bpa_authserver\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\telement = $.id(\"bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\tif ($.id(\"bpa_authdomain\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\telement = $.id(\"bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\t\r\n\tif ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction doSave(val)\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addBpaAttrs()))\treturn;\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t/*if (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);*/\r\n\t\t/* set PPPoE's second connection to disable if the old static ip starts with \"169.\" */\r\n\t\tif (oldStaIp.substring(0,4) == \"169.\")\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\", \"secondConnection=sec_conn_disable\"]);\r\n\t\t}\r\n\t\telse if (PPPoEEnable == 1)\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\"]);\t\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (staticEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (dynEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/*if (staticEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);*/\t\r\n\t\t\tif (dynEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (PPPoEEnable == 1))\r\n\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\"]);\r\n\t\t\t\r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t}\r\n\t\t\t\telse/* if ($.id(\"secConnType_sta\").checked == true)*/\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_bpa_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConnBpa()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"bpa_conn\").disabled = 1;\r\n\r\n\t$.act(ACT_OP, ACT_OP_BPA_CONN, wan_bpa_list.__stack);\r\n\r\n\t$.removeClass($.id(\"BpaConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"bpa_conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConnBpa()\r\n{\r\n\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\r\n\t$.act(ACT_OP, ACT_OP_BPA_DISCONN, wan_bpa_list.__stack);\r\n\t\r\n\t$.addLoading($.id(\"bpa_disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction wanDetecting()\r\n{\r\n\tvar wanTypeObj = $.act(ACT_GET,WAN_TYPE_DETECT,null,null,[\"state\", \"wanType\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanTypeObj.state == 3)\r\n\t\t{\r\n\t\t\tswitch(wanTypeObj.wanType)\r\n\t\t\t{\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_dyma_ip' name='t_dyma_ip'>\"+s_str.dynip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_stat_ip' name='t_stat_ip'>\"+s_str.staip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_pppoe' name='t_pppoe'>\"+s_str.pppoe_ru+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n}\r\nfunction doWanDetect()\r\n{\r\n\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanEthIntfObj.status == \"NoLink\")\r\n\t\t{\r\n\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t$.act(ACT_OP, ACT_OP_WAN_TYPE_DETECT, null);\r\n\t\r\n\tif(!$.exe())\r\n\t{\r\n\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_det'>\"+m_str.detecting+\"<\\/span>\";\r\n\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction showSecondConnect(ipType)\r\n{\r\n\tif (ipType)\r\n\t{\r\n\t\t/*$.removeClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\tif (ipType == \"dynamic\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*$.addClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t}\r\n}\r\n/*add by wanghao*/\r\nfunction initIGMPForceVersion(wanType, forceVersion)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\tif (forceVersion == 2)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v2\").checked = true;\r\n\t\t}\r\n\t\telse if (forceVersion == 0)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v3\").checked = true;\r\n\t\t}\r\n\t}\r\n}\r\nfunction setIGMPForceVersion(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_v2\").checked == true)\r\n\t\t{\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if ($.id(wanType + \"_igmp_v3\").checked == true)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\nfunction igmpClick(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n/*add end*/\r\n</script>\r\n<p class=\"et T\" id=\"et\">WAN Setting</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"L\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IP</option>\r\n<option class=\"T T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoE</option>\r\n</select>\r\n<input type=\"button\" class=\"button M T T_detect\" id=\"detect\" value=\"Detect\" onclick=\"doWanDetect()\"/>\r\n<span id=\"status\"></span>\r\n</p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_primarydns\">Primary DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"255\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t\r\n\t<div id=\"div_secConn\" class=\"nd\">\r\n\t\t<p><b class=\"item T T_secConn\" id=\"t_secondConn\">Secondary Connection:</b>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect()\" checked /><span class=\"T T_disabled\">Disabled</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" /><span class=\"T T_staip\">Static IP</span>\r\n\t\t\t<span class=\"T T_forDual\">&nbsp;(For Dual Access)</span>\r\n\t\t</p>\r\n\t\t<div id=\"secondwarn\" class=\"nd\">\r\n\t\t<p class=\"gray\">\r\n\t\t\t<b class=\"item T T_warn\">Warning:</b><span class=\"fl\"><span class=\"T\" id=\"t_warn1\">The secondary connection shouldn't be in the same subnet with pppoe connection.</span><br /></span>\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondDynIp\"class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><b style=\"padding-left:12px\" id=\"secondDynIpAddress\">0.0.0.0</b></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"secondDynIpMask\">0.0.0.0</b></p>\r\n\t\t\t<p class=\"br\"></p>\r\n\t\t\t<p><b class=\"item\">&nbsp;</b>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t\t\t<span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondStaIp\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t</div>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p><b class=\"item\">&nbsp;</b><i id=\"authFail\" class=\"nd\">Authentication failed, incorrect username or password.</i></p>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"255\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_internetipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_internetdns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"l2tp_pptp_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n\t\t<span id=\"l2tp_igmp_msg\"><input type=\"checkbox\" id=\"l2tp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('l2tp');\" />&nbsp;</span>\r\n\t\t<span id=\"pptp_igmp_msg\"><input type=\"checkbox\" id=\"pptp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('pptp');\" />&nbsp;</span>\r\n\t\t</p>\r\n\t\t<p id=\"l2tp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p id=\"pptp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\t\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"bpa_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"bpa_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authServer\">Auth Server:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authDomain\">Auth Domain:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"63\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"bpa_mtu_msg\"><input type=\"text\" class=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"bpa_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"bpa_igmp_en\" checked=\"checked\" onclick=\"igmpClick('bpa');\" />&nbsp;</p>\r\n\t\t<p id=\"bpa_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"bpa_conn\" value=\"Connect\"  onclick=\"doConnBpa()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"bpa_disConn\" value=\"Disconnect\"  onclick=\"doDisConnBpa()\"/>\r\n\t<span id=\"BpaConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n</div>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('dyn_ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"dyn_ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<div id=\"ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"ppp_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ppp');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ppp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar lanip;\r\nvar lanmask;\r\n\r\nvar oldStaIp;\r\n\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan_3.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 10
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n\t/*add end*/\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t\t{\r\n\t\t\t$.h($.id(\"secondDynIpAddress\"), iplist_dyn.externalIPAddress);\r\n\t\t\t$.h($.id(\"secondDynIpMask\"), iplist_dyn.subnetMask);\r\n\t\t\tif (iplist_dyn.enable == 1) {\r\n\t\t\t\tif (iplist_dyn.connectionStatus == \"Connected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t\t\t} else if (iplist_dyn.connectionStatus == \"Disconnected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\r\n\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t{\r\n\t\t$.h($.id(\"dyn_ip\"), iplist_dyn.externalIPAddress);\r\n\t\t$.h($.id(\"dyn_mask\"), iplist_dyn.subnetMask);\r\n\t\t$.h($.id(\"dyn_gw\"), iplist_dyn.defaultGateway);\r\n\t\t\r\n\t\tif (iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), l2tplist.externalIPAddressIP ? l2tplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), l2tplist.subnetMaskIP ? l2tplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), l2tplist.defaultGatewayIP ? l2tplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), l2tplist.DNSServersIP.split(\",\")[0] ? l2tplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), l2tplist.DNSServersIP.split(\",\")[1] ? l2tplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), pptplist.externalIPAddressIP ? pptplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), pptplist.subnetMaskIP ? pptplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), pptplist.defaultGatewayIP ? pptplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), pptplist.DNSServersIP.split(\",\")[0] ? pptplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), pptplist.DNSServersIP.split(\",\")[1] ? pptplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"bpa:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"bpa:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameSubnet(wanip, wanmask, lanip, lanmask)\r\n{\r\n\twanip  = $.ip2num(wanip);\r\n\twanmask = $.ip2num(wanmask);\r\n\tlanip = $.ip2num(lanip);\r\n\tlanmask = $.ip2num(lanmask);\r\n\tif ((lanip & lanmask) == (wanip & lanmask) || ((lanip & wanmask) == (wanip & wanmask)))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\toldStaIp = wan_iplist_sta.externalIPAddress;\r\n\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t{\r\n\t\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"ip_address\").value = \"0.0.0.0\";\r\n\t\t$.id(\"netmask\").value = \"0.0.0.0\";\r\n\t}\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ip\", wan_iplist_sta.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$.id(\"stc_prefix_len\").value = \"64\";\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"dyn_ip\", wan_iplist_dyn.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initSecConnStaIp()\r\n{\r\n\t$.id(\"secConnType_sta\").checked = true;\r\n\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\r\n\t$.id(\"secondStaIpAddress\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"secondStaIpMask\").value = wan_iplist_sta.subnetMask;\r\n}\r\nfunction initSecConnDynIp()\r\n{\r\n\t$.id(\"secConnType_dyn\").checked = true;\r\n\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\r\n\t$.h($.id(\"secondDynIpAddress\"), wan_iplist_dyn.externalIPAddress);\r\n\t$.h($.id(\"secondDynIpMask\"), wan_iplist_dyn.subnetMask);\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n}\r\nfunction initSecondaryConn()\r\n{\t\t\t\r\n\tif (wan_pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t{\r\n\t\tinitSecConnDynIp();\r\n\t\tshowSecondConnect(\"dynamic\");\r\n\t}\r\n\telse if (wan_pppoelist.secondConnection == \"sec_conn_staip\")\r\n\t{\r\n\t\t/*initSecConnStaIp();\r\n\t\tshowSecondConnect(\"static\");*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t\tinitSecConnStaIp();\r\n\t\t\tshowSecondConnect(\"static\");\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"secConnType_disable\").checked = true;\r\n\t\tshowSecondConnect();\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (wan_pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n\tif (wan_pppoelist.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_pppoelist.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").disabled = 1;\t\r\n\t\t$.id(\"ppp_fullnat_en\").checked = 0;\t\r\n\t}\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ppp\", wan_pppoelist.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tinitSecondaryConn();\r\n\t}\r\n\t\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){ getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\r\n\t\t/* hide PPPoE IPv6 elem, liweijie */\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_igmp_msg\"), \"nd\");\t\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"l2tp_igmp_en\").checked = (wan_l2tp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"l2tp\", wan_l2tp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"pptp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicPptpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticPptpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"pptp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"pptp_igmp_en\").checked = (wan_pptp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"pptp\", wan_pptp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\nfunction initBPA()\r\n{\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"bpa_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n}\r\nfunction init()\r\n{\r\n\tif (INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ppp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"bpa_igmp\"),\"nd\");\r\n\t}\r\n\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t\r\n\tvar multiMode = $.act(ACT_GET, MULTIMODE, null, null);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tsysMode = multiMode.mode;\r\n\t}\r\n\t\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\t$.removeClass($.id(\"div_secConn\"), \"nd\");\r\n\t}\r\n\t/* End Add */\r\n\t\r\n    if (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_BPA)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"bpa\";\r\n\t\toption.text = s_str.bpa_cable;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\tif(INCLUDE_KOREA_SPEC || INCLUDE_BR_SPEC)\r\n\t\t{\r\n\t\t\t$.addClass(option,\"nd\");\r\n\t\t}\r\n\t}\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\tvar lanIpIntfObj = $.act(ACT_GL, LAN_IP_INTF, null, null, [\"IPInterfaceIPAddress\", \"IPInterfaceSubnetMask\"])\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\t\r\n\t\t$.each(lanIpIntfObj, function(){\r\n\t\t\tlanip = this.IPInterfaceIPAddress;\r\n\t\t\tlanmask = this.IPInterfaceSubnetMask;\r\n\t\t});\r\n\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\") && (this.X_TP_BpaEnable == 0))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\t\t\t\telse if ((this.enable == 1) && (this.X_TP_BpaEnable == 1))\r\n\t\t\t\t\ttype = \"bpa\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEStk = this.__stack;\r\n\t\t\t\t\tPPPoEEnable = this.enable;\r\n\t\t\t\t\twan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.transportType == \"PPPoE\"))\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"bpa\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\tinitBPA();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_s\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pppoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"l2tp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\t\tinitL2TP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pptp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\t\tinitPPTP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"bpa_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\t\tinitBPA();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.loadHelp(\"ethDynamicIp_h.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\tinitBPA();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_GW_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"ip_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n        }\r\n\t}\r\n\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_plen != 64)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"dyn_ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs()\r\n{\r\n\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t{\r\n\t\twan_iplistarg_dyn.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\tif(!INCLUDE_UN_IPTV)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t/*add by wanghao*/\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t\t/*add end*/\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_dyn.MaxMTUSize = 1500;\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n\t}\r\n\telse if($.id(\"secConnType_sta\").checked == true)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"secondStaIpAddress\").value;\r\n\t\tvar temp_mask = $.id(\"secondStaIpMask\").value;\r\n\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"secondStaIpAddress\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t\t/*add by wanghao*/\r\n\t\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled) \r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t\t}\r\n\t\t\t\t/*add end*/\r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction addPPPoEAttrs()\r\n{\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = wan_pppoelist.NATEnabled;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pppoelistarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t}\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\treturn addSecondaryConnAttrs();\r\n\t}\r\n\t/* End Add */\r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1460))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_L2TP_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_l2tp_listarg.IGMPProxyEnabled = $.id(\"l2tp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_l2tp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.IGMPForceVersion = setIGMPForceVersion(\"l2tp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1420))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPTP_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pptp_listarg.IGMPProxyEnabled = $.id(\"pptp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pptp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pptp_listarg.IGMPForceVersion = setIGMPForceVersion(\"pptp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addBpaAttrs()\r\n{\r\n/*\twan_bpa_listarg.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t*/\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($.id(\"bpa_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"bpa_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\tif ($.id(\"bpa_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\t\r\n\tif ($.id(\"bpa_authserver\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\telement = $.id(\"bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\tif ($.id(\"bpa_authdomain\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\telement = $.id(\"bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\t\r\n\tif ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction doSave(val)\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addBpaAttrs()))\treturn;\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t/*if (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);*/\r\n\t\t/* set PPPoE's second connection to disable if the old static ip starts with \"169.\" */\r\n\t\tif (oldStaIp.substring(0,4) == \"169.\")\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\", \"secondConnection=sec_conn_disable\"]);\r\n\t\t}\r\n\t\telse if (PPPoEEnable == 1)\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\",\"X_TP_lastUsedName=\"+wan_iplist_sta.name]);\t\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\",\"X_TP_lastUsedName=\"+wan_iplist_dyn.name]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (staticEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (dynEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/*if (staticEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);*/\t\r\n\t\t\tif (dynEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (PPPoEEnable == 1))\r\n\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\", \"X_TP_lastUsedName=\"+ wan_pppoelist.name]);\r\n\t\t\t\r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t}\r\n\t\t\t\telse/* if ($.id(\"secConnType_sta\").checked == true)*/\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\", \"X_TP_lastUsedName=\"+ wan_l2tp_list.name]);\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\", \"X_TP_lastUsedName=\"+ wan_pptp_list.name]);\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_bpa_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\", \"X_TP_lastUsedName=\"+ wan_bpa_list.name]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConnBpa()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"bpa_conn\").disabled = 1;\r\n\r\n\t$.act(ACT_OP, ACT_OP_BPA_CONN, wan_bpa_list.__stack);\r\n\r\n\t$.removeClass($.id(\"BpaConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"bpa_conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConnBpa()\r\n{\r\n\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\r\n\t$.act(ACT_OP, ACT_OP_BPA_DISCONN, wan_bpa_list.__stack);\r\n\t\r\n\t$.addLoading($.id(\"bpa_disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction wanDetecting()\r\n{\r\n\tvar wanTypeObj = $.act(ACT_GET,WAN_TYPE_DETECT,null,null,[\"state\", \"wanType\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanTypeObj.state == 3)\r\n\t\t{\r\n\t\t\tswitch(wanTypeObj.wanType)\r\n\t\t\t{\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_dyma_ip' name='t_dyma_ip'>\"+s_str.dynip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_stat_ip' name='t_stat_ip'>\"+s_str.staip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_pppoe' name='t_pppoe'>\"+s_str.pppoe_ru+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n}\r\nfunction doWanDetect()\r\n{\r\n\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\r\n\t\tif(sysMode != \"Hotspot\" && wanEthIntfObj.status == \"NoLink\")\r\n\t\t{\r\n\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.act(ACT_OP, ACT_OP_WAN_TYPE_DETECT, null);\r\n\t\t\t\r\n\t\t\tif(!$.exe())\r\n\t\t\t{\r\n\t\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_det'>\"+m_str.detecting+\"<\\/span>\";\r\n\t\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction showSecondConnect(ipType)\r\n{\r\n\tif (ipType)\r\n\t{\r\n\t\t/*$.removeClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\tif (ipType == \"dynamic\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*$.addClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t}\r\n}\r\n/*add by wanghao*/\r\nfunction initIGMPForceVersion(wanType, forceVersion)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\tif (forceVersion == 2)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v2\").checked = true;\r\n\t\t}\r\n\t\telse if (forceVersion == 0)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v3\").checked = true;\r\n\t\t}\r\n\t}\r\n}\r\nfunction setIGMPForceVersion(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_v2\").checked == true)\r\n\t\t{\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if ($.id(wanType + \"_igmp_v3\").checked == true)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\nfunction igmpClick(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n/*add end*/\r\n</script>\r\n<p class=\"et T\" id=\"et\">WAN Setting</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"L\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IP</option>\r\n<option class=\"T T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoE</option>\r\n</select>\r\n<input type=\"button\" class=\"button M T T_detect\" id=\"detect\" value=\"Detect\" onclick=\"doWanDetect()\"/>\r\n<span id=\"status\"></span>\r\n</p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_primarydns\">Primary DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"255\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t\r\n\t<div id=\"div_secConn\" class=\"nd\">\r\n\t\t<p><b class=\"item T T_secConn\" id=\"t_secondConn\">Secondary Connection:</b>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect()\" checked /><span class=\"T T_disabled\">Disabled</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" /><span class=\"T T_staip\">Static IP</span>\r\n\t\t\t<span class=\"T T_forDual\">&nbsp;(For Dual Access)</span>\r\n\t\t</p>\r\n\t\t<div id=\"secondwarn\" class=\"nd\">\r\n\t\t<p class=\"gray\">\r\n\t\t\t<b class=\"item T T_warn\">Warning:</b><span class=\"fl\"><span class=\"T\" id=\"t_warn1\">The secondary connection shouldn't be in the same subnet with pppoe connection.</span><br /></span>\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondDynIp\"class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><b style=\"padding-left:12px\" id=\"secondDynIpAddress\">0.0.0.0</b></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"secondDynIpMask\">0.0.0.0</b></p>\r\n\t\t\t<p class=\"br\"></p>\r\n\t\t\t<p><b class=\"item\">&nbsp;</b>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t\t\t<span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondStaIp\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t</div>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p><b class=\"item\">&nbsp;</b><i id=\"authFail\" class=\"nd\">Authentication failed, incorrect username or password.</i></p>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"255\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_internetipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_internetdns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"l2tp_pptp_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n\t\t<span id=\"l2tp_igmp_msg\"><input type=\"checkbox\" id=\"l2tp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('l2tp');\" />&nbsp;</span>\r\n\t\t<span id=\"pptp_igmp_msg\"><input type=\"checkbox\" id=\"pptp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('pptp');\" />&nbsp;</span>\r\n\t\t</p>\r\n\t\t<p id=\"l2tp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p id=\"pptp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\t\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"bpa_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"bpa_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authServer\">Auth Server:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authDomain\">Auth Domain:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"63\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"bpa_mtu_msg\"><input type=\"text\" class=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"bpa_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"bpa_igmp_en\" checked=\"checked\" onclick=\"igmpClick('bpa');\" />&nbsp;</p>\r\n\t\t<p id=\"bpa_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"bpa_conn\" value=\"Connect\"  onclick=\"doConnBpa()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"bpa_disConn\" value=\"Disconnect\"  onclick=\"doDisConnBpa()\"/>\r\n\t<span id=\"BpaConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n</div>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('dyn_ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"dyn_ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<div id=\"ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"ppp_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ppp');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ppp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar lanip;\r\nvar lanmask;\r\n\r\nvar oldStaIp;\r\nvar sysMode;\r\nif(INCLUDE_RUSSIA_SPEC)\r\n{\r\n\t$.addClass($.id(\"detect\"),\"nd\");\r\n}\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan_4.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 11
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n\t/*add end*/\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t\t{\r\n\t\t\t$.h($.id(\"secondDynIpAddress\"), iplist_dyn.externalIPAddress);\r\n\t\t\t$.h($.id(\"secondDynIpMask\"), iplist_dyn.subnetMask);\r\n\t\t\tif (iplist_dyn.enable == 1) {\r\n\t\t\t\tif (iplist_dyn.connectionStatus == \"Connected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t\t\t} else if (iplist_dyn.connectionStatus == \"Disconnected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\r\n\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t{\r\n\t\t$.h($.id(\"dyn_ip\"), iplist_dyn.externalIPAddress);\r\n\t\t$.h($.id(\"dyn_mask\"), iplist_dyn.subnetMask);\r\n\t\t$.h($.id(\"dyn_gw\"), iplist_dyn.defaultGateway);\r\n\t\t\r\n\t\tif (iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), l2tplist.externalIPAddressIP ? l2tplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), l2tplist.subnetMaskIP ? l2tplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), l2tplist.defaultGatewayIP ? l2tplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), l2tplist.DNSServersIP.split(\",\")[0] ? l2tplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), l2tplist.DNSServersIP.split(\",\")[1] ? l2tplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), pptplist.externalIPAddressIP ? pptplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), pptplist.subnetMaskIP ? pptplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), pptplist.defaultGatewayIP ? pptplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), pptplist.DNSServersIP.split(\",\")[0] ? pptplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), pptplist.DNSServersIP.split(\",\")[1] ? pptplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"bpa:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"bpa:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction isSameSubnet(wanip, wanmask, lanip, lanmask)\r\n{\r\n\twanip  = $.ip2num(wanip);\r\n\twanmask = $.ip2num(wanmask);\r\n\tlanip = $.ip2num(lanip);\r\n\tlanmask = $.ip2num(lanmask);\r\n\tif ((lanip & lanmask) == (wanip & lanmask) || ((lanip & wanmask) == (wanip & wanmask)))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\toldStaIp = wan_iplist_sta.externalIPAddress;\r\n\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t{\r\n\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"ip_address\").value = \"0.0.0.0\";\r\n\t\t$.id(\"netmask\").value = \"0.0.0.0\";\r\n\t}\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"ip\", wan_iplist_sta.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$.id(\"stc_prefix_len\").value = \"64\";\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"dyn_ip\", wan_iplist_dyn.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initSecConnStaIp()\r\n{\r\n\t$.id(\"secConnType_sta\").checked = true;\r\n\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\r\n\t$.id(\"secondStaIpAddress\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"secondStaIpMask\").value = wan_iplist_sta.subnetMask;\r\n}\r\nfunction initSecConnDynIp()\r\n{\r\n\t$.id(\"secConnType_dyn\").checked = true;\r\n\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\r\n\t$.h($.id(\"secondDynIpAddress\"), wan_iplist_dyn.externalIPAddress);\r\n\t$.h($.id(\"secondDynIpMask\"), wan_iplist_dyn.subnetMask);\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n}\r\nfunction initSecondaryConn()\r\n{\t\t\t\r\n\tif (wan_pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t{\r\n\t\tinitSecConnDynIp();\r\n\t\tshowSecondConnect(\"dynamic\");\r\n\t}\r\n\telse if (wan_pppoelist.secondConnection == \"sec_conn_staip\")\r\n\t{\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t    initSecConnStaIp();\r\n\t\t    showSecondConnect(\"static\");\r\n\t    }\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"secConnType_disable\").checked = true;\r\n\t\tshowSecondConnect();\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (wan_pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n\tif (wan_pppoelist.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_pppoelist.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").disabled = 1;\t\r\n\t\t$.id(\"ppp_fullnat_en\").checked = 0;\t\r\n\t}\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"ppp\", wan_pppoelist.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tinitSecondaryConn();\r\n\t}\r\n\t\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){ getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\r\n\t\t/* hide PPPoE IPv6 elem, liweijie */\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_igmp_msg\"), \"nd\");\t\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\r\n\t$.id(\"l2tp_igmp_en\").checked = (wan_l2tp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"l2tp\", wan_l2tp_list.IGMPForceVersion);\r\n\t/*add end*/\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"pptp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicPptpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticPptpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"pptp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\t$.id(\"pptp_igmp_en\").checked = (wan_pptp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"pptp\", wan_pptp_list.IGMPForceVersion);\r\n\t/*add end*/\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\nfunction initBPA()\r\n{\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\r\n\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"bpa_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n}\r\nfunction init()\r\n{\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\t$.removeClass($.id(\"div_secConn\"), \"nd\");\r\n\t}\r\n\t/* End Add */\r\n\t\r\n    if (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = s_str[\"l2tp\"];\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = s_str[\"pptp\"];\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_BPA)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"bpa\";\r\n\t\toption.text = s_str[\"bpa\"];\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n        if(INCLUDE_BR_SPEC)\r\n\t\t{\r\n\t\t\t$.addClass(option,\"nd\");\r\n\t\t}\r\n\t}\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\tvar lanIpIntfObj = $.act(ACT_GL, LAN_IP_INTF, null, null, [\"IPInterfaceIPAddress\", \"IPInterfaceSubnetMask\"])\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\t\r\n\t\t$.each(lanIpIntfObj, function(){\r\n\t\t\tlanip = this.IPInterfaceIPAddress;\r\n\t\t\tlanmask = this.IPInterfaceSubnetMask;\r\n\t\t});\r\n\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\") && (this.X_TP_BpaEnable == 0))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\t\t\t\telse if ((this.enable == 1) && (this.X_TP_BpaEnable == 1))\r\n\t\t\t\t\ttype = \"bpa\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEStk = this.__stack;\r\n\t\t\t\t\tPPPoEEnable = this.enable;\r\n\t\t\t\t\twan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.transportType == \"PPPoE\"))\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"bpa\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\tinitBPA();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_s\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pppoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"l2tp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\t\tinitL2TP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pptp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\t\tinitPPTP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"bpa_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\t\tinitBPA();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.loadHelp(\"ethDynamicIp_h.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\tinitBPA();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_GW_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/*\r\n\t\tif ((!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t*/\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"ip_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ip\");\r\n\t}\r\n\t/*add end*/\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_plen != 64)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"dyn_ip\");\r\n\t}\r\n\t/*add end*/\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs()\r\n{\r\n\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t{\r\n\t\twan_iplistarg_dyn.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_dyn.MaxMTUSize = 1500;\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n\t}\r\n\telse if($.id(\"secConnType_sta\").checked == true)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"secondStaIpAddress\").value;\r\n\t\tvar temp_mask = $.id(\"secondStaIpMask\").value;\r\n\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"secondStaIpAddress\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t/*add by wanghao*/\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t\t/*add end*/\r\n\t\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction addPPPoEAttrs()\r\n{\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = wan_pppoelist.NATEnabled;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_pppoelistarg.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t}\r\n\t/*add end*/\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t}\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\treturn addSecondaryConnAttrs();\r\n\t}\r\n\t/* End Add */\r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1460))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_L2TP_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\twan_l2tp_listarg.IGMPProxyEnabled = $.id(\"l2tp_igmp_en\").checked == true ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_l2tp_listarg.IGMPProxyEnabled)\r\n\t{\r\n\t\twan_l2tp_listarg.IGMPForceVersion = setIGMPForceVersion(\"l2tp\");\r\n\t}\r\n\t/*add end*/\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1420))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPTP_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\twan_pptp_listarg.IGMPProxyEnabled = $.id(\"pptp_igmp_en\").checked == true ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_pptp_listarg.IGMPProxyEnabled)\r\n\t{\r\n\t\twan_pptp_listarg.IGMPForceVersion = setIGMPForceVersion(\"pptp\");\r\n\t}\r\n\t/*add end*/\r\n\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addBpaAttrs()\r\n{\r\n/*\twan_bpa_listarg.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t*/\r\n\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t}\r\n\t/*add end*/\r\n\tif(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($.id(\"bpa_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"bpa_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\tif ($.id(\"bpa_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\t\r\n\tif ($.id(\"bpa_authserver\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\telement = $.id(\"bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\tif ($.id(\"bpa_authdomain\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\telement = $.id(\"bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\t\r\n\tif ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction doSave(val)\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addBpaAttrs()))\treturn;\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t/*if (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);*/\r\n\t\t/* set PPPoE's second connection to disable if the old static ip starts with \"169.\" */\r\n\t\tif (oldStaIp.substring(0,4) == \"169.\")\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\", \"secondConnection=sec_conn_disable\"]);\r\n\t\t}\r\n\t\telse if (PPPoEEnable == 1)\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\"]);\t\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/*if (staticEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);*/\t\r\n\t\t\tif (dynEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (PPPoEEnable == 1))\r\n\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\t\r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t}\r\n\t\t\t\telse/* if ($.id(\"secConnType_sta\").checked == true)*/\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_bpa_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConnBpa()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"bpa_conn\").disabled = 1;\r\n\r\n\t$.act(ACT_OP, ACT_OP_BPA_CONN, wan_bpa_list.__stack);\r\n\r\n\t$.removeClass($.id(\"BpaConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"bpa_conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConnBpa()\r\n{\r\n\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\r\n\t$.act(ACT_OP, ACT_OP_BPA_DISCONN, wan_bpa_list.__stack);\r\n\t\r\n\t$.addLoading($.id(\"bpa_disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction wanDetecting()\r\n{\r\n\tvar wanTypeObj = $.act(ACT_GET,WAN_TYPE_DETECT,null,null,[\"state\", \"wanType\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanTypeObj.state == 3)\r\n\t\t{\r\n\t\t\tswitch(wanTypeObj.wanType)\r\n\t\t\t{\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_dyma_ip' name='t_dyma_ip'>\"+s_str.dynip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_stat_ip' name='t_stat_ip'>\"+s_str.staip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_pppoe' name='t_pppoe'>\"+s_str.pppoe_ru+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n}\r\nfunction doWanDetect()\r\n{\r\n\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanEthIntfObj.status == \"NoLink\")\r\n\t\t{\r\n\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t$.act(ACT_OP, ACT_OP_WAN_TYPE_DETECT, null);\r\n\t\r\n\tif(!$.exe())\r\n\t{\r\n\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_det'>\"+m_str.detecting+\"<\\/span>\";\r\n\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction showSecondConnect(ipType)\r\n{\r\n\tif (ipType)\r\n\t{\r\n\t\t/*$.removeClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\tif (ipType == \"dynamic\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*$.addClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t}\r\n}\r\n/*add by wanghao*/\r\nfunction initIGMPForceVersion(wanType, forceVersion)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\tif (forceVersion == 2)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v2\").checked = true;\r\n\t\t}\r\n\t\telse if (forceVersion == 0)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v3\").checked = true;\r\n\t\t}\r\n\t}\r\n}\r\nfunction setIGMPForceVersion(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_v2\").checked == true)\r\n\t\t{\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if ($.id(wanType + \"_igmp_v3\").checked == true)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\nfunction igmpClick(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n/*add end*/\r\n</script>\r\n<p class=\"et T\" id=\"et\">WAN Setting</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"L\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IP</option>\r\n<option class=\"T T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n<option class=\"T T_pppoe\" id=\"pppoe\" value=\"pppoe\" >PPPoE</option>\r\n</select>\r\n<input type=\"button\" class=\"button M T T_detect\" id=\"detect\" value=\"Detect\" onclick=\"doWanDetect()\"/>\r\n<span id=\"status\"></span>\r\n</p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipAddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\" class=\"T T_dhcpv6\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\" class=\"T T_slaac\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipAddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_primarydns\">Primary DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppoeusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_pppoepwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"255\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t\r\n\t<div id=\"div_secConn\" class=\"nd\">\r\n\t\t<p><b class=\"item T T_secConn\" id=\"t_secondConn\">Secondary Connection:</b>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect()\" checked /><span class=\"T T_disabled\">Disabled</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" /><span class=\"T T_staip\">Static IP</span>\r\n\t\t\t<span class=\"T T_forDual\">&nbsp;(For Dual Access)</span>\r\n\t\t</p>\r\n\t\t<div id=\"secondwarn\" class=\"nd\">\r\n\t\t<p class=\"gray\">\r\n\t\t\t<b class=\"item T T_warn\">Warning:</b><span class=\"fl\"><span class=\"T\" id=\"t_warn1\">The secondary connection shouldn't be in the same subnet with pppoe connection.</span><br /></span>\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondDynIp\"class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipAddr\">IP Address:</b><b style=\"padding-left:12px\" id=\"secondDynIpAddress\">0.0.0.0</b></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"secondDynIpMask\">0.0.0.0</b></p>\r\n\t\t\t<p class=\"br\"></p>\r\n\t\t\t<p><b class=\"item\">&nbsp;</b>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t\t\t<span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondStaIp\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipAddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t</div>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p><b class=\"item\">&nbsp;</b><i id=\"authFail\" class=\"nd\">Authentication failed, incorrect username or password.</i></p>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"255\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipAddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipAddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_internetipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_internetdns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\"><span class=\"T T_mtu\">MTU</span>(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n\t<span id=\"l2tp_igmp_msg\"><input type=\"checkbox\" id=\"l2tp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('l2tp');\" />&nbsp;</span>\r\n\t<span id=\"pptp_igmp_msg\"><input type=\"checkbox\" id=\"pptp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('pptp');\" />&nbsp;</span>\r\n\t</p>\r\n\t<p id=\"l2tp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t</p>\r\n\t<p id=\"pptp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t</p>\t\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"bpa_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"bpa_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authServer\">Auth Server:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authDomain\">Auth Domain:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"63\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\"><span class=\"T T_mtu\">MTU</span>(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"bpa_mtu_msg\"><input type=\"text\" class=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"bpa_igmp_en\" checked=\"checked\" onclick=\"igmpClick('bpa');\" />&nbsp;</p>\r\n\t<p id=\"bpa_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"bpa_conn\" value=\"Connect\"  onclick=\"doConnBpa()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"bpa_disConn\" value=\"Disconnect\"  onclick=\"doDisConnBpa()\"/>\r\n\t<span id=\"BpaConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n</div>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\"><span class=\"T T_mtu\">MTU</span>(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('dyn_ip');\" />&nbsp;</p>\r\n\t\t<p id=\"dyn_ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\"><span class=\"T T_mtu\">MTU</span>(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ip');\" />&nbsp;</p>\r\n\t\t<p id=\"ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\"><span class=\"T T_mtu\">MTU</span>(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ppp');\" />&nbsp;</p>\r\n\t\t<p id=\"ppp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar lanip;\r\nvar lanmask;\r\n\r\nvar oldStaIp;\r\n\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan_5.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 12
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n\t/*add end*/\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t\t{\r\n\t\t\t$.h($.id(\"secondDynIpAddress\"), iplist_dyn.externalIPAddress);\r\n\t\t\t$.h($.id(\"secondDynIpMask\"), iplist_dyn.subnetMask);\r\n\t\t\tif (iplist_dyn.enable == 1) {\r\n\t\t\t\tif (iplist_dyn.connectionStatus == \"Connected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t\t\t} else if (iplist_dyn.connectionStatus == \"Disconnected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\r\n\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t{\r\n\t\t$.h($.id(\"dyn_ip\"), iplist_dyn.externalIPAddress);\r\n\t\t$.h($.id(\"dyn_mask\"), iplist_dyn.subnetMask);\r\n\t\t$.h($.id(\"dyn_gw\"), iplist_dyn.defaultGateway);\r\n\t\t\r\n\t\tif (iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), l2tplist.externalIPAddressIP ? l2tplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), l2tplist.subnetMaskIP ? l2tplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), l2tplist.defaultGatewayIP ? l2tplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), l2tplist.DNSServersIP.split(\",\")[0] ? l2tplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), l2tplist.DNSServersIP.split(\",\")[1] ? l2tplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), pptplist.externalIPAddressIP ? pptplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), pptplist.subnetMaskIP ? pptplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), pptplist.defaultGatewayIP ? pptplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), pptplist.DNSServersIP.split(\",\")[0] ? pptplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), pptplist.DNSServersIP.split(\",\")[1] ? pptplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"bpa:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"bpa:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction isSameSubnet(wanip, wanmask, lanip, lanmask)\r\n{\r\n\twanip  = $.ip2num(wanip);\r\n\twanmask = $.ip2num(wanmask);\r\n\tlanip = $.ip2num(lanip);\r\n\tlanmask = $.ip2num(lanmask);\r\n\tif ((lanip & lanmask) == (wanip & lanmask) || ((lanip & wanmask) == (wanip & wanmask)))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\toldStaIp = wan_iplist_sta.externalIPAddress;\r\n\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t{\r\n\t\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"ip_address\").value = \"0.0.0.0\";\r\n\t\t$.id(\"netmask\").value = \"0.0.0.0\";\r\n\t}\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ip\", wan_iplist_sta.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$.id(\"stc_prefix_len\").value = \"64\";\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"dyn_ip\", wan_iplist_dyn.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initSecConnStaIp()\r\n{\r\n\t$.id(\"secConnType_sta\").checked = true;\r\n\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\r\n\t$.id(\"secondStaIpAddress\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"secondStaIpMask\").value = wan_iplist_sta.subnetMask;\r\n}\r\nfunction initSecConnDynIp()\r\n{\r\n\t$.id(\"secConnType_dyn\").checked = true;\r\n\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\r\n\t$.h($.id(\"secondDynIpAddress\"), wan_iplist_dyn.externalIPAddress);\r\n\t$.h($.id(\"secondDynIpMask\"), wan_iplist_dyn.subnetMask);\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n}\r\nfunction initSecondaryConn()\r\n{\t\t\t\r\n\tif (wan_pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t{\r\n\t\tinitSecConnDynIp();\r\n\t\tshowSecondConnect(\"dynamic\");\r\n\t}\r\n\telse if (wan_pppoelist.secondConnection == \"sec_conn_staip\")\r\n\t{\r\n\t\t/*initSecConnStaIp();\r\n\t\tshowSecondConnect(\"static\");*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t\tinitSecConnStaIp();\r\n\t\t\tshowSecondConnect(\"static\");\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"secConnType_disable\").checked = true;\r\n\t\tshowSecondConnect();\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (wan_pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n\tif (wan_pppoelist.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_pppoelist.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").disabled = 1;\t\r\n\t\t$.id(\"ppp_fullnat_en\").checked = 0;\t\r\n\t}\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ppp\", wan_pppoelist.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tinitSecondaryConn();\r\n\t}\r\n\t\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){ getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\r\n\t\t/* hide PPPoE IPv6 elem, liweijie */\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_igmp_msg\"), \"nd\");\t\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"l2tp_igmp_en\").checked = (wan_l2tp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"l2tp\", wan_l2tp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"pptp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicPptpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticPptpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"pptp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"pptp_igmp_en\").checked = (wan_pptp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"pptp\", wan_pptp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\nfunction initBPA()\r\n{\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"bpa_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n}\r\nfunction init()\r\n{\r\n\tif (INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ppp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"bpa_igmp\"),\"nd\");\r\n\t}\r\n\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\t$.removeClass($.id(\"div_secConn\"), \"nd\");\r\n\t}\r\n\t/* End Add */\r\n\t\r\n    if (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_BPA)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"bpa\";\r\n\t\toption.text = s_str.bpa_cable;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t}\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\tvar lanIpIntfObj = $.act(ACT_GL, LAN_IP_INTF, null, null, [\"IPInterfaceIPAddress\", \"IPInterfaceSubnetMask\"])\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\t\r\n\t\t$.each(lanIpIntfObj, function(){\r\n\t\t\tlanip = this.IPInterfaceIPAddress;\r\n\t\t\tlanmask = this.IPInterfaceSubnetMask;\r\n\t\t});\r\n\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\") && (this.X_TP_BpaEnable == 0))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\t\t\t\telse if ((this.enable == 1) && (this.X_TP_BpaEnable == 1))\r\n\t\t\t\t\ttype = \"bpa\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEStk = this.__stack;\r\n\t\t\t\t\tPPPoEEnable = this.enable;\r\n\t\t\t\t\twan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.transportType == \"PPPoE\"))\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"bpa\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\tinitBPA();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_s\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pppoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"l2tp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\t\tinitL2TP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pptp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\t\tinitPPTP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"bpa_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\t\tinitBPA();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.loadHelp(\"ethDynamicIp_h.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\tinitBPA();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_GW_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"ip_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t}\r\n\t}\r\n\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_plen != 64)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"dyn_ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs()\r\n{\r\n\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t{\r\n\t\twan_iplistarg_dyn.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\tif(!INCLUDE_UN_IPTV)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t/*add by wanghao*/\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t\t/*add end*/\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_dyn.MaxMTUSize = 1500;\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n\t}\r\n\telse if($.id(\"secConnType_sta\").checked == true)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"secondStaIpAddress\").value;\r\n\t\tvar temp_mask = $.id(\"secondStaIpMask\").value;\r\n\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"secondStaIpAddress\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t\t/*add by wanghao*/\r\n\t\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled) \r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t\t}\r\n\t\t\t\t/*add end*/\r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction addPPPoEAttrs()\r\n{\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = wan_pppoelist.NATEnabled;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pppoelistarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t}\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\treturn addSecondaryConnAttrs();\r\n\t}\r\n\t/* End Add */\r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1460))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_L2TP_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_l2tp_listarg.IGMPProxyEnabled = $.id(\"l2tp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_l2tp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.IGMPForceVersion = setIGMPForceVersion(\"l2tp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1420))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPTP_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pptp_listarg.IGMPProxyEnabled = $.id(\"pptp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pptp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pptp_listarg.IGMPForceVersion = setIGMPForceVersion(\"pptp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addBpaAttrs()\r\n{\r\n/*\twan_bpa_listarg.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t*/\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($.id(\"bpa_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"bpa_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\tif ($.id(\"bpa_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\t\r\n\tif ($.id(\"bpa_authserver\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\telement = $.id(\"bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\tif ($.id(\"bpa_authdomain\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\telement = $.id(\"bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\t\r\n\tif ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction doSave(val)\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addBpaAttrs()))\treturn;\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t/*if (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);*/\r\n\t\t/* set PPPoE's second connection to disable if the old static ip starts with \"169.\" */\r\n\t\tif (oldStaIp.substring(0,4) == \"169.\")\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\", \"secondConnection=sec_conn_disable\"]);\r\n\t\t}\r\n\t\telse if (PPPoEEnable == 1)\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\"]);\t\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (staticEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (dynEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/*if (staticEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);*/\t\r\n\t\t\tif (dynEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (PPPoEEnable == 1))\r\n\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\t\r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t}\r\n\t\t\t\telse/* if ($.id(\"secConnType_sta\").checked == true)*/\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_bpa_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConnBpa()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"bpa_conn\").disabled = 1;\r\n\r\n\t$.act(ACT_OP, ACT_OP_BPA_CONN, wan_bpa_list.__stack);\r\n\r\n\t$.removeClass($.id(\"BpaConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"bpa_conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConnBpa()\r\n{\r\n\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\r\n\t$.act(ACT_OP, ACT_OP_BPA_DISCONN, wan_bpa_list.__stack);\r\n\t\r\n\t$.addLoading($.id(\"bpa_disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction wanDetecting()\r\n{\r\n\tvar wanTypeObj = $.act(ACT_GET,WAN_TYPE_DETECT,null,null,[\"state\", \"wanType\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanTypeObj.state == 3)\r\n\t\t{\r\n\t\t\tswitch(wanTypeObj.wanType)\r\n\t\t\t{\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_dyma_ip' name='t_dyma_ip'>\"+s_str.dynip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_stat_ip' name='t_stat_ip'>\"+s_str.staip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_pppoe' name='t_pppoe'>\"+s_str.pppoe_ru+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n}\r\nfunction doWanDetect()\r\n{\r\n\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanEthIntfObj.status == \"NoLink\")\r\n\t\t{\r\n\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t$.act(ACT_OP, ACT_OP_WAN_TYPE_DETECT, null);\r\n\t\r\n\tif(!$.exe())\r\n\t{\r\n\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_det'>\"+m_str.detecting+\"<\\/span>\";\r\n\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction showSecondConnect(ipType)\r\n{\r\n\tif (ipType)\r\n\t{\r\n\t\t/*$.removeClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\tif (ipType == \"dynamic\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*$.addClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t}\r\n}\r\n/*add by wanghao*/\r\nfunction initIGMPForceVersion(wanType, forceVersion)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\tif (forceVersion == 2)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v2\").checked = true;\r\n\t\t}\r\n\t\telse if (forceVersion == 0)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v3\").checked = true;\r\n\t\t}\r\n\t}\r\n}\r\nfunction setIGMPForceVersion(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_v2\").checked == true)\r\n\t\t{\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if ($.id(wanType + \"_igmp_v3\").checked == true)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\nfunction igmpClick(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n/*add end*/\r\n</script>\r\n<p class=\"et T\" id=\"et\">WAN Setting</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"XL\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IP</option>\r\n<option class=\"T T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoE</option>\r\n</select>\r\n<input type=\"button\" class=\"button M T T_detect\" id=\"detect\" value=\"Detect\" onclick=\"doWanDetect()\"/>\r\n<span id=\"status\"></span>\r\n</p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_primarydns\">Primary DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"255\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t\r\n\t<div id=\"div_secConn\" class=\"nd\">\r\n\t\t<p><b class=\"item T T_secConn\" id=\"t_secondConn\">Secondary Connection:</b>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect()\" checked /><span class=\"T T_disabled\">Disabled</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" /><span class=\"T T_staip\">Static IP</span>\r\n\t\t\t<span class=\"T T_forDual\">&nbsp;(For Dual Access)</span>\r\n\t\t</p>\r\n\t\t<div id=\"secondwarn\" class=\"nd\">\r\n\t\t<p class=\"gray\">\r\n\t\t\t<b class=\"item T T_warn\">Warning:</b><span class=\"fl\"><span class=\"T\" id=\"t_warn1\">The secondary connection shouldn't be in the same subnet with pppoe connection.</span><br /></span>\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondDynIp\"class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><b style=\"padding-left:12px\" id=\"secondDynIpAddress\">0.0.0.0</b></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"secondDynIpMask\">0.0.0.0</b></p>\r\n\t\t\t<p class=\"br\"></p>\r\n\t\t\t<p><b class=\"item\">&nbsp;</b>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t\t\t<span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondStaIp\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t</div>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p><b class=\"item\">&nbsp;</b><i id=\"authFail\" class=\"nd\">Authentication failed, incorrect username or password.</i></p>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"255\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_internetipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_internetdns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"l2tp_pptp_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n\t\t<span id=\"l2tp_igmp_msg\"><input type=\"checkbox\" id=\"l2tp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('l2tp');\" />&nbsp;</span>\r\n\t\t<span id=\"pptp_igmp_msg\"><input type=\"checkbox\" id=\"pptp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('pptp');\" />&nbsp;</span>\r\n\t\t</p>\r\n\t\t<p id=\"l2tp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p id=\"pptp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\t\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"bpa_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"bpa_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authServer\">Auth Server:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authDomain\">Auth Domain:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"63\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"bpa_mtu_msg\"><input type=\"text\" class=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"bpa_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"bpa_igmp_en\" checked=\"checked\" onclick=\"igmpClick('bpa');\" />&nbsp;</p>\r\n\t\t<p id=\"bpa_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"bpa_conn\" value=\"Connect\"  onclick=\"doConnBpa()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"bpa_disConn\" value=\"Disconnect\"  onclick=\"doDisConnBpa()\"/>\r\n\t<span id=\"BpaConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n</div>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('dyn_ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"dyn_ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<div id=\"ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"ppp_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ppp');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ppp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar lanip;\r\nvar lanmask;\r\n\r\nvar oldStaIp;\r\n\r\ninit();\r\n</script>"
      }
    }, {
      "location" : {
        "uri" : "ethWan_6.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 13
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n\t/*add end*/\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t\t{\r\n\t\t\t$.h($.id(\"secondDynIpAddress\"), iplist_dyn.externalIPAddress);\r\n\t\t\t$.h($.id(\"secondDynIpMask\"), iplist_dyn.subnetMask);\r\n\t\t\tif (iplist_dyn.enable == 1) {\r\n\t\t\t\tif (iplist_dyn.connectionStatus == \"Connected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t\t\t} else if (iplist_dyn.connectionStatus == \"Disconnected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\r\n\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t{\r\n\t\t$.h($.id(\"dyn_ip\"), iplist_dyn.externalIPAddress);\r\n\t\t$.h($.id(\"dyn_mask\"), iplist_dyn.subnetMask);\r\n\t\t$.h($.id(\"dyn_gw\"), iplist_dyn.defaultGateway);\r\n\t\t\r\n\t\tif (iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), l2tplist.externalIPAddressIP ? l2tplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), l2tplist.subnetMaskIP ? l2tplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), l2tplist.defaultGatewayIP ? l2tplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), l2tplist.DNSServersIP.split(\",\")[0] ? l2tplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), l2tplist.DNSServersIP.split(\",\")[1] ? l2tplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), pptplist.externalIPAddressIP ? pptplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), pptplist.subnetMaskIP ? pptplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), pptplist.defaultGatewayIP ? pptplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), pptplist.DNSServersIP.split(\",\")[0] ? pptplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), pptplist.DNSServersIP.split(\",\")[1] ? pptplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"bpa:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"bpa:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction isSameSubnet(wanip, wanmask, lanip, lanmask)\r\n{\r\n\twanip  = $.ip2num(wanip);\r\n\twanmask = $.ip2num(wanmask);\r\n\tlanip = $.ip2num(lanip);\r\n\tlanmask = $.ip2num(lanmask);\r\n\tif ((lanip & lanmask) == (wanip & lanmask) || ((lanip & wanmask) == (wanip & wanmask)))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\toldStaIp = wan_iplist_sta.externalIPAddress;\r\n\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t{\r\n\t\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"ip_address\").value = \"0.0.0.0\";\r\n\t\t$.id(\"netmask\").value = \"0.0.0.0\";\r\n\t}\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"ip\", wan_iplist_sta.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$.id(\"stc_prefix_len\").value = \"64\";\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"dyn_ip\", wan_iplist_dyn.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initSecConnStaIp()\r\n{\r\n\t$.id(\"secConnType_sta\").checked = true;\r\n\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\r\n\t$.id(\"secondStaIpAddress\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"secondStaIpMask\").value = wan_iplist_sta.subnetMask;\r\n}\r\nfunction initSecConnDynIp()\r\n{\r\n\t$.id(\"secConnType_dyn\").checked = true;\r\n\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\r\n\t$.h($.id(\"secondDynIpAddress\"), wan_iplist_dyn.externalIPAddress);\r\n\t$.h($.id(\"secondDynIpMask\"), wan_iplist_dyn.subnetMask);\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n}\r\nfunction initSecondaryConn()\r\n{\t\t\t\r\n\tif (wan_pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t{\r\n\t\tinitSecConnDynIp();\r\n\t\tshowSecondConnect(\"dynamic\");\r\n\t}\r\n\telse if (wan_pppoelist.secondConnection == \"sec_conn_staip\")\r\n\t{\r\n\t\t/*initSecConnStaIp();\r\n\t\tshowSecondConnect(\"static\");*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t\tinitSecConnStaIp();\r\n\t\t\tshowSecondConnect(\"static\");\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"secConnType_disable\").checked = true;\r\n\t\tshowSecondConnect();\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (vlan_cfg.workingMode == \"unifi\" || vlan_cfg.workingMode == \"maxis\")\r\n\t{\r\n\t\t$.id(\"pwd\").type = \"text\";\r\n\t\t$.id(\"pwd2\").type = \"text\";\r\n\t}\r\n\r\n\tif (wan_pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n\tif (wan_pppoelist.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_pppoelist.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").disabled = 1;\t\r\n\t\t$.id(\"ppp_fullnat_en\").checked = 0;\t\r\n\t}\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"ppp\", wan_pppoelist.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tinitSecondaryConn();\r\n\t}\r\n\t\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){ getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\r\n\t\t/* hide PPPoE IPv6 elem, liweijie */\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_igmp_msg\"), \"nd\");\t\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\r\n\t$.id(\"l2tp_igmp_en\").checked = (wan_l2tp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"l2tp\", wan_l2tp_list.IGMPForceVersion);\r\n\t/*add end*/\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"pptp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicPptpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticPptpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"pptp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\t$.id(\"pptp_igmp_en\").checked = (wan_pptp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"pptp\", wan_pptp_list.IGMPForceVersion);\r\n\t/*add end*/\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\nfunction initBPA()\r\n{\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\r\n\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t/*add by wanghao*/\r\n\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t/*add end*/\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"bpa_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n}\r\nfunction init()\r\n{\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\t$.removeClass($.id(\"div_secConn\"), \"nd\");\r\n\t}\r\n\t/* End Add */\r\n\t\r\n    if (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_BPA)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"bpa\";\r\n\t\toption.text = s_str.bpa_cable;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t}\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\tvar lanIpIntfObj = $.act(ACT_GL, LAN_IP_INTF, null, null, [\"IPInterfaceIPAddress\", \"IPInterfaceSubnetMask\"])\r\n\tvlan_cfg = $.act(ACT_GET, VLAN, null, null, null);\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\t\r\n\t\t$.each(lanIpIntfObj, function(){\r\n\t\t\tlanip = this.IPInterfaceIPAddress;\r\n\t\t\tlanmask = this.IPInterfaceSubnetMask;\r\n\t\t});\r\n\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\") && (this.X_TP_BpaEnable == 0))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\t\t\t\telse if ((this.enable == 1) && (this.X_TP_BpaEnable == 1))\r\n\t\t\t\t\ttype = \"bpa\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEStk = this.__stack;\r\n\t\t\t\t\tPPPoEEnable = this.enable;\r\n\t\t\t\t\twan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.transportType == \"PPPoE\"))\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"bpa\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\tinitBPA();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_s\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pppoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"l2tp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\t\tinitL2TP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pptp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\t\tinitPPTP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"bpa_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\t\tinitBPA();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.loadHelp(\"ethDynamicIp_h.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\tinitBPA();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_GW_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"ip_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t}\r\n\t}\r\n\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ip\");\r\n\t}\r\n\t/*add end*/\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_plen != 64)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"dyn_ip\");\r\n\t}\r\n\t/*add end*/\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs()\r\n{\r\n\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t{\r\n\t\twan_iplistarg_dyn.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_dyn.MaxMTUSize = 1500;\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n\t}\r\n\telse if($.id(\"secConnType_sta\").checked == true)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"secondStaIpAddress\").value;\r\n\t\tvar temp_mask = $.id(\"secondStaIpMask\").value;\r\n\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"secondStaIpAddress\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t/*add by wanghao*/\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t\t/*add end*/\r\n\t\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction addPPPoEAttrs()\r\n{\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = wan_pppoelist.NATEnabled;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_pppoelistarg.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t}\r\n\t/*add end*/\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t}\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\treturn addSecondaryConnAttrs();\r\n\t}\r\n\t/* End Add */\r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1460))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_L2TP_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\twan_l2tp_listarg.IGMPProxyEnabled = $.id(\"l2tp_igmp_en\").checked == true ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_l2tp_listarg.IGMPProxyEnabled)\r\n\t{\r\n\t\twan_l2tp_listarg.IGMPForceVersion = setIGMPForceVersion(\"l2tp\");\r\n\t}\r\n\t/*add end*/\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1420))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPTP_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\twan_pptp_listarg.IGMPProxyEnabled = $.id(\"pptp_igmp_en\").checked == true ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_pptp_listarg.IGMPProxyEnabled)\r\n\t{\r\n\t\twan_pptp_listarg.IGMPForceVersion = setIGMPForceVersion(\"pptp\");\r\n\t}\r\n\t/*add end*/\r\n\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addBpaAttrs()\r\n{\r\n/*\twan_bpa_listarg.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t*/\r\n\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t}\r\n\t/*add end*/\r\n\tif(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($.id(\"bpa_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"bpa_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\tif ($.id(\"bpa_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\t\r\n\tif ($.id(\"bpa_authserver\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\telement = $.id(\"bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\tif ($.id(\"bpa_authdomain\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\telement = $.id(\"bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\t\r\n\tif ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction doSave(val)\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addBpaAttrs()))\treturn;\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t/*if (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);*/\r\n\t\t/* set PPPoE's second connection to disable if the old static ip starts with \"169.\" */\r\n\t\tif (oldStaIp.substring(0,4) == \"169.\")\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\", \"secondConnection=sec_conn_disable\"]);\r\n\t\t}\r\n\t\telse if (PPPoEEnable == 1)\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\t\t\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (staticEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (dynEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/*if (staticEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);*/\t\r\n\t\t\tif (dynEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (PPPoEEnable == 1))\r\n\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\t\r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t}\r\n\t\t\t\telse/* if ($.id(\"secConnType_sta\").checked == true)*/\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_bpa_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConnBpa()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"bpa_conn\").disabled = 1;\r\n\r\n\t$.act(ACT_OP, ACT_OP_BPA_CONN, wan_bpa_list.__stack);\r\n\r\n\t$.removeClass($.id(\"BpaConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"bpa_conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConnBpa()\r\n{\r\n\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\r\n\t$.act(ACT_OP, ACT_OP_BPA_DISCONN, wan_bpa_list.__stack);\r\n\t\r\n\t$.addLoading($.id(\"bpa_disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction wanDetecting()\r\n{\r\n\tvar wanTypeObj = $.act(ACT_GET,WAN_TYPE_DETECT,null,null,[\"state\", \"wanType\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanTypeObj.state == 3)\r\n\t\t{\r\n\t\t\tswitch(wanTypeObj.wanType)\r\n\t\t\t{\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_dyma_ip' name='t_dyma_ip'>\"+s_str.dynip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_stat_ip' name='t_stat_ip'>\"+s_str.staip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_pppoe' name='t_pppoe'>\"+s_str.pppoe_ru+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n}\r\nfunction doWanDetect()\r\n{\r\n\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanEthIntfObj.status == \"NoLink\")\r\n\t\t{\r\n\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t$.act(ACT_OP, ACT_OP_WAN_TYPE_DETECT, null);\r\n\t\r\n\tif(!$.exe())\r\n\t{\r\n\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_det'>\"+m_str.detecting+\"<\\/span>\";\r\n\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction showSecondConnect(ipType)\r\n{\r\n\tif (ipType)\r\n\t{\r\n\t\t/*$.removeClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\tif (ipType == \"dynamic\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*$.addClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t}\r\n}\r\n/*add by wanghao*/\r\nfunction initIGMPForceVersion(wanType, forceVersion)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\tif (forceVersion == 2)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v2\").checked = true;\r\n\t\t}\r\n\t\telse if (forceVersion == 0)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v3\").checked = true;\r\n\t\t}\r\n\t}\r\n}\r\nfunction setIGMPForceVersion(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_v2\").checked == true)\r\n\t\t{\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if ($.id(wanType + \"_igmp_v3\").checked == true)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\nfunction igmpClick(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n/*add end*/\r\n</script>\r\n<p class=\"et T\" id=\"et\">WAN Setting</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"L\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IP</option>\r\n<option class=\"T T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoE</option>\r\n</select>\r\n<input type=\"button\" class=\"button M T T_detect\" id=\"detect\" value=\"Detect\" onclick=\"doWanDetect()\"/>\r\n<span id=\"status\"></span>\r\n</p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_primarydns\">Primary DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"255\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t\r\n\t<div id=\"div_secConn\" class=\"nd\">\r\n\t\t<p><b class=\"item T T_secConn\" id=\"t_secondConn\">Secondary Connection:</b>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect()\" checked /><span class=\"T T_disabled\">Disabled</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" /><span class=\"T T_staip\">Static IP</span>\r\n\t\t\t<span class=\"T T_forDual\">&nbsp;(For Dual Access)</span>\r\n\t\t</p>\r\n\t\t<div id=\"secondwarn\" class=\"nd\">\r\n\t\t<p class=\"gray\">\r\n\t\t\t<b class=\"item T T_warn\">Warning:</b><span class=\"fl\"><span class=\"T\" id=\"t_warn1\">The secondary connection shouldn't be in the same subnet with pppoe connection.</span><br /></span>\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondDynIp\"class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><b style=\"padding-left:12px\" id=\"secondDynIpAddress\">0.0.0.0</b></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"secondDynIpMask\">0.0.0.0</b></p>\r\n\t\t\t<p class=\"br\"></p>\r\n\t\t\t<p><b class=\"item\">&nbsp;</b>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t\t\t<span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondStaIp\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t</div>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p><b class=\"item\">&nbsp;</b><i id=\"authFail\" class=\"nd\">Authentication failed, incorrect username or password.</i></p>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"255\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_internetipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_internetdns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n\t<span id=\"l2tp_igmp_msg\"><input type=\"checkbox\" id=\"l2tp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('l2tp');\" />&nbsp;</span>\r\n\t<span id=\"pptp_igmp_msg\"><input type=\"checkbox\" id=\"pptp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('pptp');\" />&nbsp;</span>\r\n\t</p>\r\n\t<p id=\"l2tp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t</p>\r\n\t<p id=\"pptp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t</p>\t\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"bpa_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"bpa_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authServer\">Auth Server:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authDomain\">Auth Domain:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"63\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"bpa_mtu_msg\"><input type=\"text\" class=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"bpa_igmp_en\" checked=\"checked\" onclick=\"igmpClick('bpa');\" />&nbsp;</p>\r\n\t<p id=\"bpa_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"bpa_conn\" value=\"Connect\"  onclick=\"doConnBpa()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"bpa_disConn\" value=\"Disconnect\"  onclick=\"doDisConnBpa()\"/>\r\n\t<span id=\"BpaConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n</div>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('dyn_ip');\" />&nbsp;</p>\r\n\t\t<p id=\"dyn_ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ip');\" />&nbsp;</p>\r\n\t\t<p id=\"ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" /> (<span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ppp');\" />&nbsp;</p>\r\n\t\t<p id=\"ppp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar lanip;\r\nvar lanmask;\r\n\r\nvar oldStaIp;\r\n\r\ninit();\r\n</script>"
      }
    }, {
      "location" : {
        "uri" : "ethWan_7.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 14
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n\t/*add end*/\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t\t{\r\n\t\t\t$.h($.id(\"secondDynIpAddress\"), iplist_dyn.externalIPAddress);\r\n\t\t\t$.h($.id(\"secondDynIpMask\"), iplist_dyn.subnetMask);\r\n\t\t\tif (iplist_dyn.enable == 1) {\r\n\t\t\t\tif (iplist_dyn.connectionStatus == \"Connected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t\t\t} else if (iplist_dyn.connectionStatus == \"Disconnected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\r\n\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t{\r\n\t\t$.h($.id(\"dyn_ip\"), iplist_dyn.externalIPAddress);\r\n\t\t$.h($.id(\"dyn_mask\"), iplist_dyn.subnetMask);\r\n\t\t$.h($.id(\"dyn_gw\"), iplist_dyn.defaultGateway);\r\n\t\t\r\n\t\tif (iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), l2tplist.externalIPAddressIP ? l2tplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), l2tplist.subnetMaskIP ? l2tplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), l2tplist.defaultGatewayIP ? l2tplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), l2tplist.DNSServersIP.split(\",\")[0] ? l2tplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), l2tplist.DNSServersIP.split(\",\")[1] ? l2tplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), pptplist.externalIPAddressIP ? pptplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), pptplist.subnetMaskIP ? pptplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), pptplist.defaultGatewayIP ? pptplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), pptplist.DNSServersIP.split(\",\")[0] ? pptplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), pptplist.DNSServersIP.split(\",\")[1] ? pptplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"bpa:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"bpa:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameSubnet(wanip, wanmask, lanip, lanmask)\r\n{\r\n\twanip  = $.ip2num(wanip);\r\n\twanmask = $.ip2num(wanmask);\r\n\tlanip = $.ip2num(lanip);\r\n\tlanmask = $.ip2num(lanmask);\r\n\tif ((lanip & lanmask) == (wanip & lanmask) || ((lanip & wanmask) == (wanip & wanmask)))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\toldStaIp = wan_iplist_sta.externalIPAddress;\r\n\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t{\r\n\t\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"ip_address\").value = \"0.0.0.0\";\r\n\t\t$.id(\"netmask\").value = \"0.0.0.0\";\r\n\t}\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ip\", wan_iplist_sta.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$.id(\"stc_prefix_len\").value = \"64\";\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"dyn_ip\", wan_iplist_dyn.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initSecConnStaIp()\r\n{\r\n\t$.id(\"secConnType_sta\").checked = true;\r\n\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\r\n\t$.id(\"secondStaIpAddress\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"secondStaIpMask\").value = wan_iplist_sta.subnetMask;\r\n}\r\nfunction initSecConnDynIp()\r\n{\r\n\t$.id(\"secConnType_dyn\").checked = true;\r\n\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\r\n\t$.h($.id(\"secondDynIpAddress\"), wan_iplist_dyn.externalIPAddress);\r\n\t$.h($.id(\"secondDynIpMask\"), wan_iplist_dyn.subnetMask);\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n}\r\nfunction initSecondaryConn()\r\n{\t\t\t\r\n\tif (wan_pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t{\r\n\t\tinitSecConnDynIp();\r\n\t\tshowSecondConnect(\"dynamic\");\r\n\t}\r\n\telse if (wan_pppoelist.secondConnection == \"sec_conn_staip\")\r\n\t{\r\n\t\t/*initSecConnStaIp();\r\n\t\tshowSecondConnect(\"static\");*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t\tinitSecConnStaIp();\r\n\t\t\tshowSecondConnect(\"static\");\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"secConnType_disable\").checked = true;\r\n\t\tshowSecondConnect();\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (wan_pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n\tif (wan_pppoelist.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_pppoelist.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").disabled = 1;\t\r\n\t\t$.id(\"ppp_fullnat_en\").checked = 0;\t\r\n\t}\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ppp\", wan_pppoelist.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tinitSecondaryConn();\r\n\t}\r\n\t\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){ getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\r\n\t\t/* hide PPPoE IPv6 elem, liweijie */\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_igmp_msg\"), \"nd\");\t\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"l2tp_igmp_en\").checked = (wan_l2tp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"l2tp\", wan_l2tp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"pptp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicPptpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticPptpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"pptp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"pptp_igmp_en\").checked = (wan_pptp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"pptp\", wan_pptp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\nfunction initBPA()\r\n{\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"bpa_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n}\r\nfunction init()\r\n{\r\n\tif (INCLUDE_UN_IPTV)\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ip_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"ppp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_igmp\"),\"nd\");\r\n\t\t$.addClass($.id(\"bpa_igmp\"),\"nd\");\r\n\t}\r\n\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\t$.removeClass($.id(\"div_secConn\"), \"nd\");\r\n\t}\r\n\t/* End Add */\r\n\t\r\n    if (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_BPA)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"bpa\";\r\n\t\toption.text = s_str.bpa_cable;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t}\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\tvar lanIpIntfObj = $.act(ACT_GL, LAN_IP_INTF, null, null, [\"IPInterfaceIPAddress\", \"IPInterfaceSubnetMask\"])\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\t\r\n\t\t$.each(lanIpIntfObj, function(){\r\n\t\t\tlanip = this.IPInterfaceIPAddress;\r\n\t\t\tlanmask = this.IPInterfaceSubnetMask;\r\n\t\t});\r\n\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\") && (this.X_TP_BpaEnable == 0))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\t\t\t\telse if ((this.enable == 1) && (this.X_TP_BpaEnable == 1))\r\n\t\t\t\t\ttype = \"bpa\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEStk = this.__stack;\r\n\t\t\t\t\tPPPoEEnable = this.enable;\r\n\t\t\t\t\twan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.transportType == \"PPPoE\"))\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"bpa\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\tinitBPA();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_s\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pppoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"l2tp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\t\tinitL2TP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pptp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\t\tinitPPTP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"bpa_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\t\tinitBPA();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.loadHelp(\"ethDynamicIp_h.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\tinitBPA();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tloadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_GW_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"ip_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n        }\r\n\t}\r\n\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_plen != 64)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"dyn_ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs()\r\n{\r\n\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t{\r\n\t\twan_iplistarg_dyn.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\tif(!INCLUDE_UN_IPTV)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t/*add by wanghao*/\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t\t/*add end*/\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_dyn.MaxMTUSize = 1500;\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n\t}\r\n\telse if($.id(\"secConnType_sta\").checked == true)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"secondStaIpAddress\").value;\r\n\t\tvar temp_mask = $.id(\"secondStaIpMask\").value;\r\n\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"secondStaIpAddress\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t\t/*add by wanghao*/\r\n\t\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled) \r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t\t}\r\n\t\t\t\t/*add end*/\r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (!INCLUDE_UN_IPTV) \r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction addPPPoEAttrs()\r\n{\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = wan_pppoelist.NATEnabled;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pppoelistarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t}\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\treturn addSecondaryConnAttrs();\r\n\t}\r\n\t/* End Add */\r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1460))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_L2TP_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_l2tp_listarg.IGMPProxyEnabled = $.id(\"l2tp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_l2tp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.IGMPForceVersion = setIGMPForceVersion(\"l2tp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1420))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPTP_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_pptp_listarg.IGMPProxyEnabled = $.id(\"pptp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pptp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pptp_listarg.IGMPForceVersion = setIGMPForceVersion(\"pptp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addBpaAttrs()\r\n{\r\n/*\twan_bpa_listarg.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t*/\r\n\tif(!INCLUDE_UN_IPTV)\r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($.id(\"bpa_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"bpa_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\tif ($.id(\"bpa_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\t\r\n\tif ($.id(\"bpa_authserver\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\telement = $.id(\"bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\tif ($.id(\"bpa_authdomain\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\telement = $.id(\"bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\t\r\n\tif ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction doSave(val)\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addBpaAttrs()))\treturn;\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t/*if (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);*/\r\n\t\t/* set PPPoE's second connection to disable if the old static ip starts with \"169.\" */\r\n\t\tif (oldStaIp.substring(0,4) == \"169.\")\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\", \"secondConnection=sec_conn_disable\"]);\r\n\t\t}\r\n\t\telse if (PPPoEEnable == 1)\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\"]);\t\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (staticEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (dynEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/*if (staticEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);*/\t\r\n\t\t\tif (dynEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (PPPoEEnable == 1))\r\n\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\"]);\r\n\t\t\t\r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t}\r\n\t\t\t\telse/* if ($.id(\"secConnType_sta\").checked == true)*/\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_bpa_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConnBpa()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"bpa_conn\").disabled = 1;\r\n\r\n\t$.act(ACT_OP, ACT_OP_BPA_CONN, wan_bpa_list.__stack);\r\n\r\n\t$.removeClass($.id(\"BpaConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"bpa_conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConnBpa()\r\n{\r\n\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\r\n\t$.act(ACT_OP, ACT_OP_BPA_DISCONN, wan_bpa_list.__stack);\r\n\t\r\n\t$.addLoading($.id(\"bpa_disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction wanDetecting()\r\n{\r\n\tvar wanTypeObj = $.act(ACT_GET,WAN_TYPE_DETECT,null,null,[\"state\", \"wanType\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanTypeObj.state == 3)\r\n\t\t{\r\n\t\t\tswitch(wanTypeObj.wanType)\r\n\t\t\t{\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_dyma_ip' name='t_dyma_ip'>\"+s_str.dynip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_stat_ip' name='t_stat_ip'>\"+s_str.staip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_pppoe' name='t_pppoe'>\"+s_str.pppoe_ru+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n}\r\nfunction doWanDetect()\r\n{\r\n\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanEthIntfObj.status == \"NoLink\")\r\n\t\t{\r\n\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t$.act(ACT_OP, ACT_OP_WAN_TYPE_DETECT, null);\r\n\t\r\n\tif(!$.exe())\r\n\t{\r\n\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_det'>\"+m_str.detecting+\"<\\/span>\";\r\n\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction showSecondConnect(ipType)\r\n{\r\n\tif (ipType)\r\n\t{\r\n\t\t/*$.removeClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\tif (ipType == \"dynamic\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*$.addClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t}\r\n}\r\n/*add by wanghao*/\r\nfunction initIGMPForceVersion(wanType, forceVersion)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\tif (forceVersion == 2)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v2\").checked = true;\r\n\t\t}\r\n\t\telse if (forceVersion == 0)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v3\").checked = true;\r\n\t\t}\r\n\t}\r\n}\r\nfunction setIGMPForceVersion(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_v2\").checked == true)\r\n\t\t{\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if ($.id(wanType + \"_igmp_v3\").checked == true)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\nfunction igmpClick(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n/*add end*/\r\n</script>\r\n<p class=\"et T\" id=\"et\">WAN Setting</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n\r\n<p id=\"ethEnable\" class=\"L1\"><input type=\"checkbox\" id=\"ethWan_en\" checked /><span class=\"T\" id=\"t_en\">Enable WAN connection</span></p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type\" class=\"L\" onchange=\"showLnkType();\" >\r\n<option class=\"T T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\" selected >Dynamic IP</option>\r\n<option class=\"T T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoE</option>\r\n</select>\r\n<input type=\"button\" class=\"button M T T_detect\" id=\"detect\" value=\"Detect\" onclick=\"doWanDetect()\"/>\r\n<span id=\"status\"></span>\r\n</p>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t<input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t<span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" /></p>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b></p>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_primarydns\">Primary DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></p>\r\n\t\t<p><b class=\"item L T T_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" /><span class=\"T T_optional\">(Optional)</span></p>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<p class=\"L1\"></p>\r\n\t<p><b class=\"item L T T_pppusr\">PPP Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_ppppwd\">PPP Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_cfmpwd\">Confirm Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"255\" onchange=\"checkPwd();\" style=\"width:121px\" /></p>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t\r\n\t<div id=\"div_secConn\" class=\"nd\">\r\n\t\t<p><b class=\"item T T_secConn\" id=\"t_secondConn\">Secondary Connection:</b>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect()\" checked /><span class=\"T T_disabled\">Disabled</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t\t\t<input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" /><span class=\"T T_staip\">Static IP</span>\r\n\t\t\t<span class=\"T T_forDual\">&nbsp;(For Dual Access)</span>\r\n\t\t</p>\r\n\t\t<div id=\"secondwarn\" class=\"nd\">\r\n\t\t<p class=\"gray\">\r\n\t\t\t<b class=\"item T T_warn\">Warning:</b><span class=\"fl\"><span class=\"T\" id=\"t_warn1\">The secondary connection shouldn't be in the same subnet with pppoe connection.</span><br /></span>\r\n\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondDynIp\"class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><b style=\"padding-left:12px\" id=\"secondDynIpAddress\">0.0.0.0</b></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"secondDynIpMask\">0.0.0.0</b></p>\r\n\t\t\t<p class=\"br\"></p>\r\n\t\t\t<p><b class=\"item\">&nbsp;</b>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\"/>\r\n\t\t\t\t<input type=\"button\" class=\"button M T T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled onclick=\"doDhcpRelease()\"/>\r\n\t\t\t\t<span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<div id=\"secondStaIp\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t</div>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\"  disabled onclick=\"doConn()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\"  disabled onclick=\"doDisConn()\"/>\r\n\t<span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p><b class=\"item\">&nbsp;</b><i id=\"authFail\" class=\"nd\">Authentication failed, incorrect username or password.</i></p>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked /></p>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"255\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"255\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_internetipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_internetdns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"l2tp_pptp_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n\t\t<span id=\"l2tp_igmp_msg\"><input type=\"checkbox\" id=\"l2tp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('l2tp');\" />&nbsp;</span>\r\n\t\t<span id=\"pptp_igmp_msg\"><input type=\"checkbox\" id=\"pptp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('pptp');\" />&nbsp;</span>\r\n\t\t</p>\r\n\t\t<p id=\"l2tp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t\t<p id=\"pptp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\t\t\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n<p class=\"br\"></p>\r\n\r\n<div id=\"bpa_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"bpa_pwd\" maxlength=\"63\" style=\"width:121px\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authServer\">Auth Server:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item L T\" id=\"t_bpa_authDomain\">Auth Domain:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"63\" /></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"bpa_mtu_msg\"><input type=\"text\" class=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<div id=\"bpa_igmp\">\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"bpa_igmp_en\" checked=\"checked\" onclick=\"igmpClick('bpa');\" />&nbsp;</p>\r\n\t\t<p id=\"bpa_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t<input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t</p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item T T_midle\">Max Idle Time:</b><input type=\"text\" class=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"bpa_conn\" value=\"Connect\"  onclick=\"doConnBpa()\"/><span id=\"test\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"bpa_disConn\" value=\"Disconnect\"  onclick=\"doDisConnBpa()\"/>\r\n\t<span id=\"BpaConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n</div>\r\n\r\n<div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('dyn_ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"dyn_ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/></p>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></p>\r\n\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></p>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/> (<span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<div id=\"ip_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ip');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\"><p class=\"cl\"></p></div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<p><b class=\"item L T T_srvname\">Service Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p><b class=\"item L T T_acname\">Server Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b><input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1492\" /> (<span class=\"T T_mtu1492\">Valoarea implicită este 1492</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<div id=\"ppp_igmp\">\r\n\t\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ppp');\" />&nbsp;</p>\r\n\t\t\t<p id=\"ppp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v2\" /><span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n\t\t\t\t<input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v3\" /><span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b><input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></p>\r\n\t\t</div>\r\n\t\t<p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\"/></p>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></p>\r\n\t\t\t<p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar lanip;\r\nvar lanmask;\r\n\r\nvar oldStaIp;\r\n\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ethWan_8.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 15
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\ns_str.l2tp=\"L2TP/L2TP Россия\";\r\ns_str.pptp=\"PPTP/PPTP Россия\";\r\ns_str.bpa=\"Кабель BigPond\";\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\t/*add by wanghao*/\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t}\r\n\t/*add end*/\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\t\t\t\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t$.id(\"conn\").disabled = 0;\r\n\t\t\t$.id(\"disConn\").disabled = 1;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t$.id(\"conn\").disabled = 1;\r\n\t\t\t$.id(\"disConn\").disabled = 0;\r\n\t\t\tif (pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\t\t}\r\n\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t\t{\r\n\t\t\t$.h($.id(\"secondDynIpAddress\"), iplist_dyn.externalIPAddress);\r\n\t\t\t$.h($.id(\"secondDynIpMask\"), iplist_dyn.subnetMask);\r\n\t\t\tif (iplist_dyn.enable == 1) {\r\n\t\t\t\tif (iplist_dyn.connectionStatus == \"Connected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t\t\t} else if (iplist_dyn.connectionStatus == \"Disconnected\") {\r\n\t\t\t\t\t$.addClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\r\n\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t{\r\n\t\t$.h($.id(\"dyn_ip\"), iplist_dyn.externalIPAddress);\r\n\t\t$.h($.id(\"dyn_mask\"), iplist_dyn.subnetMask);\r\n\t\t$.h($.id(\"dyn_gw\"), iplist_dyn.defaultGateway);\r\n\t\t\r\n\t\tif (iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 0;\r\n\t\t}\r\n\t\telse if (iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"renew\").disabled = 0;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"renew\").disabled = 1;\r\n\t\t\t$.id(\"release\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), l2tplist.externalIPAddressIP ? l2tplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), l2tplist.subnetMaskIP ? l2tplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), l2tplist.defaultGatewayIP ? l2tplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), l2tplist.DNSServersIP.split(\",\")[0] ? l2tplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), l2tplist.DNSServersIP.split(\",\")[1] ? l2tplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticL2tpConnStatus()\r\n{\r\n\tvar l2tplist = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), l2tplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), l2tplist.DNSServers.split(\",\")[0] ? l2tplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), l2tplist.DNSServers.split(\",\")[1] ? l2tplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (l2tplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (l2tplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((l2tplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (l2tplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((l2tplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (l2tplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((l2tplist.connectionStatus == \"Unconfigured\") || (l2tplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"isp_ip_dyn\"), pptplist.externalIPAddressIP ? pptplist.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), pptplist.subnetMaskIP ? pptplist.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), pptplist.defaultGatewayIP ? pptplist.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), pptplist.DNSServersIP.split(\",\")[0] ? pptplist.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), pptplist.DNSServersIP.split(\",\")[1] ? pptplist.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\t\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getStaticPptpConnStatus()\r\n{\r\n\tvar pptplist = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.h($.id(\"internet_ip\"), pptplist.externalIPAddress);\r\n\t\t$.h($.id(\"internet_dns_1\"), pptplist.DNSServers.split(\",\")[0] ? pptplist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"internet_dns_2\"), pptplist.DNSServers.split(\",\")[1] ? pptplist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\tif (pptplist.enable == 1)\r\n\t\t{\r\n\t\t\tif (pptplist.connectionStatus == \"Connected\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ((pptplist.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t\t\t (pptplist.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t\t\t ((pptplist.addressingType == \"Static\") && \r\n\t\t\t\t\t  (pptplist.connectionStatusIP == \"Connected\") && \r\n\t\t\t\t\t  ((pptplist.connectionStatus == \"Unconfigured\") || (pptplist.connectionStatus == \"Disconnected\"))))\r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t\t$.id(\"disConn2\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t\t$.id(\"disConn2\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType()\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"static:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"static:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"dynamicIp\") \r\n\t{\r\n\t\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"dynamic:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"dynamic:0\");\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pppoe:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pppoe:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"l2tp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"l2tp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"pptp:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"pptp:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\tif (loadType == \"init\")\r\n\t\t{\r\n\t\t\tif ($.id(\"ethWan_en\").checked == 1)\r\n\t\t\t\t$.reload(\"bpa:1\");\t\r\n\t\t\telse if ($.id(\"ethWan_en\").checked == 0)\r\n\t\t\t\t$.reload(\"bpa:0\");\t\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\tif ($.id(\"enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\tif ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t}\r\n\t\telse if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t}\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n\tif ($.hasClass(obj, \"cln\")) {\r\n\t\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.removeClass(obj, \"cln\");\r\n\t}\r\n\telse {\r\n\t\t$.removeClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\t$.addClass(obj, \"cln\");\r\n\t}\r\n}\r\nfunction doManualDns()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction doManualDns6()\r\n{\r\n\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t{\r\n\t\t$.removeClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.addClass($.id(\"dyn_ip_dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n\tswitch (val)\r\n\t{\r\n\tcase 2:\r\n\t\tif ($.id(\"externIp_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tcase 3:\r\n\t\tif ($.id(\"dns_en\").checked == 1)\r\n\t\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\tbreak;\r\n\tdefault:\r\n\t\t;\r\n\t}\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.id;\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\tvar obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\t\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\t\t\t\r\n\t\tobj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.checked == true)\r\n\t\t\t\t$.removeClass(obj, \"nd\");\r\n\t\t\telse\r\n\t\t\t\t$.addClass(obj, \"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t\t$.id(\"connManual\").disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\tif (val.checked == true)\r\n\t\t\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\telse\r\n\t\t\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction isSameSubnet(wanip, wanmask, lanip, lanmask)\r\n{\r\n\twanip  = $.ip2num(wanip);\r\n\twanmask = $.ip2num(wanmask);\r\n\tlanip = $.ip2num(lanip);\r\n\tlanmask = $.ip2num(lanmask);\r\n\tif ((lanip & lanmask) == (wanip & lanmask) || ((lanip & wanmask) == (wanip & wanmask)))\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanStaticIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\toldStaIp = wan_iplist_sta.externalIPAddress;\r\n\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t{\r\n\t\t$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t\t$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"ip_address\").value = \"0.0.0.0\";\r\n\t\t$.id(\"netmask\").value = \"0.0.0.0\";\r\n\t}\r\n\t$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n\t$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\t\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 1;\r\n\t\t$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"enable_nat\").checked = 0;\r\n\t\t$.id(\"enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"enable_fullnat\").checked = 0;\t\r\n\t}\r\n\t$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\t$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ip\", wan_iplist_sta.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\t\t\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\r\n\t\t$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$.id(\"stc_prefix_len\").value = \"64\";\r\n\t\t$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t\r\n\t\t$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"WanDynamicIpCfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t$.id(\"dyn_enable_fullnat\").disabled = 1;\t\r\n\t\t$.id(\"dyn_enable_fullnat\").checked = 0;\t\r\n\t}\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\r\n\t$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\t$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"dyn_ip\", wan_iplist_dyn.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n\tdoManualDns();\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\t\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initSecConnStaIp()\r\n{\r\n\t$.id(\"secConnType_sta\").checked = true;\r\n\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\r\n\t$.id(\"secondStaIpAddress\").value = wan_iplist_sta.externalIPAddress;\r\n\t$.id(\"secondStaIpMask\").value = wan_iplist_sta.subnetMask;\r\n}\r\nfunction initSecConnDynIp()\r\n{\r\n\t$.id(\"secConnType_dyn\").checked = true;\r\n\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\r\n\t$.h($.id(\"secondDynIpAddress\"), wan_iplist_dyn.externalIPAddress);\r\n\t$.h($.id(\"secondDynIpMask\"), wan_iplist_dyn.subnetMask);\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 0;\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 0;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIpConnecting\"), \"nd\");\r\n\t\t\t$.id(\"secondDynIpRenew\").disabled = 1;\r\n\t\t\t$.id(\"secondDynIpRelease\").disabled = 1;\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n}\r\nfunction initSecondaryConn()\r\n{\t\t\t\r\n\tif (wan_pppoelist.secondConnection == \"sec_conn_dynip\")\r\n\t{\r\n\t\tinitSecConnDynIp();\r\n\t\tshowSecondConnect(\"dynamic\");\r\n\t}\r\n\telse if (wan_pppoelist.secondConnection == \"sec_conn_staip\")\r\n\t{\r\n\t\t/*initSecConnStaIp();\r\n\t\tshowSecondConnect(\"static\");*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\tif (wan_iplist_sta.externalIPAddress.substring(0,4) != \"169.\")\r\n\t\t{\r\n\t\t\tinitSecConnStaIp();\r\n\t\t\tshowSecondConnect(\"static\");\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"secConnType_disable\").checked = true;\r\n\t\tshowSecondConnect();\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.loadHelpFrame(\"PPPoECfgHelpRpm.htm\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.id(\"username\").value = wan_pppoelist.username;\r\n\t$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t$.id(\"pwd2\").value = wan_pppoelist.password;\r\n\r\n\tif (wan_pppoelist.lastConnectionError == \"ERROR_AUTHENTICATION_FAILURE\")\r\n\t\t$.removeClass($.id(\"authFail\"), \"nd\");\r\n\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) $.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"connManual\").checked = 1;\r\n\t}\r\n\tif (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\telse if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\r\n\r\n\t$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n\tif (wan_pppoelist.NATEnabled == 1)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t}\r\n\telse if (wan_pppoelist.NATEnabled == 0)\r\n\t{\r\n\t\t$.id(\"ppp_fullnat_en\").disabled = 1;\t\r\n\t\t$.id(\"ppp_fullnat_en\").checked = 0;\t\r\n\t}\r\n\t$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\t$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"ppp\", wan_pppoelist.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"externIp_en\").checked = 0;\r\n\t\t$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t}\r\n\t$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 1;\r\n\t\t$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dns_en\").checked = 0;\r\n\t\t$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n\t}\r\n\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\tinitSecondaryConn();\r\n\t}\r\n\t\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){ getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\tShowDiv($.id(\"externIp6_en\"));\r\n\r\n\t\tif ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t$.id(\"connManual\").disabled = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n\t\t\t\r\n\t\t$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\tShowDiv($.id(\"dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n\t\t}\r\n\r\n\t\t/* hide PPPoE IPv6 elem, liweijie */\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t\t$.addClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t}\r\n}\r\nfunction initL2TP()\r\n{\r\n\t$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_igmp_msg\"), \"nd\");\t\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticL2tpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\t$.id(\"l2tp_igmp_en\").checked = (wan_l2tp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"l2tp\", wan_l2tp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;\r\n}\r\nfunction initPPTP()\r\n{\r\n\t$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"pptp_igmp_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_igmp_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.auto(function(){ getDynamicPptpConnStatus();}, 5000, true);\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t\t$.auto(function(){ getStaticPptpConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\t$.id(\"pptp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\t$.id(\"pptp_igmp_en\").checked = (wan_pptp_list.IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"pptp\", wan_pptp_list.IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;\r\n}\r\nfunction initBPA()\r\n{\r\n\t$.removeClass($.id(\"bpa_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$.loadHelpFrame(\"BpaCfgHelpRpm.htm\");\r\n\t\r\n\t$.id(\"bpa_username\").value = wan_bpa_list.X_TP_BpaUsername;\r\n\t$.id(\"bpa_pwd\").value = wan_bpa_list.X_TP_BpaPassword;\r\n\t\r\n\t$.id(\"bpa_authserver\").value = wan_bpa_list.X_TP_BpaAuthServer;\r\n\t$.id(\"bpa_authdomain\").value = wan_bpa_list.X_TP_BpaAuthDomain;\r\n\t\r\n\t$.id(\"bpa_mtu\").value = wan_bpa_list.maxMTUSize;\r\n\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\t$.id(\"bpa_igmp_en\").checked = wan_bpa_list.X_TP_IGMPProxyEnabled == 1 ? true : false;\r\n\t\t/*add by wanghao*/\r\n\t\tinitIGMPForceVersion(\"bpa\", wan_bpa_list.X_TP_IGMPForceVersion);\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif (wan_bpa_list.X_TP_BpaConnectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"bpa_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"bpa_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_bpa_list.X_TP_BpaConnectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"bpa_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"bpa_idleTime\").value = wan_bpa_list.X_TP_BpaIdleDisconnectTime;\r\n\tif (bpaEnable == 1)\r\n\t{\r\n\tif (wan_bpa_list.X_TP_BpaConnectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n\telse if ((wan_bpa_list.connectionStatus == \"Disconnected\") || \r\n\t\t\t (wan_bpa_list.connectionStatus == \"Unconfigured\"))\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 0;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 0;\r\n\t}\r\n}\r\n\telse\r\n\t{\r\n\t\t$.id(\"bpa_conn\").disabled = 1;\r\n\t\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t}\r\n}\r\nfunction init()\r\n{\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar allElements = document.getElementsByTagName(\"p\");\r\n\t\tvar index;\r\n\t\tfor (index = 0; index < allElements.length; index++)\r\n\t\t{\r\n\t\t\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t\t{\r\n\t\t\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\tShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\tShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\tShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv4ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv4Enabled\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPv4ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\t$.each(wanPPPv4ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_BpaEnable\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\t$.removeClass($.id(\"div_secConn\"), \"nd\");\r\n\t}\r\n\t/* End Add */\r\n\t\r\n    if (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n        option.text = s_str.l2tp;//\"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n        option.text = s_str.pptp;//\"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_BPA)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"bpa\";\r\n        option.text = s_str.bpa;//\"BigPond Cable\"\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t}\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\tvar lanIpIntfObj = $.act(ACT_GL, LAN_IP_INTF, null, null, [\"IPInterfaceIPAddress\", \"IPInterfaceSubnetMask\"])\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\t\r\n\t\t$.each(lanIpIntfObj, function(){\r\n\t\t\tlanip = this.IPInterfaceIPAddress;\r\n\t\t\tlanmask = this.IPInterfaceSubnetMask;\r\n\t\t});\r\n\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\" && this.X_TP_BpaEnable == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif (this.X_TP_BpaEnable == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tbpaStk = this.__stack;\r\n\t\t\t\t\tbpaEnable = this.enable;\r\n\t\t\t\t\twan_bpa_list = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\") && (this.X_TP_BpaEnable == 0))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\t\t\t\telse if ((this.enable == 1) && (this.X_TP_BpaEnable == 1))\r\n\t\t\t\t\ttype = \"bpa\";\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEStk = this.__stack;\r\n\t\t\t\t\tPPPoEEnable = this.enable;\r\n\t\t\t\t\twan_pppoelist = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.transportType == \"PPPoE\"))\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif ($.mainParam)\r\n\t\t\t\t$.id(\"ethWan_en\").checked = ($.mainParam.split(\":\")[1] == 1) ? 1 : 0; \r\n\t\t\telse\r\n\t\t\t\t$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\tif (loadType == \"static\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\tinitStaticIP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"dynamic\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\tinitDynamicIP();\r\n\t\t\t\tdoManualDns();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pppoe\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\tinitPPPoE();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"l2tp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\tinitL2TP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"pptp\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\tinitPPTP();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"bpa\")\r\n\t\t\t{\r\n\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\tinitBPA();\r\n\t\t\t}\r\n\t\t\telse if (loadType == \"init\")\r\n\t\t\t{\r\n\t\t\t\tif (type == \"\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"ipoe_eth3_s\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pppoe_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"l2tp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\t\tinitL2TP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"pptp_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\t\tinitPPTP();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (ethWan.X_TP_lastUsedIntf == \"bpa_eth3_d\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\t\tinitBPA();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\t\tdoManualDns();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$.loadHelp(\"ethDynamicIp_h.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (type == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"staticIp\";\r\n\t\t\t\t\tinitStaticIP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"dynamicIp\";\r\n\t\t\t\t\tinitDynamicIP();\r\n\t\t\t\t\tdoManualDns();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pppoe\";\r\n\t\t\t\t\tinitPPPoE();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"l2tp\";\r\n\t\t\t\t\tinitL2TP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"pptp\";\r\n\t\t\t\t\tinitPPTP();\r\n\t\t\t\t}\r\n\t\t\t\telse if (type == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"link_type\").value = \"bpa\";\r\n\t\t\t\t\tinitBPA();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n            if(!$.exe())\r\n            {\r\n                if(wanEthIntfObj.status == \"NoLink\")\r\n                    $.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n            }\r\n            loadType = \"init\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\tvar temp_ip = $.id(\"ip_address\").value;\r\n\tvar temp_mask = $.id(\"netmask\").value;\r\n\tvar temp_gateway = $.id(\"ip_gateway\").value;\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_GW_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n        /*\r\n\t\tif ((!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n        */\r\n\t\t\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"ip_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t}\r\n\t}\r\n\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\twan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tvar temp_dnsaddr = $.id(\"dns_address\").value;\r\n\tvar temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns_address\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"second_dns\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\tvar temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\tvar temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\tvar temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_addr\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_plen != 64)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\telement = $.id(\"stc_prefix_len\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns6_address\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns6\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"dyn_ip\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"dyn_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\telement = $.id(\"second_dns\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\tif (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dns_address\");\r\n\t\t\t\tif(element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\tif (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\tvar element = $.id(\"hostname\");\r\n\t\tif(element)\r\n\t\t{\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\tvar temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\tvar temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\t\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\telement = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\tif (element)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement.focus();\r\n\t\t\t\t\t\telement.select();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\tif ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\telement = $.id(\"dyn_dns6_1\");\r\n\t\t\t\tif (element)\r\n\t\t\t\t{\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addSecondaryConnAttrs()\r\n{\r\n\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t{\r\n\t\twan_iplistarg_dyn.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_dyn.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\tif (!INCLUDE_RUSSIA_SPEC) \r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t/*add by wanghao*/\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_dyn.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t\t/*add end*/\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_dyn.MaxMTUSize = 1500;\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_dynip\";\r\n\t}\r\n\telse if($.id(\"secConnType_sta\").checked == true)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"secondStaIpAddress\").value;\r\n\t\tvar temp_mask = $.id(\"secondStaIpMask\").value;\r\n\r\n\t\tif(isSameSubnet(temp_ip, temp_mask, lanip, lanmask))\r\n\t\t{\r\n\t\t\t$.alert(CMM_WAN_IP_IP_IN_THE_SAME_SUBNET_WITH_LAN);\r\n\t\t\telement = $.id(\"secondStaIpAddress\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t\tif (!INCLUDE_RUSSIA_SPEC) \r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\t\t/*add by wanghao*/\r\n\t\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled) \r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t\t}\r\n\t\t\t\t/*add end*/\r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t/* PPPoE SecondConnection patch for IGMP issue, yuanshang, 2015-5-27 */\r\n\t\t/*wan_pppoelistarg.secondConnection = \"sec_conn_disable\";*/\r\n\t\t\r\n\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(\"169.254.1.1\");\r\n\t\twan_iplistarg_sta.subnetMask = $.ip2ip(\"255.255.255.255\");\r\n\t\twan_iplistarg_sta.defaultGateway = \"0.0.0.0\";\r\n\t\twan_iplistarg_sta.DNSOverrideAllowed = 0;\r\n\t\twan_iplistarg_sta.DNSServers =\"0.0.0.0,0.0.0.0\";\r\n\t\twan_iplistarg_sta.NATEnabled = wan_pppoelistarg.NATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FullconeNATEnabled = wan_pppoelistarg.X_TP_FullconeNATEnabled;\r\n\t\twan_iplistarg_sta.X_TP_FirewallEnabled = wan_pppoelistarg.X_TP_FirewallEnabled;\r\n\t\t/*add by wanghao*/\r\n\t\tif (!INCLUDE_RUSSIA_SPEC) \r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = wan_pppoelistarg.X_TP_IGMPProxyEnabled;\r\n\t\t\r\n\t\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_iplistarg_sta.X_TP_IGMPProxyEnabled)\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_sta.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\twan_iplistarg_sta.maxMTUSize = 1500;\r\n\t\t\r\n\t\twan_pppoelistarg.secondConnection = \"sec_conn_staip\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction addPPPoEAttrs()\r\n{\r\n\tif ($.id(\"username\").value == \"\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n        //$.alert(ERR_USERNAME_INVAD);\r\n\t\tif (!confirm(c_str.username_pwd_empty))\r\n\t\t{\r\n\t\t\telement = $.id(\"username\");\r\n\t\t\tif (element) {\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\twan_pppoelistarg.username = $.id(\"username\").value;\r\n\tif ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\r\n\tif ($.id(\"connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif ($.id(\"connOnDemand\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"connManual\").checked == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\r\n\twan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\twan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n\tif (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\t{\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\telement = $.id(\"pppmtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = wan_pppoelist.NATEnabled;\r\n\twan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\twan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pppoelistarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"ppp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif ($.id(\"externIp_en\").checked == 1)\r\n\t{\r\n\t\tif (($.id(\"externIpAddr\").value != \"\") \r\n\t\t&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"externIpAddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\twan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\telse if($.id(\"externIp_en\").checked == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\tif ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\telement = $.id(\"ppp_echotime\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t{\r\n\t\tif (($.id(\"dns1\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"dns1\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"dns2\").value != \"\") \r\n\t\t\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"dns2\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t}\r\n\t\r\n\t/* Add by ZJ, 2013-11-25 */\r\n\tif (INCLUDE_DUAL_ACCESS)\r\n\t{\r\n\t\treturn addSecondaryConnAttrs();\r\n\t}\r\n\t/* End Add */\r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n    if ($.id(\"ppp_username\").value == \"\" || $.id(\"ppp_pwd\").value == \"\") \r\n\t{\r\n\t\t/*add by wanghao*/\r\n        //$.alert(ERR_USERNAME_INVAD);\r\n\t\tif (!confirm(c_str.username_pwd_empty))\r\n\t\t{\r\n\t\t\telement = $.id(\"ppp_username\");\r\n\t\t\tif (element) {\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t/*add end*/\r\n    }\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\t/*if ($.id(\"ppp_pwd\").value == \"\") \r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n    }*/\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//if ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1460))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_L2TP_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\twan_l2tp_listarg.IGMPProxyEnabled = $.id(\"l2tp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_l2tp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.IGMPForceVersion = setIGMPForceVersion(\"l2tp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\tif ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//if ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\tif (temp_gateway == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr == \"\") || (temp_dnsaddr == \"0.0.0.0\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_STAIP_DNS1_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\t\t\t\r\n\t\t}\r\n\t\tif (($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1420))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPTP_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\twan_pptp_listarg.IGMPProxyEnabled = $.id(\"pptp_igmp_en\").checked == true ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_pptp_listarg.IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_pptp_listarg.IGMPForceVersion = setIGMPForceVersion(\"pptp\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\r\n\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addBpaAttrs()\r\n{\r\n/*\twan_bpa_listarg.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\twan_bpa_listarg.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t*/\r\n    if (!INCLUDE_RUSSIA_SPEC) \r\n\t{\r\n\t\twan_bpa_listarg.X_TP_IGMPProxyEnabled = $.id(\"bpa_igmp_en\").checked ? 1 : 0;\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_IGMP_FORCEVERSION && wan_bpa_listarg.X_TP_IGMPProxyEnabled)\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_IGMPForceVersion = setIGMPForceVersion(\"bpa\");\r\n\t\t}\r\n\t\t/*add end*/\r\n\t}\r\n\tif(($.id(\"bpa_mtu\").value >= 576) && ($.id(\"bpa_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_bpa_listarg.MaxMTUSize = parseInt($.id(\"bpa_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"bpa_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif ($.id(\"bpa_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"bpa_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaUsername = $.id(\"bpa_username\").value;\r\n\tif ($.id(\"bpa_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_PWD_INVAD);\r\n\t\telement = $.id(\"bpa_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaPassword = $.id(\"bpa_pwd\").value;\r\n\t\r\n\tif ($.id(\"bpa_authserver\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_BPA_AUTHSERVER_INVAD);\r\n\t\telement = $.id(\"bpa_authserver\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthServer = $.id(\"bpa_authserver\").value;\r\n\tif ($.id(\"bpa_authdomain\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_AUTHDOMAIN_INVAD);\r\n\t\telement = $.id(\"bpa_authdomain\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_bpa_listarg.X_TP_BpaAuthDomain = $.id(\"bpa_authdomain\").value;\r\n\t\r\n\tif ($.id(\"bpa_connAlwaysOn\").checked == 1)\r\n\t{\t\r\n\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"bpa_idleTime\").value) && ($.isnum($.id(\"bpa_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_bpa_listarg.X_TP_BpaIdleDisconnectTime = parseInt($.id(\"bpa_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"bpa_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"bpa_connOnDemand\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"bpa_connManual\").checked == 1)\r\n\t\t\twan_bpa_listarg.X_TP_BpaConnectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction doSave(val)\r\n{\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addBpaAttrs()))\treturn;\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\r\n\tvar ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t/*if (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);*/\r\n\t\t/* set PPPoE's second connection to disable if the old static ip starts with \"169.\" */\r\n\t\tif (oldStaIp.substring(0,4) == \"169.\")\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\", \"secondConnection=sec_conn_disable\"]);\r\n\t\t}\r\n\t\telse if (PPPoEEnable == 1)\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_s\"]);\t\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=ipoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t{\r\n\t\t/*add by wanghao*/\r\n\t\tif (INCLUDE_DUAL_ACCESS && $.id(\"secConnType_disable\").checked == false)\r\n\t\t{\r\n\t\t\tif ($.id(\"secConnType_dyn\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (staticEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"secConnType_sta\").checked == true)\r\n\t\t\t{\r\n\t\t\t\tif (dynEnable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/*if (staticEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);*/\t\r\n\t\t\tif (dynEnable == 1)\r\n\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\t}\r\n\t\t/*add end*/\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (PPPoEEnable == 1))\r\n\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pppoe_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n            /* add by liweijie, for start second connection*/    \r\n\t\t\tif (INCLUDE_DUAL_ACCESS)\r\n\t\t\t{\r\n                if ($.id(\"secConnType_dyn\").checked == true) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (dynEnable == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\t\t\t}\r\n                } \r\n\t\t\t\telse //if (staticEnable == 0)/* ($.id(\"secConnType_sta\").checked == true && staticEnable == 0) */\r\n\t\t\t\t{\r\n\t\t\t\t\twan_iplistarg_sta.enable = 1;\r\n\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=l2tp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (bpaEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=pptp_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"bpa\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (bpaEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_bpa_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"X_TP_lastUsedIntf=bpa_eth3_d\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, bpaStk, null, wan_bpa_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"link_type\").value == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ($.id(\"link_type\").value == \"bpa\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, bpaStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1 || wan_bpa_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) $.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t$.id(\"renew\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"renew\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t$.id(\"release\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t$.addLoading($.id(\"release\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\tdoSave(1);\r\n\t$.id(\"conn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t$.id(\"disConn\").disabled = 1;\r\n\t$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t$.addLoading($.id(\"disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConn2()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"conn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"conn2\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t$.id(\"disConn2\").disabled = 1;\r\n\tif ($.id(\"link_type\").value == \"l2tp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t}\r\n\telse if ($.id(\"link_type\").value == \"pptp\")\r\n\t{\r\n\t\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t}\r\n\t$.addLoading($.id(\"disConn2\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction doConnBpa()\r\n{\r\n\tdoSave(0);\r\n\t$.id(\"bpa_conn\").disabled = 1;\r\n\r\n\t$.act(ACT_OP, ACT_OP_BPA_CONN, wan_bpa_list.__stack);\r\n\r\n\t$.removeClass($.id(\"BpaConnecting\"), \"nd\");\r\n\t$.addLoading($.id(\"bpa_conn\"));\r\n\tif (!$.exe())\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n}\r\nfunction doDisConnBpa()\r\n{\r\n\t$.id(\"bpa_disConn\").disabled = 1;\r\n\t\r\n\t$.act(ACT_OP, ACT_OP_BPA_DISCONN, wan_bpa_list.__stack);\r\n\t\r\n\t$.addLoading($.id(\"bpa_disConn\"));\r\n\tif (!$.exe())\r\n\t{\r\n\t\tdoSave(1);\r\n\t\t$.timeout(function(){ $.reload();}, 1500);\r\n\t}\r\n}\r\nfunction checkPwd()\r\n{\r\n\tif ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\t{\r\n\t\t$.id(\"pwd\").value = \"\";\r\n\t\t$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\telement = $.id(\"pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n}\r\nfunction wanDetecting()\r\n{\r\n\tvar wanTypeObj = $.act(ACT_GET,WAN_TYPE_DETECT,null,null,[\"state\", \"wanType\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanTypeObj.state == 3)\r\n\t\t{\r\n\t\t\tswitch(wanTypeObj.wanType)\r\n\t\t\t{\r\n\t\t\t\tcase \"0\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_dyma_ip' name='t_dyma_ip'>\"+s_str.dynip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_stat_ip' name='t_stat_ip'>\"+s_str.staip+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_pppoe' name='t_pppoe'>\"+s_str.pppoe_ru+\"<\\/span>\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t}\r\n}\r\nfunction doWanDetect()\r\n{\r\n\tvar wanEthIntfObj = $.act(ACT_GET,WAN_ETH_INTF,pStk,null,[\"status\"]);\r\n\tif(!$.exe())\r\n\t{\r\n\t\tif(wanEthIntfObj.status == \"NoLink\")\r\n\t\t{\r\n\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#FF0000' id='t_unplugged'>\"+m_str.unplugged+\"<\\/span>\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.act(ACT_OP, ACT_OP_WAN_TYPE_DETECT, null);\r\n\t\r\n\t\t\tif(!$.exe())\r\n\t\t\t{\r\n\t\t\t\t$.id(\"status\").innerHTML = \"&nbsp;<span style='color:#0000FF' id='t_det'>\"+m_str.detecting+\"<\\/span>\";\r\n\t\t\t\t$.timeout(function(){wanDetecting(); }, 1500);\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction showSecondConnect(ipType)\r\n{\r\n\tif (ipType)\r\n\t{\r\n\t\t/*$.removeClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\tif (ipType == \"dynamic\")\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondDynIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.removeClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/*$.addClass($.id(\"secondwarn\"), \"nd\");*/\r\n\t\t$.addClass($.id(\"secondStaIp\"), \"nd\");\t\t\t\r\n\t\t$.addClass($.id(\"secondDynIp\"), \"nd\");\r\n\t}\r\n}\r\n/*add by wanghao*/\r\nfunction initIGMPForceVersion(wanType, forceVersion)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\tif (forceVersion == 2)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v2\").checked = true;\r\n\t\t}\r\n\t\telse if (forceVersion == 0)\r\n\t\t{\r\n\t\t\t$.id(wanType + \"_igmp_v3\").checked = true;\r\n\t\t}\r\n\t}\r\n}\r\nfunction setIGMPForceVersion(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_v2\").checked == true)\r\n\t\t{\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\telse if ($.id(wanType + \"_igmp_v3\").checked == true)\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\nfunction igmpClick(wanType)\r\n{\r\n\tif (INCLUDE_IGMP_FORCEVERSION)\r\n\t{\r\n\t\tif ($.id(wanType + \"_igmp_en\").checked == true)\r\n\t\t{\r\n\t\t\t$.removeClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.addClass($.id(wanType + \"_igmpversion\"), \"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n/*add end*/\r\n</script>\r\n<p class=\"et T\" id=\"et\">WAN Setting</p>\r\n<div class=\"con1 L\">\r\n    <p class=\"ct\"></p>\r\n    <p class=\"bl\"></p>\r\n    <div class=\"con2\">\r\n\r\n        <p id=\"ethEnable\" class=\"L1\">\r\n            <input type=\"checkbox\" id=\"ethWan_en\" checked />\r\n            <span class=\"T\" id=\"t_en\">Enable WAN connection</span>\r\n        </p>\r\n        <p class=\"br\"></p>\r\n        <p><b class=\"item L T T_conntype\">Connetion Type</b>\r\n            <select id=\"link_type\" class=\"XL\" onchange=\"showLnkType();\">\r\n                <option class=\"T T_dynip\" id=\"dynamicIp\" value=\"dynamicIp\" selected>Dynamic IP</option>\r\n                <option class=\"T T_staip\" id=\"staticIp\" value=\"staticIp\">Static IP</option>\r\n                <option class=\"T T_ppp\" id=\"pppoe\" value=\"pppoe\">PPPoE</option>\r\n            </select>\r\n            <input type=\"button\" class=\"button T T_detect nd\" id=\"detect\" value=\"Detect\" onclick=\"doWanDetect()\" />\r\n            <span id=\"status\"></span>\r\n        </p>\r\n        <p class=\"br\"></p>\r\n\r\n        <div id=\"dyn_ip_elem_basic\">\r\n            <div id=\"dyn_ipx_check4\" class=\"nd\">\r\n                <p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b>\r\n                    <input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked />\r\n                </p>\r\n            </div>\r\n            <div id=\"dyn_ip4_elem_basic\">\r\n                <p><b class=\"item L T T_ipaddr\" id=\"ip_addr1\">IP Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip\">0.0.0.0</b>\r\n                </p>\r\n                <p><b class=\"item L T T_netmask\" id=\"subnet_mask1\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"dyn_mask\">0.0.0.0</b>\r\n                </p>\r\n                <p><b class=\"item L T T_gateway\" id=\"gateway1\">Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_gw\">0.0.0.0</b>\r\n                </p>\r\n                <p class=\"br\"></p>\r\n                <p><b class=\"item\">&nbsp;</b>\r\n                    <input type=\"button\" class=\"button M T T_renew\" id=\"renew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\" />\r\n                    <input type=\"button\" class=\"button M T T_release\" id=\"release\" value=\"Release\" disabled onclick=\"doDhcpRelease()\" />\r\n                    <span id=\"DynIpConnecting\" class=\"nd\">&nbsp;&nbsp;\r\n                        <span class=\"T T_connecting\">Connecting</span>...</span>\r\n                </p>\r\n            </div>\r\n            <p class=\"br IPv6 nd\"></p>\r\n            <div id=\"dyn_ipx_check6\" class=\"nd\">\r\n                <p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n                    <input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv(this)\" />\r\n                </p>\r\n            </div>\r\n            <div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n                <p><b class=\"item L T T_ip6addr\">IPv6 Address:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_addr\">::</b>\r\n                </p>\r\n                <p><b class=\"item L T T_plen\">Prefix Length:</b><b style=\"padding-left:12px\" id=\"dyn_prefix_len\">0</b>\r\n                </p>\r\n                <p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b><b style=\"padding-left:12px\" id=\"dyn_ip6_gw\">::</b>\r\n                </p>\r\n                <div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n                    <p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n                        <select id=\"dyn_ip6addr_type\" class=\"L\">\r\n                            <option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n                            <option value=\"autoip\">SLAAC</option>\r\n                        </select>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"ip_elem_basic\" class=\"nd\">\r\n            <div id=\"stc_ipx_check4\" class=\"nd\">\r\n                <p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b>\r\n                    <input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked />\r\n                </p>\r\n            </div>\r\n            <div id=\"stc_ip4_elem_basic\">\r\n                <p><b class=\"item L T T_ipaddr\">IP Address:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_netmask\">Subnet Mask:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_gateway\">Gateway:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_primarydns\">Primary DNS Server:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_secdns\">Secondary DNS Server:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                    <span class=\"T T_optional\">(optional)</span>\r\n                </p>\r\n            </div>\r\n            <p class=\"br IPv6 nd\"></p>\r\n            <div id=\"stc_ipx_check6\" class=\"nd\">\r\n                <p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n                    <input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked />\r\n                </p>\r\n            </div>\r\n            <div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n                <p><b class=\"item L T T_ip6addr\">IPv6 Address:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" />\r\n                </p>\r\n                <p><b class=\"item L T T_plen\">Prefix Length:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_ip6gw\">IPv6 Gateway:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" />\r\n                    <span class=\"T T_optional\">(Optional)</span>\r\n                </p>\r\n                <p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" />\r\n                    <span class=\"T T_optional\">(Optional)</span>\r\n                </p>\r\n                <p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" />\r\n                    <span class=\"T T_optional\">(Optional)</span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"pppoe_elem_basic\" class=\"nd\">\r\n            <p class=\"L1\"></p>\r\n            <p><b class=\"item L T T_pppusr\">PPP Username:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"username\" maxlength=\"63\" style=\"width:121px\" />\r\n            </p>\r\n            <p><b class=\"item L T T_ppppwd\">PPP Password:</b>\r\n                <input type=\"password\" class=\"text\" size=\"15\" id=\"pwd\" maxlength=\"63\" style=\"width:121px\" />\r\n            </p>\r\n            <p><b class=\"item L T T_cfmpwd\">Confirm Password:</b>\r\n                <input type=\"password\" class=\"text\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" style=\"width:121px\" />\r\n            </p>\r\n            <p class=\"nd\"><b class=\"item L\">Special Dial:</b>\r\n                <select id=\"speDail\" onchange=\"\">\r\n                    <option id=\"dail0\" value=0 selected>Normal dial mode</option>\r\n                    <option id=\"dail1\" value=1>Special dial mode 1</option>\r\n                    <option id=\"dail2\" value=2>Special dial mode 2</option>\r\n                    <option id=\"dail3\" value=3>Special dial mode 3</option>\r\n                    <option id=\"dail4\" value=4>Special dial mode 4</option>\r\n                    <option id=\"dail5\" value=5>Special dial mode 5</option>\r\n                    <option id=\"dail6\" value=6>Special dial mode 6</option>\r\n                    <option id=\"dail7\" value=7>Special dial mode 7</option>\r\n                </select>\r\n            </p>\r\n            <p class=\"br\"></p>\r\n\r\n            <div id=\"div_secConn\" class=\"nd\">\r\n                <p><b class=\"item T T_secondConn\">Secondary Connection:</b>\r\n                    <input type=\"radio\" name=\"secondConnType\" id=\"secConnType_disable\" OnClick=\"showSecondConnect()\" checked />\r\n                    <span class=\"T T_disabled\">Disabled</span>\r\n                    <input type=\"radio\" name=\"secondConnType\" id=\"secConnType_dyn\" OnClick=\"showSecondConnect('dynamic')\" />\r\n                    <span class=\"T T_dynip\">Dynamic IP</span>\r\n                    <input type=\"radio\" name=\"secondConnType\" id=\"secConnType_sta\" OnClick=\"showSecondConnect('static')\" />\r\n                    <span class=\"T T_staip\">Static IP</span>\r\n                    <span class=\"T T_forDual\">&nbsp;(For Dual Access)</span>\r\n                </p>\r\n                <div id=\"secondwarn\" class=\"nd\">\r\n                    <p class=\"gray\">\r\n                        <b class=\"item T T_warn\">Warning:</b>\r\n                        <span class=\"fl\">\r\n                            <span class=\"T\" id=\"t_warn1\">The secondary connection shouldn't be in the same subnet with pppoe connection.</span>\r\n                            <br />\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div id=\"secondDynIp\" class=\"nd\">\r\n                    <p><b class=\"item L T T_ipaddr\">IP Address:</b><b style=\"padding-left:12px\" id=\"secondDynIpAddress\">0.0.0.0</b>\r\n                    </p>\r\n                    <p><b class=\"item L T T_netmask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"secondDynIpMask\">0.0.0.0</b>\r\n                    </p>\r\n                    <p class=\"br\"></p>\r\n                    <p><b class=\"item\">&nbsp;</b>\r\n                        <input type=\"button\" class=\"button M T T_renew\" id=\"secondDynIpRenew\" value=\"Renew\" disabled onclick=\"doDhcpRenew()\" />\r\n                        <input type=\"button\" class=\"button M T T_release\" id=\"secondDynIpRelease\" value=\"Release\" disabled onclick=\"doDhcpRelease()\" />\r\n                        <span id=\"secondDynIpConnecting\" class=\"nd\">&nbsp;&nbsp;\r\n                            <span class=\"T T_connecting\">Connecting</span>...</span>\r\n                    </p>\r\n                </div>\r\n                <div id=\"secondStaIp\" class=\"nd\">\r\n                    <p><b class=\"item L T T_ipaddr\">IP Address:</b>\r\n                        <input type=\"text\" class=\"text\" id=\"secondStaIpAddress\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                    </p>\r\n                    <p><b class=\"item L T T_netmask\">Subnet Mask:</b>\r\n                        <input type=\"text\" class=\"text\" id=\"secondStaIpMask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                    </p>\r\n                </div>\r\n                <p class=\"br\"></p>\r\n            </div>\r\n\r\n            <p><b class=\"item T T_connmode\">Connection Mode:</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked />\r\n                <span class=\"T T_typeauto\">Connect automatically</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" />\r\n                <span class=\"T T_typedemand\">Connect on demand</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"connManual\" />\r\n                <span class=\"T T_typemanual\">Connect manually</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <span class=\"T T_midle\">Max Idle Time:</span>\r\n                <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" />\r\n                <span class=\"T T_minutes\">minutes</span>\r\n                <span class=\"T T_zmean\">(0 means remain active at all time)</span>\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item L T T_authtype\">Authentication Type:</b>\r\n                <select id=\"ppp_authpro\" class=\"L\">\r\n                    <option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n                    <option id=\"pap\" value=\"PAP\">PAP</option>\r\n                    <option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n                    <option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n                </select>\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"button\" class=\"button M T T_conn\" id=\"conn\" value=\"Connect\" disabled onclick=\"doConn()\" />\r\n                <span id=\"test\"></span>\r\n                <input type=\"button\" class=\"button M T T_disconn\" id=\"disConn\" value=\"Disconnect\" disabled onclick=\"doDisConn()\" />\r\n                <span id=\"PPPoEConnecting\" class=\"nd T\">&nbsp;&nbsp;\r\n                    <span class=\"T T_connecting\">Connecting</span>...</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b><i id=\"authFail\" class=\"nd\"><span class=\" T T_authfail\" >Authentication failed, incorrect username or password.</span></i>\r\n            </p>\r\n            <p class=\"br IPv6 nd\"></p>\r\n            <div id=\"ppp_ipx_check\" class=\"nd\">\r\n                <p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b>\r\n                    <input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv(this)\" checked />\r\n                </p>\r\n                <p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b>\r\n                    <input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv(this)\" checked />\r\n                </p>\r\n            </div>\r\n            <div id=\"ppp_ip6_elem_basic\">\r\n                <div id=\"ipv6_cfg_ppp_slaac\">\r\n                    <p class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n                        <select id=\"ppp_ip6addr_type\" class=\"L\">\r\n                            <option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n                            <option value=\"autoip\">SLAAC</option>\r\n                        </select>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- L2TP/PPTP Div BASIC -->\r\n        <div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n            <p><b class=\"item L T T_username\">Username:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" style=\"width:121px\" />\r\n            </p>\r\n            <p><b class=\"item L T T_passwd\">Password:</b>\r\n                <input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" style=\"width:121px\" />\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\" disabled onclick=\"doConn2()\" />\r\n                <span id=\"test2\"></span>\r\n                <input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\" disabled onclick=\"doDisConn2()\" />\r\n                <span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;\r\n                    <span class=\"T T_connecting\">Connecting</span>...</span>\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item L T\" id=\"t_addrType\">Addressing Type:</b>\r\n                <input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked />\r\n                <span class=\"T T_dynip\">Dynamic IP</span>\r\n                <input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" />\r\n                <span class=\"T T_staip\">Static IP</span>\r\n            </p>\r\n            <p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b>\r\n                <input type=\"text\" class=\"text\" size=\"25\" id=\"srvAddrName\" maxlength=\"80\" />\r\n            </p>\r\n            <div id=\"l2tp_pptp_dyn_ip_elem\">\r\n                <p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b>\r\n                </p>\r\n                <p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b>\r\n                </p>\r\n                <p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b>\r\n                </p>\r\n                <p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b>\r\n                </p>\r\n            </div>\r\n            <div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n                <p><b class=\"item L T T_ipaddr\">IP Address:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_netmask\">Subnet Mask:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_gateway\">Gateway:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_primarydns\">DNS Server:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                </p>\r\n                <p><b class=\"item L T T_secdns\">Secondary DNS Server:</b>\r\n                    <input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n                    <span class=\"T T_optional\">(optional)</span>\r\n                </p>\r\n            </div>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item L T T_internetipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b>\r\n            </p>\r\n            <p><b class=\"item L T T_internetdns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b>\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n                <span id=\"l2tp_mtu_msg\">\r\n                    <input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\" />&nbsp;(<span class=\"T T_mtu1460\">1460 as default</span>,\r\n                    <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n                <span id=\"pptp_mtu_msg\">\r\n                    <input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\" />&nbsp;(<span class=\"T T_mtu1420\">1420 as default</span>,\r\n                    <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n            </p>\r\n            <p class=\"nd\"><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n                <span id=\"l2tp_igmp_msg\">\r\n                    <input type=\"checkbox\" id=\"l2tp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('l2tp');\" />&nbsp;</span>\r\n                <span id=\"pptp_igmp_msg\">\r\n                    <input type=\"checkbox\" id=\"pptp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('pptp');\" />&nbsp;</span>\r\n            </p>\r\n            <p id=\"l2tp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n                <input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v2\" />\r\n                <span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n                <input type=\"radio\" name=\"l2tp_version\" id=\"l2tp_igmp_v3\" />\r\n                <span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n            </p>\r\n            <p id=\"pptp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n                <input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v2\" />\r\n                <span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n                <input type=\"radio\" name=\"pptp_version\" id=\"pptp_igmp_v3\" />\r\n                <span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n            </p>\r\n            <p><b class=\"item T T_connmode\">Connection Mode:</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked />\r\n                <span class=\"T T_typeauto\">Connect automatically</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" />\r\n                <span class=\"T T_typedemand\">Connect on demand</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"radio\" name=\"linkMode\" id=\"da_connManual\" />\r\n                <span class=\"T T_typemanual\">Connect manually</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <span class=\"T T_midle\">Max Idle Time:</span>\r\n                <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" />\r\n                <span class=\"T T_minutes\">minutes</span>\r\n                <span class=\"T T_zmean\">(0 means remain active at all time)</span>\r\n            </p>\r\n        </div>\r\n        <p class=\"br\"></p>\r\n\r\n        <div id=\"bpa_elem_basic\" class=\"nd\">\r\n            <p><b class=\"item L T T_username\">Username:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_username\" maxlength=\"63\" style=\"width:121px\" />\r\n            </p>\r\n            <p><b class=\"item L T T_passwd\">Password:</b>\r\n                <input type=\"password\" class=\"text\" size=\"15\" id=\"bpa_pwd\" maxlength=\"63\" style=\"width:121px\" />\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item L T\"  id=\"t_bpa_authServer\">Auth Server:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authserver\" maxlength=\"63\" />\r\n            </p>\r\n            <p><b class=\"item L T\"  id=\"t_bpa_authDomain\">Auth Domain:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"bpa_authdomain\" maxlength=\"63\" />\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n                <span id=\"bpa_mtu_msg\">\r\n                    <input type=\"text\" class=\"text\" id=\"bpa_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\" />&nbsp;(<span class=\"T T_mtu1500\">1500 as default</span>,\r\n                    <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n            </p>\r\n            <p class=\"nd\"><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n                <input type=\"checkbox\" id=\"bpa_igmp_en\" checked=\"checked\" onclick=\"igmpClick('bpa');\" />&nbsp;</p>\r\n            <p id=\"bpa_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n                <input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v2\" />\r\n                <span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n                <input type=\"radio\" name=\"bpa_version\" id=\"bpa_igmp_v3\" />\r\n                <span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item T T_connmode\">Connection Mode:</b>\r\n                <input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connAlwaysOn\" checked />\r\n                <span class=\"T T_typeauto\">Connect automatically</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connOnDemand\" />\r\n                <span class=\"T T_typedemand\">Connect on demand</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"radio\" name=\"bpa_linkMode\" id=\"bpa_connManual\" />\r\n                <span class=\"T T_typemanual\">Connect manually</span>\r\n            </p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <span class=\"T T_midle\">Max Idle Time:</span>\r\n                <input type=\"text\" class=\"text\" id=\"bpa_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" />\r\n                <span class=\"T T_minutes\">minutes</span>\r\n                <span class=\"T T_zmean\">(0 means remain active at all time)</span>\r\n            </p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item\">&nbsp;</b>\r\n                <input type=\"button\" class=\"button M T T_conn\" id=\"bpa_conn\" value=\"Connect\" onclick=\"doConnBpa()\" />\r\n                <span id=\"test\"></span>\r\n                <input type=\"button\" class=\"button M T T_disconn\" id=\"bpa_disConn\" value=\"Disconnect\" onclick=\"doDisConnBpa()\" />\r\n                <span id=\"BpaConnecting\" class=\"nd T\">&nbsp;&nbsp;\r\n                    <span class=\"T T_connecting\">Connecting</span>...</span>\r\n            </p>\r\n        </div>\r\n\r\n        <div class=\"cl\" id=\"dynipClick\" onclick=\"DynIPClick(this)\">\r\n            <p class=\"cl\"></p>\r\n        </div>\r\n        <div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n            <p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n                <input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\" />&nbsp;(<span class=\"T T_mtu1500\">1500 as default</span>,\r\n                <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n            <div id=\"dyn_ip4_elem_adv\">\r\n                <p class=\"br IPv6 nd\"></p>\r\n                <p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b>\r\n                    <input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b>\r\n                    <input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b>\r\n                    <input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n                    <input type=\"checkbox\" id=\"dyn_ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('dyn_ip');\" />&nbsp;</p>\r\n                <p id=\"dyn_ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n                    <input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v2\" />\r\n                    <span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n                    <input type=\"radio\" name=\"dyn_ip_version\" id=\"dyn_ip_igmp_v3\" />\r\n                    <span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n                </p>\r\n                <p><b class=\"item L T T_unicast\">Get IP with Unicast</b>\r\n                    <input type=\"checkbox\" id=\"unicast\" />\r\n                    <span class=\"T T_noreq\">(It is usually not required)</span>\r\n                </p>\r\n                <p class=\"br\"></p>\r\n                <p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b>\r\n                    <input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\" />&nbsp;</p>\r\n                <div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n                    <p><b class=\"item L T T_primarydns\">DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" />\r\n                    </p>\r\n                    <p><b class=\"item L T T_secdns\">Secondary DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n                <p class=\"br\"></p>\r\n                <div id=\"dyn_ip_mld\" class=\"nd\">\r\n                    <p><b class=\"item L T T_enmld\">Enable MLD Proxy</b>\r\n                        <input type=\"checkbox\" id=\"dyn_ip_mld_en\" />&nbsp;</p>\r\n                </div>\r\n                <p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b>\r\n                    <input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\" />\r\n                </p>\r\n                <div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n                    <p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" />\r\n                    </p>\r\n                    <p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <p class=\"br IPv6 nd\"></p>\r\n            <p><b class=\"item L T T_hostname\" id=\"host_name\">Host Name:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\" />\r\n            </p>\r\n        </div>\r\n\r\n        <div class=\"cl nd\" id=\"ipoeClick\" onclick=\"IPClick(this)\">\r\n            <p class=\"cl\"></p>\r\n        </div>\r\n        <div id=\"ip_elem_adv\" class=\"nd\">\r\n            <p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n                <input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\" />&nbsp;(<span class=\"T T_mtu1500\">1500 as default</span>,\r\n                <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n            <div id=\"stc_ip4_elem_adv\">\r\n                <p class=\"br IPv6 nd\"></p>\r\n                <p class=\"nd\"><b class=\"item L T T_ennat\">Enable NAT</b>\r\n                    <input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b>\r\n                    <input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b>\r\n                    <input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n                    <input type=\"checkbox\" id=\"ip_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ip');\" />&nbsp;</p>\r\n                <p id=\"ip_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n                    <input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v2\" />\r\n                    <span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n                    <input type=\"radio\" name=\"ip_version\" id=\"ip_igmp_v3\" />\r\n                    <span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n                </p>\r\n            </div>\r\n            <div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n                <p class=\"br\"></p>\r\n                <div id=\"ip_mld\" class=\"nd\">\r\n                    <p><b class=\"item L T T_enmld\">Enable MLD Proxy</b>\r\n                        <input type=\"checkbox\" id=\"ip_mld_en\" />&nbsp;</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"cl nd\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\">\r\n            <p class=\"cl\"></p>\r\n        </div>\r\n        <div id=\"pppoe_elem_adv\" class=\"nd\">\r\n            <p><b class=\"item L T T_srvname\">Service Name:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />&nbsp;(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n            <p><b class=\"item L T T_acname\">Server Name:</b>\r\n                <input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />&nbsp;(<span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n            <p class=\"br\"></p>\r\n            <p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n                <input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" />&nbsp;(<span class=\"T T_mtu1480\">1480 as default</span>,\r\n                <span class=\"T T_nochg\">do not change unless necessary</span>)</p>\r\n            <div id=\"ppp_ip4_elem_adv\">\r\n                <p class=\"br\"></p>\r\n                <p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b>\r\n                    <input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enspi\">Enable SPI Firewall</b>\r\n                    <input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n                <p class=\"nd\"><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b>\r\n                    <input type=\"checkbox\" id=\"ppp_igmp_en\" checked=\"checked\" onclick=\"igmpClick('ppp');\" />&nbsp;</p>\r\n                <p id=\"ppp_igmpversion\" class=\"nd\"><b class=\"item L T T_igmpversion\">IGMP Version</b>\r\n                    <input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v2\" />\r\n                    <span class=\"T T_igmpv2\">v2</span>&nbsp;&nbsp;\r\n                    <input type=\"radio\" name=\"ppp_version\" id=\"ppp_igmp_v3\" />\r\n                    <span class=\"T T_igmpv3\">v3</span>&nbsp;\r\n                </p>\r\n                <p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><br />\r\n                    <input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\" />&nbsp;</p>\r\n                <p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b>\r\n                    <input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" />\r\n                </p>\r\n                <p><b class=\"item L T T_echo\">Echo request interval:</b>\r\n                    <input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" />\r\n                    <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span>\r\n                </p>\r\n                <p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b>\r\n                    <input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\" />&nbsp;</p>\r\n                <div id=\"dns_tbl\" class=\"nd\">\r\n                    <p><b class=\"item L T T_primarydns\">DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" />\r\n                    </p>\r\n                    <p><b class=\"item L T T_secdns\">Secondary DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n                <p class=\"br\"></p>\r\n                <div id=\"ppp_mld\" class=\"nd\">\r\n                    <p><b class=\"item L T T_enmld\">Enable MLD Proxy</b>\r\n                        <input type=\"checkbox\" id=\"ppp_mld_en\" />&nbsp;</p>\r\n                </div>\r\n                <p><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b>\r\n                    <input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv(this);\" />\r\n                </p>\r\n                <div id=\"exIp6_tbl\" class=\"nd\">\r\n                    <p><b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" />\r\n                    </p>\r\n                    <p><b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" />\r\n                    </p>\r\n                </div>\r\n                <p><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b>\r\n                    <input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv(this);\" />\r\n                </p>\r\n                <div id=\"dns6_tbl\" class=\"nd\">\r\n                    <p><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" />\r\n                    </p>\r\n                    <p><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b>\r\n                        <input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <p class=\"bl\"></p>\r\n    <p class=\"tail\" id=\"tail\">\r\n        <input type=\"button\" id=\"saveBtn\" class=\"button L T T_save\" value=\"Save\" onclick=\"doSave(0);\" />\r\n    </p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_bpa_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar wan_bpa_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar bpaStk;\r\nvar bpaEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar lanip;\r\nvar lanmask;\r\n\r\nvar oldStaIp;\r\n\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "fw6LanEdit.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 16
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar opt = $.mainParam[0];\r\nvar returnPage = $.mainParam[1];\r\nvar stk = $.mainParam[2];\r\n\r\nfunction doReturn()\r\n{\r\n\tif (returnPage == 1)\r\n\t{\r\n\t\tvar param = [];\r\n\t\tif ($.mainParam[2] != undefined && $.mainParam[2] != -1)\r\n\t\t{\r\n\t\t\tparam[0] = 1;\r\n\t\t\tparam[1] = $.mainParam[2];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tparam[0] = 0;\r\n\t\t\tparam[1] = -1;\r\n\t\t}\r\n\t\t$.loadMain(\"fw6RulesEdit.htm\", param);\r\n\t}\r\n\telse if (returnPage == 2)\r\n\t\t$.loadMain(\"fw6Rules.htm\");\r\n\telse\r\n\t\t$.loadMain(\"fw6Lan.htm\");\r\n}\r\n\r\nfunction isValidPreLen(ip6PreLen)\r\n{\r\n\tvar regExp = /^[0-9]{1,3}$/;\r\n\tif ((!regExp.test(ip6PreLen)) || ip6PreLen < 0 || ip6PreLen >128 || ( ip6PreLen%8 ) != 0)\r\n\t{\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction isValidGLUIP6Addr(ip6Addr)\r\n{\r\n\tvar flag;\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr2.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (flag)\r\n\t{\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction init()\r\n{\r\n\tif (opt == 1)\r\n\t{\r\n\t\tvar fwCfg = $.act(ACT_GET, IP6_INTERNAL_HOST, stk, null);\r\n\t\t$.exe(function(err)\r\n\t\t{\r\n\t\t\tif (!err)\r\n\t\t\t{\r\n\t\t\t\tif (fwCfg.type == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"entryName\").value = fwCfg.entryName;\r\n\t\t\t\t\r\n\t\t\t\t\t$.id(\"ipaddr\").value = fwCfg.IPv6Address;\r\n\t\t\t\t\t$.id(\"prelen\").value = (fwCfg.IPv6PrefixLength != 0) ? fwCfg.IPv6PrefixLength : \"\"; \r\n\t\t\t\r\n\t\t\t\t\tif (fwCfg.portStart == fwCfg.portEnd)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"portStart\").value = (fwCfg.portStart != 0) ? fwCfg.portStart : \"\";\r\n\t\t\t\t\t\t$.id(\"portEnd\").value = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"portStart\").value = (fwCfg.portStart != 0) ? fwCfg.portStart : \"\";\r\n\t\t\t\t\t\t$.id(\"portEnd\").value = (fwCfg.portEnd != 0) ? fwCfg.portEnd : \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nfunction doSave()\r\n{\r\n\tvar fwAttrs = {};\r\n\r\n\t\tif (!$.isname($.id(\"entryName\").value))\r\n\t\t{\r\n\t\t\t$.alert(ERR_FW_ENTRYNAME_INVAD);\r\n\t\t\tvar element = $.id(\"entryName\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"ipaddr\").value != \"\") && (false == isValidGLUIP6Addr($.id(\"ipaddr\").value)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_FW6_ADDR_INVAD);\r\n\t\t\tvar element = $.id(\"ipaddr\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (($.id(\"prelen\").value != \"\") && (false == isValidPreLen($.id(\"prelen\").value)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_FW6_PFXLEN_INVAD);\r\n\t\t\tvar element = $.id(\"prelen\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (($.id(\"portStart\").value != \"\") \r\n\t\t\t&& (!$.isnum($.id(\"portStart\").value))\r\n\t\t\t|| (parseInt($.id(\"portStart\").value, 10) < 1) \r\n\t\t\t|| (parseInt($.id(\"portStart\").value, 10) > 65535))\r\n\t\t{\r\n\t\t\t$.alert(ERR_PORT_NUM_INVAD);\r\n\t\t\tvar element = $.id(\"portStart\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (($.id(\"portEnd\").value != \"\")\r\n\t\t\t&& (!$.isnum($.id(\"portEnd\").value))\r\n\t\t\t|| (parseInt($.id(\"portEnd\").value, 10) < 1) \r\n\t\t\t|| (parseInt($.id(\"portEnd\").value, 10) > 65535))\r\n\t\t{\r\n\t\t\t$.alert(ERR_PORT_NUM_INVAD);\r\n\t\t\tvar element = $.id(\"portEnd\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (($.id(\"portStart\").value != \"\") \r\n\t\t\t&& ($.id(\"portEnd\").value != \"\") \r\n\t\t\t&& (parseInt($.id(\"portEnd\").value, 10) < parseInt($.id(\"portStart\").value, 10)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_PORT_ORDER_INVAD);\r\n\t\t\tvar element = $.id(\"portEnd\");\r\n\t\t\tif (element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (($.id(\"prelen\").value != \"\")&&($.id(\"ipaddr\").value == \"\"))\r\n\t\t{\r\n\t\t\t$.alert(ERR_FW6_ADDR_INVAD);\r\n\t\t\t\tvar element = $.id(\"ipaddr\");\r\n\t\t\t\tif (element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tif (($.id(\"ipaddr\").value) == \"\" \r\n\t\t\t&& ($.id(\"portStart\").value == \"\") && ($.id(\"portEnd\").value == \"\"))\r\n\t\t{\r\n\t\t\t\t$.alert(ERR_TC_IP_PORT_INVAD);\r\n\t\t\t\tvar element = $.id(\"ipaddr\");\r\n\t\t\t\tif (element){\r\n\t\t\t\t\telement.focus();\r\n\t\t\t\t\telement.select();\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tfwAttrs.type = 0;\r\n\t\tfwAttrs.entryName = $.id(\"entryName\").value;\r\n\t\tfwAttrs.IPv6Address = $.id(\"ipaddr\").value;\r\n\t\tfwAttrs.IPv6PrefixLength = ($.id(\"prelen\").value) ? $.id(\"prelen\").value : 0;\r\n\t\tfwAttrs.portStart = ($.id(\"portStart\").value) ? parseInt($.id(\"portStart\").value, 10) : 0;\r\n\t\tfwAttrs.portEnd = ($.id(\"portEnd\").value) ? parseInt($.id(\"portEnd\").value, 10) : 0;\t\r\n\r\n\r\n\tif (opt == 0)\r\n\t{\r\n\t\t$.act(ACT_ADD, IP6_INTERNAL_HOST, null, null, fwAttrs);\r\n\t}\r\n\telse if (opt == 1)\r\n\t{\r\n\t\t$.act(ACT_SET, IP6_INTERNAL_HOST, stk, null, fwAttrs);\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\t$.loadMain(\"fw6Lan.htm\");\r\n\t\t}\r\n\t});\r\n}\r\n</script>\r\n\r\n<p class=\"et T\" id=\"et\">IPv6 LAN HOST</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"br\"></p>\r\n<p class=\"L1\"><b class=\"item T T_desc\">Description:</b><input type=\"text\" class=\"text\" size=\"17\" id=\"entryName\" maxlength=\"15\"/></p>\r\n<div id=\"ipMode_elem\">\r\n<p class=\"L1\"><b class=\"item T T_ip6addr\">IPv6 Address:</b>\r\n<input type=\"text\" class=\"text\" id=\"ipaddr\" maxlength=\"39\" size=\"17\"/>\r\n</p>\r\n<p class=\"L1\"><b class=\"item T T_plen\">Prefix Length:</b>\r\n<input type=\"text\" class=\"text\" id=\"prelen\" maxlength=\"4\" size=\"4\"/>\r\n</p>\r\n<p class=\"L1\"><b class=\"item T T_port\">Port:</b>\r\n<input type=\"text\" class=\"text\" id=\"portStart\" size=\"10\"/>-\r\n<input type=\"text\" class=\"text\" id=\"portEnd\" size=\"10\"/></p>\r\n</div>\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" class=\"button L T T_save\" id=\"saveBtn\" value=\"Save\" onclick=\"doSave();\" />\r\n<input type=\"button\" class=\"button L T T_back\" value=\"Back\" onclick=\"doReturn();\" /></p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\n$.loadHelp();\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "fw6WanEdit.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 17
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar opt = $.mainParam[0];\r\nvar returnPage = $.mainParam[1];\r\nvar stk = $.mainParam[2];\r\nvar selAll;\r\nvar index;\r\nvar allUrl;\r\nvar allUrlType;\r\nvar fwAttrs;\r\nvar fwCfg;\r\nvar delList;\r\nvar delListIndex;\r\nvar delFlag;\r\n\r\nfunction doReturn()\r\n{\r\n\tif (returnPage == 1)\r\n\t{\r\n\t\tvar param = [];\r\n\t\tif ($.mainParam[2] != undefined && $.mainParam[2] != -1)\r\n\t\t{\r\n\t\t\tparam[0] = 1;\r\n\t\t\tparam[1] = $.mainParam[2];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tparam[0] = 0;\r\n\t\t\tparam[1] = -1;\r\n\t\t}\r\n\t\t$.loadMain(\"fw6RulesEdit.htm\", param);\r\n\t}\r\n\telse if (returnPage == 2)\r\n\t\t$.loadMain(\"fw6Rules.htm\");\r\n\telse\r\n\t\t$.loadMain(\"fw6Wan.htm\");\r\n}\r\n\r\nfunction isValidPreLen(ip6PreLen)\r\n{\r\n\tvar regExp = /^[0-9]{1,3}$/;\r\n\tif ((!regExp.test(ip6PreLen)) || ip6PreLen < 0 || ip6PreLen >128 || ( ip6PreLen%8 ) != 0 )\r\n\t{\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction isValidGLUIP6Addr(ip6Addr)\r\n{\r\n\tvar flag;\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr2.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (flag)\r\n\t{\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\n\r\nfunction init()\r\n{\r\n\tselAll = 0;\r\n\tindex = 0;\r\n\tfwAttrs = {};\r\n\tdelList = [];\r\n\tdelListIndex = 0;\r\n\tdelFlag = 0;\r\n\r\n\tif (opt == 1)\r\n\t{\r\n\t\tfwCfg = $.act(ACT_GET, IP6_EXTERNAL_HOST, stk, null);\r\n\t\r\n\t\t$.exe(function(err)\r\n\t\t{\r\n\t\t\tif (!err)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"entryName\").value = fwCfg.entryName;\r\n\t\t\t\tif (fwCfg.type == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"ipaddr\").value = fwCfg.IPv6Address;\r\n\t\t\t\t\t$.id(\"prefixlen\").value = (fwCfg.IPv6PrefixLength != 0) ? fwCfg.IPv6PrefixLength : \"\"; \r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (fwCfg.portStart == fwCfg.portEnd)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"portStart\").value = (fwCfg.portStart != 0) ? fwCfg.portStart : \"\";\r\n\t\t\t\t\t\t$.id(\"portEnd\").value = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.id(\"portStart\").value = (fwCfg.portStart != 0) ? fwCfg.portStart : \"\";\r\n\t\t\t\t\t\t$.id(\"portEnd\").value = (fwCfg.portEnd != 0) ? fwCfg.portEnd : \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction doSave()\r\n{\r\n\tif (!$.isname($.id(\"entryName\").value))\r\n\t{\r\n\t\t$.alert(ERR_FW_ENTRYNAME_INVAD);\r\n\t\tvar element = $.id(\"entryName\");\r\n\t\t\tif (element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfwAttrs.entryName = $.id(\"entryName\").value;\r\n\r\n\tif ($.id(\"ipaddr\").value != \"\" &&(false == isValidGLUIP6Addr($.id(\"ipaddr\").value)))\r\n\t{\r\n\t\t$.alert(ERR_FW6_ADDR_INVAD);\r\n\t\tvar element = $.id(\"ipaddr\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (($.id(\"prefixlen\").value != \"\") && (false == isValidPreLen($.id(\"prefixlen\").value)))\r\n\t{\r\n\t\t$.alert(ERR_FW6_PFXLEN_INVAD);\r\n\t\tvar element = $.id(\"prefixlen\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (($.id(\"portStart\").value != \"\") \r\n\t\t&& (!$.isnum($.id(\"portStart\").value))\r\n\t\t|| (parseInt($.id(\"portStart\").value, 10) < 1) \r\n\t\t|| (parseInt($.id(\"portStart\").value, 10) > 65535))\r\n\t{\r\n\t\t$.alert(ERR_PORT_NUM_INVAD);\r\n\t\tvar element = $.id(\"portStart\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif (($.id(\"portEnd\").value != \"\")\r\n\t\t&& (!$.isnum($.id(\"portEnd\").value))\r\n\t\t|| (parseInt($.id(\"portEnd\").value, 10) < 1) \r\n\t\t|| (parseInt($.id(\"portEnd\").value, 10) > 65535))\r\n\t{\r\n\t\t$.alert(ERR_PORT_NUM_INVAD);\r\n\t\tvar element = $.id(\"portEnd\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tif (($.id(\"portEnd\").value != \"\") && ($.id(\"portStart\").value != \"\") \r\n\t\t&& (parseInt($.id(\"portEnd\").value) < parseInt($.id(\"portStart\").value)))\r\n\t{\r\n\t\t$.alert(ERR_PORT_ORDER_INVAD);\r\n\t\tvar element = $.id(\"portEnd\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (($.id(\"prefixlen\").value != \"\")&&($.id(\"ipaddr\").value == \"\"))\r\n\t{\r\n\t\t$.alert(ERR_FW6_ADDR_INVAD);\r\n\t\t\tvar element = $.id(\"ipaddr\");\r\n\t\t\tif (element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\tif (($.id(\"ipaddr\").value == \"\") &&\r\n\t\t($.id(\"portStart\").value == \"\") && ($.id(\"portEnd\").value == \"\"))\r\n\t{\r\n\t\t\t$.alert(ERR_TC_IP_PORT_INVAD);\r\n\t\t\tvar element = $.id(\"ipaddr\");\r\n\t\t\tif (element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t}\r\n\tfwAttrs.type = 0;\r\n\tfwAttrs.IPv6Address = $.id(\"ipaddr\").value;\r\n\tfwAttrs.IPv6PrefixLength = $.id(\"prefixlen\").value ? $.id(\"prefixlen\").value : 0;\r\n\tfwAttrs.portStart = ($.id(\"portStart\").value) ? parseInt($.id(\"portStart\").value, 10) : 0;\r\n\tfwAttrs.portEnd = ($.id(\"portEnd\").value) ? parseInt($.id(\"portEnd\").value, 10) : 0;\t\r\n\t\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\tif (opt == 0)\r\n\t{\r\n\t\t$.act(ACT_ADD, IP6_EXTERNAL_HOST, null, null, fwAttrs);\r\n\t}\r\n\telse if (opt == 1)\r\n\t{\r\n\t\t$.act(ACT_SET, IP6_EXTERNAL_HOST, stk, null, fwAttrs);\r\n\t}\t\r\n\t$.exe(function(ret){if (!ret) $.loadMain(\"fw6Wan.htm\");});\r\n}\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 WAN Host</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"br\"></p>\r\n<p class=\"L1\"><b class=\"item T T_desc\">Description:</b><input type=\"text\" class=\"text\" size=\"17\" id=\"entryName\" maxlength=\"15\"/></p>\r\n<div id=\"ipMode_elem\">\r\n<p class=\"L1\"><b class=\"item T T_ip6addr\">IPv6 Address:</b>\r\n<input type=\"text\" class=\"text\" id=\"ipaddr\" maxlength=\"39\" size=\"17\"/></p>\r\n<p class=\"L1\"><b class=\"item T T_plen\">Prefix Length:</b>\r\n<input type=\"text\" class=\"text\" id=\"prefixlen\" maxlength=\"4\" size=\"4\"/></p>\r\n<p class=\"L1\"><b class=\"item T T_port\">Port:</b>\r\n<input type=\"text\" class=\"text\" id=\"portStart\" size=\"10\"/>-\r\n<input type=\"text\" class=\"text\" id=\"portEnd\" size=\"10\"/></p>\r\n</div>\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\" id=\"tail\">\r\n<input type=\"button\" class=\"button L T T_save\" id=\"saveBtn\" value=\"Save\" onclick=\"doSave();\" />\r\n<input type=\"button\" class=\"button L T T_back\" value=\"Back\" onclick=\"doReturn();\" /></p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\n$.loadHelp();\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "ipv6Tunnel.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 18
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar first=0;\r\nfunction getPPPoEConnStatus()\r\n{\r\n\tvar pppoelist = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, null);\r\n\tif (!$.exe() && (pppoelist.enable == 1))\r\n\t{\r\n\t\tif (pppoelist.connectionStatus == \"Connecting\")\r\n\t\t{\r\n\t\t\t//$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t\t$(\"#PPPoEConnecting\").removeClass(\"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//$.addClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t\t\t$(\"#PPPoEConnecting\").addClass(\"nd\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6 && pppoelist.X_TP_IPv4Enabled == 0)\r\n\t\t{\r\n\t\t\t//$.id(\"conn\").disabled = 1;\r\n\t\t\t//$.id(\"disConn\").disabled = 1;\r\n\t\t\t$(\"#conn\").prop(\"disabled\", true);\r\n\t\t\t$(\"#disConn\").prop(\"disabled\", true);\r\n\t\t}\r\n\t\telse if (pppoelist.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t//$.id(\"conn\").disabled = 1;\r\n\t\t\t//$.id(\"disConn\").disabled = 0;\r\n\t\t\t$(\"#conn\").prop(\"disabled\", true);\r\n\t\t\t$(\"#disConn\").prop(\"disabled\", false);\r\n\t\t}\r\n\t\telse if ((pppoelist.connectionStatus == \"Disconnected\") || (pppoelist.connectionStatus == \"Unconfigured\"))\r\n\t\t{\r\n\t\t\t//$.id(\"conn\").disabled = 0;\r\n\t\t\t//$.id(\"disConn\").disabled = 1;\r\n\t\t\t$(\"#conn\").prop(\"disabled\", false);\r\n\t\t\t$(\"#disConn\").prop(\"disabled\", true);\r\n\t\t}\r\n\t\telse\r\n\t\t{\t\t\r\n\t\t\t//$.id(\"conn\").disabled = 1;\r\n\t\t\t//$.id(\"disConn\").disabled = 0;\r\n\t\t\t$(\"#conn\").prop(\"disabled\", true);\r\n\t\t\t$(\"#disConn\").prop(\"disabled\", false);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction getDynamicIPConnStatus()\r\n{\r\n\t\tvar iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, null);\r\n\t\tif (!$.exe() && (iplist_dyn.enable == 1))\r\n\t\t{\r\n\t\t\t//$.h($.id(\"dyn_ip6_addr\"), iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t//$.h($.id(\"dyn_prefix_len\"), iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t//$.h($.id(\"dyn_ip6_gw\"), iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\t$(\"#dyn_ip6_addr\").html(iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t\t$(\"#dyn_prefix_len\").html(iplist_dyn.X_TP_PrefixLength);\r\n\t\t\t$(\"#dyn_ip6_gw\").html(iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t}\r\n}\r\nfunction formatIPv6(address)\r\n{\r\n\taddress = address.replace(/:(0){1,4}/g, ':0');\r\n\taddress = address.replace(/(?!((:0:)|(:0$)))(:0)/g, ':');\r\n\tif (-1 == address.indexOf(\"::\"))\r\n\t{\r\n\t\taddress = address.replace(/(:0)+:/, '::');\r\n\t}\r\n\telse\r\n\t{\r\n\t\taddress = address.replace(/(:0)*::/, '::');\r\n\t}\r\n\treturn address;\r\n}\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\t/* judge the amount of total character*/\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\t/* whether contain ::*/\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t/* found :: */\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\t/* found more than one ::*/\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t/* process the substr if found only one :: */\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\t/* the amount of \":\" contained in reamin should not more than 5 when found :: */\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* no :: */\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* type judgement */\r\n\tif (flag)\r\n\t{\r\n\t\t/* former 16 bit*/\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\t/* undefined address */\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* loopback address */\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\t/* FF00 = 65280, exclude broadcast address */\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\t/* FE80 = 65152, FEBF = 65215, local address */\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t/* 0x200 = 8192, 0x3ff = 16383, global unnicast address */\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction showLnkType(type)\r\n{\r\n\tvar linkType = $(\"#link_type_v6\").data(\"value\");\r\n\tif ($(\"#wan_enable_ipv6\").prop(\"data-checked\") == false) {\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\tlinkType = type ? type : linkType;\r\n\tif (linkType == \"disabled\")\r\n\t{\r\n\t\t$(\"#wan_enable_ipv6\").prop(\"checked\", false);\r\n\t\t$(\"#wan_conn_type\").addClass(\"nd\");\r\n\t\tinitDisabledIPv6();\r\n\t\treturn ;\r\n\t} else {\r\n\t\t$(\"#wan_enable_ipv6\").prop(\"checked\", true);\r\n\t\t$(\"#wan_conn_type\").removeClass(\"nd\");\r\n\t}\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\t$.id(\"link_type_v6\").value = \"staticIp\";\r\n\t\t$(\"#link_type option[value='staticIp']\").prop(\"selected\",\"selected\");\r\n\t\tinitStaticIP();\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"dynamicIp\") \r\n\t{\r\n\t\t$.id(\"link_type_v6\").value = \"dynamicIp\";\r\n\t\t$(\"#link_type option[value='dynamicIp']\").prop(\"selected\",\"selected\");\r\n\t\tinitDynamicIP();\r\n\t\tdoManualDns();\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pppoe\")\r\n\t{\r\n\t\t$.id(\"link_type_v6\").value = \"pppoe\";\r\n\t\t$(\"#link_type option[value='pppoe']\").prop(\"selected\",\"selected\");\r\n\t\tinitPPPoE();\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"l2tp\")\r\n\t{\r\n\t\t$.id(\"link_type_v6\").value = \"l2tp\";\r\n\t\t$(\"#link_type option[value='l2tp']\").prop(\"selected\",\"selected\");\r\n\t\tinitL2TP();\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"pptp\")\r\n\t{\r\n\t\t$.id(\"link_type_v6\").value = \"pptp\";\r\n\t\t$(\"#link_type option[value='pptp']\").prop(\"selected\",\"selected\");\r\n\t\tinitPPTP();\r\n\t\treturn;\r\n\t}\r\n\tif (linkType == \"6to4\")\r\n\t{\r\n\t\t$.id(\"link_type_v6\").value = \"6to4\";\r\n\t\t$(\"#link_type option[value='6to4']\").prop(\"selected\",\"selected\");\r\n\t\tinitWan6to4();\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction natClick(val)\r\n{\r\n\tif (val == \"static\")\r\n\t{\r\n\t\t//if ($.id(\"enable_nat\").checked == 1)\r\n\t\tif ($(\"#enable_nat\").prop(\"data-checked\"))\r\n\t\t{\r\n\t\t\t//$.id(\"enable_fullnat\").disabled = 0;\r\n\t\t\t$(\"#enable_fullnat\").prop(\"disabled\", false);\r\n\t\t}\r\n\t\t//else if ($.id(\"enable_nat\").checked == 0)\r\n\t\tif ($(\"#enable_nat\").prop(\"data-checked\") == 0)\r\n\t\t{\r\n\t\t\t//$.id(\"enable_fullnat\").checked = 0;\r\n\t\t\t//$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t\t$(\"#enable_fullnat\").prop(\"checked\", false);\r\n\t\t\t$(\"#enable_fullnat\").prop(\"disabled\", true);\r\n\t\t}\r\n\t\t$(\"#enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n\t}\r\n\telse if (val == \"dynamic\")\r\n\t{\t\r\n\t\t//if ($.id(\"dyn_enable_nat\").checked == 1)\r\n\t\tif ($(\"#dyn_enable_nat\").prop(\"data-checked\"))\r\n\t\t{\r\n\t\t\t$.id(\"dyn_enable_fullnat\").disabled = 0;\r\n\t\t\t$(\"#dyn_enable_fullnat\").prop(\"disabled\", false);\r\n\t\t}\r\n\t\t//else if ($.id(\"dyn_enable_nat\").checked == 0)\r\n\t\tif ($(\"#dyn_enable_nat\").prop(\"data-checked\") == 0)\r\n\t\t{\r\n\t\t\t//$.id(\"dyn_enable_fullnat\").checked = 0;\r\n\t\t\t//$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t\t$(\"#dyn_enable_fullnat\").prop(\"checked\", false);\r\n\t\t\t$(\"#dyn_enable_fullnat\").prop(\"disabled\", true);\r\n\t\t}\r\n\t\t$(\"#dyn_enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n\t}\r\n}\r\nfunction IPClick(obj)\r\n{\r\n    if ($(obj).hasClass(\"cln\")) {\r\n        $(\"#ip_elem_adv\").addClass(\"nd\");\r\n        $(obj).removeClass(\"cln\");\r\n    } else {\r\n        $(\"#ip_elem_adv\").removeClass(\"nd\");\r\n        $(obj).addClass(\"cln\");\r\n    }\r\n}\r\nfunction DynIPClick(obj)\r\n{\r\n    if ($(obj).hasClass(\"cln\")) {\r\n        $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n        $(obj).removeClass(\"cln\");\r\n    } else {\r\n        $(\"#dyn_ip_elem_adv\").removeClass(\"nd\");\r\n        $(obj).addClass(\"cln\");\r\n    }\r\n}\r\nfunction PPPoEClick(obj)\r\n{\r\n    if ($(obj).hasClass(\"cln\")) {\r\n        $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n        $(obj).removeClass(\"cln\");\r\n    } else {\r\n        $(\"#pppoe_elem_adv\").removeClass(\"nd\");\r\n        $(obj).addClass(\"cln\");\r\n    }\r\n}\r\nfunction doManualDns()\r\n{\r\n    if ($(\"#dynamic_manual_dns\").prop(\"data-checked\")) {\r\n        $(\"#dyn_ip_dns_tbl\").removeClass(\"nd\");\r\n    } else {\r\n        $(\"#dyn_ip_dns_tbl\").addClass(\"nd\");\r\n    }\r\n}\r\nfunction doManualDns6()\r\n{\r\n    if ($(\"#dynamic_manual_dns6\").prop(\"data-checked\")) {\r\n        $(\"#dyn_ip_dns6_tbl\").removeClass(\"nd\");\r\n    } else {\r\n        $(\"#dyn_ip_dns6_tbl\").addClass(\"nd\");\r\n    }\r\n}\r\nfunction PPPoEShowDiv(val)\r\n{\r\n    switch (val) {\r\n        case 2:\r\n            if ($(\"#externIp_en\").prop(\"data-checked\"))\r\n                $(\"#exIp_tbl\").removeClass(\"nd\");\r\n            else\r\n                $(\"#exIp_tbl\").addClass(\"nd\");\r\n            break;\r\n        case 3:\r\n            if ($(\"#dns_en\").prop(\"data-checked\"))\r\n                $(\"#dns_tbl\").removeClass(\"nd\");\r\n            else\r\n                $(\"#dns_tbl\").addClass(\"nd\");\r\n            break;\r\n        default:\r\n            ;\r\n    }\r\n}\r\nfunction ShowDiv(val)\r\n{\r\n\tif (val == null || val.attr(\"id\") == null)\r\n\t\treturn;\r\n\t\t\r\n\tvar objId = val.attr(\"id\");\r\n\tvar pattern1 = /_enable/i;\r\n\tvar pattern2 = /ppp_/i;\r\n\r\n\tif (objId.search(pattern1) != -1)\r\n\t{\r\n\t\t//var obj = $.id(objId.replace(pattern1, \"_basic\"));\r\n\t\tvar obj = $(\"#\" + objId.replace(pattern1, \"_basic\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.prop(\"data-checked\") == true)\r\n\t\t\t\t//$.removeClass(obj, \"nd\");\r\n\t\t\t\tobj.removeClass(\"nd\");\r\n\t\t\telse\r\n\t\t\t\t//$.addClass(obj, \"nd\");\r\n\t\t\t\tobj.addClass(\"nd\");\r\n\t\t\t\t\r\n\t\t//obj = $.id(objId.replace(pattern1, \"_adv\"));\r\n\t\tobj = $(\"#\" + objId.replace(pattern1, \"_adv\"));\r\n\t\tif (obj != null)\r\n\t\t\tif (val.prop(\"data-checked\") == true)\r\n\t\t\t\t//$.removeClass(obj, \"nd\");\r\n\t\t\t\tobj.removeClass(\"nd\");\r\n\t\t\telse\r\n\t\t\t\t//$.addClass(obj, \"nd\");\r\n\t\t\t\tobj.addClass(\"nd\");\r\n\t\tif (objId.search(pattern2) != -1)\r\n\t\t{\r\n\t\t\t//if ($.id(\"ppp_ip4_elem_enable\").checked == false && $.id(\"ppp_ip6_elem_enable\").checked == true)\r\n\t\t\t//{\r\n\t\t\t//\t$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t//\t$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t//\t$.id(\"connManual\").disabled = true;\r\n\t\t\t//}\r\n\t\t\t//else\r\n\t\t\t//{\r\n\t\t\t//\t$.id(\"connOnDemand\").disabled = false;\r\n\t\t\t//\t$.id(\"connManual\").disabled = false;\r\n\t\t\t//}\r\n            if ($(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == false && $(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == true) {\r\n                $(\"#connAlwaysOn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n                $(\"#connOnDemand\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n                $(\"#connManual\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n            } else {\r\n                $(\"#connOnDemand\").prop(\"disabled\", false).data(\"tpRadio\").refresh();\r\n                $(\"#connManual\").prop(\"disabled\", false).data(\"tpRadio\").refresh();\r\n            }\r\n\t\t}\r\n\t}\t\t\r\n\telse if (objId == \"externIp6_en\")\r\n\t{\r\n\t\t//if (val.checked == true)\r\n\t\tif (val.prop(\"data-checked\") == true)\r\n\t\t{\r\n\t\t\t//$.removeClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\t//if (INCLUDE_IPV6_SLAAC)\r\n\t\t\t//{\r\n\t\t\t//\t$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t//}\r\n\t\t\t//if (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t//\t$.id(\"ppp_hide_addr_config\").disabled = 1;\r\n\t\t\t//}\r\n            $(\"#exIp6_tbl\").removeClass(\"nd\");\r\n            if (INCLUDE_IPV6_SLAAC) {\r\n                $(\"#ppp_ip6addr_type\").prop(\"disabled\", true).tpSelect({refresh: 1});\r\n            }\r\n            if (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR) {\r\n                $(\"#ppp_hide_addr_config\").prop(\"disabled\", true).tpSelect({refresh: 1});\r\n            }\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//$.addClass($.id(\"exIp6_tbl\"), \"nd\");\r\n\t\t\t//if (INCLUDE_IPV6_SLAAC)\r\n\t\t\t//{\r\n\t\t\t//\t$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t//}\r\n\t\t\t//if (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t//\t$.id(\"ppp_hide_addr_config\").disabled = 0;\r\n\t\t\t//}\r\n            $(\"#exIp6_tbl\").addClass(\"nd\");\r\n            if (INCLUDE_IPV6_SLAAC) {\r\n                $(\"#ppp_ip6addr_type\").prop(\"disabled\", false).tpSelect({refresh: 1});\r\n            }\r\n            if (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR) {\r\n                $(\"#ppp_hide_addr_config\").prop(\"disabled\", false).tpSelect({refresh: 1});\r\n            }\r\n            \r\n\t\t}\r\n\t}\r\n\telse if (objId == \"dns6_en\")\r\n\t{\r\n\t\t//if (val.checked == true)\r\n\t\t//\t$.removeClass($.id(\"dns6_tbl\"), \"nd\");\r\n\t\t//else\r\n\t\t//\t$.addClass($.id(\"dns6_tbl\"), \"nd\");\r\n        if (val.prop(\"data-checked\") == true)\r\n            $(\"#dns6_tbl\").removeClass(\"nd\");\r\n        else\r\n            $(\"#dns6_tbl\").addClass(\"nd\");\r\n\t}\r\n}\r\n\r\nfunction isSameLan(lan1Ip, lan1Mask, lan2Ip, lan2Mask)\r\n{\r\n\tvar count = 0;\r\n\tlan1a = lan1Ip.split('.');\r\n\tlan1m = lan1Mask.split('.');\r\n\tlan2a = lan2Ip.split('.');\r\n\tlan2m = lan2Mask.split('.');\r\n\tfor (i = 0; i < 4; i++) \r\n\t{\r\n\t\tl1a_n = parseInt(lan1a[i]);\r\n\t\tl1m_n = parseInt(lan1m[i]);\r\n\t\tl2a_n = parseInt(lan2a[i]);\r\n\t\tl2m_n = parseInt(lan2m[i]);\r\n\t\tif ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n\t\t\tcount++;\r\n\t}\r\n   if (count == 4)\r\n\t{\r\n\t\tvar testIp = $.ip2num(lan1Ip);\r\n\t\tvar lanMask = $.ip2num(lan1Mask);\r\n\t\tif (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n\t\t\treturn false;\r\n\t\telse\r\n\t\t\treturn true;\r\n\t}\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nfunction charCompareA(szname, en_limit, cn_limit)\r\n{\r\n\tvar c;\r\n\tvar ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n\r\n\tif (szname.length > en_limit)\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < szname.length; i++)\r\n\t{\r\n\t\tc = szname.charAt(i);\r\n\t\tif (ch.indexOf(c) == -1)\r\n\t\t{\r\n\t\t\tif(szname.length > cn_limit)\r\n\t\t\t{\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction initStaticIP()\r\n{\r\n\t//$.removeClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t//$.removeClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//$.removeClass($.id(\"ipoeClick\"), \"cln\");\r\n\t//$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t//$.loadHelpFrame(\"WanStaticIpV6CfgHelpRpm.htm\");\r\n    $(\"#ip_elem_basic\").removeClass(\"nd\");\r\n    $(\"#ipoeClick\").removeClass(\"nd\");\r\n    $(\"#ipoeClick\").removeClass(\"cln\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"dynipClick\"), \"nd\");\r\n    $(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#dynipClick\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n    $(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n    $(\"#pppoeClick\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"wan_select\"), \"nd\");\r\n\t$(\"#wan_select\").addClass(\"nd\");\r\n\r\n\t//$.id(\"ip_address\").value = wan_iplist_sta.externalIPAddress;\r\n\t//$.id(\"netmask\").value = wan_iplist_sta.subnetMask;\r\n\t//$.id(\"ip_gateway\").value = wan_iplist_sta.defaultGateway ? wan_iplist_sta.defaultGateway : \"0.0.0.0\";\r\n    $(\"#ip_address\").tpAddress('val', wan_iplist_sta.externalIPAddress);\r\n    $(\"#netmask\").tpAddress('val', wan_iplist_sta.subnetMask);\r\n    $(\"#ip_gateway\").tpAddress('val', wan_iplist_sta.defaultGateway);\r\n\t//$.id(\"mtu\").value = wan_iplist_sta.maxMTUSize;\r\n    $(\"#ip_address\").tpAddress('val', wan_iplist_sta.externalIPAddress);\r\n    $(\"#netmask\").tpAddress('val', wan_iplist_sta.subnetMask);\r\n    $(\"#ip_gateway\").tpAddress('val', wan_iplist_sta.defaultGateway);\r\n\t$(\"#mtu\").val(wan_iplist_sta.maxMTUSize);\r\n\tif (wan_iplist_sta.NATEnabled == 1)\r\n\t{\r\n\t\t//$.id(\"enable_nat\").checked = 1;\r\n\t\t//$.id(\"enable_fullnat\").checked = (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n        $(\"#enable_nat\").prop(\"checked\", \"checked\");\r\n        $(\"#enable_fullnat\").prop(\"checked\", (wan_iplist_sta.X_TP_FullconeNATEnabled == 1) ? true : false);\r\n\t}\r\n\telse if (wan_iplist_sta.NATEnabled == 0)\r\n\t{\r\n\t\t//$.id(\"enable_nat\").checked = 0;\r\n\t\t//$.id(\"enable_fullnat\").disabled = 1;\r\n\t\t//$.id(\"enable_fullnat\").checked = 0;\r\n        $(\"#enable_nat\").prop(\"checked\", false);\r\n        $(\"#enable_fullnat\").prop(\"disabled\", true);\r\n        $(\"#enable_fullnat\").prop(\"checked\", false);\r\n\t}\r\n    $(\"#enable_nat\").data(\"tpCheckbox\").refresh();\r\n    $(\"#enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n    \r\n\t//$.id(\"enable_spi\").checked = (wan_iplist_sta.X_TP_FirewallEnabled == 1)\t? 1 : 0;\r\n\t//$.id(\"ip_igmp_en\").checked = (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n    $(\"#enable_spi\").prop(\"checked\", (wan_iplist_sta.X_TP_FirewallEnabled == 1) ? 1 : 0);\r\n    $(\"#ip_igmp_en\").prop(\"checked\", (wan_iplist_sta.X_TP_IGMPProxyEnabled == 1) ? 1 : 0);\r\n    $(\"#enable_spi\").data(\"tpCheckbox\").refresh();\r\n    $(\"#ip_igmp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n\tif (wan_iplist_sta.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t//$.id(\"dns_address\").value = (wan_iplist_sta.DNSServers).split(\",\")[0] ? (wan_iplist_sta.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t//$.id(\"second_dns\").value = (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n        $(\"#dns_address\").tpAddress('val', (wan_iplist_sta.DNSServers).split(\",\")[0]);\r\n        $(\"#second_dns\").tpAddress('val', (wan_iplist_sta.DNSServers).split(\",\")[1] ? (wan_iplist_sta.DNSServers).split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t//$.id(\"stc_ip4_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\t//ShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n        $(\"#stc_ip4_elem_enable\").prop(\"checked\", (wan_iplist_sta.X_TP_IPv4Enabled == 1) ? 1 : 0);\r\n        $(\"#stc_ip4_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#stc_ip4_elem_enable\"));\r\n\t\t\r\n\t\t//$.id(\"stc_ip6_elem_enable\").checked = (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\t//ShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n        $(\"#stc_ip6_elem_enable\").prop(\"checked\", (wan_iplist_sta.X_TP_IPv6Enabled == 1) ? 1 : 0);\r\n        $(\"#stc_ip6_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#stc_ip6_elem_enable\"));\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t//$.removeClass($.id(\"ip_mld\"), \"nd\");\r\n\t\t\t//$.id(\"ip_mld_en\").checked = (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n            $(\"#ip_mld\").removeClass(\"nd\");\r\n            $(\"#ip_mld_en\").prop(\"checked\", (wan_iplist_sta.X_TP_MLDProxyEnabled == 1) ? 1 : 0);\r\n            $(\"#ip_mld_en\").data(\"tpCheckbox\").refresh();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//$.addClass($.id(\"ip_mld\"), \"nd\");\r\n            $(\"#ip_mld\").addClass(\"nd\");\r\n\t\t}\r\n\t\r\n\t\t//$.id(\"stc_ip6_addr\").value = wan_iplist_sta.X_TP_ExternalIPv6Address;\r\n\t\t$(\"#stc_ip6_addr\").val(wan_iplist_sta.X_TP_ExternalIPv6Address);\r\n\t\t/* modify by liweijie,2014-10-10,for wan static ip address prefix length > 64 */\r\n\t\t/* $.id(\"stc_prefix_len\").value = \"64\";*/\r\n\t\t//$.id(\"stc_prefix_len\").value = wan_iplist_sta.X_TP_PrefixLength;\r\n\t\t//$.id(\"stc_ip6_gateway\").value = wan_iplist_sta.X_TP_DefaultIPv6Gateway;\r\n\t\t$(\"#stc_prefix_len\").val(wan_iplist_sta.X_TP_PrefixLength);\r\n\t\t$(\"#stc_ip6_gateway\").val(wan_iplist_sta.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t//$.id(\"dns6_address\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t//$.id(\"second_dns6\").value = (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n        $(\"#dns6_address\").val((wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[0]);\r\n        $(\"#second_dns6\").val((wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_sta.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\");\r\n\t}\r\n}\r\n\r\nfunction initDynamicIP()\r\n{\r\n\t//$.removeClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t//$.removeClass($.id(\"dynipClick\"), \"nd\");\r\n\t//$.removeClass($.id(\"dynipClick\"), \"cln\");\r\n\t//$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t//$.loadHelpFrame(\"WanDynamicIpV6CfgHelpRpm.htm\");\r\n    $(\"#dyn_ip_elem_basic\").removeClass(\"nd\");\r\n    $(\"#dynipClick\").removeClass(\"nd\");\r\n    $(\"#dynipClick\").removeClass(\"cln\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n    $(\"#ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#ipoeClick\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n    $(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n    $(\"#pppoeClick\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"wan_select\"), \"nd\");\r\n\t$(\"#wan_select\").addClass(\"nd\");\r\n\r\n\t$.auto(function(){ getDynamicIPConnStatus();}, 5000, true);\r\n\t\r\n\t//$.id(\"dyn_mtu\").value = wan_iplist_dyn.maxMTUSize;\r\n\t$(\"#dyn_mtu\").val(wan_iplist_dyn.maxMTUSize);\r\n\tif (wan_iplist_dyn.NATEnabled == 1)\r\n\t{\r\n\t\t//$.id(\"dyn_enable_nat\").checked = 1;\r\n\t\t//$.id(\"dyn_enable_fullnat\").checked = (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n        $(\"#dyn_enable_nat\").prop(\"checked\", true);\r\n        $(\"#dyn_enable_fullnat\").prop(\"checked\", (wan_iplist_dyn.X_TP_FullconeNATEnabled == 1) ? 1 : 0);\r\n\t}\r\n\telse if (wan_iplist_dyn.NATEnabled == 0)\r\n\t{\r\n\t\t//$.id(\"dyn_enable_nat\").checked = 0;\r\n\t\t//$.id(\"dyn_enable_fullnat\").disabled = 1;\r\n\t\t//$.id(\"dyn_enable_fullnat\").checked = 0;\r\n        $(\"#dyn_enable_nat\").prop(\"checked\", false);\r\n        $(\"#dyn_enable_fullnat\").prop(\"disabled\", true);\r\n        $(\"#dyn_enable_fullnat\").prop(\"checked\", false);\r\n\t}\r\n    $(\"#dyn_enable_nat\").data(\"tpCheckbox\").refresh();\r\n    $(\"#dyn_enable_fullnat\").data(\"tpCheckbox\").refresh();\r\n\r\n\tif (wan_iplist_dyn.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t//$.id(\"dyn_dns1\").value = (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\";\r\n\t\t//$.id(\"dyn_dns2\").value = (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\";\r\n        $(\"#dyn_dns1\").tpAddress('val', (wan_iplist_dyn.DNSServers).split(\",\")[0] ? (wan_iplist_dyn.DNSServers).split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#dyn_dns2\").tpAddress('val', (wan_iplist_dyn.DNSServers).split(\",\")[1] ? (wan_iplist_dyn.DNSServers).split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\r\n\t//$.id(\"dynamic_manual_dns\").checked = wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0;\r\n\t//$.id(\"hostname\").value = wan_iplist_dyn.X_TP_Hostname;\r\n\t//$.id(\"unicast\").checked = wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0;\r\n\t//$.id(\"dyn_ip_igmp_en\").checked = (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0; \r\n\t//$.id(\"dyn_ip_spi_en\").checked = (wan_iplist_dyn.X_TP_FirewallEnabled == 1) ? 1 : 0; \r\n    $(\"#dynamic_manual_dns\").prop(\"checked\", wan_iplist_dyn.DNSOverrideAllowed == 1 ? 1 : 0);\r\n    $(\"#dynamic_manual_dns\").data(\"tpCheckbox\").refresh();\r\n    $(\"#hostname\").val(wan_iplist_dyn.X_TP_Hostname);\r\n    $(\"#unicast\").prop(\"checked\", wan_iplist_dyn.X_TP_Unicast == 1 ? 1 : 0);\r\n    $(\"#dyn_ip_igmp_en\").prop(\"checked\", (wan_iplist_dyn.X_TP_IGMPProxyEnabled == 1) ? 1 : 0);\r\n    $(\"#unicast\").data(\"tpCheckbox\").refresh();\r\n    $(\"#dyn_ip_igmp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n\tdoManualDns();\r\n\r\n\tif (wan_iplist_dyn.enable == 1)\r\n\t{\r\n\t\tif (wan_iplist_dyn.connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t//$.id(\"renew\").disabled = 1;\r\n\t\t\t//$.id(\"release\").disabled = 0;\r\n            $(\"#renew\").prop(\"disabled\", true);\r\n            $(\"#release\").prop(\"disabled\", false);\r\n\t\t}\r\n\t\telse if (wan_iplist_dyn.connectionStatus == \"Disconnected\")\r\n\t\t{\r\n\t\t\t$.removeLoading();\r\n\t\t\t//$.id(\"renew\").disabled = 0;\r\n\t\t\t//$.id(\"release\").disabled = 1;\r\n            $(\"#renew\").prop(\"disabled\", false);\r\n            $(\"#release\").prop(\"disabled\", true);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t\t\t//$.id(\"renew\").disabled = 1;\r\n\t\t\t//$.id(\"release\").disabled = 1;\r\n            $(\"#DynIpConnecting\").removeClass(\"nd\");\r\n            $(\"#renew\").prop(\"disabled\", true);\r\n            $(\"#release\").prop(\"disabled\", true);\r\n\t\t\t/*$.timeout($.reload, 10000);*/ \r\n\t\t}\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t//$.id(\"dyn_ip4_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv4Enabled == 1)\r\n\t\t//ShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n        $(\"#dyn_ip4_elem_enable\").prop(\"checked\", (wan_iplist_dyn.X_TP_IPv4Enabled == 1) ? 1 : 0);\r\n        $(\"#dyn_ip4_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#dyn_ip4_elem_enable\"));\r\n        \r\n\t\t//$.id(\"dyn_ip6_elem_enable\").checked = (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\t//ShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n        $(\"#dyn_ip6_elem_enable\").prop(\"checked\", (wan_iplist_dyn.X_TP_IPv6Enabled == 1) ? 1 : 0);\r\n        $(\"#dyn_ip6_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#dyn_ip6_elem_enable\"));\r\n\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t//$.removeClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t//$.id(\"dyn_ip_mld_en\").checked = (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n            $(\"#dyn_ip_mld\").removeClass(\"nd\");\r\n            $(\"#dyn_ip_mld_en\").prop(\"checked\", (wan_iplist_dyn.X_TP_MLDProxyEnabled == 1) ? 1 : 0);\r\n            $(\"#dyn_ip_mld_en\").data(\"tpCheckbox\").refresh();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//$.addClass($.id(\"dyn_ip_mld\"), \"nd\");\r\n\t\t\t$(\"#dyn_ip_mld\").addClass(\"nd\");\r\n\t\t}\r\n\t\t\r\n\t\t//$.h($.id(\"dyn_ip6_addr\"), wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n\t\t//$.h($.id(\"dyn_prefix_len\"), wan_iplist_dyn.X_TP_PrefixLength);\r\n\t\t//$.h($.id(\"dyn_ip6_gw\"), wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n        $(\"#dyn_ip6_addr\").html(wan_iplist_dyn.X_TP_ExternalIPv6Address);\r\n        $(\"#dyn_prefix_len\").html(wan_iplist_dyn.X_TP_PrefixLength);\r\n        $(\"#dyn_ip6_gw\").html(wan_iplist_dyn.X_TP_DefaultIPv6Gateway);\r\n\t\t\r\n\t\t//$.id(\"dynamic_manual_dns6\").checked = (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n        $(\"#dynamic_manual_dns6\").prop(\"checked\", (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0);\r\n        $(\"#dynamic_manual_dns6\").data(\"tpCheckbox\").refresh();\r\n\t\tdoManualDns6();\r\n\t\tif (wan_iplist_dyn.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t//$.id(\"dyn_dns6_1\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t//$.id(\"dyn_dns6_2\").value = (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n            $(\"#dyn_dns6_1\").val((wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\");\r\n            $(\"#dyn_dns6_2\").val((wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_iplist_dyn.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\");\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t//$.id(\"dyn_ip6addr_type\").selectedIndex = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? 0 : 1;\r\n            var optVal = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"DHCPv6\") ? \"dhcp\" : \"autoip\";\r\n            $(\"#dyn_ip6addr_type option[value='\" + optVal + \"']\").prop(\"selected\", \"selected\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t//$.removeClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t//$.id(\"dyn_hide_addr_config\").checked = (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t$(\"#dyn_hide_addr_check\").removeClass(\"nd\");\r\n\t\t\t$(\"#dyn_hide_addr_config\").prop(\"checked\", (wan_iplist_dyn.X_TP_IPv6AddressingType == \"None\") ? 1 : 0);\r\n\t\t\thideAutoAddrConfig(\"dyn\");\r\n\t\t} else {\r\n\t\t\t//$.addClass($.id(\"dyn_hide_addr_check\"), \"nd\");\r\n\t\t\t$(\"#dyn_hide_addr_check\").addClass(\"nd\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction initPPPoE()\r\n{\r\n\t//$.removeClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t//$.removeClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//$.removeClass($.id(\"pppoeClick\"), \"cln\");\r\n\t//$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t//$.loadHelpFrame(\"PPPoEv6CfgHelpRpm.htm\");\r\n    $(\"#pppoe_elem_basic\").removeClass(\"nd\");\r\n    $(\"#pppoeClick\").removeClass(\"nd\");\r\n    $(\"#pppoeClick\").removeClass(\"cln\");\r\n    $(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"dynipClick\"), \"nd\");\r\n    $(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#dynipClick\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n    $(\"#ip_elem_basic\").addClass(\"nd\");\r\n    $(\"#ip_elem_adv\").addClass(\"nd\");\r\n    $(\"#ipoeClick\").addClass(\"nd\");\r\n\r\n\t//$.addClass($.id(\"wan_select\"), \"nd\");\r\n\t$(\"#wan_select\").addClass(\"nd\");\r\n\r\n\t//$.id(\"username\").value = wan_pppoelist.username;\r\n\t//$.id(\"pwd\").value = wan_pppoelist.password;\r\n\t//$.id(\"pwd2\").value = wan_pppoelist.password;\r\n    $(\"#username\").val(wan_pppoelist.username);\r\n    $(\"#pwd\").tpPassword('val', wan_pppoelist.password);\r\n    $(\"#pwd2\").tpPassword('val', wan_pppoelist.password);\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) {\r\n\t\t//$.id(\"speDail\").value = wan_pppoelist.X_TP_SpecialDail;\r\n\t\t$(\"#speDail\").val(wan_pppoelist.X_TP_SpecialDail);\r\n\t}\r\n\t//$.id(\"idleTime\").value = wan_pppoelist.idleDisconnectTime;\r\n\t$(\"#idleTime\").val(wan_pppoelist.idleDisconnectTime);\r\n\tif (wan_pppoelist.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t//$.id(\"connOnDemand\").checked = 1;\r\n\t\t$(\"#connOnDemand\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t//$.id(\"connAlwaysOn\").checked = 1;\r\n\t\t$(\"#connAlwaysOn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n\t}\r\n\telse if (wan_pppoelist.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t//$.id(\"connManual\").checked = 1;\r\n\t\t$(\"#connManual\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n\t}\r\n\t//if (wan_pppoelist.PPPAuthenticationProtocol == \"AUTO_AUTH\")\r\n\t//\t$.id(\"ppp_authpro\").value = \"AUTO_AUTH\";\r\n\t//else if (wan_pppoelist.PPPAuthenticationProtocol == \"PAP\")\r\n\t//\t$.id(\"ppp_authpro\").value = \"PAP\";\r\n\t//else if (wan_pppoelist.PPPAuthenticationProtocol == \"CHAP\")\r\n\t//\t$.id(\"ppp_authpro\").value = \"CHAP\";\r\n\t//else if (wan_pppoelist.PPPAuthenticationProtocol == \"MS-CHAP\")\r\n\t//\t$.id(\"ppp_authpro\").value = \"MS-CHAP\";\r\n\t  $(\"#ppp_authpro option[value='\" + wan_pppoelist.PPPAuthenticationProtocol + \"']\").prop(\"selected\", true);\r\n\r\n\t//$.id(\"acName\").value = wan_pppoelist.PPPoEACName;\r\n\t//$.id(\"serviceName\").value = wan_pppoelist.PPPoEServiceName;\r\n\t//$.id(\"pppmtu\").value = wan_pppoelist.maxMRUSize;\r\n    $(\"#acName\").val(wan_pppoelist.PPPoEACName);\r\n    $(\"#serviceName\").val(wan_pppoelist.PPPoEServiceName);\r\n    $(\"#pppmtu\").val(wan_pppoelist.maxMRUSize);\r\n\t//$.id(\"ppp_fullnat_en\").checked = (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? 1 : 0;\r\n\t//$.id(\"ppp_spi_en\").checked = (wan_pppoelist.X_TP_FirewallEnabled == 1) ? 1 : 0;\r\n\t//$.id(\"ppp_igmp_en\").checked = (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? 1 : 0;\r\n\t$(\"#ppp_fullnat_en\").prop(\"checked\", (wan_pppoelist.X_TP_FullconeNATEnabled == 1) ? true : false);\r\n\t$(\"#ppp_spi_en\").prop(\"checked\", (wan_pppoelist.X_TP_FirewallEnabled == 1) ? true : false);\r\n\t$(\"#ppp_igmp_en\").prop(\"checked\", (wan_pppoelist.X_TP_IGMPProxyEnabled == 1) ? true : false);\r\n    $(\"#ppp_fullnat_en\").data(\"tpCheckbox\").refresh();\r\n    $(\"#ppp_igmp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n\tif (wan_pppoelist.X_TP_UseStaticIP == 1)\r\n\t{\r\n\t\t//$.id(\"externIp_en\").checked = 1;\r\n\t\t//$.removeClass($.id(\"exIp_tbl\"), \"nd\");\r\n\t\t//$.id(\"externIpAddr\").value = wan_pppoelist.externalIPAddress;\r\n        $(\"#externIp_en\").prop(\"checked\", true);\r\n        $(\"#exIp_tbl\").removeClass(\"nd\");\r\n        $(\"#externIpAddr\").tpAddress('val', wan_pppoelist.externalIPAddress);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//$.id(\"externIp_en\").checked = 0;\r\n\t\t//$.addClass($.id(\"exIp_tbl\"), \"nd\");\r\n        $(\"#externIp_en\").prop(\"checked\", false);\r\n        $(\"#exIp_tbl\").addClass(\"nd\");\r\n\t}\r\n\t$(\"#externIp_en\").data(\"tpCheckbox\").refresh();\r\n\r\n\t//$.id(\"ppp_echotime\").value = wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0;\r\n\t$(\"#ppp_echotime\").val(wan_pppoelist.PPPLCPEcho ? wan_pppoelist.PPPLCPEcho : 0);\r\n\tif (wan_pppoelist.DNSOverrideAllowed == 1)\r\n\t{\r\n\t\t//$.id(\"dns_en\").checked = 1;\r\n\t\t//$.removeClass($.id(\"dns_tbl\"), \"nd\");\r\n\t\t//$.id(\"dns1\").value = (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t//$.id(\"dns2\").value = (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\";\r\n        $(\"#dns_en\").prop(\"checked\", true);\r\n        $(\"#dns_en\").tpCheckbox();\r\n        $(\"#dns_tbl\").removeClass(\"nd\");\r\n        $(\"#dns1\").tpAddress('val', (wan_pppoelist.DNSServers.split(\",\")[0]) ? wan_pppoelist.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n        $(\"#dns2\").tpAddress('val', (wan_pppoelist.DNSServers.split(\",\")[1]) ? wan_pppoelist.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//$.id(\"dns_en\").checked = 0;\r\n\t\t//$.addClass($.id(\"dns_tbl\"), \"nd\");\r\n        $(\"#dns_en\").prop(\"checked\", false);\r\n        $(\"#dns_en\").tpCheckbox();\r\n        $(\"#dns_tbl\").addClass(\"nd\");\r\n\t}\r\n\r\n\tif (wan_pppoelist.enable == 1)\r\n\t{\r\n\t\t$.auto(function(){if (!$.locked()) getPPPoEConnStatus();}, 5000, true);\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t//$.id(\"ppp_ip4_elem_enable\").checked = (wan_pppoelist.X_TP_IPv4Enabled == 1) ? 1 : 0;\r\n\t\t//ShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n        $(\"#ppp_ip4_elem_enable\").prop(\"checked\", (wan_pppoelist.X_TP_IPv4Enabled == 1) ? true : false);\r\n        $(\"#ppp_ip4_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t//$.id(\"ppp_ip6_elem_enable\").checked = (wan_pppoelist.X_TP_IPv6Enabled == 1) ? 1 : 0;\r\n\t\t//ShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n        $(\"#ppp_ip6_elem_enable\").prop(\"checked\", (wan_pppoelist.X_TP_IPv6Enabled == 1) ? true : false);\r\n        $(\"#ppp_ip6_elem_enable\").tpCheckbox();\r\n        ShowDiv($(\"#ppp_ip6_elem_enable\"));\r\n\t\t\r\n\t\t//$.id(\"externIp6_en\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t//ShowDiv($.id(\"externIp6_en\"));\r\n        $(\"#externIp6_en\").prop(\"checked\", (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? true : false);\r\n        $(\"#externIp6_en\").data(\"tpCheckbox\").refresh();\r\n        ShowDiv($(\"#externIp6_en\"));\r\n\r\n\t\t//if ($.id(\"ppp_ip4_elem_enable\").checked == 0 && $.id(\"ppp_ip6_elem_enable\").checked == 1)\r\n\t\tif ($(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == false && $(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == true)\r\n\t\t{\r\n\t\t\t//$.id(\"connAlwaysOn\").checked = true;\r\n\t\t\t//$.id(\"connOnDemand\").disabled = true;\r\n\t\t\t//$.id(\"connManual\").disabled = true;\r\n            $(\"#connAlwaysOn\").prop(\"checked\", true).data(\"tpRadio\").refresh();\r\n            $(\"#connOnDemand\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n            $(\"#connManual\").prop(\"disabled\", true).data(\"tpRadio\").refresh();\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t//$.removeClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t//$.id(\"ppp_mld_en\").checked = (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0;\r\n            $(\"#ppp_mld\").removeClass(\"nd\");\r\n            $(\"#ppp_mld_en\").prop(\"checked\", (wan_pppoelist.X_TP_MLDProxyEnabled == 1) ? 1 : 0);\r\n            $(\"#ppp_mld_en\").data(\"tpCheckbox\").refresh();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//$.addClass($.id(\"ppp_mld\"), \"nd\");\r\n\t\t\t$(\"#ppp_mld\").addClass(\"nd\");\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\")\r\n\t\t\t{\r\n\t\t\t\t//$.id(\"ppp_ip6addr_type\").disabled = 1;\r\n\t\t\t\t$(\"#ppp_ip6addr_type\").prop(\"disabled\", true);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t//$.id(\"ppp_ip6addr_type\").disabled = 0;\r\n\t\t\t\t$(\"#ppp_ip6addr_type\").prop(\"disabled\", false);\r\n\t\t\t\tif (wan_pppoelist.X_TP_IPv6AddressingType == \"SLAAC\")\r\n\t\t\t\t{\r\n\t\t\t\t\t//$.id(\"ppp_ip6addr_type\").selectedIndex = 1;\r\n\t\t\t\t\t$(\"#ppp_ip6addr_type option[value='autoip']\").prop(\"selected\", \"selected\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t//$.removeClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t//$.id(\"ppp_hide_addr_config\").checked = (wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0;\r\n\t\t\t//$.id(\"ppp_hide_addr_config\").disabled = (wan_pppoelist.X_TP_IPv6AddressingType == \"Static\") ? 1 : 0;\r\n\t\t\t$(\"#ppp_hide_addr_check\").removeClass(\"nd\");\r\n\t\t\t$(\"#ppp_hide_addr_config\").prop(\"checked\",(wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0);\r\n\t\t\t$(\"#ppp_hide_addr_config\").prop(\"disabled\",(wan_pppoelist.X_TP_IPv6AddressingType == \"None\") ? 1 : 0);\r\n\t\t\thideAutoAddrConfig(\"ppp\");\r\n\t\t} else {\r\n\t\t\t//$.addClass($.id(\"ppp_hide_addr_check\"), \"nd\");\r\n\t\t\t$(\"#ppp_hide_addr_check\").addClass(\"nd\");\r\n\t\t}\r\n\r\n\t\t//$.id(\"externIp6Addr\").value = wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\";\r\n\t\t//$.id(\"externIp6Gateway\").value = wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\";\r\n        $(\"#externIp6Addr\").val(wan_pppoelist.X_TP_ExternalIPv6Address ? wan_pppoelist.X_TP_ExternalIPv6Address : \"::\");\r\n        $(\"#externIp6Gateway\").val(wan_pppoelist.X_TP_DefaultIPv6Gateway ? wan_pppoelist.X_TP_DefaultIPv6Gateway : \"::\");\r\n\t\t\t\r\n\t\t//$.id(\"dns6_en\").checked = (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? 1 : 0;\r\n\t\t//ShowDiv($.id(\"dns6_en\"));\r\n        $(\"#dns6_en\").prop(\"checked\", (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1) ? true : false);\r\n        $(\"#dns6_en\").data(\"tpCheckbox\").refresh();\r\n        ShowDiv($(\"#dns6_en\"));\r\n\t\tif (wan_pppoelist.X_TP_IPv6DNSOverrideAllowed == 1)\r\n\t\t{\r\n\t\t\t//$.id(\"dns6_1\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[0] : \"::\";\r\n\t\t\t//$.id(\"dns6_2\").value = (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] ? (wan_pppoelist.X_TP_IPv6DNSServers).split(\",\")[1] : \"::\";\r\n            $(\"#dns6_1\").val((wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[0]) ? wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[0] : \"::\");\r\n            $(\"#dns6_2\").val((wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[1]) ? wan_pppoelist.X_TP_IPv6DNSServers.split(\",\")[1] : \"::\");\r\n\t\t}\r\n\t}\r\n\t$(\"input[type='radio']\").tpRadio();\r\n\tshowPPPSameSession();\r\n\r\n\tif (PPPoEv4Enable == 0){\r\n\t\t//$.id(\"ppp_same_session\").disabled = true;\r\n\t\t//$.addClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t\t$(\"#ppp_same_session\").prop(\"disabled\",true);\r\n\t\t$(\"#pppoe_elem_basic\").find('span.same_sess').addClass(\"grey\");\r\n\t} else {\r\n\t\t//$.id(\"ppp_same_session\").disabled = false;\r\n\t\t//$.removeClass($.id(\"t_ppp_same_sess\"), \"gray\");\r\n\t\t$(\"#ppp_same_session\").prop(\"disabled\",false);\r\n\t\t$(\"#pppoe_elem_basic\").find('span.same_sess').removeClass(\"grey\");\r\n\t}\r\n\r\n\t/* display PPPoE IPv4 IPv6 elem */\r\n\t//$.addClass($.id(\"ppp_ip4_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"ppp_ip4_elem_adv\"), \"nd\");\r\n\t//$.removeClass($.id(\"ppp_ip6_elem_basic\"), \"nd\");\r\n\t//$.removeClass($.id(\"ppp_ip6_elem_adv\"), \"nd\");\r\n\t$(\"#ppp_ip4_elem_basic\").addClass(\"nd\");\r\n\t$(\"#ppp_ip4_elem_adv\").addClass(\"nd\");\r\n\t$(\"#ppp_ip6_elem_basic\").removeClass(\"nd\");\r\n\t$(\"#ppp_ip6_elem_adv\").removeClass(\"nd\");\r\n}\r\nfunction initL2TP()\r\n{\r\n\t/*$.loadHelpFrame(\"L2tpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\r\n\t$.removeClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_l2tp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_l2tp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_l2tp_list.serverIpOrName;\r\n\t\r\n\tif (wan_l2tp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_l2tp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_l2tp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_l2tp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_l2tp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_l2tp_list.connectionStatus == \"Unconfigured\") || (wan_l2tp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_l2tp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_l2tp_list.externalIPAddressIP ? wan_l2tp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_l2tp_list.subnetMaskIP ? wan_l2tp_list.subnetMaskIP: \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_l2tp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_l2tp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_l2tp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_l2tp_list.defaultGatewayIP ? wan_l2tp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[0] ? wan_l2tp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_l2tp_list.DNSServersIP.split(\",\")[1] ? wan_l2tp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_l2tp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_l2tp_list.DNSServers.split(\",\")[0] ? wan_l2tp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_l2tp_list.DNSServers.split(\",\")[1] ? wan_l2tp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_l2tp_list.maxMRUSize;\r\n\t\r\n\tif (wan_l2tp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_l2tp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_l2tp_list.idleDisconnectTime;*/\r\n}\r\nfunction initPPTP()\r\n{\r\n\t/*$.loadHelpFrame(\"PptpCfgHelpRpm.htm\");\r\n\t$.removeClass($.id(\"l2tp_pptp_elem_basic\"), \"nd\");\r\n\r\n\t//dynamicIp\r\n\t$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t//staticIp\r\n\t$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//pppoe\r\n\t$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t//DNS & GateWay\r\n\t$.removeClass($.id(\"defgw_elem\"), \"nd\");\r\n\t//MTU\r\n\t$.removeClass($.id(\"pptp_mtu_msg\"), \"nd\");\r\n\t$.addClass($.id(\"l2tp_mtu_msg\"), \"nd\");\r\n\r\n\t$.id(\"ppp_username\").value = wan_pptp_list.username;\r\n\t$.id(\"ppp_pwd\").value = wan_pptp_list.password;\r\n\t$.id(\"srvAddrName\").value = wan_pptp_list.serverIpOrName;\r\n\t\r\n\tif (wan_pptp_list.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\telse if ((wan_pptp_list.connectionStatusIP == \"Disconnected\") || \r\n\t\t\t (wan_pptp_list.connectionStatusIP == \"Unconfigured\") ||\r\n\t\t\t ((wan_pptp_list.addressingType == \"Static\") && \r\n\t\t\t  (wan_pptp_list.connectionStatusIP == \"Connected\") && \r\n\t\t\t  ((wan_pptp_list.connectionStatus == \"Unconfigured\") || (wan_pptp_list.connectionStatus == \"Disconnected\"))))\r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 0;\r\n\t\t$.id(\"disConn2\").disabled = 1;\r\n\t}\r\n\telse \r\n\t{\r\n\t\t$.id(\"conn2\").disabled = 1;\r\n\t\t$.id(\"disConn2\").disabled = 0;\r\n\t}\r\n\t\r\n\tif (wan_pptp_list.addressingType == \"DHCP\")\r\n\t{\r\n\t\t$.id(\"ipType_dyn\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.h($.id(\"isp_ip_dyn\"), wan_pptp_list.externalIPAddressIP ? wan_pptp_list.externalIPAddressIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_net_mask_dyn\"), wan_pptp_list.subnetMaskIP ? wan_pptp_list.subnetMaskIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_gw_dyn\"), wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_1_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\");\r\n\t\t$.h($.id(\"isp_dns_2_dyn\"), wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\");\r\n\t}\r\n\telse if (wan_pptp_list.addressingType == \"Static\")\r\n\t{\r\n\t\t$.id(\"ipType_stc\").checked = 1;\r\n\t\t$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t\t$.id(\"isp_ip_stc\").value = wan_pptp_list.externalIPAddressIP;\r\n\t\t$.id(\"isp_net_mask_stc\").value = wan_pptp_list.subnetMaskIP;\r\n\t\t$.id(\"isp_gw_stc\").value = wan_pptp_list.defaultGatewayIP ? wan_pptp_list.defaultGatewayIP : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_1_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[0] ? wan_pptp_list.DNSServersIP.split(\",\")[0] : \"0.0.0.0\";\r\n\t\t$.id(\"isp_dns_2_stc\").value = wan_pptp_list.DNSServersIP.split(\",\")[1] ? wan_pptp_list.DNSServersIP.split(\",\")[1] : \"0.0.0.0\";\r\n\t}\r\n\t\r\n\t$.h($.id(\"internet_ip\"), wan_pptp_list.externalIPAddress);\r\n\t$.h($.id(\"internet_dns_1\"), wan_pptp_list.DNSServers.split(\",\")[0] ? wan_pptp_list.DNSServers.split(\",\")[0] : \"0.0.0.0\");\r\n\t$.h($.id(\"internet_dns_2\"), wan_pptp_list.DNSServers.split(\",\")[1] ? wan_pptp_list.DNSServers.split(\",\")[1] : \"0.0.0.0\");\r\n\t\r\n\t$.id(\"l2tp_mtu\").value = wan_pptp_list.maxMRUSize;\r\n\r\n\tif (wan_pptp_list.connectionTrigger == \"OnDemand\")\r\n\t{\r\n\t\t$.id(\"da_connOnDemand\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"AlwaysOn\")\r\n\t{\r\n\t\t$.id(\"da_connAlwaysOn\").checked = 1;\r\n\t}\r\n\telse if (wan_pptp_list.connectionTrigger == \"Manual\")\r\n\t{\r\n\t\t$.id(\"da_connManual\").checked = 1;\r\n\t}\r\n\t$.id(\"da_idleTime\").value = wan_pptp_list.idleDisconnectTime;*/\r\n}\r\n\r\nfunction initWan6to4()\r\n{\r\n\tvar found = 0;\r\n\t//var sel = $.id(\"waninf\");\r\n\tvar sel = $(\"#waninf\");\r\n\tvar wanConn;\r\n\t\r\n\t//$.loadHelpFrame(\"Wan6to4TunnelCfgHelpRpm.htm\");\r\n\t\r\n\t//dynamicIp\r\n\t//$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\t$(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n\t$(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n\t$(\"#dynipClick\").addClass(\"nd\");\r\n\t//staticIp\r\n\t//$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t$(\"#ip_elem_basic\").addClass(\"nd\");\r\n\t$(\"#ip_elem_adv\").addClass(\"nd\");\r\n\t$(\"#ipoeClick\").addClass(\"nd\");\r\n\t//pppoe\r\n\t//$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\t$(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n\t$(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n\t$(\"#pppoeClick\").addClass(\"nd\");\r\n\r\n\t//$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t$(\"#wan_select\").removeClass(\"nd\");\r\n\t\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n//\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\" && wanIPv4List[i].connectionStatus == \"Connected\")\r\n\t\tif (wanIPv4List[i].enable == 1 && wanIPv4List[i].X_TP_IPv4Enabled == 1 && wanIPv4List[i].connectionType != \"IP_Bridged\")\r\n\t\t{\r\n\t\t\twanConn = wanIPv4List[i];\r\n//\t\t\tif (wanIPv4List[i].X_TP_IfName == wan6MainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPPPv4List.length; j++)\r\n\t{\r\n//\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1 && wanPPPv4List[j].connectionStatus == \"Connected\")\r\n\t\tif (wanPPPv4List[j].enable == 1 && wanPPPv4List[j].X_TP_IPv4Enabled == 1)\r\n\t\t{\r\n\t\t\twanConn = wanPPPv4List[j];\r\n//\t\t\tif (wanPPPv4List[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tfound = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanL2tpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanL2tpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanL2tpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tfor (var j = 0; j < wanPptpConList.length; j++)\r\n\t\t{\r\n\t\t\tif (wanPptpConList[j].enable == 1)\r\n\t\t\t{\r\n\t\t\t\twanConn = wanPptpConList[j];\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (found == 1 && wanConn.connectionStatus == \"Connected\")\r\n\t{\r\n\t\t//var option = $.c(\"option\");\r\n\t\t//option.value = wanConn.__stack;\r\n\t\t//option.text = wanConn.name;\r\n\t\t//try{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\tsel.append(\"<option value='\" + wanConn.__stack + \"' text='\" + wanConn.name + \"'></option>\");\r\n\t\t//$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\t$(\"#curwaninf\").html(wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//var option = $.c(\"option\");\r\n\t\t//option.value = 0;\r\n\t\t//option.text = s_str.noAvailIntf;\r\n\t\t//try{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\tsel.append(\"<option value='0' text='\" + $.tpLang.s_str.noAvaiIntf + \"'></option>\");\r\n\t\t//$.h($.id(\"curwaninf\"), s_str.noAvailIntf);\r\n\t\t$(\"#curwaninf\").html($.tpLang.s_str.noAvaiIntf);\r\n\t\twan4ConnName = \"\";\r\n\t}\r\n/*\t\r\n\telse\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = wanConn.__stack;\r\n\t\toption.text = wanConn.name;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t$.h($.id(\"curwaninf\"), wanConn.name);\r\n\t\twan4ConnName = wanConn.name;\r\n\t}\r\n*/\r\n}\r\n\r\nfunction initPDEnable()\r\n{\r\n\tvar lan6Cfg = $.act(ACT_GL, LAN_IP6_HOST_CFG, null, null, [\"__ifName\", \"IPv6SitePrefixConfigType\"]);\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var index = 0; index < lan6Cfg.length; index++)\r\n\t\t{\r\n\t\t\tif (lan6Cfg[index].__ifName == \"br0\")\r\n\t\t\t{\r\n\t\t\t\tif (lan6Cfg[index].IPv6SitePrefixConfigType == \"Delegated\")\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 1;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tPDEnable = 0;\r\n\t\t\t\t\tlan6HostStk = lan6Cfg[index].__stack;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tinitPDEnable();\r\n\t\r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\t//$.addClass($.id(\"ethEnable\"), \"nd\");\r\n\t\t$(\"#ethEnable\").addClass(\"nd\");\r\n\t}\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t//var allElements = document.getElementsByTagName(\"p\");\r\n\t\t//var index;\r\n\t\t//for (index = 0; index < allElements.length; index++)\r\n\t\t//{\r\n\t\t//\tif (allElements[index] != null && $.hasClass(allElements[index], \"IPv6\"))\r\n\t\t//\t{\r\n\t\t//\t\t$.removeClass(allElements[index], \"nd\");\r\n\t\t//\t}\r\n\t\t//}\r\n        $(\"div\").each(function() {\r\n            if ($(this).hasClass(\"IPv6\")) $(this).removeClass(\"nd\");\r\n        });\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t//$.removeClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t//$.removeClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n            $(\"#ipv6_cfg_dynamic_slaac\").removeClass(\"nd\");\r\n            $(\"#ipv6_cfg_ppp_slaac\").removeClass(\"nd\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//$.addClass($.id(\"ipv6_cfg_dynamic_slaac\"), \"nd\");\r\n\t\t\t//$.addClass($.id(\"ipv6_cfg_ppp_slaac\"), \"nd\");\r\n            $(\"#ipv6_cfg_dynamic_slaac\").addClass(\"nd\");\r\n            $(\"#ipv6_cfg_ppp_slaac\").addClass(\"nd\");\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//$.id(\"dyn_ip4_elem_enable\").checked = 1;\r\n\t\t//$.id(\"stc_ip4_elem_enable\").checked = 1;\r\n\t\t//$.id(\"ppp_ip4_elem_enable\").checked = 1;\r\n\t\t//$.id(\"dyn_ip6_elem_enable\").checked = 0;\r\n\t\t//$.id(\"stc_ip6_elem_enable\").checked = 0;\r\n\t\t//$.id(\"ppp_ip6_elem_enable\").checked = 0;\r\n\t\t//ShowDiv($.id(\"dyn_ip4_elem_enable\"));\r\n\t\t//ShowDiv($.id(\"stc_ip4_elem_enable\"));\r\n\t\t//ShowDiv($.id(\"ppp_ip4_elem_enable\"));\r\n\t\t//ShowDiv($.id(\"dyn_ip6_elem_enable\"));\r\n\t\t//ShowDiv($.id(\"stc_ip6_elem_enable\"));\r\n\t\t//ShowDiv($.id(\"ppp_ip6_elem_enable\"));\r\n        $(\"input[type='checkbox'][id$='_elem_enable']\").each(function() {\r\n            $(this).prop(\"checked\", true);\r\n            $(this).tpCheckbox();\r\n            ShowDiv($(this));\r\n        });\r\n\t}\r\n\r\n\tloadType = ($.mainParam) ? $.mainParam.split(\":\")[0] : \"init\";\r\n\tvar type = \"\";\r\n\t/* Edit by ZJ, 2013-11-20\r\n\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n    */\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\tvar\twanIPv6ListAll = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\", \"X_TP_IPv6Enabled\"]);\r\n\t\tvar wanPPPv6ListAll = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\", \"X_TP_IPv6Enabled\", \"X_TP_IPv4Enabled\"]);\r\n\t\tvar wanIPList = {};\r\n\t\tvar wanPPPList = {};\r\n\t\tvar wanIndex = 0;\r\n\t\t\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.each(wanIPv6ListAll,function(){\r\n\t\t\t\tif (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanIPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\twanIndex = 0;\r\n\t\t\twanv4Index = 0;\r\n\t\t\t$.each(wanPPPv6ListAll,function(){\r\n\t\t\t\t//if (this.X_TP_IPv6Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\twanPPPList[wanIndex] = this;\r\n\t\t\t\t\twanIndex++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvar\twanIPList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"enable\", \"addressingType\"]);\r\n\t\tvar wanPPPList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"enable\", \"transportType\"]);\r\n\t}\r\n\t/* End Edit */\r\n/*\tif (INCLUDE_L2TP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type_v6\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"l2tp\";\r\n\t\toption.text = \"L2TP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}\r\n\tif (INCLUDE_PPTP)\r\n\t{\r\n\t\tvar sel = $.id(\"link_type_v6\");\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"pptp\";\r\n\t\toption.text = \"PPTP\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tvar wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"addressingType\", \"transportType\"]);\r\n\t}*/\r\n\tvar wanTypes = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\t\r\n\t\r\n\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\twan6MainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tvar IPv6Cfg  = $.act(ACT_GET, IPV6_CFG, null, null);\r\n\r\n\tif (!$.exe())\r\n\t{\r\n\t\t$.each(wanTypes, function()\r\n\t\t{\r\n\t\t\tif (this.WANAccessType == \"Ethernet\")\r\n\t\t\t\tpStk = this.__stack;\r\n\t\t});\r\n\t\tvar ethWan = $.act(ACT_GET, WAN_ETH_INTF, pStk, null, [\"enable\", \"X_TP_lastUsedIntf\"]);\r\n\t\t$.each(wanIPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk)\r\n\t\t\t{\r\n\t\t\t\tif (this.addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\tstaticStk = this.__stack;\r\n\t\t\t\t\tstaticEnable = this.enable;\r\n\t\t\t\t\twan_iplist_sta = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.addressingType == \"DHCP\")\r\n\t\t\t\t{\r\n\t\t\t\t\tdynStk = this.__stack;\r\n\t\t\t\t\tdynEnable = this.enable;\r\n\t\t\t\t\twan_iplist_dyn = $.act(ACT_GET, WAN_IP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\t\t\t\tif  ((this.enable == 1) && (this.addressingType == \"Static\"))\r\n\t\t\t\t\ttype = \"staticIp\";\r\n\t\t\t\telse if  ((this.enable == 1) && (this.addressingType == \"DHCP\"))\r\n\t\t\t\t\ttype = \"dynamicIp\";\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\t$.each(wanPPPList, function()\r\n\t\t{\r\n\t\t\tvar tmpStk= $.stkPop(this.__stack, 2);\r\n\t\t\tif (pStk == tmpStk) \r\n\t\t\t{\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv6Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv6Enable = this.enable;\r\n\t\t\t\t\twan_pppoev6list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.transportType == \"PPPoE\" && this.X_TP_IPv4Enabled == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tPPPoEv4Stk = this.__stack;\r\n\t\t\t\t\tPPPoEv4Enable = this.enable;\r\n\t\t\t\t\tPPPoEv4v6Enable = this.X_TP_IPv6Enabled;\r\n\t\t\t\t\twan_pppoev4list = $.act(ACT_GET, WAN_PPP_CONN, this.__stack, null, null);\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif ((this.enable == 1) && (this.transportType == \"PPPoE\") && (this.X_TP_IPv6Enabled == 1))\r\n\t\t\t\t{\r\n\t\t\t\t\ttype = \"pppoe\";\t\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* show which pppoe connection */\r\n\t\t/*if ($.mainParam && $.mainParam.split(\":\")[2])\r\n\t\t{\r\n\t\t\tif ($.mainParam.split(\":\")[2] == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t//$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t\t$(\"#ppp_same_session\").prop(\"checked\", true);\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t//$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t\t$(\"#ppp_same_session\").prop(\"checked\", false);\r\n\t\t\t}\r\n\t\t} else {*/\r\n\t\tif (PPPoEv4Enable == 1 && PPPoEv4v6Enable == 1){\r\n\t\t\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev4list;\r\n\t\t\t\t//$.id(\"ppp_same_session\").checked = true;\r\n\t\t\t\t$(\"#ppp_same_session\").prop(\"checked\", true).data(\"tpCheckbox\").refresh();\r\n\r\n\t\t\t} else {\r\n\t\t\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\t\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\t\t\twan_pppoelist = wan_pppoev6list;\r\n\t\t\t\t//$.id(\"ppp_same_session\").checked = false;\r\n\t\t\t\t$(\"#ppp_same_session\").prop(\"checked\", false).data(\"tpCheckbox\").refresh();\r\n\t\t\t}\r\n\t\t//}\r\n\r\n\t\t/* Add for 6to4, ZJ, 2013-12-06 */\r\n\t\tif (wan6MainTunnel)\r\n\t\t{\r\n\t\t\tif (wan6MainTunnel.enabled == 1)\r\n\t\t\t{\r\n\t\t\t\ttype = \"6to4\";\r\n\t\t\t}\r\n\t\t\twan6to4Enable = wan6MainTunnel.enabled;\r\n\t\t\twan6to4Stk = wan6MainTunnel.__stack;\r\n\t\t\twanIPv4List = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\t\t\twanPPPv4List = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\t\t\tif (INCLUDE_L2TP)\r\n\t\t\t{\r\n\t\t\t\twanL2tpConList = $.act(ACT_GL, WAN_L2TP_CONN, null, null);\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_PPTP)\r\n\t\t\t{\r\n\t\t\t\twanPptpConList = $.act(ACT_GL, WAN_PPTP_CONN, null, null);\r\n\t\t\t}\r\n\t\t}\r\n/*\t\tif (INCLUDE_L2TP)\r\n\t\t{\t\r\n\t\t\t$.each(wanL2tpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tl2tpStk = this.__stack;\r\n\t\t\t\t\tl2tpEnable = this.enable;\r\n\t\t\t\t\twan_l2tp_list = $.act(ACT_GET, WAN_L2TP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"l2tp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (INCLUDE_PPTP)\r\n\t\t{\r\n\t\t\t$.each(wanPptpList, function()\r\n\t\t\t{\r\n\t\t\t\tvar tmpStk= $.stkPop(this.__stack, 1);\r\n\t\t\t\tif (pStk == tmpStk)\r\n\t\t\t\t{\r\n\t\t\t\t\tpptpStk = this.__stack;\r\n\t\t\t\t\tpptpEnable = this.enable;\r\n\t\t\t\t\twan_pptp_list = $.act(ACT_GET, WAN_PPTP_CONN, this.__stack, null, null);\r\n\t\t\t\t\tif  (this.enable == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype = \"pptp\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}*/\r\n\t\tif (IPv6Cfg.disableIPv6 == 1){\r\n\t\t\ttype = \"disabled\";\r\n\t\t}\r\n\t\tIPv6CfgStk = IPv6Cfg.__stack;\r\n\t\toldv6Type = type;\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t//$.id(\"ethWan_en\").checked = (ethWan.enable == 1) ? 1 : 0;\r\n\t\t\t$(\"#ethWan_en\").prop(\"checked\",(ethWan.enable == 1) ? 1 : 0).data(\"tpCheckbox\").refresh();\r\n\t\t\tshowLnkType(type);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addStaticIpAttrs()\r\n{\r\n\t//var temp_ip = $.id(\"ip_address\").value;\r\n\t//var temp_mask = $.id(\"netmask\").value;\r\n\t//var temp_gateway = $.id(\"ip_gateway\").value;\r\n    var temp_ip = $(\"#ip_address\").tpAddress('val');\r\n    var temp_mask = $(\"#netmask\").tpAddress('val');\r\n    var temp_gateway = $(\"#ip_gateway\").tpAddress('val');\r\n\twan_iplistarg_sta.X_TP_PDEnabled = PDEnable;\r\n\t//if (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\tif (!INCLUDE_IPV6 || $(\"#stc_ip4_elem_enable\").prop(\"data-checked\")) \r\n\t{\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.externalIPAddress = $.ip2ip(temp_ip);\r\n\t\t\twan_iplistarg_sta.subnetMask = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") && ($.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"ip_gateway\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway != \"\") && (temp_gateway != \"0.0.0.0\") \r\n\t\t\t&& (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\t//element = $.id(\"ip_gateway\");\r\n\t\t\t//if(element){\r\n\t\t\t//\telement.focus();\r\n\t\t\t//\telement.select();\r\n\t\t\t//}\r\n\t\t\t$(\"#ip_gateway\").tpAddress('focus');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\twan_iplistarg_sta.defaultGateway = (temp_gateway) ? $.ip2ip(temp_gateway) : \"0.0.0.0\";\r\n\t//wan_iplistarg_sta.NATEnabled = $.id(\"enable_nat\").checked ? 1 : 0;\r\n\t//wan_iplistarg_sta.X_TP_FullconeNATEnabled = $.id(\"enable_fullnat\").checked ? 1 : 0;\r\n\t//wan_iplistarg_sta.X_TP_FirewallEnabled = $.id(\"enable_spi\").checked ? 1 : 0;\r\n\t//wan_iplistarg_sta.X_TP_IGMPProxyEnabled = $.id(\"ip_igmp_en\").checked ? 1 : 0;\r\n\twan_iplistarg_sta.NATEnabled = $(\"#enable_nat\").prop(\"data-checked\") ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FullconeNATEnabled = $(\"#enable_fullnat\").prop(\"data-checked\") ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_FirewallEnabled = $(\"#enable_spi\").prop(\"data-checked\") ? 1 : 0;\r\n\twan_iplistarg_sta.X_TP_IGMPProxyEnabled = $(\"#ip_igmp_en\").prop(\"data-checked\") ? 1 : 0;\r\n\t//if(($.id(\"mtu\").value >= 576) && ($.id(\"mtu\").value <= 1500))\r\n\tif (($(\"#mtu\").val() >= 576) && ($(\"#mtu\").val() <= 1500))\r\n\t{\r\n\t\t//wan_iplistarg_sta.maxMTUSize = parseInt($.id(\"mtu\").value, 10);\r\n\t\twan_iplistarg_sta.maxMTUSize = parseInt($(\"#mtu\").val(), 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\t//element = $.id(\"mtu\");\r\n\t\t//if(element){\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\t$(\"#mtu\").focus().select();\r\n\t\treturn false;\r\n\t}\r\n\t//var temp_dnsaddr = $.id(\"dns_address\").value;\r\n\t//var temp_secdnsaddr = $.id(\"second_dns\").value;\r\n\tvar temp_dnsaddr = $(\"#dns_address\").tpAddress('val');\r\n    var temp_secdnsaddr = $(\"#second_dns\").tpAddress('val');\r\n\tvar temp_dnsServers  = \"\";\r\n\tif (!INCLUDE_IPV6 || $.id(\"stc_ip4_elem_enable\").checked == 1)\r\n\t{\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t//element = $.id(\"dns_address\");\r\n\t\t\t//if(element){\r\n\t\t\t//\telement.focus();\r\n\t\t\t//\telement.select();\r\n\t\t\t//}\r\n\t\t\t$(\"#dns_address\").tpAddress('focus');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t//element = $.id(\"second_dns\");\r\n\t\t\t//if(element){\r\n\t\t\t//\telement.focus();\r\n\t\t\t//\telement.select();\r\n\t\t\t//}\r\n\t\t\t$(\"#second_dns\").tpAddress('focus');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\twan_iplistarg_sta.DNSOverrideAllowed = ((temp_dnsServers == \"0.0.0.0,0.0.0.0\") ? 0 : 1);\r\n\twan_iplistarg_sta.DNSServers = temp_dnsServers;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t//wan_iplistarg_sta.X_TP_IPv4Enabled = ($.id(\"stc_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t//wan_iplistarg_sta.X_TP_IPv6Enabled = ($.id(\"stc_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n        wan_iplistarg_sta.X_TP_IPv4Enabled = ($(\"#stc_ip4_elem_enable\").prop(\"data-checked\")) ? 1 : 0;\r\n        wan_iplistarg_sta.X_TP_IPv6Enabled = ($(\"#stc_ip6_elem_enable\").prop(\"data-checked\")) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_sta.X_TP_IPv4Enabled == 0 && wan_iplistarg_sta.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_sta.X_TP_IPv6AddressingType = \"Static\";\r\n\r\n\t\t//var temp_ip6 = $.id(\"stc_ip6_addr\").value;\r\n\t\t//var temp_plen = $.id(\"stc_prefix_len\").value;\r\n\t\t//var temp_gateway = $.id(\"stc_ip6_gateway\").value;\r\n        var temp_ip6 = $(\"#stc_ip6_addr\").val();\r\n        var temp_plen = $(\"#stc_prefix_len\").val();\r\n        var temp_gateway = $(\"#stc_ip6_gateway\").val();\r\n\r\n\t\t//if ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\tif ($(\"#stc_ip6_elem_enable\").prop(\"data-checked\"))\r\n\t\t{\r\n\t\t\tif (!isValidGLUIP6AddrStrict(temp_ip6))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"stc_ip6_addr\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#stc_ip6_addr\").focus().select();\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_ip6=formatIPv6(temp_ip6);\r\n\t\t\t}\r\n\t\t\t/* modify by liweijie,2014-10-10, for ipv6 prefix > 64*/\r\n\t\t\tif (temp_plen < 0 || temp_plen > 128)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_PFXLEN_INVAD);\r\n\t\t\t\t//element = $.id(\"stc_prefix_len\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#stc_prefix_len\").focus().select();\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (temp_gateway != \"\" && temp_gateway != \"::\" && !isValidGLUIP6AddrStrict(temp_gateway))\r\n\t\t\t{\r\n\t\t\t\t//$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"stc_ip6_gateway\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#stc_ip6_gateway\").focus().select();\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_gateway=formatIPv6(temp_gateway);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twan_iplistarg_sta.X_TP_ExternalIPv6Address = temp_ip6;\r\n\t\twan_iplistarg_sta.X_TP_PrefixLength = temp_plen;\r\n\t\twan_iplistarg_sta.X_TP_DefaultIPv6Gateway = (temp_gateway) ? temp_gateway : \"::\";\r\n\t\tif (wan_iplistarg_sta.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t{\r\n\t\t\twan_iplistarg_sta.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t}\r\n\t\t\r\n\t\t//var temp_dnsaddr = $.id(\"dns6_address\").value;\r\n\t\t//var temp_secdnsaddr = $.id(\"second_dns6\").value;\r\n\t\tvar temp_dnsaddr = $(\"#dns6_address\").val();\r\n\t\tvar temp_secdnsaddr = $(\"#second_dns6\").val();\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\t//if ($.id(\"stc_ip6_elem_enable\").checked == 1)\r\n\t\tif ($(\"#stc_ip6_elem_enable\").prop(\"data-checked\"))\r\n\t\t{\r\n\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"dns6_address\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#dns6_address\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t}\r\n\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"second_dns6\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#second_dns6\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSOverrideAllowed = ((temp_dnsServers == \"::,::\") ? 0 : 1);\r\n\t\twan_iplistarg_sta.X_TP_IPv6DNSServers = temp_dnsServers;\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t//wan_iplistarg_sta.X_TP_MLDProxyEnabled = $.id(\"ip_mld_en\").checked ? 1 : 0;\r\n\t\t\twan_iplistarg_sta.X_TP_MLDProxyEnabled = $(\"#ip_mld_en\").prop(\"data-checked\") ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction addDynIpAttrs()\r\n{\r\n\twan_iplistarg_dyn.X_TP_PDEnabled = PDEnable;\r\n\t//wan_iplistarg_dyn.NATEnabled = $.id(\"dyn_enable_nat\").checked ? 1 : 0;\r\n\t//wan_iplistarg_dyn.X_TP_FullconeNATEnabled = $.id(\"dyn_enable_fullnat\").checked ? 1 : 0;\r\n\t//wan_iplistarg_dyn.X_TP_FirewallEnabled = $.id(\"dyn_ip_spi_en\").checked ? 1 : 0;\r\n\t//wan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $.id(\"dyn_ip_igmp_en\").checked ? 1 : 0;\r\n\twan_iplistarg_dyn.NATEnabled = $(\"#dyn_enable_nat\").prop(\"data-checked\") ? 1 : 0;\r\n    wan_iplistarg_dyn.X_TP_FullconeNATEnabled = $(\"#dyn_enable_fullnat\").prop(\"data-checked\") ? 1 : 0;\r\n    wan_iplistarg_dyn.X_TP_FirewallEnabled = $(\"#dyn_ip_spi_en\").prop(\"data-checked\") ? 1 : 0;\r\n    wan_iplistarg_dyn.X_TP_IGMPProxyEnabled = $(\"#dyn_ip_igmp_en\").prop(\"data-checked\") ? 1 : 0;\r\n\t//if(($.id(\"dyn_mtu\").value >= 576) && ($.id(\"dyn_mtu\").value <= 1500))\r\n\tif (($(\"#dyn_mtu\").val() >= 576) && ($(\"#dyn_mtu\").val() <= 1500))\r\n\t{\r\n\t\t//wan_iplistarg_dyn.MaxMTUSize = parseInt($.id(\"dyn_mtu\").value, 10);\r\n\t\twan_iplistarg_dyn.MaxMTUSize = parseInt($(\"#dyn_mtu\").val(), 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\t$(\"#dyn_mtu\").focus().select();\r\n\t\t//element = $.id(\"dyn_mtu\");\r\n\t\t//if(element){\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\treturn false;\r\n\t}\r\n\t//if ($.id(\"dynamic_manual_dns\").checked == 1)\r\n\tif ($(\"#dynamic_manual_dns\").prop(\"data-checked\"))\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 1;\r\n\t\t\r\n\t\t//var temp_dnsaddr = $.id(\"dyn_dns1\").value;\r\n\t\t//var temp_secdnsaddr = $.id(\"dyn_dns2\").value;\r\n\t\tvar temp_dnsaddr = $(\"#dyn_dns1\").tpAddress('val');\r\n\t\tvar temp_secdnsaddr = $(\"#dyn_dns2\").tpAddress('val');\r\n\t\tvar temp_dnsServers  = \"\";\r\n\t\t//if (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\tif (!INCLUDE_IPV6 || $(\"#dyn_ip4_elem_enable\").prop(\"data-checked\"))\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t\t$(\"#dns_address\").tpAddress('focus');\r\n\t\t\t\t//element = $.id(\"dns_address\");\r\n\t\t\t\t//if(element){\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t\t$(\"#second_dns\").focus().select();\r\n\t\t\t\t//element = $.id(\"second_dns\");\r\n\t\t\t\t//if(element){\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\r\n\t\t//if (!INCLUDE_IPV6 || $.id(\"dyn_ip4_elem_enable\").checked == 1)\r\n\t\tif (!INCLUDE_IPV6 || $(\"#dyn_ip4_elem_enable\").prop(\"data-checked\"))\r\n\t\t{\r\n\t\t\tif ((temp_dnsaddr + \",\" + temp_secdnsaddr) == \"0.0.0.0,0.0.0.0\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN_DNS_INVAD);\r\n\t\t\t\t$(\"#dns_address\").tpAddress('focus');\r\n\t\t\t\t//element = $.id(\"dns_address\");\r\n\t\t\t\t//if(element){\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\twan_iplistarg_dyn.DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_iplistarg_dyn.DNSOverrideAllowed = 0;\r\n\t}\r\n\t//if (!charCompareA($.id(\"hostname\").value, 63, 0))\r\n\tif (!$.charCompareA($(\"#hostname\").val(), 63, 0))\r\n\t{\r\n\t\t$.alert(ERR_WAN_HOST_NAME_INVALID);\r\n\t\t//var element = $.id(\"hostname\");\r\n\t\t//if(element)\r\n\t\t//{\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\t$(\"#hostname\").focus().select();\r\n\t\treturn false;\r\n\t}\r\n\twan_iplistarg_dyn.X_TP_Hostname = $.id(\"hostname\").value;\r\n\twan_iplistarg_dyn.X_TP_Unicast = $.id(\"unicast\").checked == 1 ? 1 : 0;\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t//wan_iplistarg_dyn.X_TP_IPv4Enabled = ($.id(\"dyn_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t//wan_iplistarg_dyn.X_TP_IPv6Enabled = ($.id(\"dyn_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n        wan_iplistarg_dyn.X_TP_IPv4Enabled = ($(\"#dyn_ip4_elem_enable\").prop(\"data-checked\")) ? 1 : 0;\r\n        wan_iplistarg_dyn.X_TP_IPv6Enabled = ($(\"#dyn_ip6_elem_enable\").prop(\"data-checked\")) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_iplistarg_dyn.X_TP_IPv4Enabled == 0 && wan_iplistarg_dyn.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\r\n\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t{\r\n\t\t\t//if ($.id(\"dyn_ip6addr_type\").value == \"autoip\")\r\n\t\t\tif ($(\"#dyn_ip6addr_type\").data(\"value\") == \"autoip\")\r\n\t\t\t{\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t//if ($.id(\"dyn_hide_addr_config\").checked){\r\n\t\t\tif ($(\"#dyn_hide_addr_config\").prop(\"data-checked\")){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//if ($.id(\"dynamic_manual_dns6\").checked == 1)\r\n\t\tif ($(\"#dynamic_manual_dns6\").prop(\"data-checked\") == 1)\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\t\r\n\t\t\t//var temp_dnsaddr = $.id(\"dyn_dns6_1\").value;\r\n\t\t\t//var temp_secdnsaddr = $.id(\"dyn_dns6_2\").value;\r\n\t\t\tvar temp_dnsaddr = $(\"#dyn_dns6_1\").val();\r\n\t\t\tvar temp_secdnsaddr = $(\"#dyn_dns6_2\").val();\r\n\t\t\t\r\n\t\t\t//if ($.id(\"dyn_ip6_elem_enable\").checked == 1)\r\n\t\t\tif ($(\"#dyn_ip6_elem_enable\").prop(\"data-checked\") == 1)\r\n\t\t\t{\r\n\t\t\t\tif (temp_dnsaddr != \"\" && temp_dnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_dnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\t//element = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t\t//if (element)\r\n\t\t\t\t\t//{\r\n\t\t\t\t\t//\telement.focus();\r\n\t\t\t\t\t//\telement.select();\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t$(\"#dyn_dns6_1\").focus().select();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_dnsaddr=formatIPv6(temp_dnsaddr);\r\n\t\t\t\t}\r\n\t\t\t\tif (temp_secdnsaddr != \"\" && temp_secdnsaddr != \"::\" && !isValidGLUIP6AddrStrict(temp_secdnsaddr))\r\n\t\t\t\t{\r\n\t\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t\t//element = $.id(\"dyn_dns6_2\");\r\n\t\t\t\t\t//if (element)\r\n\t\t\t\t\t//{\r\n\t\t\t\t\t//\telement.focus();\r\n\t\t\t\t\t//\telement.select();\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t$(\"#dyn_dns6_2\").focus().select();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp_secdnsaddr=formatIPv6(temp_secdnsaddr);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\ttemp_dnsaddr = (temp_dnsaddr) ? temp_dnsaddr : \"::\";\r\n\t\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? temp_secdnsaddr : \"::\";\r\n\r\n\t\t\t//if ($.id(\"dyn_ip6_elem_enable\").checked == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\tif ($(\"#dyn_ip6_elem_enable\").prop(\"data-checked\") == 1 && (temp_dnsaddr + \",\" + temp_secdnsaddr) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\t//element = $.id(\"dyn_dns6_1\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#dyn_dns6_1\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_iplistarg_dyn.X_TP_IPv6DNSOverrideAllowed = 0;\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t//wan_iplistarg_dyn.X_TP_MLDProxyEnabled = $.id(\"dyn_ip_mld_en\").checked ? 1 : 0;\r\n\t\t\twan_iplistarg_dyn.X_TP_MLDProxyEnabled = $(\"#dyn_ip_mld_en\").prop(\"data-checked\") ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\nfunction addPPPoEAttrs()\r\n{\r\n\twan_pppoelistarg.X_TP_PDEnabled = PDEnable;\r\n\t//if ($.id(\"username\").value == \"\")\r\n\tif ($(\"#username\").val() == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\t//element = $.id(\"username\");\r\n\t\t//if(element){\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\t$(\"#username\").focus().select();\r\n\t\treturn false;\r\n\t}\r\n\t//wan_pppoelistarg.username = $.id(\"username\").value;\r\n\twan_pppoelistarg.username = $(\"#username\").val();\r\n\t//if ($.id(\"pwd\").value != $.id(\"pwd2\").value)\r\n\tif ($(\"#pwd\").tpPassword('val') != $(\"#pwd2\").tpPassword('val'))\r\n\t{\r\n\t\t//$.id(\"pwd\").value = \"\";\r\n\t\t//$.id(\"pwd2\").value = \"\";\r\n\t\t$(\"#pwd\").tpPassword('val', '');\r\n\t\t$(\"#pwd2\").tpPassword('val', '');\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\t//element = $.id(\"pwd\");\r\n\t\t//if(element){\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\t$(\"#pwd\").tpPassword('focus');\r\n\t\treturn false;\r\n\t}\r\n\t//wan_pppoelistarg.password = $.id(\"pwd\").value;\r\n\twan_pppoelistarg.password = $(\"#pwd\").val();\r\n\tif (INCLUDE_SPECIAL_DIAL_MODE) {\r\n\t\t//wan_pppoelistarg.X_TP_SpecialDail = $.id(\"speDail\").value;\r\n\t\twan_pppoelistarg.X_TP_SpecialDail = $(\"#speDail\").val();\r\n\t}\r\n\r\n\t//if ($.id(\"connAlwaysOn\").checked == 1)\r\n\tif ($(\"#connAlwaysOn\").prop(\"checked\") == 1)\r\n\t{\r\n\t\twan_pppoelistarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t//if (($.id(\"idleTime\").value) && ($.isnum($.id(\"idleTime\").value)))\r\n\t\tif (($(\"#idleTime\").val()) && ($.isnum($(\"#idleTime\").val())))\r\n\t\t{\r\n\t\t\t//wan_pppoelistarg.idleDisconnectTime = parseInt($.id(\"idleTime\").value, 10);\r\n\t\t\twan_pppoelistarg.idleDisconnectTime = parseInt($(\"#idleTime\").val(), 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\t//element = $.id(\"idleTime\");\r\n\t\t\t//if(element){\r\n\t\t\t//\telement.focus();\r\n\t\t\t//\telement.select();\r\n\t\t\t//}\r\n\t\t\t$(\"#idleTime\").focus().select();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t//if ($.id(\"connOnDemand\").checked == 1)\r\n\t\tif ($(\"#connOnDemand\").prop(\"checked\") == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"OnDemand\";\r\n\t\t//else if ($.id(\"connManual\").checked == 1)\r\n\t\telse if ($(\"#connManual\").prop(\"checked\") == 1)\r\n\t\t\twan_pppoelistarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t//wan_pppoelistarg.PPPAuthenticationProtocol = $.id(\"ppp_authpro\").value;\r\n\twan_pppoelistarg.PPPAuthenticationProtocol = $(\"#ppp_authpro\").data(\"value\");\r\n\r\n\t//wan_pppoelistarg.PPPoEACName = $.id(\"acName\").value;\r\n\t//wan_pppoelistarg.PPPoEServiceName = $.id(\"serviceName\").value;\r\n    wan_pppoelistarg.PPPoEACName = $(\"#acName\").val();\r\n    wan_pppoelistarg.PPPoEServiceName = $(\"#serviceName\").val();\r\n\t//if (($.id(\"pppmtu\").value >= 576) && ($.id(\"pppmtu\").value <= 1492))\r\n\tif (($(\"#pppmtu\").val() >= 576) && ($(\"#pppmtu\").val() <= 1492))\r\n\t{\r\n\t\t//wan_pppoelistarg.maxMRUSize = parseInt($.id(\"pppmtu\").value, 10);\r\n\t\twan_pppoelistarg.maxMRUSize = parseInt($(\"#pppmtu\").val(), 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_PPPOE_MTU_INVAD);\r\n\t\t//element = $.id(\"pppmtu\");\r\n\t\t//if(element){\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\t$(\"#pppmtu\").focus().select();\r\n\t\treturn false;\r\n\t}\r\n\twan_pppoelistarg.NATEnabled = 1;\r\n\t//wan_pppoelistarg.X_TP_FullconeNATEnabled = ($.id(\"ppp_fullnat_en\").checked == 1) ? 1 : 0;\r\n\t//wan_pppoelistarg.X_TP_FirewallEnabled = ($.id(\"ppp_spi_en\").checked == 1) ? 1 : 0;\r\n\t//wan_pppoelistarg.X_TP_IGMPProxyEnabled = ($.id(\"ppp_igmp_en\").checked == 1) ? 1 : 0;\r\n    wan_pppoelistarg.X_TP_FullconeNATEnabled = ($(\"#ppp_fullnat_en\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n    wan_pppoelistarg.X_TP_FirewallEnabled = ($(\"#ppp_spi_en\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n    wan_pppoelistarg.X_TP_IGMPProxyEnabled = ($(\"#ppp_igmp_en\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n\t//if ($.id(\"externIp_en\").checked == 1)\r\n\tif ($(\"#externIp_en\").prop(\"data-checked\") == 1)\r\n\t{\r\n\t\t//if (($.id(\"externIpAddr\").value != \"\") \r\n\t\t//&& ($.id(\"externIpAddr\").value != \"0.0.0.0\") \r\n\t\t//&& ($.ifip($.id(\"externIpAddr\").value, true))\r\n\t\t//&& (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\t\tvar externIpAddr = $(\"#externIpAddr\").tpAddress('val');\r\n        if ((externIpAddr != \"\") && (externIpAddr != \"0.0.0.0\") && ($.ifip(externIpAddr, true)) && (!INCLUDE_IPV6 || $(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == 1))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\t//element = $.id(\"externIpAddr\");\r\n\t\t\t//if(element){\r\n\t\t\t//\telement.focus();\r\n\t\t\t//\telement.select();\r\n\t\t\t//}\r\n\t\t\t$(\"#externIpAddr\").tpAddress('focus');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//wan_pppoelistarg.externalIPAddress = ($.id(\"externIpAddr\").value) ? $.ip2ip($.id(\"externIpAddr\").value) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.externalIPAddress = (externIpAddr) ? $.ip2ip(externIpAddr) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 1;\r\n\t}\r\n\t//else if($.id(\"externIp_en\").checked == 0)\r\n\telse if ($(\"#externIp_en\").prop(\"data-checked\") == 0)\r\n\t{\r\n\t/*\twan_pppoelistarg.externalIPAddress = wan_pppoelist.externalIPAddress;*/\r\n\t\twan_pppoelistarg.X_TP_UseStaticIP = 0;\r\n\t}\r\n\t//if ((parseInt($.id(\"ppp_echotime\").value, 10) >= 0) && (parseInt($.id(\"ppp_echotime\").value, 10) <= 120))\r\n\tif ((parseInt($(\"#ppp_echotime\").val(), 10) >= 0) && (parseInt($(\"#ppp_echotime\").val(), 10) <= 120))\r\n\t{\r\n\t\twan_pppoelistarg.PPPLCPEcho = parseInt($.id(\"ppp_echotime\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_ECHOTIME_INVAD);\r\n\t\t//element = $.id(\"ppp_echotime\");\r\n\t\t//if(element){\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\t$(\"#ppp_echotime\").focus().select();\r\n\t\treturn false;\r\n\t}\r\n\t//if ($.id(\"dns_en\").checked == 1 && (!INCLUDE_IPV6 || $.id(\"ppp_ip4_elem_enable\").checked == 1))\r\n\tif ($(\"#dns_en\").prop(\"data-checked\") == 1 && (!INCLUDE_IPV6 || $(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == 1))\r\n\t{\r\n\t\t//if (($.id(\"dns1\").value != \"\") \r\n\t\t//\t\t&& ($.id(\"dns1\").value != \"0.0.0.0\") \r\n\t\t//\t\t&& ($.ifip($.id(\"dns1\").value, true)))\r\n\t\tvar dns1 = $('#dns1').tpAddress('val');\r\n        if ((dns1 != \"\") && (dns1 != \"0.0.0.0\") && ($.ifip(dns1, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\t//element = $.id(\"dns1\");\r\n\t\t\t//if(element){\r\n\t\t\t//\telement.focus();\r\n\t\t\t//\telement.select();\r\n\t\t\t//}\r\n\t\t\t$(\"#dns1\").tpAddress('focus');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//if (($.id(\"dns2\").value != \"\") \r\n\t\t//\t\t&& ($.id(\"dns2\").value != \"0.0.0.0\") \r\n\t\t//\t\t&& ($.ifip($.id(\"dns2\").value, true)))\r\n\t\tvar dns2 = $('#dns2').tpAddress('val');\r\n\t\tif ((dns2 != \"\") && (dns2 != \"0.0.0.0\") && ($.ifip(dns2, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\t//element = $.id(\"dns2\");\r\n\t\t\t//if(element){\r\n\t\t\t//\telement.focus();\r\n\t\t\t//\telement.select();\r\n\t\t\t//}\r\n\t\t\t$(\"#dns2\").tpAddress('focus');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t//var tmpDns1 = ($.id(\"dns1\").value) ? $.ip2ip($.id(\"dns1\").value) : \"0.0.0.0\";\r\n\t\t//var tmpDns2 = ($.id(\"dns2\").value) ? $.ip2ip($.id(\"dns2\").value) : \"0.0.0.0\";\r\n\t\tvar tmpDns1 = (dns1) ? $.ip2ip(dns1) : \"0.0.0.0\";\r\n        var tmpDns2 = (dns2) ? $.ip2ip(dns2) : \"0.0.0.0\";\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 1;\r\n\t\twan_pppoelistarg.DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pppoelistarg.DNSOverrideAllowed = 0;\r\n\t/*\twan_pppoelistarg.DNSServers = wan_pppoelist.DNSServers;*/\r\n\t}\r\n\t\r\n\tif (INCLUDE_IPV6)\r\n\t{\r\n\t\t//wan_pppoelistarg.X_TP_IPv4Enabled = ($.id(\"ppp_ip4_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\t//wan_pppoelistarg.X_TP_IPv6Enabled = ($.id(\"ppp_ip6_elem_enable\").checked == 1) ? 1 : 0;\r\n\t\twan_pppoelistarg.X_TP_IPv4Enabled = ($(\"#ppp_ip4_elem_enable\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n        wan_pppoelistarg.X_TP_IPv6Enabled = ($(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == 1) ? 1 : 0;\r\n\t\t\r\n\t\tif (wan_pppoelistarg.X_TP_IPv4Enabled == 0 && wan_pppoelistarg.X_TP_IPv6Enabled == 0)\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN6_IP_STACK_NONE);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t//if ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"externIp6_en\").checked == 1)\r\n\t\tif ($(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") == 1 && $(\"#externIp6_en\").prop(\"data-checked\") == 1)\r\n\t\t{\r\n\t\t\t//if (!isValidGLUIP6AddrStrict($.id(\"externIp6Addr\").value))\r\n\t\t\tif (!isValidGLUIP6AddrStrict($(\"#externIp6Addr\").val()))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"externIp6Addr\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#externIp6Addr\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//var tmp_ip6Gateway = $.id(\"externIp6Gateway\").value;\r\n\t\t\tvar tmp_ip6Gateway = $(\"#externIp6Gateway\").val();\r\n\t\t\tif (tmp_ip6Gateway != \"\" && tmp_ip6Gateway != \"::\" && !isValidGLUIP6AddrStrict(tmp_ip6Gateway))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"externIp6Gateway\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#externIp6Gateway\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmp_ip6Gateway=formatIPv6(tmp_ip6Gateway);\r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"Static\";\r\n\t\t\t//wan_pppoelistarg.X_TP_ExternalIPv6Address = formatIPv6($.id(\"externIp6Addr\").value);\r\n\t\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = formatIPv6($(\"#externIp6Addr\").val());\r\n\t\t\twan_pppoelistarg.X_TP_PrefixLength = 64;\r\n\t\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = (tmp_ip6Gateway) ? tmp_ip6Gateway : \"::\";\r\n\t\t\tif (wan_pppoelistarg.X_TP_DefaultIPv6Gateway != \"::\")\r\n\t\t\t{\r\n\t\t\t\twan_pppoelistarg.X_TP_DefaultIPv6GatewayOverride = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"DHCPv6\";\r\n\t\t\tif (INCLUDE_IPV6_SLAAC)\r\n\t\t\t{\r\n\t\t\t\t//if ($.id(\"ppp_ip6addr_type\").value == \"autoip\")\r\n\t\t\t\tif ($(\"#ppp_ip6addr_type\").data(\"value\") == \"autoip\")\r\n\t\t\t\t{\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"SLAAC\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t//\t\twan_pppoelistarg.X_TP_ExternalIPv6Address = \"::\";\r\n\t//\t\twan_pppoelistarg.X_TP_PrefixLength = 0;\r\n\t//\t\twan_pppoelistarg.X_TP_DefaultIPv6Gateway = \"::\";\r\n\t\t\tif (INCLUDE_IP6_WAN_NOT_ASSIGN_ADDR){\r\n\t\t\t\t//if ($.id(\"ppp_hide_addr_config\").checked){\r\n\t\t\t\tif ($(\"#ppp_hide_addr_config\").prop(\"data-checked\")) {\r\n\t\t\t\t\twan_pppoelistarg.X_TP_IPv6AddressingType = \"None\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//if ($.id(\"ppp_ip6_elem_enable\").checked == 1 && $.id(\"dns6_en\").checked == 1)\r\n\t\tif ($(\"#ppp_ip6_elem_enable\").prop(\"data-checked\") && $(\"#dns6_en\").prop(\"data-checked\"))\r\n\t\t{\r\n\t\t\t//var tmpDns1 = $.id(\"dns6_1\").value;\r\n\t\t\t//var tmpDns2 = $.id(\"dns6_2\").value;\r\n\t\t\tvar tmpDns1 = $(\"#dns6_1\").val();\r\n            var tmpDns2 = $(\"#dns6_2\").val();\r\n\t\t\t\r\n\t\t\tif (tmpDns1 != \"\" && tmpDns1 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns1))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"dns6_1\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#dns6_1\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns1=formatIPv6(tmpDns1);\r\n\t\t\t}\r\n\t\t\tif (tmpDns2 != \"\" && tmpDns2 != \"::\" && !isValidGLUIP6AddrStrict(tmpDns2))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_ADDR_INVAD);\r\n\t\t\t\t//element = $.id(\"dns6_2\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#dns6_2\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpDns2=formatIPv6(tmpDns2);\r\n\t\t\t}\r\n\t\t\ttmpDns1 = (tmpDns1) ? tmpDns1 : \"::\";\r\n\t\t\ttmpDns2 = (tmpDns2) ? tmpDns2 : \"::\";\r\n\r\n\t\t\tif ((tmpDns1 + \",\" + tmpDns2) == \"::,::\")\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_WAN6_DNS_INVAD);\r\n\t\t\t\t//element = $.id(\"dns6_1\");\r\n\t\t\t\t//if (element)\r\n\t\t\t\t//{\r\n\t\t\t\t//\telement.focus();\r\n\t\t\t\t//\telement.select();\r\n\t\t\t\t//}\r\n\t\t\t\t$(\"#dns6_1\").focus().select();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 1;\r\n\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = tmpDns1 + \",\" + tmpDns2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSOverrideAllowed = 0;\r\n//\t\t\twan_pppoelistarg.X_TP_IPv6DNSServers = \"::,::\";\r\n\t\t}\r\n\t\t\r\n\t\tif (INCLUDE_IPV6_MLD)\r\n\t\t{\r\n\t\t\t//wan_pppoelistarg.X_TP_MLDProxyEnabled = $.id(\"ppp_mld_en\").checked ? 1 : 0;\r\n\t\t\twan_pppoelistarg.X_TP_MLDProxyEnabled = $(\"#ppp_mld_en\").prop(\"data-checked\") ? 1 : 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* check PPPoE with same session */\r\n\t//if ($.id(\"ppp_same_session\").checked == true){\r\n\tif ($(\"#ppp_same_session\").prop(\"data-checked\")){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelistarg.X_TP_IPv6Enabled = 1;\r\n\t\tPPPoESetConnection = \"ewan_pppoe\";\r\n\t} else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\tPPPoESetConnection = \"ewan_pppoev6\";\r\n\t} \r\n\t\r\n\treturn true;\r\n}\r\nfunction addL2tpAttrs()\r\n{\r\n\t/*if ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_l2tp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_l2tp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_l2tp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_l2tp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_l2tp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_l2tp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_l2tp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"l2tp_mtu\").value >= 576) && ($.id(\"l2tp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_l2tp_listarg.maxMRUSize = parseInt($.id(\"l2tp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"l2tp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_l2tp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_l2tp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_l2tp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;*/\r\n}\r\nfunction addPptpAttrs()\r\n{\r\n\t/*if ($.id(\"ppp_username\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_username\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.username = $.id(\"ppp_username\").value;\r\n\tif ($.id(\"ppp_pwd\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_USERNAME_INVAD);\r\n\t\telement = $.id(\"ppp_pwd\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.password = $.id(\"ppp_pwd\").value;\r\n\t\r\n\tif ($.id(\"srvAddrName\").value == \"\")\r\n\t{\r\n\t\t$.alert(ERR_WAN_DA_SERVER_NAME_EMPTY);\r\n\t\telement = $.id(\"srvAddrName\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\twan_pptp_listarg.serverIpOrName = $.id(\"srvAddrName\").value;\r\n\t\r\n\tif ($.id(\"ipType_stc\").checked == 1)\r\n\t{\r\n\t\tvar temp_ip = $.id(\"isp_ip_stc\").value;\r\n\t\tvar temp_mask = $.id(\"isp_net_mask_stc\").value;\r\n\t\tvar temp_gateway = $.id(\"isp_gw_stc\").value;\r\n\t\t\r\n\t\twan_pptp_listarg.addressingType = \"Static\";\r\n\r\n\t\tif((!$.ifip(temp_ip)) && (!$.mask(temp_mask)) && (!$.ipmask(temp_ip,temp_mask)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.externalIPAddressIP = $.ip2ip(temp_ip);\r\n\t\t\twan_pptp_listarg.subnetMaskIP = $.ip2ip(temp_mask);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"\") || (temp_gateway != \"0.0.0.0\" && $.ifip(temp_gateway, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_IP_FORMAT);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_gateway == \"0.0.0.0\") || (!isSameLan(temp_gateway, temp_mask, temp_ip, temp_mask)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_GATEWAY_INVAD);\r\n\t\t\telement = $.id(\"isp_gw_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\twan_pptp_listarg.defaultGatewayIP = $.ip2ip(temp_gateway);\r\n\t\t\r\n\t\tvar temp_dnsaddr = $.id(\"isp_dns_1_stc\").value;\r\n\t\tvar temp_secdnsaddr = $.id(\"isp_dns_2_stc\").value;\r\n\t\tvar temp_dnsServers  = \"\";\r\n\r\n\t\tif ((temp_dnsaddr != \"\") && (temp_dnsaddr != \"0.0.0.0\") && ($.ifip(temp_dnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DNSADDR_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif ((temp_secdnsaddr != \"\") && (temp_secdnsaddr != \"0.0.0.0\") && ($.ifip(temp_secdnsaddr, true)))\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_SECDNS_INVAD);\r\n\t\t\telement = $.id(\"isp_dns_2_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\ttemp_dnsaddr = (temp_dnsaddr) ? $.ip2ip(temp_dnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_secdnsaddr = (temp_secdnsaddr) ? $.ip2ip(temp_secdnsaddr) : \"0.0.0.0\";\r\n\t\ttemp_dnsServers = temp_dnsaddr + \",\" + temp_secdnsaddr;\r\n\t\twan_pptp_listarg.DNSServersIP = temp_dnsServers;\r\n\t\t\r\n\t\tif ($.ifip(wan_pptp_listarg.serverIpOrName, true) && temp_dnsaddr == \"0.0.0.0\" && temp_secdnsaddr == \"0.0.0.0\")\r\n\t\t{\r\n\t\t\t$.alert(ERR_WAN_DA_DNS_EMPTY);\r\n\t\t\telement = $.id(\"isp_dns_1_stc\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\twan_pptp_listarg.addressingType = \"DHCP\";\r\n\t}\r\n\r\n\tif(($.id(\"pptp_mtu\").value >= 576) && ($.id(\"pptp_mtu\").value <= 1500))\r\n\t{\r\n\t\twan_pptp_listarg.maxMRUSize = parseInt($.id(\"pptp_mtu\").value, 10);\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$.alert(ERR_WAN_MTU_INVAD);\r\n\t\telement = $.id(\"pptp_mtu\");\r\n\t\tif(element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.id(\"da_connAlwaysOn\").checked == 1)\r\n\t{\r\n\t\twan_pptp_listarg.connectionTrigger = \"AlwaysOn\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (($.id(\"da_idleTime\").value) && ($.isnum($.id(\"da_idleTime\").value)))\r\n\t\t{\r\n\t\t\twan_pptp_listarg.idleDisconnectTime = parseInt($.id(\"da_idleTime\").value, 10);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.alert(ERR_IDLETIME_INVAD);\r\n\t\t\telement = $.id(\"da_idleTime\");\r\n\t\t\tif(element){\r\n\t\t\t\telement.focus();\r\n\t\t\t\telement.select();\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\t\r\n\t\t\r\n\t\tif ($.id(\"da_connOnDemand\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"OnDemand\";\r\n\t\telse if ($.id(\"da_connManual\").checked == 1)\r\n\t\t\twan_pptp_listarg.connectionTrigger = \"Manual\";\r\n\t}\r\n\t\r\n\treturn true;*/\r\n}\r\n\r\nfunction addTunnelAttrs()\r\n{\r\n\tvar wanIntfName;\r\n\t\r\n\twan6MainTunnelAttrs.enabled = 1;\r\n\twan6MainTunnelAttrs.mechanism = 2;\r\n\t\r\n\twanInfName = wan4ConnName;\r\n\t//if ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\tif ((wanInfName == \"No available interface.\"))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!wanInfName)\r\n\t{\r\n\t\tif (!wan6MainTunnelAttrs.localAddress)\r\n\t\t\twan6MainTunnelAttrs.localAddress = \"0.0.0.0\"; \r\n\t}\r\n\telse\r\n\t{\r\n\tfor (var i = 0; i < wanIPv4List.length; i++)\r\n\t{\r\n\t\tif (wanIPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanIPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanIPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfor (var i = 0; i < wanPPPv4List.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPPPv4List[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPPPv4List[i].X_TP_IfName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPPPv4List[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanL2tpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanL2tpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanL2tpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanL2tpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (var i = 0; i < wanPptpConList.length; i++)\r\n\t{\t\t\t\r\n\t\tif (wanPptpConList[i].name == wanInfName)\r\n\t\t{\r\n\t\t\twan6MainTunnelAttrs.associatedWanIfName = wanPptpConList[i].ifName;\r\n\t\t\twan6MainTunnelAttrs.localAddress = wanPptpConList[i].externalIPAddress;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction doSave(val)\r\n{\r\n\t//var linkType = $.id(\"link_type_v6\").value;\r\n\tvar linkType = $(\"#link_type_v6\").data(\"value\");\r\n\t//if ($.id(\"wan_enable_ipv6\").checked == false){\r\n\tif ($(\"#wan_enable_ipv6\").prop(\"data-checked\") == false){\r\n\t\tlinkType = \"disabled\";\r\n\t}\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addStaticIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addDynIpAttrs()))\treturn;\t\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPPPoEAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addL2tpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addPptpAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tvar ret;\r\n\t\tif (!(ret = addTunnelAttrs()))\treturn;\r\n\t}\r\n\telse if (linkType == \"disabled\")\r\n\t{\r\n\t\t//do nothing \r\n\t}\r\n\t//$.addLoading($.id(\"saveBtn\"));\r\n\t$.addLoading($(\"#saveBtn\"));\r\n\r\n\t//var ethEnable = $.id(\"ethWan_en\").checked ? 1 : 0;\r\n\tvar ethEnable = $(\"#ethWan_en\").prop(\"data-checked\") ? 1 : 0;\r\n\tif (ethEnable == 0)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=0\"]);\r\n\telse if (ethEnable == 1)\r\n\t\t$.act(ACT_SET, WAN_ETH_INTF, pStk, null, [\"enable=1\"]);\r\n\r\n\tif (linkType == \"staticIp\")\r\n\t{\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\",\"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_sta.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_sta.enable = 1;\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, wan_iplistarg_sta);\t\r\n\t\t\tif ((PDEnable == 1) && (staticEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_s\"]);\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"dynamicIp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif ((ethEnable == 0) && (dynEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_iplistarg_dyn.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_iplistarg_dyn.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\t\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, wan_iplistarg_dyn);\r\n\t\t\tif ((PDEnable == 1) && (dynEnable != 1))\r\n\t\t\t{\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_ipoev6_d\"]);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"pppoe\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n/*\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);*/\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n/*\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);*/\r\n\t\tif (PPPoEv6Enable == 1 && PPPoESetConnection != \"ewan_pppoev6\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1 && PPPoESetConnection != \"ewan_pppoe\")\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\tif (wan6to4Enable == 1){\r\n\t\t\t\twan_pppoelistarg.X_TP_PDEnabled = 1;\r\n\t\t\t\tPDEnable = 1; \r\n\t\t\t}\r\n\t\t\twan_pppoelistarg.enable = 1;\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, wan_pppoelistarg);\t\r\n\t\t\tif (PDEnable == 1)\r\n\t\t\t{\r\n\t\t\t\tif (PPPoESetConnection == \"ewan_pppoev6\" && PPPoEv6Enable != 1){\r\n\t\t\t \t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoev6\"]);\r\n\t\t\t\t} else if (PPPoESetConnection == \"ewan_pppoe\" && PPPoEv4v6Enable != 1){\r\n\t\t\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=ewan_pppoe\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn;\r\n\t}\r\n\telse if (linkType == \"l2tp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (pptpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (l2tpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_l2tp_listarg.enable = 1;\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, wan_l2tp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"pptp\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\"]);\r\n\t\tif (PPPoEEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEStk, null, [\"enable=0\"]);\r\n\t\tif (l2tpEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, l2tpStk, null, [\"enable=0\"]);\r\n\t\tif ((ethEnable == 0) && (pptpEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_L2TP_CONN, pptpStk, null, [\"enable=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\t\r\n\t\t\twan_pptp_listarg.enable = 1;\r\n\t\t\t\t\r\n\t\t\t$.act(ACT_SET, WAN_PPTP_CONN, pptpStk, null, wan_pptp_listarg);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"6to4\")\r\n\t{\r\n\t\tif (staticEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\t\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (!$.exe())\r\n\t\t{\r\n\t\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=0\"]);\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, wan6MainTunnelAttrs);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\telse if (linkType == \"disabled\") \r\n\t{\r\n\t\tif ((staticEnable == 1))\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, staticStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (dynEnable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_IP_CONN, dynStk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PPPoEv6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv6Stk, null, [\"enable=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (wan6to4Enable == 1)\r\n\t\t\t$.act(ACT_SET, IP6_TUNNEL, wan6to4Stk, null, [\"enabled=0\"]);\r\n\t\tif (PPPoEv4v6Enable == 1)\r\n\t\t\t$.act(ACT_SET, WAN_PPP_CONN, PPPoEv4Stk, null, [\"X_TP_IPv6Enabled=0\", \"X_TP_PDEnabled=0\"]);\r\n\t\tif (PDEnable == 1)\r\n\t\t\t$.act(ACT_SET, LAN_IP6_HOST_CFG, lan6HostStk, null, [\"IPv6PDWANConnection=\"]);\r\n\r\n\t\t$.act(ACT_SET, IPV6_CFG, IPv6CfgStk, null, [\"disableIPv6=1\"]);\r\n\r\n\t\t//if (!$.exe()) {$.removeLoading();$.reload();return;};\r\n\t\t$.exe(function(err){\r\n\t\t\t$.removeLoading();\r\n\t\t\tif (!err){\r\n\t\t\t\t$.reload();\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn;\r\n\t}\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\t$.removeLoading();\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif (val == 0)\r\n\t\t\t{\r\n\t\t\t\t//if ($.id(\"link_type_v6\").value == \"staticIp\")\r\n\t\t\t\tif (linkType == \"staticIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, staticStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//else if ($.id(\"link_type_v6\").value == \"dynamicIp\")\r\n\t\t\t\tif (linkType == \"dynamicIp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar ipConn = $.act(ACT_GET, WAN_IP_CONN, dynStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = ipConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//else if ($.id(\"link_type_v6\").value == \"pppoe\")\r\n\t\t\t\tif (linkType == \"pppoe\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pppConn = $.act(ACT_GET, WAN_PPP_CONN, PPPoEStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pppConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//else if ($.id(\"link_type_v6\").value == \"l2tp\")\r\n\t\t\t\tif (linkType == \"l2tp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar l2tpConn = $.act(ACT_GET, WAN_L2TP_CONN, l2tpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = l2tpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t//else if ($.id(\"link_type_v6\").value == \"pptp\")\r\n\t\t\t\tif (linkType == \"pptp\")\r\n\t\t\t\t{\r\n\t\t\t\t\tvar pptpConn = $.act(ACT_GET, WAN_PPTP_CONN, pptpStk, null, [\"name\"]);\r\n\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl3ForwardingObj.__ifAliasName = pptpConn.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tl3ForwardingObj.__ifName = \"\";\r\n\t\t\t\tl3ForwardingObj.defaultConnectionService = \"\";\r\n\r\n\t\t\t\tif (INCLUDE_IPV6)\r\n\t\t\t\t{\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifAliasName = l3ForwardingObj.__ifAliasName;\r\n\t\t\t\t\tl3Ip6ForwardingObj.__ifName = \"\";\r\n\t\t\t\t\tl3Ip6ForwardingObj.defaultConnectionService = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tip4Enable = (wan_iplistarg_sta.X_TP_IPv4Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv4Enabled == 1 || wan_pppoelistarg.X_TP_IPv4Enabled == 1 || wan_l2tp_listarg.enable == 1 || wan_pptp_listarg.enable == 1) ? 1 : 0;\r\n\t\t\t\t\tip6Enable = (wan_iplistarg_sta.X_TP_IPv6Enabled == 1 || wan_iplistarg_dyn.X_TP_IPv6Enabled == 1 || wan_pppoelistarg.X_TP_IPv6Enabled == 1) ? 1 : 0;\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!INCLUDE_IPV6 || INCLUDE_IPV6 && ip4Enable == 1)\r\n\t\t\t\t\t$.act(ACT_SET, L3_FORWARDING, null, null, l3ForwardingObj);\r\n\t\t\t\t\r\n\t\t\t\tif (INCLUDE_IPV6 && ip6Enable ==1 )\r\n\t\t\t\t\t$.act(ACT_SET, L3_IP6_FORWARDING, null, null, l3Ip6ForwardingObj);\r\n\r\n\t\t\t\tif (!$.exe()) {$.reload()};\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doDhcp6Renew()\r\n{\r\n}\r\nfunction doDhcp6Release()\r\n{\r\n}\r\n\r\nfunction doDhcpRenew()\r\n{\t\r\n\t//$.id(\"renew\").disabled = 1;\r\n\t//$.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n\t//$.removeClass($.id(\"DynIpConnecting\"), \"nd\");\r\n\t//$.addLoading($.id(\"renew\"));\r\n\t//if (!$.exe())\r\n\t//\t$.timeout(function(){ $.reload();}, 1500);\r\n    $(\"#renew\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_DHCP_RENEW, wan_iplist_dyn.__stack);\r\n    $(\"#DynIpConnecting\").removeClass(\"nd\");\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n}\r\nfunction doDhcpRelease()\r\n{\r\n\t//$.id(\"release\").disabled = 1;\r\n\t//$.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n\t//$.addLoading($.id(\"release\"));\r\n\t//if (!$.exe())\r\n\t//\t$.timeout(function(){ $.reload();}, 1500);\r\n    $(\"#release\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_DHCP_RELEASE, wan_iplist_dyn.__stack);\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n}\r\nfunction doConn()\r\n{\r\n\t//doSave(1);\r\n\t//$.id(\"conn\").disabled = 1;\r\n\t//$.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n\t//$.removeClass($.id(\"PPPoEConnecting\"), \"nd\");\r\n\t//$.addLoading($.id(\"conn\"));\r\n\t//if (!$.exe())\r\n\t//\t$.timeout(function(){ $.reload();}, 1500);\r\n    doSave(1);\r\n    $(\"#conn\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_PPP_CONN, wan_pppoelist.__stack);\r\n    $(\"#PPPoEConnecting\").removeClass(\"nd\");\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n}\r\nfunction doDisConn()\r\n{\r\n\t//$.id(\"disConn\").disabled = 1;\r\n\t//$.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n\t//$.addLoading($.id(\"disConn\"));\r\n\t//if (!$.exe())\r\n\t//{\r\n\t//\tdoSave(1);\r\n\t//\t$.timeout(function(){ $.reload();}, 1500);\r\n\t//}\r\n    $(\"#disConn\").prop(\"disabled\", true);\r\n    $.act(ACT_OP, ACT_OP_PPP_DISCONN, wan_pppoelist.__stack);\r\n    if (!$.exe()) {\r\n        doSave(1);\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n    }\r\n}\r\nfunction doConn2()\r\n{\r\n\t//doSave(0);\r\n\t//$.id(\"conn2\").disabled = 1;\r\n\t//if ($.id(\"link_type_v6\").value == \"l2tp\")\r\n\t//{\r\n\t//\t$.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n\t//}\r\n\t//else if ($.id(\"link_type_v6\").value == \"pptp\")\r\n\t//{\r\n\t//\t$.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n\t//}\r\n\t//$.removeClass($.id(\"L2tpPptpConnecting\"), \"nd\");\r\n\t//$.addLoading($.id(\"conn2\"));\r\n\t//if (!$.exe())\r\n\t//\t$.timeout(function(){ $.reload();}, 1500);\r\n    doSave(1);\r\n    $(\"#conn2\").prop(\"disabled\", true);\r\n    if ($(\"#link_type_v6\").data(\"value\") == \"l2tp\") {\r\n        $.act(ACT_OP, ACT_OP_L2TP_CONN, wan_l2tp_list.__stack);\r\n    } else if ($(\"#link_type_v6\").data(\"value\") == \"pptp\") {\r\n        $.act(ACT_OP, ACT_OP_PPTP_CONN, wan_pptp_list.__stack);\r\n    }\r\n    $(\"#L2tpPptpConnecting\").removeClass(\"nd\");\r\n    if (!$.exe())\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 3000);\r\n}\r\nfunction doDisConn2()\r\n{\r\n\t//$.id(\"disConn2\").disabled = 1;\r\n\t//if ($.id(\"link_type_v6\").value == \"l2tp\")\r\n\t//{\r\n\t//\t$.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n\t//}\r\n\t//else if ($.id(\"link_type_v6\").value == \"pptp\")\r\n\t//{\r\n\t//\t$.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n\t//}\r\n\t//$.addLoading($.id(\"disConn2\"));\r\n\t//if (!$.exe())\r\n\t//{\r\n\t//\tdoSave(1);\r\n\t//\t$.timeout(function(){ $.reload();}, 1500);\r\n\t//}\r\n    $(\"#disConn2\").prop(\"disabled\", true);\r\n    if ($(\"#link_type_v6\").data(\"value\") == \"l2tp\") {\r\n        $.act(ACT_OP, ACT_OP_L2TP_DISCONN, wan_l2tp_list.__stack);\r\n    } else if ($(\"#link_type_v6\").data(\"value\") == \"pptp\") {\r\n        $.act(ACT_OP, ACT_OP_PPTP_DISCONN, wan_pptp_list.__stack);\r\n    }\r\n    if (!$.exe()) {\r\n        doSave(1);\r\n        $.timeout(function() {\r\n            $.reload();\r\n        }, 1500);\r\n    }\r\n}\r\nfunction checkPwd()\r\n{\r\n\t//if ($.id(\"pwd2\").value != $.id(\"pwd\").value)\r\n\tif ($(\"#pwd2\").tpPassword('val') != $(\"#pwd\").tpPassword('val'))\r\n\t{\r\n\t\t//$.id(\"pwd\").value = \"\";\r\n\t\t//$.id(\"pwd2\").value = \"\";\r\n\t\t$.alert(ERR_PWD_INVAD);\r\n\t\t//element = $.id(\"pwd\");\r\n\t\t//if(element){\r\n\t\t//\telement.focus();\r\n\t\t//\telement.select();\r\n\t\t//}\r\n\t\t$(\"#pwd\").tpPassword('focus');\r\n\t\treturn false;\r\n\t}\r\n}\r\nfunction showDyn()\r\n{\r\n\t//$.removeClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t//$.addClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t$(\"#l2tp_pptp_dyn_ip_elem\").removeClass(\"nd\");\r\n    $(\"#l2tp_pptp_stc_ip_elem\").addClass(\"nd\");\r\n}\r\nfunction showStc()\r\n{\r\n\t//$.removeClass($.id(\"l2tp_pptp_stc_ip_elem\"), \"nd\");\r\n\t//$.addClass($.id(\"l2tp_pptp_dyn_ip_elem\"), \"nd\");\r\n\t$(\"#l2tp_pptp_stc_ip_elem\").removeClass(\"nd\");\r\n    $(\"#l2tp_pptp_dyn_ip_elem\").addClass(\"nd\");\r\n}\r\nfunction showPPPSameSession()\r\n{\r\n\t//var checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tvar checkSameSession = $(\"#ppp_same_session\").prop(\"data-checked\");\r\n\tif (checkSameSession == true){\r\n\t\t//$.addClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t//$.addClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t\t$(\"#ppp_session_basic\").addClass(\"nd\");\r\n\t\t$(\"#ppp_session_adv\").addClass(\"nd\");\r\n\t}else {\r\n\t\t//$.removeClass($.id(\"ppp_session_basic\"), \"nd\");\r\n\t\t//$.removeClass($.id(\"ppp_session_adv\"), \"nd\");\r\n\t\t$(\"#ppp_session_basic\").removeClass(\"nd\");\r\n\t\t$(\"#ppp_session_adv\").removeClass(\"nd\");\r\n\t}\r\n}\r\n\r\nfunction checkPPPoESameSession()\r\n{\r\n\t//var checkSameSession = $.id(\"ppp_same_session\").checked;\r\n\tvar checkSameSession = $(\"#ppp_same_session\").prop(\"data-checked\");\r\n\tshowPPPSameSession();\r\n\tif (checkSameSession == true){\r\n\t\tPPPoEStk = PPPoEv4Stk;\r\n\t\tPPPoEEnable = PPPoEv4Enable;\r\n\t\twan_pppoelist = wan_pppoev4list;\r\n\t\tinitPPPoE();\r\n\t\t//$.reload(\"pppoe:1:1\");\r\n\t}else {\r\n\t\tPPPoEStk = PPPoEv6Stk;\r\n\t\tPPPoEEnable = PPPoEv6Enable;\r\n\t\twan_pppoelist = wan_pppoev6list;\r\n\t\tinitPPPoE();\r\n\t\t//$.reload(\"pppoe:1:0\");\r\n\t}\r\n}\r\n\r\nfunction initDisabledIPv6(){\r\n\t//$.loadHelpFrame(\"Wan6DisabledCfgHelpRpm.htm\");\r\n\t//$.addClass($.id(\"ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"ipoeClick\"), \"nd\");\r\n\t//$.addClass($.id(\"ip_elem_adv\"), \"nd\");\r\n\r\n\t//$.addClass($.id(\"dyn_ip_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"dyn_ip_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"dynipClick\"), \"nd\");\r\n\r\n\t//$.addClass($.id(\"pppoe_elem_basic\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoe_elem_adv\"), \"nd\");\r\n\t//$.addClass($.id(\"pppoeClick\"), \"nd\");\r\n\r\n\t//$.addClass($.id(\"wan_select\"), \"nd\");\r\n\t$(\"#ip_elem_basic\").addClass(\"nd\");\r\n\t$(\"#ipoeClick\").addClass(\"nd\");\r\n\t$(\"#ip_elem_adv\").addClass(\"nd\");\r\n\r\n\t$(\"#dyn_ip_elem_basic\").addClass(\"nd\");\r\n\t$(\"#dyn_ip_elem_adv\").addClass(\"nd\");\r\n\t$(\"#dynipClick\").addClass(\"nd\");\r\n\r\n\t$(\"#pppoe_elem_basic\").addClass(\"nd\");\r\n\t$(\"#pppoe_elem_adv\").addClass(\"nd\");\r\n\t$(\"#pppoeClick\").addClass(\"nd\");\r\n\t\r\n\t$(\"#wan_select\").addClass(\"nd\");\r\n}\r\nfunction changeIPv6Disable()\r\n{\r\n\t//if ($.id(\"wan_enable_ipv6\").checked == true){\r\n\tif ($(\"#wan_enable_ipv6\").prop(\"data-checked\")){\r\n\t\t//$.id(\"link_type_v6\").disabled = false;\r\n\t\t$(\"#link_type_v6\").prop(\"disabled\",false);\r\n\t}else {\r\n\t\t//$.id(\"link_type_v6\").disabled = true;\r\n\t\t$(\"#link_type_v6\").prop(\"disabled\",true);\r\n\t}\r\n\tshowLnkType();\r\n}\r\n\r\nfunction hideAutoAddrConfig(type)\r\n{\r\n\tif (type == \"dyn\"){\r\n\t\t//$.id(\"dyn_ip6addr_type\").disabled = $.id(\"dyn_hide_addr_config\").checked;\r\n\t\t$(\"#dyn_ip6addr_type\").prop(\"disabled\",$(\"#dyn_hide_addr_config\").prop(\"data-checked\") ? 1 : 0);\r\n\t} else if (type == \"ppp\"){\r\n\t\t//$.id(\"ppp_ip6addr_type\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t//$.id(\"externIp6_en\").disabled = $.id(\"ppp_hide_addr_config\").checked;\r\n\t\t$(\"#ppp_ip6addr_type\").prop(\"disabled\",$(\"#ppp_hide_addr_config\").prop(\"data-checked\") ? 1 : 0);\r\n\t\t$(\"#externIp6_en\").prop(\"disabled\",$(\"#ppp_hide_addr_config\").prop(\"data-checked\") ? 1 : 0);\r\n\t}\r\n}\r\n$(\"#link_type_v6\").on(\"click\", function(){\r\n\tif (first){\r\n\t\tshowLnkType();\r\n\t}\r\n});\r\n</script>\r\n<style type=\"text/css\">\r\nspan.grey {\r\n\tcolor:grey;\r\n}\r\n</style>\r\n<h3 class=\"et T\" id=\"et\">IPv6 WAN </h3>\r\n<div class=\"content-container\">\r\n<form class=\"pure-form pure-form-aligned\">\r\n<div class=\"part-separate-m nd\" id=\"lteBackup_space\"></div>\r\n<div id=\"ethEnable\"><input type=\"checkbox\" id=\"ethWan_en\" checked=\"checked\" /><label class=\"T\" id=\"t_en\">Enable WAN connection</label></div>\r\n<div class=\"br\"></div>\r\n<div class=\"IPv6 nd\">\r\n\t<b class=\"item T T_ip6en\">Enable IPv6</b>\r\n\t<input type=\"checkbox\" class=\"T\" id=\"wan_enable_ipv6\" onclick=\"changeIPv6Disable();\" checked=\"checked\" />\r\n\t<label class=\"T_enable\"></label>\r\n</div>\r\n<div id=\"wan_conn_type\"><b class=\"T T_conntype\">Connetion Type</b>\r\n<select id=\"link_type_v6\" class=\"xl\" >\r\n<option class=\"T T_dynip6\" id=\"dynamicIp\" value=\"dynamicIp\" selected=\"selected\">Dynamic IPv6</option>\r\n<option class=\"T T_staip6\" id=\"staticIp\" value=\"staticIp\">Static IPv6</option>\r\n<option id=\"pppoe\" value=\"pppoe\" >PPPoEv6</option>\r\n<option class=\"T T_type6to4\" id=\"t_6to4\" value=\"6to4\">Tunnel 6to4</option>\r\n</select></div>\r\n<div class=\"br\"></div>\r\n\r\n<div id=\"dyn_ip_elem_basic\">\r\n\t<div id=\"dyn_ipx_check4\" class=\"nd\">\r\n\t<div class=\"IPv6 nd\"><b class=\"T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip4_elem_enable\" onclick=\"ShowDiv($(this));\" checked=\"checked\" /></div>\r\n\t</div>\r\n\t<div id=\"dyn_ip4_elem_basic\">\r\n\t\t<div class=\"pure-control-group cfg-line\"><label class=\"label-title T_ipaddr\" id=\"ip_addr1\">IP Address:</label><span class=\"text\" id=\"dyn_ip\">0.0.0.0</span></div>\r\n\t\t<div class=\"pure-control-group cfg-line\"><label class=\"label-title T_netmask\" id=\"subnet_mask1\">Subnet Mask:</label><span class=\"text\" id=\"dyn_mask\">0.0.0.0</span></div>\r\n\t\t<div class=\"pure-control-group cfg-line\"><label class=\"label-title T_defgw\" id=\"gateway1\">Gateway:</label><span class=\"text\" id=\"dyn_gw\">0.0.0.0</span></div>\r\n                <div class=\"part-separate-m\">\r\n                    <div class=\"inline\" style=\"margin-right:10px\">\r\n                        <button type=\"submit\" class=\"blue T_renew\" id=\"renew\" value=\"Renew\" disabled=\"disabled\" onclick=\"doDhcpRenew()\">Renew</button>\r\n                    </div>\r\n                    <div class=\"inline\">\r\n                        <button type=\"submit\" class=\"blue T_release\" id=\"release\" value=\"Release\" disabled=\"disabled\" onclick=\"doDhcpRelease()\">Release</button>\r\n                    </div>\r\n                    <span id=\"DynIpConnecting\" class=\"nd\">\r\n                        <span class=\"T_connecting\">Connecting</span>\r\n                    </span>\r\n                </div>\r\n\t</div>\r\n\t<div class=\"br IPv6 nd\"></div>\r\n\t<div id=\"dyn_ipx_check6\" class=\"nd\">\r\n\t <div class=\"IPv6 nd part-separate-m\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"dyn_ip6_elem_enable\" onclick=\"ShowDiv($(this));\" /></div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_basic\" class=\"nd\">\r\n\t\t<div class=\"IPv6 nd pure-control-group cfg-line\"><label class=\"label-title T T_ip6addr\">IPv6 Address:</label>\r\n\t\t<span class=\"text\" id=\"dyn_ip6_addr\">::</span></div>\r\n\t\t<div class=\"IPv6 nd pure-control-group cfg-line\"><label class=\"label-title T T_plen\">Prefix Length:</label>\r\n\t\t<span class=\"text\" id=\"dyn_prefix_len\">0</span></div>\r\n\t\t<div class=\"IPv6 nd pure-control-group cfg-line\"><label class=\"label-title T  T_ip6gw\">IPv6 Gateway:</label>\r\n\t\t<span class=\"text\" id=\"dyn_ip6_gw\">::</span></div>\r\n\t\t<div id=\"dyn_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"dyn_hide_addr_config\" onclick=\"hideAutoAddrConfig('dyn')\" />\r\n\t\t\t<span class=\"T\" id=\"t_dyn_hide_addr_config\">Only Get Prefix Infomation</span>\r\n\t\t</label></div>\r\n\t\t<div id=\"ipv6_cfg_dynamic_slaac\" class=\"IPv6 nd\">\r\n\t\t\t<div class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"dyn_ip6addr_type\" class=\"L\">\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"ip_elem_basic\" class=\"nd\">\r\n\t<div id=\"stc_ipx_check4\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip4_elem_enable\" onclick=\"ShowDiv($(this));\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip4_elem_basic\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"ip_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"netmask\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"ip_gateway\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n\t\t<span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"dns_address\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n\t\t<span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"second_dns\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" />\r\n\t\t<span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br IPv6 nd\"></p>\r\n\t<div id=\"stc_ipx_check6\" class=\"nd\">\r\n\t<p class=\"IPv6 nd\"><b class=\"item L T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"stc_ip6_elem_enable\" onclick=\"ShowDiv($(this));\" checked /></p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_basic\" class=\"nd\">\r\n\t\t<div><b class=\"T T_ip6addr\">IPv6 Address:</b>\r\n\t\t<input type=\"text\" class=\"xl\" id=\"stc_ip6_addr\" value=\"::\" size=\"15\" maxlength=\"40\" /></div>\r\n\t\t<div><b class=\"T T_plen\">Prefix Length:</b>\r\n\t\t<input type=\"text\" class=\"xl\" id=\"stc_prefix_len\" value=\"64\" size=\"15\" maxlength=\"15\" /></div>\r\n\t\t<div><b class=\"T T_ip6gw\">IPv6 Gateway:</b>\r\n\t\t<input type=\"text\" class=\"xl\" id=\"stc_ip6_gateway\" value=\"::\" size=\"15\" maxlength=\"40\" />\r\n\t\t<span class=\"T T_optional\">(Optional)</span></div>\r\n\t\t<div><b class=\"T T_ip6dns\">IPv6 DNS Server:</b>\r\n\t\t<input type=\"text\" class=\"xl\" id=\"dns6_address\" value=\"::\" size=\"15\" maxlength=\"40\" />\r\n\t\t<span class=\"T T_optional\">(Optional)</span></div>\r\n\t\t<div><b class=\"T T_ip6secdns\">Secondary IPv6 DNS Server:</b>\r\n\t\t<input type=\"text\" class=\"xl\" id=\"second_dns6\" value=\"::\" size=\"15\" maxlength=\"40\" />\r\n\t\t<span class=\"T T_optional\">(Optional)</span></div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"pppoe_elem_basic\" class=\"nd\">\r\n\t<div><b></b>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_same_session\" onclick=\"checkPPPoESameSession();\" />\r\n\t\t\t<label class=\"same_sess\" id=\"t_ppp_same_sess\">PPPoE same session with IPv4 PPPoE connection</label>\r\n\t</div>\r\n\t<div id=\"ppp_session_basic\">\r\n\t<div><b class=\"T_pppusr\">PPP Username:</b>\r\n\t<input type=\"text\" class=\"xl\" size=\"15\" id=\"username\" maxlength=\"63\" /></div>\r\n\t<div><b class=\"T_ppppwd\">PPP Password:</b>\r\n\t<input type=\"password\" class=\"xl\" size=\"15\" id=\"pwd\" maxlength=\"63\" /></div>\r\n\t<div><b class=\"T_cfmpwd\">Confirm Password:</b>\r\n\t<input type=\"password\" class=\"xl\" size=\"15\" id=\"pwd2\" maxlength=\"63\" onchange=\"checkPwd();\" /></div>\r\n\t<p class=\"nd\"><b class=\"item L\">Special Dial:</b><select id=\"speDail\" onchange=\"\" >\r\n\t<option id=\"dail0\" value=0 selected >Normal dial mode</option>\r\n\t<option id=\"dail1\" value=1>Special dial mode 1</option>\r\n\t<option id=\"dail2\" value=2>Special dial mode 2</option>\r\n\t<option id=\"dail3\" value=3>Special dial mode 3</option>\r\n\t<option id=\"dail4\" value=4>Special dial mode 4</option>\r\n\t<option id=\"dail5\" value=5>Special dial mode 5</option>\r\n\t<option id=\"dail6\" value=6>Special dial mode 6</option>\r\n\t<option id=\"dail7\" value=7>Special dial mode 7</option>\r\n\t</select></p>\r\n\t<div id=\"pppoe_conn_mode\" class=\"nd\">\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"idleTime\" size=\"3\" maxlength=\"2\" value=\"15\" /> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<div><b class=\"T T_authtype\">Authentication Type:</b><select id=\"ppp_authpro\" class=\"L\" >\r\n\t<option id=\"auto_auth\" value=\"AUTO_AUTH\" selected>AUTO_AUTH</option>\r\n\t<option id=\"pap\" value=\"PAP\">PAP</option>\r\n\t<option id=\"chap\" value=\"CHAP\">CHAP</option>\r\n\t<option id=\"ms-chap\" value=\"MS-CHAP\">MS-CHAP</option>\r\n\t</select></div>\r\n\t<div id=\"pppoe_conn_but\" class=\"part-separate-m nd\">\r\n                <div class=\"inline\" style=\"margin-right:10px\">\r\n                    <button type=\"submit\" class=\"blue T_conn\" id=\"conn\" value=\"Connect\" disabled=\"disabled\" onclick=\"doConn()\">Connect</button>\r\n                </div>\r\n                <div class=\"inline\">\r\n                    <button type=\"submit\" class=\"blue T_disconn\" id=\"disConn\" value=\"Disconnect\" disabled=\"disabled\" onclick=\"doDisConn()\">Disconnect</button>\r\n                </div>\r\n                <span id=\"PPPoEConnecting\" class=\"nd\">\r\n                    <span class=\"T_connecting\">Connecting</span>\r\n                </span>\r\n\t</div>\r\n\t<div class=\"br IPv6 nd\"></div>\r\n\t<div id=\"ppp_ipx_check\" class=\"nd\">\r\n\t<div class=\"IPv6 nd  part-separate-m\"><b class=\"T T_ip4en\">Enable IPv4</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip4_elem_enable\" onclick=\"ShowDiv($(this));\" checked /><label class=\"T_enable\"></label></div>\r\n\t<div class=\"IPv6 nd\"><b class=\"T T_ip6en\">Enable IPv6</b><input type=\"checkbox\" class=\"T\" id=\"ppp_ip6_elem_enable\" onclick=\"ShowDiv($(this));\" checked /><label class=\"T_enable\"></label></div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_basic\">\r\n\t\t<div id=\"ppp_hide_addr_check\" class=\"nd\" ><b class=\"item L\">&nbsp;</b>\r\n\t\t<label>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_hide_addr_config\" onclick=\"hideAutoAddrConfig('ppp')\" />\r\n\t\t\t<label class=\"T\" id=\"t_ppp_hide_addr_config\">Only Get Prefix Infomation</label>\r\n\t\t</label></div>\r\n\t\t<div id=\"ipv6_cfg_ppp_slaac\">\r\n\t\t\t<div class=\"IPv6 nd\"><b class=\"item L T T_ip6addrconf\">IPv6 Autoconfiguration Type</b>\r\n\t\t\t<select id=\"ppp_ip6addr_type\" class=\"L\" >\r\n\t\t\t<option value=\"dhcp\" selected=\"selected\">DHCPv6</option>\r\n\t\t\t<option value=\"autoip\">SLAAC</option>\r\n\t\t\t</select></div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id=\"wan_select\" class=\"nd\">\r\n<div class=\"nd\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></div>\r\n<div class=\"pure-control-group\"><label class=\"label-title item T T_wanconn\">cur WAN Connection:</label>\r\n<span id=\"curwaninf\"></span></div>\r\n</div>\r\n<!-- L2TP/PPTP Div BASIC -->\r\n<div id=\"l2tp_pptp_elem_basic\" class=\"nd\">\r\n\t<p><b class=\"item L T T_username\">Username:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"ppp_username\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item L T T_passwd\">Password:</b><input type=\"password\" class=\"text\" size=\"15\" id=\"ppp_pwd\" maxlength=\"63\" /></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"button\" class=\"button M T T_conn\" id=\"conn2\" value=\"Connect\"  disabled onclick=\"doConn2()\"/><span id=\"test2\"></span>\r\n\t<input type=\"button\" class=\"button M T T_disconn\" id=\"disConn2\" value=\"Disconnect\"  disabled onclick=\"doDisConn2()\"/>\r\n\t<span id=\"L2tpPptpConnecting\" class=\"nd T\">&nbsp;&nbsp;<span class=\"T T_connecting\">Connecting</span>...</span>\r\n\t</p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T\" id = \"t_addrType\">Addressing Type:</b>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_dyn\" onclick=\"showDyn()\" checked /><span class=\"T T_dynip\">Dynamic IP</span>\r\n\t<input type=\"radio\" name=\"ipType\" id=\"ipType_stc\" onclick=\"showStc()\" /><span class=\"T T_staip\">Static IP</span></p>\r\n\t<p><b class=\"item L T T_srvIpName\">Server IP Address/Name:</b><input type=\"text\" class=\"text\" size=\"15\" id=\"srvAddrName\" maxlength=\"80\" /></p>\r\n\t<div id=\"l2tp_pptp_dyn_ip_elem\">\r\n\t\t<p><b class=\"item L T T_ipaddr\" id=\"isp_ip_addr\">IP Address:</b><b style=\"padding-left:12px\" id=\"isp_ip_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_netmask\" id=\"isp_subnet_mask\">Subnet Mask:</b><b style=\"padding-left:12px\" id=\"isp_net_mask_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_gateway\" id=\"isp_gateway\">Gateway:</b><b style=\"padding-left:12px\" id=\"isp_gw_dyn\">0.0.0.0</b></p>\r\n\t\t<p><b class=\"item L T T_dns\" id=\"isp_dns\">DNS:</b><b style=\"padding-left:12px\" id=\"isp_dns_1_dyn\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"isp_dns_2_dyn\">0.0.0.0</b></p>\r\n\t</div>\r\n\t<div id=\"l2tp_pptp_stc_ip_elem\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_ipaddr\">IP Address:</b><input type=\"text\" class=\"text\" id=\"isp_ip_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_netmask\">Subnet Mask:</b><input type=\"text\" class=\"text\" id=\"isp_net_mask_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"isp_gw_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /></p>\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_1_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" id=\"isp_dns_2_stc\" value=\"0.0.0.0\" size=\"15\" maxlength=\"15\" /><span class=\"T T_optional\">(optional)</span></p>\r\n\t</div>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L T T_ipaddr\" id=\"internet_ip_addr\">Internet IP Address:</b><b style=\"padding-left:12px\" id=\"internet_ip\">0.0.0.0</b></p>\r\n\t<p><b class=\"item L T T_dns\" id=\"internet_dns\">Internet DNS:</b><b style=\"padding-left:12px\" id=\"internet_dns_1\">0.0.0.0</b>,<b style=\"padding-left:12px\" id=\"internet_dns_2\">0.0.0.0</b></p>\r\n\t<p class=\"br\"></p>\r\n\t<p><b class=\"item L\">MTU(<span class=\"T T_bytes\">bytes</span>):</b>\r\n\t<span id=\"l2tp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"l2tp_mtu\" size=\"5\" maxlength=\"4\" value=\"1460\"/> (<span class=\"T T_mtu1460\">1460 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t<span id=\"pptp_mtu_msg\"><input type=\"text\" class=\"text\" id=\"pptp_mtu\" size=\"5\" maxlength=\"4\" value=\"1420\"/> (<span class=\"T T_mtu1420\">1420 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span>)</span>\r\n\t</p>\r\n\t<p class=\"L1\"><b class=\"item T T_connmode\">Connection Mode:</b><input type=\"radio\" name=\"linkMode\" id=\"da_connAlwaysOn\" checked /> <span class=\"T T_typeauto\">Connect automatically</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connOnDemand\" /> <span class=\"T T_typedemand\">Connect on demand</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><input type=\"radio\" name=\"linkMode\" id=\"da_connManual\"/> <span class=\"T T_typemanual\">Connect manually</span></p>\r\n\t<p><b class=\"item\">&nbsp;</b><span class=\"T T_midle\">Max Idle Time:</span> <input type=\"text\" class=\"text\" id=\"da_idleTime\" size=\"3\" maxlength=\"2\" value=\"15\"/> <span class=\"T T_minutes\">minutes</span> <span class=\"T T_zmean\">(0 means remain active at all time)</span></p>\r\n</div>\r\n\r\n<div class=\"advanced-block nd\" type=\"button\" id=\"dynipClick\" onclick=\"DynIPClick(this)\">\r\n            <span class=\"advanced-icon advanced-hide-icon\"></span>\r\n            <span class=\"T_adv\">Advanced</span>\r\n</div>\r\n<div id=\"dyn_ip_elem_adv\" class=\"nd\">\r\n\t<div><b class=\"item L\">MTU:</b>\r\n\t<input type=\"text\" class=\"text\" id=\"dyn_mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/>\r\n\t<div class=\"textbox-tips\"><span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span></div></div>\r\n\t<div id=\"dyn_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"dyn_enable_nat\" checked=\"checked\" onclick=\"natClick('dynamic');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"dyn_enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"dyn_ip_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"dyn_ip_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_unicast\">Get IP with Unicast</b><input type=\"checkbox\" id=\"unicast\"/> <span class=\"T T_noreq\">(It is usually not required)</span></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns\" onclick=\"doManualDns();\"/>&nbsp;</p>\r\n\t\t<div id=\"dyn_ip_dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dyn_dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t<div id=\"dyn_ip6_elem_adv\" class=\"nd\">\r\n\t\t<div id=\"dyn_ip_mld\" class=\"nd\">\r\n\t\t\t<b class=\"item L T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"dyn_ip_mld_en\" />\r\n\t\t\t<label class=\"T_enable\"></label>\r\n\t\t</div>\r\n\t\t<div><b class=\"T T_ip6dnsmanual\">Set IPv6 DNS server manually</b><input type=\"checkbox\" id=\"dynamic_manual_dns6\" onclick=\"doManualDns6();\"/>\r\n\t\t<label class=\"T_enable\"></label></div>\r\n\t\t<div id=\"dyn_ip_dns6_tbl\" class=\"nd\">\r\n\t\t<div><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b>\r\n\t\t<input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_1\" /></div>\r\n\t\t<div><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b>\r\n\t\t<input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dyn_dns6_2\" /></div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div><b class=\"T T_hostname\" id=\"host_name\">Host Name:</b>\r\n\t<input type=\"text\" class=\"text\" size=\"15\" id=\"hostname\" maxlength=\"62\"/></div>\r\n</div>\r\n\r\n<div class=\"advanced-block nd\" type=\"button\" id=\"ipoeClick\" onclick=\"IPClick(this)\">\r\n            <span class=\"advanced-icon advanced-hide-icon\"></span>\r\n            <span class=\"T_adv\">Advanced</span>\r\n</div>\r\n<div id=\"ip_elem_adv\" class=\"nd\">\r\n\t<div><b class=\"item L\">MTU:</b>\r\n\t<input type=\"text\" class=\"text\" id=\"mtu\" size=\"5\" maxlength=\"4\" value=\"1500\"/>\r\n\t<div class=\"textbox-tips\"><span class=\"T T_mtu1500\">1500 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span></div></div>\r\n\t<div id=\"stc_ip4_elem_adv\">\r\n\t\t<p class=\"br IPv6 nd\"></p>\r\n\t\t<p><b class=\"item L T T_ennat\">Enable NAT</b><input type=\"checkbox\" id=\"enable_nat\" checked=\"checked\" onclick=\"natClick('static');\"/>&nbsp;</p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"enable_fullnat\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"enable_spi\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ip_igmp_en\" />&nbsp;</p>\r\n\t</div>\r\n\t<div id=\"stc_ip6_elem_adv\" class=\"nd\">\r\n\t\t<div id=\"ip_mld\" class=\"nd\">\r\n\t\t\t<b class=\"T T_enmld\">Enable MLD Proxy</b><input type=\"checkbox\" id=\"ip_mld_en\" />\r\n\t\t\t<label class=\"T_enable\"></label>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"advanced-block nd\" type=\"button\" id=\"pppoeClick\" onclick=\"PPPoEClick(this)\">\r\n            <span class=\"advanced-icon advanced-hide-icon\"></span>\r\n            <span class=\"T_adv\">Advanced</span>\r\n</div>\r\n<div id=\"pppoe_elem_adv\" class=\"nd\">\r\n\t<div id=\"ppp_session_adv\">\r\n\t<div><b class=\"item L T T_srvname\">Service Name:</b>\r\n\t<input type=\"text\" class=\"text\" size=\"15\" id=\"serviceName\" maxlength=\"31\" />\r\n\t<div class=\"textbox-tips\">(<span class=\"T T_nochg\">do not change unless necessary</span></div></div>\r\n\t<div><b class=\"item L T T_acname\">Server Name:</b>\r\n\t<input type=\"text\" class=\"text\" size=\"15\" id=\"acName\" maxlength=\"31\" />\r\n\t<div class=\"textbox-tips\">(<span class=\"T T_nochg\">do not change unless necessary</span></div></div>\r\n\t<div><b class=\"item L\">MTU:</b>\r\n\t<input type=\"text\" class=\"text\" id=\"pppmtu\" size=\"5\" maxlength=\"4\" value=\"1480\" />\r\n\t<div class=\"textbox-tips\"><span class=\"T T_mtu1480\">1480 as default</span>, <span class=\"T T_nochg\">do not change unless necessary</span></div></div>\r\n\t\r\n\t<div id=\"ppp_ip4_elem_adv\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p class=\"nd\"><b class=\"item L T T_enfullcone\">Enable Fullcone NAT</b><input type=\"checkbox\" id=\"ppp_fullnat_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enspi\">Enable SPI Firewall</b><input type=\"checkbox\" id=\"ppp_spi_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_enigmp\">Enable IGMP Proxy</b><input type=\"checkbox\" id=\"ppp_igmp_en\" />&nbsp;</p>\r\n\t\t<p><b class=\"item L T T_useispaddr\">Use the IP address specified by ISP</b><input type=\"checkbox\" id=\"externIp_en\" onclick=\"PPPoEShowDiv(2);\"/>&nbsp;</p>\r\n\t\t<p id=\"exIp_tbl\" class=\"nd\"><b class=\"item L T T_ispaddr\">ISP Specified IP Address:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"externIpAddr\" /></p>\r\n\t    <p><b class=\"item L T T_echo\">Echo request interval:</b><input type=\"text\" class=\"text\" size=\"5\" id=\"ppp_echotime\" maxlength=\"3\" value=\"30\" /> <span class=\"T T_echoinfo\">(0~120 seconds, 0 means no request)</span></p>\r\n\t\t<p><b class=\"item L T T_dnsmanual\">Set DNS server manually</b><input type=\"checkbox\" id=\"dns_en\" onclick=\"PPPoEShowDiv(3);\"/>&nbsp;</p>\r\n\t\t<div id=\"dns_tbl\" class=\"nd\">\r\n\t\t<p><b class=\"item L T T_dns\">DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns1\" /></p>\r\n\t\t<p><b class=\"item L T T_secdns\">Secondary DNS Server:</b><input type=\"text\" class=\"text\" size=\"15\" value=\"0.0.0.0\" id=\"dns2\" /></p>\r\n\t\t</div>\r\n\t</div>\r\n\t</div>\r\n\t<div id=\"ppp_ip6_elem_adv\" class=\"nd\">\r\n\t\t<div id=\"ppp_mld\" class=\"nd\">\r\n\t\t\t<b class=\"T T_enmld\">Enable MLD Proxy</b>\r\n\t\t\t<input type=\"checkbox\" id=\"ppp_mld_en\" />\r\n\t\t\t<label class=\"T_enable\"></label>\r\n\t\t</div>\r\n\t\t<div><b class=\"item L T T_ip6useispaddr\">Use IPv6 address specified by ISP</b>\r\n\t\t<input type=\"checkbox\" id=\"externIp6_en\" onclick=\"ShowDiv($(this));\"/>\r\n\t\t<label class=\"T_enable\"></label>\r\n\t\t</div>\r\n\t\t<div id=\"exIp6_tbl\" class=\"nd\">\r\n\t\t\t<div>\r\n\t\t\t<b class=\"item L T T_ip6ispaddr\">ISP specified IPv6 Address:</b>\r\n\t\t\t<input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Addr\" /></div>\r\n\t\t\t<div>\r\n\t\t\t<b class=\"item L T T_ip6ispgw\">ISP specified IPv6 Gateway:</b>\r\n\t\t\t<input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"externIp6Gateway\" /></div>\r\n\t\t</div>\r\n\t\t<div><b class=\"item L T T_ip6dnsmanual\">Set IPv6 DNS server manually</b>\r\n\t\t<input type=\"checkbox\" id=\"dns6_en\" onclick=\"ShowDiv($(this));\"/>\r\n\t\t<label class=\"T_enable\"></label></div>\r\n\t\t<div id=\"dns6_tbl\" class=\"nd\">\r\n\t\t\t<div><b class=\"item L T T_ip6dns\">IPv6 DNS Server:</b>\r\n\t\t\t<input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_1\" /></div>\r\n\t\t\t<div><b class=\"item L T T_ip6secdns\">Secondary IPv6 DNS Server:</b>\r\n\t\t\t<input type=\"text\" class=\"text\" size=\"15\" value=\"::\" id=\"dns6_2\" /></div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<button type=\"submit\" class=\"green T_save\" id=\"saveBtn\" value=\"Save\" onclick=\"doSave(0);\">Save</button>\r\n</form>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar wan_iplist_sta = {};\r\nvar wan_iplist_dyn = {};\r\nvar wan_pppoelist = {};\r\nvar wan_l2tp_list = {};\r\nvar wan_pptp_list = {};\r\nvar wan_iplistarg_sta = {};\r\nvar wan_iplistarg_dyn = {};\r\nvar wan_pppoelistarg = {};\r\nvar wan_l2tp_listarg = {};\r\nvar wan_pptp_listarg = {};\r\nvar l3Forwarding;\r\nvar dft_gtw;\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar l2tpConnList;\r\nvar pptpConnList;\r\nvar l3ForwardingObj = {};\r\nvar staticStk;\r\nvar staticEnable;\r\nvar dynStk;\r\nvar dynEnable;\r\nvar PPPoEStk;\r\nvar PPPoEEnable;\r\nvar l2tpStk;\r\nvar l2tpEnable;\r\nvar pptpStk;\r\nvar pptpEnable;\r\nvar pStk;\r\nvar loadType;\r\n\r\nvar wan_pppoev4list = {};\r\nvar PPPoEv4Stk;\r\nvar PPPoEv4Enable;\r\nvar PPPoEv4v6Enable;\r\nvar wan_pppoev6list = {};\r\nvar PPPoEv6Stk; \r\nvar PPPoEv6Enable;\r\nvar PPPoESetConnection;\r\nvar IPv6CfgStk;\r\n\r\nvar ip4Enable;\r\nvar ip6Enable;\r\nvar l3Ip6ForwardingObj = {};\r\n\r\nvar wanIPv4List;\r\nvar wanPPPv4List;\r\nvar wan6to4Enable;\r\nvar wan6to4Stk;\r\nvar wan6MainTunnel;\r\nvar wan6MainTunnelAttrs = {};\r\nvar wan4ConnName;\r\nvar PDEnable = 0;\r\nvar lan6HostStk;\r\nvar wanL2tpConList;\r\nvar wanPptpConList;\r\nvar oldv6Type;\r\n\r\n\t$.tpInit(init);\r\n\tvar first=1;\r\n\t//checkPPPoESameSession();\r\n\t$(\"#pwd\").tpPassword('val', wan_pppoelist.password);\r\n    $(\"#pwd2\").tpPassword('val', wan_pppoelist.password);\r\n\t$(\"input[type='checkbox'][id$='_elem_enable']\").click(function() {\r\n\t\tShowDiv($(this));\r\n\t});\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "lib.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 19
      },
      "contents" : {
        "text" : "var TPLINK_LOGIN_DOMAIN = \"tplinkwifi.net\"\r\n$.extend({\r\n    w: window,\r\n    d: document,\r\n    c: function(obj) {\r\n        return document.createElement(obj);\r\n    },\r\n    head: document.getElementsByTagName(\"head\")[0],\r\n    div: document.createElement(\"div\"),\r\n    bak: document.createElement(\"div\"),\r\n    ret: 0,\r\n\r\n    sim: false,\r\n    params: \"./js/local.js\",\r\n    cn: false,\r\n    qss: false,\r\n    sysMode: \"DSL\",\r\n    guageInterval: 700,\r\n\r\n    magic: \"0y8nc5094yeyrnoq\",\r\n    local: location.protocol == \"file:\",\r\n    flag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\r\n    curPage: undefined,\r\n    mainParam: undefined,\r\n    diagParam: undefined,\r\n    coverParam: undefined,\r\n    accStack: [],\r\n\r\n    model: \"\",\r\n    desc: \"\",\r\n    ports: 4,\r\n    itv: 2,\r\n    isFD: 0,\r\n    isMobileFlag: 0,\r\n    isIE: false,\r\n    helpControl: {},\r\njumpToPage: function(menu, pageName, top) {\r\n        $('#' + top).click();\r\n\t\t$.jumpToMenu = menu;\r\n        $.jumpToPageName = pageName;\r\n    },\r\n\r\n    chgChd: function(childs, handle) {\r\n        var tmp = $.mkArr(childs);\r\n        $.each(tmp, function() {\r\n            if (this.nodeType == 1) return handle.call(this);\r\n        });\r\n        tmp = null;\r\n    },\r\n\r\n    id: function(id) {\r\n        return $.d.getElementById(id);\r\n    },\r\n\r\n    mkArr: function(array) {\r\n        if (!array) return [];\r\n        var ret = [];\r\n        for (var i = 0, l = array.length; i < l; i++)\r\n            ret[i] = array[i];\r\n        return ret;\r\n    },\r\n\r\n    inArray: function(elem, elems) {\r\n        for (var i = 0, l = elems.length; i < l; i++)\r\n            if (elems[i] === elem)\r\n                return true;\r\n        return false;\r\n    },\r\n\r\n    realLen: function(str) {\r\n        var len = 0;\r\n        for (var i = 0, l = str.length; i < l; i++) {\r\n            len += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n        }\r\n        return len;\r\n    },\r\n\r\n    attach: function(elem, type, data, handler) {\r\n        var tmp;\r\n        if (handler)\r\n            tmp = data;\r\n        else\r\n            handler = data;\r\n        var handle = function(e) {\r\n            var event = event || e;\r\n            var ret = handler.call(elem, event, tmp);\r\n            return ret;\r\n        };\r\n        if (elem.addEventListener)\r\n            elem.addEventListener(type, handle, false);\r\n        else if (elem.attachEvent)\r\n            elem.attachEvent(\"on\" + type, handle);\r\n    },\r\n\r\n    hasElemClass: function(elem, className) {\r\n        return elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n    },\r\n\r\n    addElemClass: function(elem, className) {\r\n        if (elem && elem.nodeType == 1 && !$.hasElemClass(elem, className))\r\n            elem.className += (elem.className ? \" \" : \"\") + className;\r\n    },\r\n\r\n    removeElemClass: function(elem, className) {\r\n        if (elem && elem.nodeType == 1 && $.hasElemClass(elem, className)) {\r\n            elem.className = elem.className.replace(className, \"\");\r\n            elem.className = elem.className.replace(/\\s+/, \" \");\r\n        }\r\n    },\r\n\r\n    cssFloat: function(elem, type) {\r\n        var floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n        if (type == \"left\" || type == \"right\" || type == \"none\")\r\n            elem.style[floattype] = type;\r\n        else\r\n            return elem.style[floattype];\r\n    },\r\n\r\n    opacity: function(elem, opacity) {\r\n        if (!opacity)\r\n            opacity = 0;\r\n        if (elem.style.opacity === undefined) {\r\n            elem.zoom = 1;\r\n            elem.style.filter = (elem.style.filter || \"\").replace(/alpha\\([^)]*\\)/, \"\") +\r\n                (parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n        } else\r\n            elem.style[\"opacity\"] = opacity;\r\n    },\r\n\r\n    h: function(elem, value) {\r\n        if (elem && elem.innerHTML !== undefined) {\r\n            if (value === undefined)\r\n                return elem.innerHTML;\r\n            else\r\n                elem.innerHTML = value;\r\n        }\r\n        return null;\r\n    },\r\n\r\n    dhtml: function(str, hook, midhook) {\r\n        $.div.innerHTML = \"div\" + str;\r\n        $.div.removeChild($.div.firstChild);\r\n        var scripts = [];\r\n        $.chgChd($.div.childNodes, function() {\r\n            if (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n                scripts.push(this);\r\n            else {\r\n                if (!$.isMobileFlag) {\r\n                    $.trans($(this));\r\n                }\r\n                hook.call($(this).get(0));\r\n            }\r\n        });\r\n        if (midhook) midhook();\r\n        $.each(scripts, function() {\r\n            $.script(this.text || this.textContent || this.innerHTML || \"\")\r\n        });\r\n        $.emptyElem($.div);\r\n    },\r\n\r\n    appendElem: function(elem, value, midhook) {\r\n        if (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n            $.dhtml(value, function() {\r\n                elem.appendChild(this)\r\n            }, midhook);\r\n    },\r\n\r\n    removeElem: function(elem) {\r\n        if (elem && elem.parentNode)\r\n            elem.parentNode.removeChild(elem);\r\n    },\r\n\r\n    emptyElem: function(elem) {\r\n        while (elem && elem.firstChild)\r\n            elem.removeChild(elem.firstChild);\r\n    },\r\n\r\n    asyncId: 1,\r\n    asyncStack: {},\r\n\r\n    getAsync: function() {\r\n        var id = $.asyncId;\r\n        $.asyncStack[id] = true;\r\n        $.asyncId++;\r\n        return id;\r\n    },\r\n\r\n    checkAsync: function(id) {\r\n        return $.asyncStack[id];\r\n    },\r\n\r\n    clearAsync: function() {\r\n        for (var i in $.asyncStack) delete $.asyncStack[i];\r\n    },\r\n\r\n    deleteCookie: function(name) {\r\n        var LargeExpDate = new Date();\r\n        document.cookie = name + \"=; expires=\" + LargeExpDate.toGMTString();\r\n    },\r\n\r\n    stkPop: function(stack, times) {\r\n        times = times ? times : 1;\r\n        if (stack instanceof Array) stack = stack.join(\",\");\r\n        stack = stack.split(\",\");\r\n        for (var i = 1, l = stack.length; i < l; i++) {\r\n            if (stack[i] == 0) break;\r\n        }\r\n        for (i--; times > 0; i--, times--)\r\n            stack[i] = 0;\r\n        return stack.join(\",\");\r\n    },\r\n\r\n    arr2obj: function(arr, param) {\r\n        var ret = {};\r\n        if (param === undefined) return ret;\r\n        for (var i = 0, l = arr.length; i < l; i++) {\r\n            if (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n        }\r\n        return ret;\r\n    },\r\n\r\n    obj2str: function(obj, sign1, sign2, tailing) {\r\n        var ret = \"\";\r\n        for (var i in obj)\r\n            ret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n        if (tailing)\r\n            return ret;\r\n        else\r\n            return ret.substr(0, ret.length - sign2.length);\r\n    },\r\n\r\n    toStr: function(data, sign1, sign2, tailing) {\r\n        return data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n    },\r\n\r\n    backup: function(id) {\r\n        $.emptyElem($.bak);\r\n        // IE will lost checked info after appendElem\r\n        if ($.flag) {\r\n            var con = $.id(id);\r\n            var checks = [];\r\n            var inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n            $.each(inputs, function(arg, index) {\r\n                if (this.checked) checks[index] = true;\r\n            });\r\n        }\r\n        $.chgChd($.id(id).childNodes, function() {\r\n            $.bak.appendChild(this)\r\n        });\r\n        if ($.flag) $.each(checks, function(arg, index) {\r\n            if (this == true) {\r\n                inputs[index].checked = true;\r\n            }\r\n        });\r\n    },\r\n\r\n    restore: function(id) {\r\n        $.emptyElem($.id(id));\r\n        if ($.flag) {\r\n            var checks = [];\r\n            var inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n            $.each(inputs, function(arg, index) {\r\n                if (this.checked) checks[index] = true;\r\n            });\r\n        }\r\n        $.chgChd($.bak.childNodes, function() {\r\n            $.id(id).appendChild(this)\r\n        });\r\n        if ($.flag) $.each(checks, function(arg, index) {\r\n            if (this == true) {\r\n                inputs[index].checked = true;\r\n            }\r\n        });\r\n    },\r\n\r\n    err: function(src, errno, unerr) {\r\n        if (unerr) return errno;\r\n        $.clearAsync();\r\n        $.alertAsnyc(errno);\r\n    },\r\n\r\n    errBack: function(errno, dir) {\r\n        $.clearAsync();\r\n        $.alertAsnyc(errno)\r\n    },\r\n\r\n    tpLoad: function(html, id, resize, hook1, hook2, midhook) {\r\n        var con = $.id(id);\r\n        if (html.indexOf(\"<\") < 0) {\r\n            $.io(html, false, function(ret) {\r\n                if (typeof ret !== \"number\")\r\n                    $.fill(con, ret, hook1, hook2, resize, midhook);\r\n                else\r\n                    $.err(id, ret);\r\n            }, null, id == \"ban\" || id == \"menu\" || id == \"help\" || id == \"bot\" || id == \"top\");\r\n        } else\r\n            $.fill(con, html, hook1, hook2, resize, midhook);\r\n    },\r\n\r\n    fill: function(container, content, hook1, hook2, resize, midhook) {\r\n        if (hook1) hook1();\r\n        $.emptyElem(container);\r\n        $.appendElem(container, content, midhook);\r\n        if (hook2) hook2();\r\n        if (resize) $.resize();\r\n    },\r\n\r\n    loadBot: function(path) {\r\n        $.tpLoad(path, \"bot\", false);\r\n    },\r\n\r\n    loadBanner: function(path, callback) {\r\n        $.tpLoad(path, \"top\", false, null, callback);\r\n    },\r\n\r\n    loadMenu: function(path) {\r\n        /* for this Platform*/\r\n        //$.act(ACT_CGI, '/cgi/clearBusy');\r\n        //$.exe(function() {}, true);\r\n        $.tpLoad(path, \"menu\", false, null, function() {\r\n            $(\"#menu a:first\").trigger(\"click\")\r\n        });\r\n    },\r\n\r\n    loadPage: function(id, path, hook1, hook2) {\r\n        var bFile = (path.indexOf(\"<\") < 0);\r\n        $.tpLoad(\r\n            bFile ? \"./main/\" + path : path,\r\n            id, true, hook1,\r\n            function() { /*if (bFile) {*/\r\n                $.upStyle(); /*$.trans();*/ /*} */\r\n                $(window).trigger('loadPage');\r\n                if (hook2) hook2();\r\n            }\r\n        );\r\n    },\r\n\r\n    loadMain: function(path, arg) {\r\n        $(\"table\").tpTable(\"destroy\");\r\n        $(\"input[type='checkbox']\").tpCheckbox(\"destroy\");\r\n        $(\"input[type='radio']\").tpRadio(\"destroy\");\r\n        $(\"div.button-group-container\").tpBtnGroup(\"destroy\");\r\n        $('#main').empty();\r\n        $('#quicksetup').empty();\r\n        $(document).off('.tpSelect');\r\n        $(window).off('.tpSelect');\r\n\r\n        if (!path) path = $.curPage;\r\n        var bFile = (path.indexOf(\"<\") < 0);\r\n        if (bFile) {\r\n            $.emptyElem($.bak);\r\n            $.clearAsync();\r\n        }\r\n        /* for this Platform*/\r\n\t\t//$.act(ACT_CGI, '/cgi/clearBusy');\r\n        //$.exe(function() {}, true);\r\n        $.loadPage(\r\n            \"main\",\r\n            path,\r\n            function() {\r\n                if (bFile) {\r\n                    $.curPage = path;\r\n                    $.accStack.push(path);\r\n                }\r\n                $.mainParam = arg;\r\n                while ($.as.length) $.as.pop();\r\n                while ($.ds.length) $.ds.pop();\r\n                while ($.ansiarg.length) $.ansiarg.pop();\r\n                $.addElemClass($.id(\"main\"), \"nv\");\r\n                $.unlock();\r\n            },\r\n            function() {\r\n                $.removeElemClass($.id(\"main\"), \"nv\");\r\n            }\r\n        );\r\n    },\r\n\r\n    loadCover: function(path, opacity, arg) {\r\n        $.tpLoad(path, \"cover\", false, function() {\r\n            $.diagParam = arg;\r\n            $.removeElemClass($.id(\"cover\"), \"nd\");\r\n            $.opacity($.id(\"cover\"), opacity);\r\n        });\r\n    },\r\n\r\n    reload: function(arg) {\r\n        if ($.isMobileFlag) {\r\n            $.loadPhoneMain(null, arg);\r\n        } else {\r\n            $.loadMain(null, arg);\r\n        }\r\n    },\r\n\r\n    refresh: function(domain, port, frame, page) {\r\n        if ($.local) location.reload(true);\r\n        else {\r\n            var ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            location.href = ret[1] + \"://\" +\r\n                (domain ? domain : ret[2]) +\r\n                (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\";\r\n        }\r\n    },\r\n\r\n    resize: function() {\r\n        //        此处与phone页面有影响所以修改\r\n        /*        if ($('#mainBody').length > 0) {\r\n                    $(\"#scroll\").height(document.documentElement.clientHeight - 90);\r\n                    var max = Math.max($(\"#scroll\").height() - 56, $(\"#main\").height() + 30, $(\"#menu\").height() + 21);\r\n                    $(\"#main\").height('auto');\r\n                    $(\"#menu\").height('auto');\r\n                    $.mainScroll();\r\n                }*/\r\n    },\r\n\r\n    mainScroll: function() {\r\n        /*        if ($(\"#bot\").position().top > $(document).height() + 11) {\r\n                    $(\"#menu\").css({\r\n                        bottom: \"11px\"\r\n                    });\r\n                } else {\r\n                    $(\"#menu\").css({\r\n                        bottom: $(document).height() + 11 - $(\"#bot\").position().top + \"px\"\r\n                    });\r\n                }*/\r\n    },\r\n\r\n    fixTbl: function() {\r\n        $.each(document.getElementsByTagName(\"div\"), function() {\r\n            if (this.offsetWidth != 0 && ($.hasElemClass(this, \"thead\") || $.hasElemClass(this, \"tbody\")))\r\n                this.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n        });\r\n    },\r\n\r\n    //If the table list could not be edited, show the whole string.\r\n    resizeStrList: function(val, num) {\r\n        var tmpStr = \"\";\r\n        var index = 0;\r\n        while (val.length > index) {\r\n            if (val.length > (index + num)) {\r\n                tmpStr += val.slice(index, index + num);\r\n                tmpStr += \"<br/>\";\r\n                index += num;\r\n            } else {\r\n                tmpStr += val.slice(index, val.length);\r\n                break;\r\n            }\r\n        }\r\n        return tmpStr;\r\n    },\r\n    //html encode string.\r\n\thtmlEncode: function(str)\r\n\t{\r\n\t\tvar div = document.createElement(\"div\");\r\n\t\tdiv.appendChild(document.createTextNode(str));\r\n\t\treturn div.innerHTML;\r\n\t},\r\n\r\n    //If the table list could be edited,  show the string with ellipsis.\r\n    resizeStr: function(val, num) {\r\n        var tmpStr = \"\";\r\n        if (val.length > num) {\r\n            for (var i = 0; i < num; i++)\r\n                tmpStr += val.charAt(i);\r\n            tmpStr += \"...\";\r\n        } else\r\n            tmpStr = val;\r\n\r\n        return tmpStr;\r\n    },\r\n\r\n    resizeTlb: function(tlb, rows, rowLines) {\r\n        var div = tlb.parentNode;\r\n        if (tlb.rows.length > rows) {\r\n            div.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n            $.addElemClass(div, \"scroll\");\r\n        } else {\r\n            div.style[\"height\"] = \"auto\";\r\n            $.removeElemClass(div, \"scroll\");\r\n        }\r\n    },\r\n\r\n    lock: function() {\r\n        $.removeElemClass($.id(\"cover\"), \"nd\");\r\n        $.opacity($.id(\"cover\"), 0);\r\n    },\r\n\r\n    unlock: function() {\r\n        $.addElemClass($.id(\"cover\"), \"nd\");\r\n    },\r\n\r\n    locked: function() {\r\n        return $.hasElemClass($.id(\"cover\"), \"nd\") ? false : true;\r\n    },\r\n\r\n    addLoading: function(object, interval, hook, isNoCover) {\r\n        $.lock();\r\n        var obj;\r\n        if (object) {\r\n            obj = $(object);\r\n            if (obj.hasClass('button-group-button')) {\r\n                $(\"<div style='display: inline-block; vertical-align: middle;position: relative;top: -10px;'><span class='load'></span></div>\").appendTo(obj.closest(\"div.button-group-container\"));\r\n            } else {\r\n                $(\"<div style='display: inline-block; vertical-align: middle;position: relative;top: -10px;'><span class='load'></span></div>\").insertAfter(obj);\r\n            }\r\n        } else {\r\n            obj = null;\r\n        }\r\n\r\n        if (interval) {\r\n            $.timeout(function() {\r\n                if (!hook || hook() !== false) $.removeLoading();\r\n            }, interval);\r\n        }\r\n        $.showLoading(obj, isNoCover);\r\n    },\r\n\r\n    showLoading: function(obj, isNoCover) {\r\n        if (obj) {\r\n            if (obj.hasClass('button-group-button')) {\r\n                obj.closest(\"div.button-group-container\").find('.load').show();\r\n            } else {\r\n                obj.next('div').find('.load').show();\r\n            }\r\n            if (isNoCover === 1) {\r\n                return;\r\n            }\r\n            var tmp = $(\"span.load\");\r\n            if (tmp.length > 0) {\r\n                $.showCover();\r\n            }\r\n        } else {\r\n            var loadingObj = $('#g-loading-container').length > 0 ? $('#g-loading-container') :\r\n                $('<div class=\"g-loading-container\" id=\"g-loading-container\" ><div class=\"g-loading-container-wrap\"><div class=\"g-loading-container-inner\"><div class=\"g-loading-waiting-icon\"></div></div></div></div>').appendTo('body');\r\n            loadingObj.show();\r\n            $.showCover();\r\n        }\r\n\r\n\r\n    },\r\n\r\n    hideLoading: function() {\r\n        $.hideCover();\r\n        $(\"span.load\").not('.wpsload').hide();\r\n    },\r\n\r\n    removeLoading: function() {\r\n        $(\"span.load\").closest('div').remove();\r\n        $('#g-loading-container').hide();\r\n        $.unlock();\r\n        $.hideCover();\r\n        if ($.isFunction($.act)) {\r\n\t\t\t// for this platform \r\n            //$.act(ACT_CGI, '/cgi/clearBusy');\r\n            //$.exe(function() {}, true);\r\n        }\r\n    },\r\n\r\n    timeout: function(hook, interval) {\r\n        var id = $.getAsync();\r\n        return setTimeout(function() {\r\n            if ($.checkAsync(id) && hook) hook();\r\n        }, interval);\r\n    },\r\n\r\n    auto_interval: 0,\r\n    auto: function(handle, interval, imediate, args, hook, id) {\r\n        $.auto_interval = interval;\r\n\r\n        if (id) {\r\n            if (!$.checkAsync(id)) return;\r\n        } else\r\n            id = $.getAsync();\r\n        if (imediate) {\r\n            if (handle(args) === false) {\r\n                if (hook) hook(args);\r\n                return;\r\n            }\r\n        }\r\n\r\n        return setTimeout(function() {\r\n            $.auto(handle, $.auto_interval, 1, args, hook, id);\r\n        }, $.auto_interval);\r\n    },\r\n\r\n    guage: function(strs, step, interval, hook, start, end, diag, note) {\r\n        var progressBarMaxLength = 450;\r\n        var note = note ? (\"<p class='progressbar-note'><span class='progressbar-note-title'>\" + m_str.note + \": </span>\" + note + \"</p>\") : '';\r\n        var str = \"<div class='con2'><p class='center'>\" + strs[1] + \"</p><div class='gbar-parent' style='width:\" + progressBarMaxLength + \"px;'><div class='gbar' id='_gbar'><b class='gitem' id='gitem'></b></div></div>\" + note + \"</div>\";\r\n\r\n        if (diag) {\r\n            $.loadCover(str, 1);\r\n        } else {\r\n            var alertContainer = $.progressBar(str);\r\n        }\r\n        var completed = false;\r\n        var count = 0;\r\n        var count_max = 5000 / interval;\r\n        var retTmp = false;\r\n\r\n        $.auto(function(args) {\r\n            if (!completed) {\r\n                if (args[2] >= (args[3] / 2)) {\r\n                    if (count++ > count_max) {\r\n                        count = 0;\r\n                        type = \"GET\";\r\n                        url = \"?_=\" + (+new Date());\r\n                        var xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n                        xhr.open(type, url, true);\r\n                        xhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n                        xhr.onreadystatechange = function() {\r\n                            if (xhr.readyState == 4 && xhr.status == 200) {\r\n                                completed = true;\r\n                            }\r\n                        };\r\n                        xhr.send(null);\r\n                    }\r\n                }\r\n            } else {\r\n                $.auto_interval = 5000 / step;\r\n            }\r\n            var percent = Math.floor(args[2] * 100 / args[3]);\r\n            $(args[1]).animate({\r\n                width: progressBarMaxLength / 100 * percent\r\n            }, $.auto_interval, function() {\r\n                $(args[0]).html(percent + \"%\");\r\n            });\r\n            if (args[2] >= args[3])\r\n                return false;\r\n            args[2]++;\r\n        }, interval, true, [$.id(\"gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], function(args) {\r\n            $('#_gbar').animate({\r\n                width: progressBarMaxLength\r\n            }, 1, hook);\r\n        });\r\n    },\r\n\r\n    guageWithRateControl: function(options) {\r\n        options = $.extend({}, options);\r\n        var percent = options.startRate || 0;\r\n        var text = options.text || '';\r\n        var note = options.note ? (\"<p class='progressbar-note'><span class='progressbar-note-title'>\" + m_str.note + \": </span>\" + options.note + \"</p>\") : '';\r\n        var updateImmediately = options.updateImmediately || true;\r\n        var updateInterval = options.updateInterval || 1000;\r\n        var rateControl = options.rateControl || function(percentOld, callback) {\r\n                callback(percentOld + 1);\r\n            };\r\n        var callback_complete = options.callback_complete;\r\n        var callback_error = options.callback_error;\r\n\r\n        var isComplete = options.isComplete || function(percentOld, callback_complete) {\r\n                if (percentOld >= 100) {\r\n                    if (callback_complete) {\r\n                        callback_complete();\r\n                    }\r\n                }\r\n            };\r\n\r\n        var updateIntervalHighSpeed = options.updateIntervalHighSpeed || 50;\r\n        var autoEndFlag = false;\r\n        var completeFlag = false;\r\n        var errorFlag = false;\r\n        var progressBarMaxLength = 450;\r\n        var closeProgressBar = function() {\r\n            var tmp = $(\"div.alert-container.progress-bar\");\r\n            tmp.hide();\r\n            $('body').off('mousedown.focus');\r\n            $('body').off('keydown.focus');\r\n            $.hideCover();\r\n        };\r\n\r\n        var str = \"<div class='con2'><p class='center'>\" + text + \"</p><div class='gbar-parent' style='width:\" + progressBarMaxLength + \"px;'><div class='gbar' id='_gbar'><b class='gitem' id='gitem'>\" + percent + \"%</b></div></div>\" + note + \"</div>\";\r\n        $.progressBar(str);\r\n\r\n        $.auto(function(args) {\r\n            if (autoEndFlag) {\r\n                return false;\r\n            }\r\n\r\n            var gbar = $('#_gbar');\r\n            var gitem = $('#gitem');\r\n\r\n            rateControl(percent, function(percentNew) {\r\n                if (percentNew > 100) {\r\n                    percentNew = 100;\r\n                }\r\n                percent = percentNew;\r\n                gbar.animate({\r\n                    width: progressBarMaxLength / 100 * percentNew\r\n                }, $.auto_interval, function() {\r\n                    gitem.html(percentNew + \"%\");\r\n                    if (percentNew >= 100 && completeFlag) {\r\n                        autoEndFlag = true\r\n                    }\r\n                });\r\n            });\r\n            isComplete(percent, function() {\r\n                completeFlag = true;\r\n                //                reset the rateControl method.\r\n                rateControl = function(percentOld, callback) {\r\n                    callback(percentOld + 1);\r\n                };\r\n                //                reset the the interval of $auto\r\n                $.auto_interval = updateIntervalHighSpeed;\r\n                //                reset isComplete. beacuse it has benn already completed, it don't need to judge again.\r\n                isComplete = function() {};\r\n            }, function(data) {\r\n                autoEndFlag = true;\r\n                errorFlag = true;\r\n                callback_error.call($, data);\r\n            });\r\n\r\n        }, updateInterval, updateImmediately, [], function() {\r\n            closeProgressBar();\r\n            if (!errorFlag) {\r\n                if (callback_complete) {\r\n                    callback_complete();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    goToOtherPage: function(page, navName, callback) {\r\n        var flag_channelChange = false;\r\n        var askInterval = 200;\r\n        if (!page || !navName) {\r\n            return;\r\n        }\r\n\r\n        if ($.curPage == page) {\r\n            if ($.isFunction(callback)) {\r\n                callback();\r\n            }\r\n            return;\r\n        }\r\n        var timer1 = setInterval(function() {\r\n            if ($('#top-nav').hasClass('disabled')) {\r\n                return;\r\n            }\r\n            var navSelected = $('#ul-nav li.selected');\r\n            if (navSelected.length == 0 || (!$('#quicksetup').text().match(/\\S/) && (!$('#menu').data('tpMenu') || $('#main').is(':empty')))) {\r\n                return;\r\n            } else {\r\n                clearInterval(timer1);\r\n                if (navSelected.attr('id') != navName) {\r\n                    $('#' + navName).click();\r\n                    flag_channelChange = true;\r\n                } else {\r\n                    flag_channelChange = false;\r\n                }\r\n\r\n                var timer2 = setInterval(function() {\r\n                    var li = $('#menuTree').find('a[url=\"' + page + '\"]:not(.more)').parent('li');\r\n                    if (li.length === 0) {\r\n                        return;\r\n                    }\r\n\r\n                    clearInterval(timer2);\r\n                    var parentScrollTop = 0;\r\n                    if (li.hasClass('ml2') && li.is(':hidden')) {\r\n                        var parentLi = li.parents('li.ml1');\r\n                        parentScrollTop = parentLi.offset().top;\r\n                        $('#menu').scrollTop(parentScrollTop);\r\n                        (parentLi.find('a'))[0].click();\r\n                    }\r\n                    (li.find('a'))[0].click();\r\n                    setTimeout(function() {\r\n                        //                        $('#menu').scrollTop(li.offset().top + parentScrollTop);\r\n                        $('#menu').scrollTop(li.position().top - $('#menu').children(':first').position().top);\r\n                        if ($.isFunction(callback)) {\r\n                            callback();\r\n                        }\r\n                    }, 200);\r\n                }, flag_channelChange ? askInterval : 10);\r\n            }\r\n        }, ($('#ul-nav li.selected').length > 0 ? 10 : askInterval));\r\n    },\r\n\r\n    turnqss: function(str) {\r\n        if ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n        else return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n    },\r\n\r\n    num: function() {\r\n        var l = arguments.length - 1;\r\n        var unalert = arguments[l];\r\n        if (unalert !== true) {\r\n            l++;\r\n            unalert = false;\r\n        }\r\n        var val = arguments[0];\r\n        if (typeof val === \"string\" && val.match(/\\D/))\r\n            return $.alert(ERR_NUM_INVAD, unalert);\r\n        var val = parseInt(val, 10);\r\n        if (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n        if (l == 1) return 0;\r\n        for (var i = 1; i < l; i++) {\r\n            if (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n                return 0;\r\n        }\r\n        return $.alert(ERR_NUM_OUTRANGE, unalert);\r\n    },\r\n\r\n    step: function(num, step) {\r\n        return Math.round(parseInt(num, 10) / step) * step;\r\n    },\r\n\r\n    asc: function(str, unalert) {\r\n        for (var i = 0, l = str.length; i < l; i++)\r\n            if (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n        return 0;\r\n    },\r\n\r\n    ip2num: function(ip) {\r\n        if (typeof ip === \"number\") return ip;\r\n        var ret, val;\r\n        if (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n        for (var i = 1, val = 0; i <= 4; i++) {\r\n            if (parseInt(ret[i], 10) > 255) return false;\r\n            val = (val << 8) + parseInt(ret[i], 10);\r\n        }\r\n        return val;\r\n    },\r\n\r\n    num2ip: function(num) {\r\n        if (typeof num !== \"number\") return false;\r\n        return \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n    },\r\n\r\n    ifip: function(ip, unalert) {\r\n        if ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n        if (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n        var net = ip >> 24;\r\n        if (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n        if (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n        if (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n        if (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n        return 0;\r\n    },\r\n\r\n    mask: function(mask, unalert) {\r\n        if ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n        for (var i = 32; i > 0; i--, mask = mask >> 1)\r\n            if (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n    },\r\n\r\n    ipmask: function(ip, mask, unalert) {\r\n        var temp;\r\n        ip = $.ip2num(ip);\r\n        mask = $.ip2num(mask);\r\n        if ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n        if ((ip & ~mask) == ~mask || (ip & ~mask) == 0) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n        return 0;\r\n    },\r\n\r\n    ipmaskgw: function(ip, mask, gw, unalert) {\r\n        ip = $.ip2num(ip);\r\n        mask = $.ip2num(mask);\r\n        gw = $.ip2num(gw);\r\n        if ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n        return 0;\r\n    },\r\n\r\n    mac: function(mac, unalert) {\r\n        if (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n        if (mac == \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n        if (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n        if (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n        return 0;\r\n    },\r\n\r\n    ip2ip: function(ip) {\r\n        var ipParts = ip.split(\".\");\r\n        for (var i = 0; i < 4; i++) {\r\n            ipParts[i] = parseInt(ipParts[i], 10);\r\n        }\r\n        var ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n        return ipStr;\r\n    },\r\n\r\n    isname: function(pName) {\r\n        return pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n    },\r\n\r\n    isdomain: function(domain) {\r\n        var c;\r\n        var gotDot = false;\r\n        var ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        if ((domain.charAt(0) == \".\") || (domain.charAt(0) == \"-\") || ((domain.charAt(domain.length - 1) == \".\")) || ((domain.charAt(domain.length - 1) == \"-\")))\r\n            return false;\r\n        for (var i = 0; i < domain.length; i++) {\r\n            c = domain.charAt(i);\r\n            if (ch.indexOf(c) == -1)\r\n                return false;\r\n            if ((c == \"-\") && (gotDot == true))\r\n                return false;\r\n            if ((c == \".\") && (gotDot == true))\r\n                return false;\r\n            if ((c == \".\") && (gotDot == false))\r\n                gotDot = true;\r\n            if ((c == \"-\") && (gotDot == false))\r\n                gotDot = true;\r\n            if ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n                gotDot = false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    isnum: function(num_string) {\r\n        var c;\r\n        var ch = \"0123456789\";\r\n        for (var i = 0; i < num_string.length; i++) {\r\n            c = num_string.charAt(i);\r\n            if (ch.indexOf(c) == -1)\r\n                return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    isSameLan: function(lan1Ip, lan1Mask, lan2Ip, lan2Mask) {\r\n        var count = 0;\r\n        lan1a = lan1Ip.split('.');\r\n        lan1m = lan1Mask.split('.');\r\n        lan2a = lan2Ip.split('.');\r\n        lan2m = lan2Mask.split('.');\r\n        for (i = 0; i < 4; i++) {\r\n            l1a_n = parseInt(lan1a[i]);\r\n            l1m_n = parseInt(lan1m[i]);\r\n            l2a_n = parseInt(lan2a[i]);\r\n            l2m_n = parseInt(lan2m[i]);\r\n            if ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n                count++;\r\n        }\r\n        if (count == 4) {\r\n            var testIp = $.ip2num(lan1Ip);\r\n            var lanMask = $.ip2num(lan1Mask);\r\n            if (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n                return false;\r\n            else\r\n                return true;\r\n        } else\r\n            return false;\r\n    },\r\n\r\n    charCompareA: function(szname, en_limit, cn_limit) {\r\n        var c;\r\n        var ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n        if (szname.length > en_limit) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < szname.length; i++) {\r\n            c = szname.charAt(i);\r\n            if (ch.indexOf(c) == -1) {\r\n                if (szname.length > cn_limit) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    getrightfirstonebitpos: function(num) {\r\n        var i;\r\n        var pos = 0;\r\n        var numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n        for (i = 0; i < 8; i++) {\r\n            if (((num & numArr[i]) >> i) == 0)\r\n                pos++;\r\n        }\r\n        return pos;\r\n    },\r\n\r\n    getmaskbit: function(mask) {\r\n        var i, j;\r\n        var pos = 0;\r\n        var numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n        var maskPart = mask.split(\".\");\r\n        for (i = 3; i >= 0; i--) {\r\n            for (j = 0; j < 8; j++) {\r\n                if (((maskPart[i] & numArr[j]) >> j) == 0)\r\n                    pos++;\r\n            }\r\n        }\r\n        return pos;\r\n    },\r\n\r\n    isOrderIp: function(ip1, ip2) {\r\n        var ipS = ip1.split(\".\");\r\n        var ipE = ip2.split(\".\");\r\n        for (var i = 0; i < 4; i++) {\r\n            if (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n                return true;\r\n            else if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n                return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    reverseStr: function(str) {\r\n        var newStr = \"\";\r\n        for (var i = 0; i < str.length; i++) {\r\n            newStr += str.substring(str.length - 1 - i, str.length - i);\r\n        }\r\n        return newStr;\r\n    },\r\n\r\n    formatNum: function(num) {\r\n        var numNew = $.reverseStr(num.toString());\r\n        if (numNew.length > 3) {\r\n            numNew = numNew.replace(/(\\d\\d\\d)/g, function($0, $1) {\r\n                return $1 + \",\"\r\n            });\r\n        }\r\n        numNew = (numNew.charAt(numNew.length - 1) == ',') ? numNew.substring(0, numNew.length - 1) : numNew;\r\n        return $.reverseStr(numNew);\r\n    },\r\n\r\n    getWl24gMask: function(modeValue, chwidthValue) {\r\n        var mask = 0x0;\r\n        if ((modeValue == \"n-only\") || (modeValue == \"n\") || modeValue == \"gn\") //11n-only,11bgn,11gn\r\n        {\r\n            if (chwidthValue == \"20M\") //HT20\r\n                mask = (1 << IEEE80211_MODE_11NG_HT20);\r\n            else if (chwidthValue == \"40M\") //HT40\r\n                mask = (1 << IEEE80211_MODE_11NG_HT40);\r\n            else if (chwidthValue == \"Auto\") //Auto\r\n                mask = (1 << IEEE80211_MODE_11NG_HT40) | (1 << IEEE80211_MODE_11NG_HT20);\r\n        } else\r\n            $.alert(ERR_WLAN_MODE_INVALID);\r\n\r\n        return mask;\r\n    },\r\n\r\n    getWl5gMask: function(modeValue, chwidthValue) {\r\n        var mask = 0x0;\r\n        if ((modeValue == \"n-only\") || (modeValue == \"an\") || (modeValue == \"ac\") || (modeValue == \"ac-only\") || (modeValue == \"nac\")) //11na, 11n-only,11ac,11ac-only,11ac/n\r\n        {\r\n            if (chwidthValue == \"20M\") //HT20\r\n                mask = (1 << IEEE80211_MODE_11NA_HT20);\r\n            else if (chwidthValue == \"40M\" || chwidthValue == \"80M\") //HT40\r\n                mask = (1 << IEEE80211_MODE_11NA_HT40);\r\n            else if (chwidthValue == \"Auto\") //Auto\r\n                mask = (1 << IEEE80211_MODE_11NA_HT40); //|(1<<IEEE80211_MODE_11NA_HT20)\r\n        } else if (modeValue == \"a\") //11a\r\n            mask = (1 << IEEE80211_MODE_11A);\r\n        else\r\n            $.alert(ERR_WLAN_MODE_INVALID);\r\n\r\n        return mask;\r\n    },\r\n\r\n    is5GSupportRegion: function(standardArg, bandwidthArg, indexArg) {\r\n        var flag = false;\r\n        var enDFS = 0;\r\n        var regionIndex = indexArg * region_chan_table_shift;\r\n        var dfsMask = (1 << IEEE80211_CHAN_REQUIRED_DFS);\r\n        var mask = $.getWl5gMask(standardArg, bandwidthArg);\r\n\r\n        for (i = 1; i <= TOTAL_CHANNEL; i++) {\r\n            if (Region_chan_table[regionIndex + i] & mask) {\r\n                if (((Region_chan_table[regionIndex + i] & dfsMask) == 0) || ((Region_chan_table[regionIndex + i] & dfsMask) && (enDFS == 1))) {\r\n                    flag = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    },\r\n\r\n    chgElem: function(elem, val) {\r\n        if (elem && elem.nodeName) {\r\n            switch (elem.nodeName.toLowerCase()) {\r\n                case \"input\":\r\n                    elem.value = val;\r\n                    break;\r\n                case \"option\":\r\n                    elem.text = val;\r\n                    break;\r\n                default:\r\n                    if ($.hasElemClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n                    $(elem).html(val);\r\n                    break;\r\n            }\r\n            //for localization\r\n            //$.removeElemClass(elem, \"T\");\r\n        }\r\n    },\r\n\r\n    upStyle: function() {\r\n        $(\"h3\").each(function() {\r\n            if ($(this).parent('div').hasClass('header-container')) {\r\n                return;\r\n            } else {\r\n                var str = \"<div class='header-container'><h3><span class='T \" + $(this).attr('class') + \"'>\" + $(this).html() + \"</span></h3></div>\";\r\n                $(this).replaceWith(str);\r\n            }\r\n        });\r\n\r\n        if (WEB_INCLUDE_HELP) {\r\n            $.addHelp();\r\n        }\r\n\r\n        $(\"div.mode-change\").tpModeSelect();\r\n\r\n        $(\"input[type='text']\").each(function() {\r\n            var divTmp = $(this).parent('div');\r\n            var bTmp = $(divTmp).find('b');\r\n            $(this).addClass('tp-input-text');\r\n            if (($.isIE) && $(this).is(':not(.mac-address):not(.ip-address)') && $(this).css('borderWidth').search('1px') == 0) {\r\n                $(this).wrap('<div class=\"input-wrapper\">').after('<span class=\"corner-left\"></span><span class=\"corner-right\"></span>');\r\n                var wrap = $(this).parent('.input-wrapper');\r\n                $(this).off('.inputIE').on('focus.inputIE', function() {\r\n                    wrap.addClass('focus');\r\n                }).on('blur.inputIE', function() {\r\n                    wrap.removeClass('focus')\r\n                });\r\n            }\r\n            if ($(bTmp).attr('class') == undefined) {\r\n                if ($(bTmp).attr('id') == undefined) {\r\n                    $(bTmp).replaceWith(\"<label class='label-title'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            } else {\r\n                if ($(bTmp).attr('id') == undefined) {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            }\r\n\r\n            $(divTmp).addClass('pure-control-group');\r\n            $(this).keydown(function(e) {\r\n                if (e.keyCode == 0xD) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        });\r\n\r\n        $(\"input[type='password']\").each(function() {\r\n            var divTmp = $(this).closest('div:not(.tpPassword)');\r\n            var bTmp = $(divTmp).find('b');\r\n            $(this).addClass('tp-input-text');\r\n            if (($.isIE) && $(this).css('borderWidth').search('1px') == 0) {\r\n                $(this).wrap('<div class=\"input-wrapper\">').after('<span class=\"corner-left\"></span><span class=\"corner-right\"></span>');\r\n                var wrap = $(this).parent('.input-wrapper');\r\n                $(this).off('.inputIE').on('focus.inputIE', function() {\r\n                    wrap.addClass('focus');\r\n                }).on('blur.inputIE', function() {\r\n                    wrap.removeClass('focus')\r\n                });\r\n            }\r\n            if ($(bTmp).attr('class') == undefined) {\r\n                if ($(bTmp).attr('id') == undefined) { /* added by hx, 2015.05.28, to get \"id\" of tag <b> */\r\n                    $(bTmp).replaceWith(\"<label class='label-title'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            } else {\r\n                if ($(bTmp).attr('id') == undefined) {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            }\r\n\r\n            $(divTmp).addClass('pure-control-group');\r\n            $(this).keydown(function(e) {\r\n                if (e.keyCode == 0xD) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        });\r\n\r\n        $(\"div.steps\").each(function() {\r\n            $(this).children(\"h5\").addClass(\"title\");\r\n            $(this).find(\"span[id*='step']\").addClass(\"step\");\r\n        });\r\n\r\n        $(\"button[type='submit']\").not(\".button-group-button\").each(function() {\r\n            var tag;\r\n            if ($(this).hasClass(\"tp-btn-custom\")) {\r\n                return;\r\n            }\r\n            $(this).addClass(\"pure-button tp-btn-custom\");\r\n            nameTmp = $(this).html();\r\n            if ((tag = this.className.match(/\\b(T_|t_)(\\w+)\\b/) != null)) {\r\n                tag = tag[0];\r\n            }\r\n            $(this).html('<span class=\"' + tag + '\">' + nameTmp + '</span>');\r\n            var str = \"<div class='button-container'></div>\";\r\n            $(this).wrap(str);\r\n\r\n            if ($(this).hasClass('inline')) {\r\n                $(this).parent().addClass('inline');\r\n            }\r\n            if ($(this).hasClass('left')) {\r\n                $(this).parent().addClass('left');\r\n                $(this).removeClass('left'); // in chrome we should remove 'left', or the text will align left.\r\n            }\r\n            str = \"<form class='pure-form'></form>\";\r\n            $(this).wrap(str);\r\n        });\r\n        $(\"button[type='submit']\").click(function(e) {\r\n            e.preventDefault();\r\n        });\r\n    },\r\n\r\n    addHelp: function() {\r\n        var curPageName = $.curPage.replace(/\\.htm$/, '');\r\n        if ( !! $.helpContent[curPageName] || !! $.helpContent[curPageName + $.sysMode]) {\r\n            var helpstr = '<div class=\"help-container\">' +\r\n                '<div class=\"help-btn-container\">' +\r\n                '<a class=\"btn-help\" href=\"javascript:void(0)\"></a>' +\r\n                '</div>' +\r\n                '<div class=\"help-content-container\">' +\r\n                '<div class=\"position-top-left\"></div>' +\r\n                '<div class=\"position-top-center\"></div>' +\r\n                '<div class=\"position-top-right\"></div>' +\r\n                '<div class=\"position-center-left\">' +\r\n                '<div class=\"position-center-right\">' +\r\n                '<span class=\"help-content-delta\"></span>' +\r\n                '<div class=\"help-content-container-wrap\">' +\r\n                '<div class=\"help-content\"></div>' +\r\n                '</div>' +\r\n                '</div>' +\r\n                '</div>' +\r\n                '<div class=\"position-bottom-left\"></div>' +\r\n                '<div class=\"position-bottom-center\"></div>' +\r\n                '<div class=\"position-bottom-right\"></div>' +\r\n                '</div>' +\r\n                '</div>';\r\n            $('div.help-container').remove();\r\n            $(\"#verticalFixed-con\").append(helpstr);\r\n\r\n            $.loadHelp($.curPage.replace(/\\.htm$/, ''));\r\n            var $helpContainer = $('div.help-container');\r\n            var $helpContent = $('.help-content-container');\r\n            $('div.help-btn-container').on('click', function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if ($helpContainer.hasClass('clicked')) {\r\n                    $helpContainer.removeClass('clicked');\r\n                    $helpContent.slideUp('fast');\r\n                    $(document).off('click.closeHelp');\r\n                } else {\r\n                    $helpContainer.addClass('clicked');\r\n                    $helpContent.slideDown('fast');\r\n                    $(document).off('click.closeHelp').on('click.closeHelp', function() {\r\n                        if ($helpContainer.hasClass('clicked')) {\r\n                            $helpContainer.removeClass('clicked');\r\n                            $helpContent.slideUp('fast');\r\n                            $(document).off('click.closeHelp');\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            $('div.help-btn-container').on('mouseenter.helpBtn', function(e) {\r\n                $(this).find('a.btn-help').addClass('hover');\r\n            });\r\n            $('div.help-btn-container').on('mouseleave.helpBtn', function(e) {\r\n                $(this).find('a.btn-help').removeClass('hover');\r\n            });\r\n            $helpContent.on('click', function(e) {\r\n                e.stopPropagation();\r\n            });\r\n\r\n            var resizeHelp = function() {\r\n                var wrap = $(\"div.help-content-container-wrap\");\r\n                var wh = $(window).height();\r\n                //56是底部栏的高度\r\n                wrap.css(\"max-height\", wh - 290 - 56);\r\n\r\n\r\n                if (($('#scroll').width() - $('#con').width()) / 2 >= $('.help-content-container').width()) {\r\n                    $helpContent.addClass('right');\r\n                } else {\r\n                    $helpContent.removeClass('right');\r\n                }\r\n            };\r\n            resizeHelp();\r\n\r\n            $(window).off('resize.helpBtn').on('resize.helpBtn', function() {\r\n                resizeHelp();\r\n            });\r\n        } else {\r\n            $('div.help-container').hide();\r\n        }\r\n\r\n        $(\"tr.editor-container\").children(\"td\").find(\"div.help-container\").remove();\r\n    },\r\n\r\n    loadHelp: function(name) {\r\n        name = name || $.curPage.replace(/\\.htm$/, '');\r\n        var help = this;\r\n        var index = 1;\r\n        var sectionFlag = false;   //use to mark a section is start or end\r\n\r\n        var render = function(contentObj) {\r\n            var htmlStr = \"\";\r\n            if (contentObj.TITLE) {\r\n                sectionFlag = true;\r\n                htmlStr += \"<div class=\\\"section-container\\\">\";\r\n                htmlStr += \"<h4 class=\\\"title\\\">\" + contentObj.TITLE + \"</h4>\";\r\n            }\r\n            var objContent = contentObj.CONTENT;\r\n            if (name == 'wanBasic') {\r\n                if ($.sysMode.toUpperCase() == 'ETH') {\r\n                    objContent = contentObj.CONTENT_ETH;\r\n                } else if ($.sysMode.toUpperCase() == 'DSL') {\r\n                    objContent = contentObj.CONTENT_DSL;\r\n                }\r\n            }\r\n\r\n            if (objContent) {\r\n                $(objContent).each(function(index, element) {\r\n                    htmlStr += contentRender(element);\r\n                })\r\n            }\r\n            if (sectionFlag == true) {\r\n                //section end\r\n                sectionFlag = false;\r\n                htmlStr += \"</div>\";\r\n            }\r\n            return htmlStr;\r\n        };\r\n\r\n        var contentRender = function(obj) {\r\n            if (obj.hasOwnProperty('display') && obj.display !== 1) {\r\n                if ((typeof obj.display == 'string' && eval(obj.display) != true) || (typeof obj.display == 'undefined') ||\r\n                    (obj.display == 0)) return '';\r\n            }\r\n            var htmlStr = \"\";\r\n            var type = obj.type;\r\n            var connector = obj.connector || \" - \";\r\n            switch (type) {\r\n                case \"title\":\r\n                    if (sectionFlag == true) {\r\n                        //section end\r\n                        htmlStr += \"</div>\";\r\n                    }\r\n                    //section start\r\n                    sectionFlag = true;\r\n                    htmlStr += \"<div class=\\\"section-container\\\">\";\r\n\r\n                    htmlStr += \"<div class=\\\"title-container\\\">\";\r\n                    if ( !! obj.title) {\r\n                        htmlStr += \"<h5 class=\\\"title title-title\\\">\" + obj.title + \"</h5>\";\r\n                        if ( !! obj.content) {\r\n                            htmlStr += \"<p>\" + obj.content + \"</p>\";\r\n                        }\r\n                    } else {\r\n                        htmlStr += \"<h5 class=\\\"title title-title\\\">\" + obj.content + \"</h5>\";\r\n                    }\r\n                    break;\r\n                case \"title2\":\r\n                    htmlStr += \"<div class=\\\"title-container\\\">\";\r\n                    htmlStr += \"<h5 class=\\\"title title-title2\\\">\" + obj.content + \"</h5>\";\r\n                    break;\r\n                case \"name\":\r\n                    if (index >= 2) {\r\n                        var level = index;\r\n                        htmlStr += \"<div class=\\\"name-container\" + level + \"\\\">\";\r\n                        htmlStr += \"<h5 class=\\\"title name-title\" + level + \"\\\">\" + obj.title + \"</h5>\";\r\n                        htmlStr += \"<span class=\\\"connector\\\">\" + connector + \"</span>\";\r\n                        htmlStr += \"<span>\" + (obj.content ? obj.content : '') + \"</span>\";\r\n\r\n                    } else {\r\n                        htmlStr += \"<div class=\\\"name-container\\\">\";\r\n                        htmlStr += \"<h5 class=\\\"title name-title\\\"><span class=\\\"name-text\\\">\" + obj.title + \"</span><span class=\\\"help-arrow\\\">arrow</span></h5>\";\r\n                        htmlStr += \"<div class=\\\"nd\\\"><p>\" + (obj.content ? obj.content : '') + \"</p>\";\r\n                    }\r\n\r\n                    break;\r\n                case \"paragraph\":\r\n                    htmlStr += \"<div class=\\\"paragraph-container\\\">\";\r\n\r\n                    if (obj.title) {\r\n                        htmlStr += \"<h5 class=\\\"title paragraph-title\\\">\" + obj.title + \"</h5>\";\r\n                    }\r\n\r\n                    htmlStr += \"<p class=\\\"paragraph\\\">\" + obj.content + \"</p>\";\r\n                    break;\r\n                case \"step\":\r\n                case \"note\":\r\n                    htmlStr += \"<div class=\\\"note-container\\\">\";\r\n                    htmlStr += \"<h5 class=\\\"title note-title\\\">\" + obj.title + \"</h5>\";\r\n                    htmlStr += \"<ol class=\\\"note\\\">\";\r\n                    $(obj.content).each(function(index, note) {\r\n                        if (note === undefined) {\r\n                            return;\r\n                        }\r\n                        if (typeof note === 'string') {\r\n                            htmlStr += \"<li>\" + note + \"</li>\";\r\n                        } else {\r\n                            htmlStr += \"<li>\" + contentRender(note) + \"</li>\";\r\n                        }\r\n                    });\r\n                    htmlStr += \"</ol>\";\r\n                    break;\r\n\r\n            }\r\n\r\n            if (obj.children) {\r\n                index++;\r\n                htmlStr += \"<div class=\\\"container sub-container  sub-container-\" + index + \"\\\">\";\r\n                $(obj.children).each(function(index, child) {\r\n                    htmlStr += contentRender(child);\r\n                });\r\n                htmlStr += \"</div>\";\r\n                index--;\r\n            }\r\n            if (obj.type == 'name' && index == 1) {\r\n                htmlStr += \"</div>\";\r\n            }\r\n            htmlStr += \"</div>\";\r\n            return htmlStr;\r\n        };\r\n\r\n        var contentObj;\r\n        if ( !! $.helpContent[name]) {\r\n            contentObj = $.helpContent[name];\r\n        } else {\r\n            name += $.sysMode.toUpperCase();\r\n            contentObj = $.helpContent[name];\r\n        }\r\n        var htmlStr = \"\";\r\n        htmlStr = render(contentObj);\r\n        var content = $(\"div.help-content\");\r\n        content.html($(htmlStr));\r\n\r\n        $('div.name-container h5.name-title').each(function() {\r\n            var self = $(this);\r\n            $(this).parent().on('click.help', function() {\r\n                var tempDiv = self.next('div');\r\n                var tempSpan = self.find('span');\r\n                if (tempDiv.hasClass('nd')) {\r\n                    self.addClass('h5-opened');\r\n                    tempDiv.slideDown('fast', function() {\r\n                        tempDiv.removeClass('nd');\r\n\r\n                    });\r\n                } else {\r\n                    self.removeClass('h5-opened');\r\n                    tempDiv.slideUp('fast', function() {\r\n                        tempDiv.addClass('nd');\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //            wrap.scrollTop(0);\r\n    },\r\n\r\n    /**\r\n     * use to show/hide a section or some items of help\r\n     * @param display {boolean} true for show, false for hide\r\n     * @param sectionIndex {number} start from 0\r\n     * @param itemIndex {number or array} index in a section, start from 0.\r\n     */\r\n    displayHelp: function(display, sectionIndex, itemIndex) {\r\n        if (typeof sectionIndex !== 'number') {\r\n            return;\r\n        }\r\n        //addHelp is executed after init. put this in setTimeout to ensure it is executed after addHelp.\r\n        setTimeout(function() {\r\n            var content = $(\"div.help-content\");\r\n            var section = content.find('.section-container:eq('+ sectionIndex + ')');\r\n            if (itemIndex) {\r\n                if (!$.isArray(itemIndex)) {\r\n                    itemIndex = [itemIndex];\r\n                }\r\n\r\n                for (var i = 0, len = itemIndex.length; i < len; i++) {\r\n                    if (typeof  itemIndex[i] !== 'number') {\r\n                        continue;\r\n                    }\r\n                    //nth-child is start from 1\r\n                    var item = section.find(':nth-child(' +  (itemIndex[i] + 1) + ')');\r\n                    if (display === true) {\r\n                        item.show();\r\n                    } else {\r\n                        item.hide();\r\n                    }\r\n                }\r\n            } else {\r\n                //no itemIndex, display the whole section\r\n                if (display === true) {\r\n                    section.show();\r\n                } else {\r\n                    section.hide();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n    },\r\n\r\n    pwdIntensityCheck: function(div, val) {\r\n        div.slideDown();\r\n        div.find(\"span[class^=level]\").addClass(\"ori\").removeClass(\"green yellow red\");\r\n        if (!val) {\r\n            return;\r\n        }\r\n        var upperRe = /[A-Z]/;\r\n        var lowerRe = /[a-z]/;\r\n        var digitRe = /\\d/;\r\n        var otherRe = /(.[^a-zA-Z0-9])/;\r\n\r\n        var hasUpper = 0;\r\n        var hasLower = 0;\r\n        var hasDigit = 0;\r\n        var hasOther = 0;\r\n        var largeLength = 0;\r\n\r\n        var level = 0;\r\n\r\n        if (upperRe.test(val)) {\r\n            hasUpper = 1;\r\n        } else {\r\n            hasUpper = 0;\r\n        }\r\n\r\n        if (lowerRe.test(val)) {\r\n            hasLower = 1;\r\n        } else {\r\n            hasLower = 0;\r\n        }\r\n\r\n        if (digitRe.test(val)) {\r\n            hasDigit = 1;\r\n        } else {\r\n            hasDigit = 0;\r\n        }\r\n\r\n        if (otherRe.test(val)) {\r\n            hasOther = 1;\r\n        } else {\r\n            hasOther = 0;\r\n        }\r\n\r\n        if (val.length > 10) {\r\n            largeLength = 1;\r\n        } else {\r\n            largeLength = 0;\r\n        }\r\n\r\n        level = hasUpper + hasLower + hasDigit + largeLength + hasOther;\r\n\r\n        if (val.length <= 5) {\r\n            if (level <= 2) {\r\n                div.find(\"span.level1\").addClass(\"red\");\r\n            } else if (level == 3 || level == 4) {\r\n                div.find(\"span.level2\").addClass(\"yellow\");\r\n            }\r\n        } else {\r\n            if (level <= 1) {\r\n                div.find(\"span.level1\").addClass(\"red\");\r\n            } else if (level == 2 || level == 3) {\r\n                div.find(\"span.level2\").addClass(\"yellow\");\r\n            } else if (level >= 4) {\r\n                div.find(\"span.level3\").addClass(\"green\");\r\n            }\r\n        }\r\n    },\r\n\r\n    isValidGLUIP6Addr: function(ip6Addr) {\r\n        var flag;\r\n        var regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n        if (regExp.test(ip6Addr)) {\r\n            flag = true;\r\n        } else {\r\n            flag = false;\r\n        }\r\n\r\n        regExp = /::/;\r\n        if (flag) {\r\n            if (regExp.test(ip6Addr)) {\r\n                regExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                } else {\r\n                    var index = ip6Addr.indexOf(\"::\");\r\n                    var len = ip6Addr.length;\r\n                    var substr1 = ip6Addr.substr(0, index);\r\n                    var substr2 = ip6Addr.substr(index + 2, len - index - 2);\r\n                    regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                    var num = 0;\r\n\r\n                    if (\"\" == substr1 && \"\" == substr2) {\r\n                        return true;\r\n                    } else if (\"\" == substr2) {\r\n                        if (!regExp.test(substr1)) {\r\n                            flag = false;\r\n                        }\r\n                    } else if (\"\" == substr1) {\r\n\r\n                        if (!regExp.test(substr2)) {\r\n                            flag = false;\r\n                        }\r\n                    } else if (!regExp.test(substr1) || !regExp.test(substr2)) {\r\n                        flag = false;\r\n                    } else if (regExp.test(substr1) && regExp.test(substr2)) {\r\n                        for (var i = 0; i < substr1.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        for (var i = 0; i < substr2.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        if (num > 5) {\r\n                            flag = false;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                if (!regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (flag) {\r\n            var index;\r\n            index = ip6Addr.indexOf(\":\");\r\n            var substr = ip6Addr.substr(0, index);\r\n            if (0 == index || parseInt(substr, 16) == 0) {\r\n                regExp = /^((0{0,4})|::|:)*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n\r\n                regExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            } else if (parseInt(substr, 16) >= 65280) {\r\n                flag = false;\r\n            } else if (parseInt(substr, 16) >= 65152 && parseInt(substr, 16) <= 65215) {\r\n                flag = true;\r\n            } else {\r\n                if (parseInt(substr, 16) >= 8192 && parseInt(substr, 16) <= 16383) {\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return flag;\r\n    },\r\n    isValidGLUIP6AddrStrict: function(ip6Addr) {\r\n        var flag;\r\n        var regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n        if (regExp.test(ip6Addr)) {\r\n            flag = true;\r\n        } else {\r\n            flag = false;\r\n        }\r\n\r\n        regExp = /::/;\r\n        if (flag) {\r\n            if (regExp.test(ip6Addr)) {\r\n                regExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                } else {\r\n                    var index = ip6Addr.indexOf(\"::\");\r\n                    var len = ip6Addr.length;\r\n                    var substr1 = ip6Addr.substr(0, index);\r\n                    var substr2 = ip6Addr.substr(index + 2, len - index - 2);\r\n                    regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                    var num = 0;\r\n\r\n                    if (\"\" == substr1 && \"\" == substr2) {\r\n                        flag = false;\r\n                    } else if (\"\" == substr2) {\r\n                        flag = false;\r\n                    } else if (\"\" == substr1) {\r\n                        if (!regExp.test(substr2)) {\r\n                            flag = false;\r\n                        }\r\n                    } else if (!regExp.test(substr1) || !regExp.test(substr2)) {\r\n                        flag = false;\r\n                    } else if (regExp.test(substr1) && regExp.test(substr2)) {\r\n                        for (var i = 0; i < substr1.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        for (var i = 0; i < substr2.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        if (num > 5) {\r\n                            flag = false;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                if (!regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (flag) {\r\n            var index;\r\n            index = ip6Addr.indexOf(\":\");\r\n            var substr = ip6Addr.substr(0, index);\r\n            if (0 == index || parseInt(substr, 16) == 0) {\r\n                regExp = /^((0{0,4})|::|:)*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n\r\n                regExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            } else if (parseInt(substr, 16) >= 65280) {\r\n                flag = false;\r\n            } else if (parseInt(substr, 16) >= 65152 && parseInt(substr, 16) <= 65215) {\r\n                flag = true;\r\n            } else {\r\n                if (parseInt(substr, 16) >= 8192 && parseInt(substr, 16) <= 16383) {\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return flag;\r\n    },\r\n\r\n    isTimeVaild: function(time) {\r\n        regExp = /^[0-9]{2}:[0-9]{2}$/;\r\n        if (!regExp.test(time)) {\r\n            return false;\r\n        }\r\n        var timePart = time.split(\":\");\r\n        if (timePart[0] > 23 || timePart[1] > 59) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    getDefaultHostname: function() {\r\n        var c;\r\n        var ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n        var i = 0;\r\n        var hostname = \"\";\r\n        var hostnameLen = 0;\r\n\r\n        for (i = 0; i < $.model.length; i++) {\r\n            c = $.model.charAt(i);\r\n            if (ch.indexOf(c) == -1) {\r\n                if (hostnameLen == 0 || (hostnameLen > 0 && hostname.charAt(hostnameLen - 1) == \"_\"))\r\n                    continue;\r\n                else {\r\n                    hostname += \"_\";\r\n                    hostnameLen++;\r\n                }\r\n            } else {\r\n                hostname += c;\r\n                hostnameLen++;\r\n            }\r\n        }\r\n\r\n        return ((hostnameLen > 0 && hostname.charAt(hostnameLen - 1) == \"_\") ? hostname.substr(0, hostnameLen - 1) : hostname);\r\n    },\r\n\r\n    trans: function(obj) {\r\n        var elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\", \"label\", \"h3\", \"h5\", \"button\", \"a\"];\r\n        var strs = $.curPage ? n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]] : [];\r\n        for (var i in strs) {\r\n            if (obj.prop('id') == i) {\r\n                $.chgElem(obj.get(0), strs[i]);\r\n            } else {\r\n                $.chgElem(obj.find('#' + i).get(0), strs[i]);\r\n            }\r\n        }\r\n\r\n        $.each(elems, function() {\r\n            if (obj.is('' + this)) {\r\n                var tag;\r\n                tag = obj.prop('class').match(/\\bT_(\\w+)\\b/);\r\n                if (tag && tag[1]) {\r\n                    if (s_str[tag[1]] !== undefined) {\r\n                        $.chgElem(obj.get(0), s_str[tag[1]]);\r\n                    } else if (m_str[tag[1]] !== undefined) {\r\n                        $.chgElem(obj.get(0), m_str[tag[1]]);\r\n                    } else if (strs[tag[1]] !== undefined) {\r\n                        $.chgElem(obj.get(0), strs[tag[1]]);\r\n                    }\r\n                }\r\n            }\r\n            $.each(obj.find('' + this), function() {\r\n                var tag;\r\n                tag = $(this).prop('class').match(/\\bT_(\\w+)\\b/);\r\n                if (tag && tag[1]) {\r\n                    if (s_str[tag[1]] !== undefined) {\r\n                        $.chgElem($(this).get(0), s_str[tag[1]]);\r\n                    } else if (m_str[tag[1]] !== undefined) {\r\n                        $.chgElem($(this).get(0), m_str[tag[1]]);\r\n                    } else if (strs[tag[1]] !== undefined) {\r\n                        $.chgElem($(this).get(0), strs[tag[1]]);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    randomId: function(type) {\r\n        return type + \"-\" + parseInt(Math.random() * 1000 * 1000 * 1000 * 10, 10).toString();\r\n    },\r\n\r\n    setCentralPosition: function(me) {\r\n        var me = me || this;\r\n\r\n        var posX = parseInt(($(window).width() - me.width()) / 2, 10);\r\n        var posY = parseInt(($(window).height() - me.height()) / 2, 10);\r\n\r\n        me.css({\r\n            left: posX,\r\n            top: posY\r\n        });\r\n\r\n        return {\r\n            x: posX,\r\n            y: posY\r\n        }\r\n    },\r\n\r\n    setFixedCentral: function(me) {\r\n        var me = me || this;\r\n\r\n        var posX = parseInt(($(window).width() - me.width()) / 2, 10);\r\n        var posY = parseInt(($(window).height() - me.height()) / 2, 10);\r\n\r\n        me.css({\r\n            left: posX,\r\n            top: posY,\r\n            bottom: \"auto\",\r\n            right: \"auto\",\r\n            position: \"fixed\"\r\n        });\r\n\r\n        var changeSize = function() {\r\n            posX = parseInt(($(window).width() - me.width()) / 2, 10);\r\n            posY = parseInt(($(window).height() - me.height()) / 2, 10);\r\n\r\n            me.css({\r\n                left: posX,\r\n                top: posY\r\n            });\r\n        };\r\n\r\n        $(window).off(\"resize.setfixed\");\r\n        $(\"body#mainBody\").off(\"resize.setfixed\");\r\n        $(window).on(\"resize.setfixed\", changeSize);\r\n        $(\"body#mainBody\").on(\"resize.setfixed\", changeSize);\r\n    },\r\n\r\n    showCover: function() {\r\n        if ($.isMobileFlag) return;\r\n        var mask = $('div.mask#mask');\r\n        !!mask.length || (mask = $('<div id=\"mask\" class=\"mask\"><div id=\"cover-loading\"></div></div>').appendTo($('body#mainBody')));\r\n        mask.show();\r\n    },\r\n\r\n    hideCover: function() {\r\n        if ($.isMobileFlag) return;\r\n        var mask = $('div.mask#mask');\r\n        !!mask.length && mask.hide();\r\n    },\r\n\r\n    showWaiting: function() {\r\n        var detBox = $(\"#cover-loading\"),\r\n            width = 0,\r\n            height = 0,\r\n            con = $(\"#mask\"),\r\n            docWidth = document.documentElement.clientWidth,\r\n            docHeight = document.documentElement.clientHeight;\r\n\r\n        detBox.css(\"display\", \"block\");\r\n        var width = detBox.get(0).offsetWidth;\r\n        var height = detBox.get(0).offsetHeight;\r\n        var marginX = docWidth > width ? -(width / 2) : 0;\r\n        var marginY = docHeight > height ? -(height / 2) : 0;\r\n        var left = marginX == 0 ? 0 : '50%';\r\n        var top = marginY == 0 ? 0 : '50%';\r\n        detBox.css({\r\n            left: left,\r\n            top: top\r\n        });\r\n    },\r\n\r\n\tinitTpLteSmsTips: function() {\r\n\t    var tmp = $(\"div.lteSmsTips-container\").length == 0 ? $(\"<div id=\\\"lteSmsTips-container\\\" class=\\\"lteSmsTips-container\\\"></div>\").appendTo($(\"body\")) : $(\"div.lteSmsTips-container\");\r\n\t    tmp.tpLteSmsTips();\r\n\t},\r\n    /**\r\n     * The base implementation of `_.indexOf` without support for binary searches\r\n     * or `fromIndex` constraints.\r\n     *\r\n     * @private\r\n     * @param {Array} array The array to search.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @returns {number} Returns the index of the matched value or `-1`.\r\n     */\r\n    baseIndexOf: function(array, value, fromIndex) {\r\n        var index = (fromIndex || 0) - 1,\r\n            length = array ? array.length : 0;\r\n\r\n        while (++index < length) {\r\n            if (array[index] === value) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n\r\n    errorTip: function(id, content) {\r\n        var str;\r\n        var errno = content;\r\n        if ($.isNumeric(errno)) {\r\n            if (e_str[errno]) {\r\n                str = e_str[errno];\r\n            } else {\r\n                str = e_str[ERR_UNKOWN];\r\n            }\r\n        } else {\r\n            str = content;\r\n        }\r\n        //        str += '&nbsp;<i>' + s_str.clickhide + '</i>';\r\n        $('#' + id + '_tips').showCold('fast');\r\n        $('#' + id + '_tips_content').html(str);\r\n    },\r\n\r\n    isMobile: function() {\r\n        if (!(\"WEB_INCLUDE_MOBILE_UI\" in window && window[\"WEB_INCLUDE_MOBILE_UI\"] == 1)) {\r\n            return false;\r\n        }\r\n        var check = false;\r\n        (function(a) {\r\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true\r\n        })(navigator.userAgent || navigator.vendor || window.opera);\r\n        $.isMobileFlag = check && (document.cookie.search('UserChange=true') === -1);\r\n        return check;\r\n    },\r\n\r\n    alert: function() {\r\n        if ($.isMobileFlag) {\r\n            return $.alertMobile(arguments)\r\n        } else {\r\n            return $.alertPC.apply($, arguments);\r\n        }\r\n    },\r\n\r\n    alertAsnyc: function() {\r\n        if ($.isMobileFlag) {\r\n            return $.alertMobile(arguments);\r\n        } else {\r\n            return $.alertPC.apply($, arguments);\r\n        }\r\n    },\r\n\r\n    toastGlobal: function(options) {\r\n        options = $.extend({}, options);\r\n        options.className = options.className || '';\r\n        options.text = options.text || '';\r\n\r\n        var html = '<div id=\"global-toast-container\">' +\r\n            '<div class=\"global-toast-wrapper\">' +\r\n            '<div class=\"shadow-top-left\"></div>' +\r\n            '<div class=\"shadow-top\"></div>' +\r\n            '<div class=\"shadow-top-right\"></div>' +\r\n            '<div class=\"shadow-left\">' +\r\n            '<div class=\"shadow-right\">' +\r\n            '<div class=\"global-toast-inner\">' +\r\n            '<span id=\"global-toast-text\"></span><span class=\"icon-close\"></span> </span>' +\r\n            '</div>' +\r\n            '</div>' +\r\n            '</div>' +\r\n            '<div class=\"shadow-bot-left\"></div>' +\r\n            '<div class=\"shadow-bot\"></div>' +\r\n            '<div class=\"shadow-bot-right\"></div>' +\r\n            '</div>' +\r\n            '</div>';\r\n        var toast_container = $('#global-toast-container').length > 0 ? $('#global-toast-container') : $(html).appendTo('body');\r\n        toast_container.removeClass().fadeInCold(400);\r\n        if (options.className) {\r\n            toast_container.addClass(options.className);\r\n        }\r\n        $('#global-toast-text').html(options.text);\r\n        $('#global-toast-container .icon-close').off('click').on('click', function() {\r\n            $('#global-toast-container').fadeOutCold(400);\r\n            if ($.isFunction(options.callback_close)) {\r\n                options.callback_close.call(window);\r\n            }\r\n        });\r\n    },\r\n\r\n    Base64Encoding: function(input) {\r\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = $.utf8_encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    },\r\n\r\n    utf8_encode: function(string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        var utftext = \"\";\r\n\r\n        for (var n = 0; n < string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    },\r\n\r\n    /*****************cloud common function**************************/\r\n    setIframeSrc: function(module) {\r\n        if (module) {\r\n            var url = $.cloudOrigin + \"/cloud_ui_newVI/pages/device/index.html?module=\" + module + \"&_=\" + (new Date()).getTime();\r\n            $(\"#cloud-login\").attr(\"src\", url);\r\n            $.setWaitingEvent(\"ev_watingTimeout\");\r\n        }\r\n    },\r\n\r\n    getToken: function(module, updateFlag, cgi) {\r\n        var getHttpObject = function(hook) {\r\n            var xmlHttp = null;\r\n            try {\r\n                xmlHttp = new XMLHttpRequest();\r\n            } catch (e) {\r\n                try {\r\n                    xmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n                } catch (e) {\r\n                    try {\r\n                        xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n                    } catch (e) {\r\n                        /* How to handle this error? */\r\n                    }\r\n                }\r\n            }\r\n            xmlHttp.onreadystatechange = function() {\r\n                if (xmlHttp.readyState == 4) {\r\n                    if (hook)\r\n                        hook();\r\n                }\r\n            };\r\n            return xmlHttp;\r\n        };\r\n        var xmlHttpObj = getHttpObject(function() {\r\n            if (xmlHttpObj.status == 200) {\r\n                eval(xmlHttpObj.responseText);\r\n                $.token = Token;\r\n                $.cloudOrigin = EwebURL;\r\n                if (!$.token) {\r\n                    $(window).trigger(\"ev_watingTimeout\");\r\n                } else {\r\n                    $.setIframeSrc(module);\r\n                }\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n\r\n        });\r\n\r\n        xmlHttpObj.open(\"POST\", window.location.protocol + \"//\" + window.location.host + \"/cgi/getTokenc\", true);\r\n        xmlHttpObj.setRequestHeader(\"TokenID\", $.tokenid || 0);\r\n\r\n        xmlHttpObj.send(null);\r\n    },\r\n\r\n    postToken: function() {\r\n        var param = {};\r\n        param.token = $.token;\r\n        param.eType = \"ev_token\";\r\n        var str = JSON.stringify(param);\r\n        window.frames[\"cloud-login\"] && window.frames[\"cloud-login\"].postMessage(str, $.cloudOrigin);\r\n    },\r\n\r\n    //获取dut的deviceinfo发给云\r\n    getDeviceInfo: function(hasStok) {\r\n        $.cloud = $.cloud || {};\r\n        var params = {};\r\n\r\n        if ($.act) {\r\n            var userObj = $.act(ACT_GET, CURRENT_USER);\r\n            $.exe();\r\n            if (userObj.userSetting == 2) {\r\n                //此时是云登录，将用户名和role发给云端\r\n                params.cloudUserName = userObj.userName;\r\n                //在云端，0表示owner用户，1表示普通股用户。在本地，1表示owner用户，2表示普通用户\r\n                if (userObj.userRole == 1) {\r\n                    params.role = 0;\r\n                } else if (userObj.userRole == 2) {\r\n                    params.role = 1;\r\n                }\r\n            }\r\n            params.model = $.model;\r\n        }\r\n        params.eType = \"ev_deviceInfo\";\r\n        params.windowHeight = $(window).height() - 90; //window's height - headHeight\r\n        params.windowWidth = $(window).width(); //window's width\r\n        params.iframeTop = $(\"#cloud-login\").offset().top //iframe top\r\n        var str = JSON.stringify(params);\r\n        window.frames[\"cloud-login\"].postMessage(str, $.cloudOrigin);\r\n    },\r\n\r\n    iframeResize: function(iframeObj, height) {\r\n        iframeObj.css({\r\n            \"height\": height + 20\r\n        });\r\n        $.removeLoading();\r\n    },\r\n\r\n    waitingId: false,\r\n    waitingTime: 10 * 1000,\r\n\r\n    //after waitingTime, obj will trigger an event(eType),\r\n    //paramas obj & watingTime is optional, the default obj is $(window), and the defalut watingTime is 10s\r\n    //be careful to use this function!!! only one global watingID!!!\r\n    setWaitingEvent: function(eType, obj, waitingTime) {\r\n        $.waitingId = false;\r\n        var time = waitingTime || $.waitingTime;\r\n        var me = obj || window;\r\n        me = me.jquery ? me : $(me);\r\n        $.waitingId = setTimeout(function() {\r\n            me.trigger(eType);\r\n        }, time);\r\n        return true; // setWaiting success\r\n    },\r\n\r\n    //function to clear waitingEvent\r\n    clearWaitingEvent: function() {\r\n        if ($.waitingId) {\r\n            clearTimeout($.waitingId);\r\n            $.waitingId = false;\r\n        }\r\n    },\r\n\r\n    doInternetDiag: function(callCon, CallDis) {\r\n        var diagTool = $.act(ACT_GET, DIAG_TOOL, null, null, [\"LastResult\"]);\r\n        $.exe(function(err) {\r\n            if (err) {\r\n                return;\r\n            }\r\n            $.act(ACT_OP, ACT_OP_DIAG_DNSDIAG, diagTool.__stack);\r\n            $.exe(function(err) {\r\n                if (err) {\r\n                    return;\r\n                }\r\n                setTimeout(function() {\r\n                    diagTool = $.act(ACT_GET, DIAG_TOOL, null, null, [\"LastResult\"]);\r\n                    $.exe(function() {\r\n                        if (err) {\r\n                            return;\r\n                        }\r\n                        if (diagTool.lastResult == 1) {\r\n                            if (callCon) {\r\n                                callCon();\r\n                            }\r\n                        } else {\r\n                            if (CallDis) {\r\n                                CallDis();\r\n                            }\r\n                        }\r\n                    });\r\n                }, 1000);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    /*****************cloud common function end**************************/\r\n});\r\n\r\n(function($) {\r\n    $.fn.divmask = function() {\r\n        $(this).parent().append('<div class=\"div-mask\"> </div>');\r\n    };\r\n\r\n    $.fn.unmask = function() {\r\n        $(this).parent().find(\".div-mask\").remove();\r\n    };\r\n    $.fn.hideCold = function(speed, callback) {\r\n        if ($.isIE) {\r\n            $(this).hide(callback);\r\n        } else {\r\n            $(this).hide(speed, callback)\r\n        }\r\n    };\r\n    $.fn.showCold = function(speed, callback) {\r\n        if ($.isIE) {\r\n            $(this).show(callback);\r\n        } else {\r\n            $(this).show(speed, callback);\r\n        }\r\n    };\r\n    $.fn.fadeInCold = function(speed, callback) {\r\n        if ($.isIE) {\r\n            $(this).show(callback);\r\n        } else {\r\n            $(this).fadeIn(speed, callback);\r\n        }\r\n    };\r\n    $.fn.fadeOutCold = function(speed, callback) {\r\n        $(this).show(callback);\r\n        if ($.isIE) {\r\n            $(this).hide(callback);\r\n        } else {\r\n            $(this).fadeOut(speed, callback);\r\n        }\r\n    }\r\n})(jQuery);\r\n\r\nfunction initIndex() {\r\n    if ($('div')[0].style.borderRadius === undefined) {\r\n        $.isIE = true;\r\n    }\r\n     $.initTpLteSmsTips();\r\n    $.unloadCover = $.unlock;\r\n    try {\r\n        document.execCommand('BackgroundImageCache', false, true);\r\n    } catch (e) {}\r\n\r\n    var newcss = function() {\r\n        var link = $.c(\"link\");\r\n        link.rel = \"Stylesheet\";\r\n        link.type = \"text/css\";\r\n        return link;\r\n    };\r\n    var css = newcss();\r\n    if ($.browser.msie) {\r\n        switch (parseInt($.browser.version, 10)) {\r\n            case 8:\r\n            case 9:\r\n            case 10:\r\n                css.href = \"./css/ie.file.css\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    $.head.insertBefore(css, $.head.firstChild);\r\n\r\n    $.w.onresize = $.resize;\r\n\r\n    $.attach(document.documentElement, \"keydown\", function(e) {\r\n        var key = e.keyCode ? e.keyCode : e.charCode;\r\n        if (key == 116) {\r\n            $.refresh();\r\n            if (document.all) {\r\n                e.keyCode = 0;\r\n                e.returnValue = false;\r\n            } else {\r\n                e.cancelBubble = true;\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    });\r\n\r\n    if ($.local)\r\n        $.io($.params, true);\r\n\r\n    var infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\"]);\r\n    var ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n    var sysmodeobj;\r\n    if (INCLUDE_WAN_MODE)\r\n        sysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, null);\r\n\r\n    $.act(ACT_CGI, \"/cgi/info\");\r\n\r\n    $.exe();\r\n    if ($.local) {\r\n        infoobj = {\r\n            modelName: \"TD-W89741N\",\r\n            description: \"ADSL+ Router\"\r\n        };\r\n        ethobj = {\r\n            numberOfVirtualPorts: 4\r\n        };\r\n        sysmodeobj = {\r\n            mode: \"DSL\"\r\n        };\r\n    }\r\n    $.model = infoobj.modelName;\r\n    $.desc = infoobj.description;\r\n    $.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\r\n    if (INCLUDE_WAN_MODE)\r\n        $.sysMode = sysmodeobj.mode;\r\n\t\tif (INCLUDE_USB_3G_BACKUP)\r\n\t\t\t$.usb3gBackup = sysmodeobj.usb3gBackup;\r\n\t\tif (INCLUDE_EWAN_BACKUP)\r\n\t\t\t$.ewanBackup = sysmodeobj.ewanBackup;\r\n    try {\r\n        if ($.model) document.title = $.model;\r\n    } catch (e) {}\r\n    $.isFD = infoobj.X_TP_IsFD;\r\n\r\n    /*preload image*/\r\n    var img = new Image();\r\n    img.src = '/img/loading.gif';\r\n    delete img;\r\n\r\n    //$.cgi(\"/cgi/getParm\");\r\n    var ee=\"010001\";\r\n\tvar nn=\"B0768E8E77928A5C9C50E86611F9756BF898C91964E5112B05AC511B04A8935A15C262FE46B7C288D8D48DC06BEE9346EB83D007ADAEA9E741C1C05AB0F0FF49C8267CF3479F641E3008275F210F32262B995B490D3F79D09ECE5981B0C5F32FB0286524FA6D6052B064988A40BCA412E8BB16DCD73F670513F09240B502E5C5\";\r\n\tvar userSetting=1;\r\n\t$.ee = ee;\r\n    $.nn = nn;\r\n\r\n    $(function() {\r\n        if (typeof Object.getPrototypeOf !== 'function') {\r\n            if (typeof 'test'.__proto__ === 'object') {\r\n                Object.getPrototypeOf = function(object) {\r\n                    return object.__proto__;\r\n                };\r\n            } else {\r\n                Object.getPrototypeOf = function(object) {\r\n                    return object.constructor.prototype;\r\n                };\r\n            }\r\n        }\r\n    });\r\n}\r\n"
      }
    }, {
      "location" : {
        "uri" : "lib_9.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 20
      },
      "contents" : {
        "text" : "var TPLINK_LOGIN_DOMAIN = \"tplinkwifi.net\"\r\n$.extend({\r\n    w: window,\r\n    d: document,\r\n    c: function(obj) {\r\n        return document.createElement(obj);\r\n    },\r\n    head: document.getElementsByTagName(\"head\")[0],\r\n    div: document.createElement(\"div\"),\r\n    bak: document.createElement(\"div\"),\r\n    ret: 0,\r\n\r\n    sim: false,\r\n    params: \"./js/local.js\",\r\n    cn: false,\r\n    qss: false,\r\n    sysMode: \"DSL\",\r\n    guageInterval: 700,\r\n\r\n    magic: \"0y8nc5094yeyrnoq\",\r\n    local: location.protocol == \"file:\",\r\n    flag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\r\n    curPage: undefined,\r\n    mainParam: undefined,\r\n    diagParam: undefined,\r\n    coverParam: undefined,\r\n    accStack: [],\r\n\r\n    model: \"\",\r\n    desc: \"\",\r\n    ports: 4,\r\n    itv: 2,\r\n    isFD: 0,\r\n    isMobileFlag: 0,\r\n    isIE: false,\r\n    helpControl: {},\r\njumpToPage: function(menu, pageName, top) {\r\n        $('#' + top).click();\r\n\t\t$.jumpToMenu = menu;\r\n        $.jumpToPageName = pageName;\r\n    },\r\n\r\n    chgChd: function(childs, handle) {\r\n        var tmp = $.mkArr(childs);\r\n        $.each(tmp, function() {\r\n            if (this.nodeType == 1) return handle.call(this);\r\n        });\r\n        tmp = null;\r\n    },\r\n\r\n    id: function(id) {\r\n        return $.d.getElementById(id);\r\n    },\r\n\r\n    mkArr: function(array) {\r\n        if (!array) return [];\r\n        var ret = [];\r\n        for (var i = 0, l = array.length; i < l; i++)\r\n            ret[i] = array[i];\r\n        return ret;\r\n    },\r\n\r\n    inArray: function(elem, elems) {\r\n        for (var i = 0, l = elems.length; i < l; i++)\r\n            if (elems[i] === elem)\r\n                return true;\r\n        return false;\r\n    },\r\n\r\n    realLen: function(str) {\r\n        var len = 0;\r\n        for (var i = 0, l = str.length; i < l; i++) {\r\n            len += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n        }\r\n        return len;\r\n    },\r\n\r\n    attach: function(elem, type, data, handler) {\r\n        var tmp;\r\n        if (handler)\r\n            tmp = data;\r\n        else\r\n            handler = data;\r\n        var handle = function(e) {\r\n            var event = event || e;\r\n            var ret = handler.call(elem, event, tmp);\r\n            return ret;\r\n        };\r\n        if (elem.addEventListener)\r\n            elem.addEventListener(type, handle, false);\r\n        else if (elem.attachEvent)\r\n            elem.attachEvent(\"on\" + type, handle);\r\n    },\r\n\r\n    hasElemClass: function(elem, className) {\r\n        return elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n    },\r\n\r\n    addElemClass: function(elem, className) {\r\n        if (elem && elem.nodeType == 1 && !$.hasElemClass(elem, className))\r\n            elem.className += (elem.className ? \" \" : \"\") + className;\r\n    },\r\n\r\n    removeElemClass: function(elem, className) {\r\n        if (elem && elem.nodeType == 1 && $.hasElemClass(elem, className)) {\r\n            elem.className = elem.className.replace(className, \"\");\r\n            elem.className = elem.className.replace(/\\s+/, \" \");\r\n        }\r\n    },\r\n\r\n    cssFloat: function(elem, type) {\r\n        var floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n        if (type == \"left\" || type == \"right\" || type == \"none\")\r\n            elem.style[floattype] = type;\r\n        else\r\n            return elem.style[floattype];\r\n    },\r\n\r\n    opacity: function(elem, opacity) {\r\n        if (!opacity)\r\n            opacity = 0;\r\n        if (elem.style.opacity === undefined) {\r\n            elem.zoom = 1;\r\n            elem.style.filter = (elem.style.filter || \"\").replace(/alpha\\([^)]*\\)/, \"\") +\r\n                (parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n        } else\r\n            elem.style[\"opacity\"] = opacity;\r\n    },\r\n\r\n    h: function(elem, value) {\r\n        if (elem && elem.innerHTML !== undefined) {\r\n            if (value === undefined)\r\n                return elem.innerHTML;\r\n            else\r\n                elem.innerHTML = value;\r\n        }\r\n        return null;\r\n    },\r\n\r\n    dhtml: function(str, hook, midhook) {\r\n        $.div.innerHTML = \"div\" + str;\r\n        $.div.removeChild($.div.firstChild);\r\n        var scripts = [];\r\n        $.chgChd($.div.childNodes, function() {\r\n            if (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n                scripts.push(this);\r\n            else {\r\n                if (!$.isMobileFlag) {\r\n                    $.trans($(this));\r\n                }\r\n                hook.call($(this).get(0));\r\n            }\r\n        });\r\n        if (midhook) midhook();\r\n        $.each(scripts, function() {\r\n            $.script(this.text || this.textContent || this.innerHTML || \"\")\r\n        });\r\n        $.emptyElem($.div);\r\n    },\r\n\r\n    appendElem: function(elem, value, midhook) {\r\n        if (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n            $.dhtml(value, function() {\r\n                elem.appendChild(this)\r\n            }, midhook);\r\n    },\r\n\r\n    removeElem: function(elem) {\r\n        if (elem && elem.parentNode)\r\n            elem.parentNode.removeChild(elem);\r\n    },\r\n\r\n    emptyElem: function(elem) {\r\n        while (elem && elem.firstChild)\r\n            elem.removeChild(elem.firstChild);\r\n    },\r\n\r\n    asyncId: 1,\r\n    asyncStack: {},\r\n\r\n    getAsync: function() {\r\n        var id = $.asyncId;\r\n        $.asyncStack[id] = true;\r\n        $.asyncId++;\r\n        return id;\r\n    },\r\n\r\n    checkAsync: function(id) {\r\n        return $.asyncStack[id];\r\n    },\r\n\r\n    clearAsync: function() {\r\n        for (var i in $.asyncStack) delete $.asyncStack[i];\r\n    },\r\n\r\n    deleteCookie: function(name) {\r\n        var LargeExpDate = new Date();\r\n        document.cookie = name + \"=; expires=\" + LargeExpDate.toGMTString();\r\n    },\r\n\r\n    stkPop: function(stack, times) {\r\n        times = times ? times : 1;\r\n        if (stack instanceof Array) stack = stack.join(\",\");\r\n        stack = stack.split(\",\");\r\n        for (var i = 1, l = stack.length; i < l; i++) {\r\n            if (stack[i] == 0) break;\r\n        }\r\n        for (i--; times > 0; i--, times--)\r\n            stack[i] = 0;\r\n        return stack.join(\",\");\r\n    },\r\n\r\n    arr2obj: function(arr, param) {\r\n        var ret = {};\r\n        if (param === undefined) return ret;\r\n        for (var i = 0, l = arr.length; i < l; i++) {\r\n            if (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n        }\r\n        return ret;\r\n    },\r\n\r\n    obj2str: function(obj, sign1, sign2, tailing) {\r\n        var ret = \"\";\r\n        for (var i in obj)\r\n            ret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n        if (tailing)\r\n            return ret;\r\n        else\r\n            return ret.substr(0, ret.length - sign2.length);\r\n    },\r\n\r\n    toStr: function(data, sign1, sign2, tailing) {\r\n        return data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n    },\r\n\r\n    backup: function(id) {\r\n        $.emptyElem($.bak);\r\n        // IE will lost checked info after appendElem\r\n        if ($.flag) {\r\n            var con = $.id(id);\r\n            var checks = [];\r\n            var inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n            $.each(inputs, function(arg, index) {\r\n                if (this.checked) checks[index] = true;\r\n            });\r\n        }\r\n        $.chgChd($.id(id).childNodes, function() {\r\n            $.bak.appendChild(this)\r\n        });\r\n        if ($.flag) $.each(checks, function(arg, index) {\r\n            if (this == true) {\r\n                inputs[index].checked = true;\r\n            }\r\n        });\r\n    },\r\n\r\n    restore: function(id) {\r\n        $.emptyElem($.id(id));\r\n        if ($.flag) {\r\n            var checks = [];\r\n            var inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n            $.each(inputs, function(arg, index) {\r\n                if (this.checked) checks[index] = true;\r\n            });\r\n        }\r\n        $.chgChd($.bak.childNodes, function() {\r\n            $.id(id).appendChild(this)\r\n        });\r\n        if ($.flag) $.each(checks, function(arg, index) {\r\n            if (this == true) {\r\n                inputs[index].checked = true;\r\n            }\r\n        });\r\n    },\r\n\r\n    err: function(src, errno, unerr) {\r\n        if (unerr) return errno;\r\n        $.clearAsync();\r\n        $.alertAsnyc(errno);\r\n    },\r\n\r\n    errBack: function(errno, dir) {\r\n        $.clearAsync();\r\n        $.alertAsnyc(errno)\r\n    },\r\n\r\n    tpLoad: function(html, id, resize, hook1, hook2, midhook) {\r\n        var con = $.id(id);\r\n        if (html.indexOf(\"<\") < 0) {\r\n            $.io(html, false, function(ret) {\r\n                if (typeof ret !== \"number\")\r\n                    $.fill(con, ret, hook1, hook2, resize, midhook);\r\n                else\r\n                    $.err(id, ret);\r\n            }, null, id == \"ban\" || id == \"menu\" || id == \"help\" || id == \"bot\" || id == \"top\");\r\n        } else\r\n            $.fill(con, html, hook1, hook2, resize, midhook);\r\n    },\r\n\r\n    fill: function(container, content, hook1, hook2, resize, midhook) {\r\n        if (hook1) hook1();\r\n        $.emptyElem(container);\r\n        $.appendElem(container, content, midhook);\r\n        if (hook2) hook2();\r\n        if (resize) $.resize();\r\n    },\r\n\r\n    loadBot: function(path) {\r\n        $.tpLoad(path, \"bot\", false);\r\n    },\r\n\r\n    loadBanner: function(path, callback) {\r\n        $.tpLoad(path, \"top\", false, null, callback);\r\n    },\r\n\r\n    loadMenu: function(path) {\r\n        /* for this Platform*/\r\n        //$.act(ACT_CGI, '/cgi/clearBusy');\r\n        //$.exe(function() {}, true);\r\n        $.tpLoad(path, \"menu\", false, null, function() {\r\n            $(\"#menu a:first\").trigger(\"click\")\r\n        });\r\n    },\r\n\r\n    loadPage: function(id, path, hook1, hook2) {\r\n        var bFile = (path.indexOf(\"<\") < 0);\r\n        $.tpLoad(\r\n            bFile ? \"./main/\" + path : path,\r\n            id, true, hook1,\r\n            function() { /*if (bFile) {*/\r\n                $.upStyle(); /*$.trans();*/ /*} */\r\n                $(window).trigger('loadPage');\r\n                if (hook2) hook2();\r\n            }\r\n        );\r\n    },\r\n\r\n    loadMain: function(path, arg) {\r\n        $(\"table\").tpTable(\"destroy\");\r\n        $(\"input[type='checkbox']\").tpCheckbox(\"destroy\");\r\n        $(\"input[type='radio']\").tpRadio(\"destroy\");\r\n        $(\"div.button-group-container\").tpBtnGroup(\"destroy\");\r\n        $('#main').empty();\r\n        $('#quicksetup').empty();\r\n        $(document).off('.tpSelect');\r\n        $(window).off('.tpSelect');\r\n\r\n        if (!path) path = $.curPage;\r\n        var bFile = (path.indexOf(\"<\") < 0);\r\n        if (bFile) {\r\n            $.emptyElem($.bak);\r\n            $.clearAsync();\r\n        }\r\n        /* for this Platform*/\r\n\t\t//$.act(ACT_CGI, '/cgi/clearBusy');\r\n        //$.exe(function() {}, true);\r\n        $.loadPage(\r\n            \"main\",\r\n            path,\r\n            function() {\r\n                if (bFile) {\r\n                    $.curPage = path;\r\n                    $.accStack.push(path);\r\n                }\r\n                $.mainParam = arg;\r\n                while ($.as.length) $.as.pop();\r\n                while ($.ds.length) $.ds.pop();\r\n                while ($.ansiarg.length) $.ansiarg.pop();\r\n                $.addElemClass($.id(\"main\"), \"nv\");\r\n                $.unlock();\r\n            },\r\n            function() {\r\n                $.removeElemClass($.id(\"main\"), \"nv\");\r\n            }\r\n        );\r\n    },\r\n\r\n    loadCover: function(path, opacity, arg) {\r\n        $.tpLoad(path, \"cover\", false, function() {\r\n            $.diagParam = arg;\r\n            $.removeElemClass($.id(\"cover\"), \"nd\");\r\n            $.opacity($.id(\"cover\"), opacity);\r\n        });\r\n    },\r\n\r\n    reload: function(arg) {\r\n        if ($.isMobileFlag) {\r\n            $.loadPhoneMain(null, arg);\r\n        } else {\r\n            $.loadMain(null, arg);\r\n        }\r\n    },\r\n\r\n    refresh: function(domain, port, frame, page) {\r\n        if ($.local) location.reload(true);\r\n        else {\r\n            var ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            location.href = ret[1] + \"://\" +\r\n                (domain ? domain : ret[2]) +\r\n                (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\";\r\n        }\r\n    },\r\n\r\n    resize: function() {\r\n        //        此处与phone页面有影响所以修改\r\n        /*        if ($('#mainBody').length > 0) {\r\n                    $(\"#scroll\").height(document.documentElement.clientHeight - 90);\r\n                    var max = Math.max($(\"#scroll\").height() - 56, $(\"#main\").height() + 30, $(\"#menu\").height() + 21);\r\n                    $(\"#main\").height('auto');\r\n                    $(\"#menu\").height('auto');\r\n                    $.mainScroll();\r\n                }*/\r\n    },\r\n\r\n    mainScroll: function() {\r\n        /*        if ($(\"#bot\").position().top > $(document).height() + 11) {\r\n                    $(\"#menu\").css({\r\n                        bottom: \"11px\"\r\n                    });\r\n                } else {\r\n                    $(\"#menu\").css({\r\n                        bottom: $(document).height() + 11 - $(\"#bot\").position().top + \"px\"\r\n                    });\r\n                }*/\r\n    },\r\n\r\n    fixTbl: function() {\r\n        $.each(document.getElementsByTagName(\"div\"), function() {\r\n            if (this.offsetWidth != 0 && ($.hasElemClass(this, \"thead\") || $.hasElemClass(this, \"tbody\")))\r\n                this.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n        });\r\n    },\r\n\r\n    //If the table list could not be edited, show the whole string.\r\n    resizeStrList: function(val, num) {\r\n        var tmpStr = \"\";\r\n        var index = 0;\r\n        while (val.length > index) {\r\n            if (val.length > (index + num)) {\r\n                tmpStr += val.slice(index, index + num);\r\n                tmpStr += \"<br/>\";\r\n                index += num;\r\n            } else {\r\n                tmpStr += val.slice(index, val.length);\r\n                break;\r\n            }\r\n        }\r\n        return tmpStr;\r\n    },\r\n    //html encode string.\r\n\thtmlEncode: function(str)\r\n\t{\r\n\t\tvar div = document.createElement(\"div\");\r\n\t\tdiv.appendChild(document.createTextNode(str));\r\n\t\treturn div.innerHTML;\r\n\t},\r\n\r\n    //If the table list could be edited,  show the string with ellipsis.\r\n    resizeStr: function(val, num) {\r\n        var tmpStr = \"\";\r\n        if (val.length > num) {\r\n            for (var i = 0; i < num; i++)\r\n                tmpStr += val.charAt(i);\r\n            tmpStr += \"...\";\r\n        } else\r\n            tmpStr = val;\r\n\r\n        return tmpStr;\r\n    },\r\n\r\n    resizeTlb: function(tlb, rows, rowLines) {\r\n        var div = tlb.parentNode;\r\n        if (tlb.rows.length > rows) {\r\n            div.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n            $.addElemClass(div, \"scroll\");\r\n        } else {\r\n            div.style[\"height\"] = \"auto\";\r\n            $.removeElemClass(div, \"scroll\");\r\n        }\r\n    },\r\n\r\n    lock: function() {\r\n        $.removeElemClass($.id(\"cover\"), \"nd\");\r\n        $.opacity($.id(\"cover\"), 0);\r\n    },\r\n\r\n    unlock: function() {\r\n        $.addElemClass($.id(\"cover\"), \"nd\");\r\n    },\r\n\r\n    locked: function() {\r\n        return $.hasElemClass($.id(\"cover\"), \"nd\") ? false : true;\r\n    },\r\n\r\n    addLoading: function(object, interval, hook, isNoCover) {\r\n        $.lock();\r\n        var obj;\r\n        if (object) {\r\n            obj = $(object);\r\n            if (obj.hasClass('button-group-button')) {\r\n                $(\"<div style='display: inline-block; vertical-align: middle;position: relative;top: -10px;'><span class='load'></span></div>\").appendTo(obj.closest(\"div.button-group-container\"));\r\n            } else {\r\n                $(\"<div style='display: inline-block; vertical-align: middle;position: relative;top: -10px;'><span class='load'></span></div>\").insertAfter(obj);\r\n            }\r\n        } else {\r\n            obj = null;\r\n        }\r\n\r\n        if (interval) {\r\n            $.timeout(function() {\r\n                if (!hook || hook() !== false) $.removeLoading();\r\n            }, interval);\r\n        }\r\n        $.showLoading(obj, isNoCover);\r\n    },\r\n\r\n    showLoading: function(obj, isNoCover) {\r\n        if (obj) {\r\n            if (obj.hasClass('button-group-button')) {\r\n                obj.closest(\"div.button-group-container\").find('.load').show();\r\n            } else {\r\n                obj.next('div').find('.load').show();\r\n            }\r\n            if (isNoCover === 1) {\r\n                return;\r\n            }\r\n            var tmp = $(\"span.load\");\r\n            if (tmp.length > 0) {\r\n                $.showCover();\r\n            }\r\n        } else {\r\n            var loadingObj = $('#g-loading-container').length > 0 ? $('#g-loading-container') :\r\n                $('<div class=\"g-loading-container\" id=\"g-loading-container\" ><div class=\"g-loading-container-wrap\"><div class=\"g-loading-container-inner\"><div class=\"g-loading-waiting-icon\"></div></div></div></div>').appendTo('body');\r\n            loadingObj.show();\r\n            $.showCover();\r\n        }\r\n\r\n\r\n    },\r\n\r\n    hideLoading: function() {\r\n        $.hideCover();\r\n        $(\"span.load\").not('.wpsload').hide();\r\n    },\r\n\r\n    removeLoading: function() {\r\n        $(\"span.load\").closest('div').remove();\r\n        $('#g-loading-container').hide();\r\n        $.unlock();\r\n        $.hideCover();\r\n        if ($.isFunction($.act)) {\r\n\t\t\t// for this platform \r\n            //$.act(ACT_CGI, '/cgi/clearBusy');\r\n            //$.exe(function() {}, true);\r\n        }\r\n    },\r\n\r\n    timeout: function(hook, interval) {\r\n        var id = $.getAsync();\r\n        return setTimeout(function() {\r\n            if ($.checkAsync(id) && hook) hook();\r\n        }, interval);\r\n    },\r\n\r\n    auto_interval: 0,\r\n    auto: function(handle, interval, imediate, args, hook, id) {\r\n        $.auto_interval = interval;\r\n\r\n        if (id) {\r\n            if (!$.checkAsync(id)) return;\r\n        } else\r\n            id = $.getAsync();\r\n        if (imediate) {\r\n            if (handle(args) === false) {\r\n                if (hook) hook(args);\r\n                return;\r\n            }\r\n        }\r\n\r\n        return setTimeout(function() {\r\n            $.auto(handle, $.auto_interval, 1, args, hook, id);\r\n        }, $.auto_interval);\r\n    },\r\n\r\n    guage: function(strs, step, interval, hook, start, end, diag, note) {\r\n        var progressBarMaxLength = 450;\r\n        var note = note ? (\"<p class='progressbar-note'><span class='progressbar-note-title'>\" + m_str.note + \": </span>\" + note + \"</p>\") : '';\r\n        var str = \"<div class='con2'><p class='center'>\" + strs[1] + \"</p><div class='gbar-parent' style='width:\" + progressBarMaxLength + \"px;'><div class='gbar' id='_gbar'><b class='gitem' id='gitem'></b></div></div>\" + note + \"</div>\";\r\n\r\n        if (diag) {\r\n            $.loadCover(str, 1);\r\n        } else {\r\n            var alertContainer = $.progressBar(str);\r\n        }\r\n        var completed = false;\r\n        var count = 0;\r\n        var count_max = 5000 / interval;\r\n        var retTmp = false;\r\n\r\n        $.auto(function(args) {\r\n            if (!completed) {\r\n                if (args[2] >= (args[3] / 2)) {\r\n                    if (count++ > count_max) {\r\n                        count = 0;\r\n                        type = \"GET\";\r\n                        url = \"?_=\" + (+new Date());\r\n                        var xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n                        xhr.open(type, url, true);\r\n                        xhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n                        xhr.onreadystatechange = function() {\r\n                            if (xhr.readyState == 4 && xhr.status == 200) {\r\n                                completed = true;\r\n                            }\r\n                        };\r\n                        xhr.send(null);\r\n                    }\r\n                }\r\n            } else {\r\n                $.auto_interval = 5000 / step;\r\n            }\r\n            var percent = Math.floor(args[2] * 100 / args[3]);\r\n            $(args[1]).animate({\r\n                width: progressBarMaxLength / 100 * percent\r\n            }, $.auto_interval, function() {\r\n                $(args[0]).html(percent + \"%\");\r\n            });\r\n            if (args[2] >= args[3])\r\n                return false;\r\n            args[2]++;\r\n        }, interval, true, [$.id(\"gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], function(args) {\r\n            $('#_gbar').animate({\r\n                width: progressBarMaxLength\r\n            }, 1, hook);\r\n        });\r\n    },\r\n\r\n    guageWithRateControl: function(options) {\r\n        options = $.extend({}, options);\r\n        var percent = options.startRate || 0;\r\n        var text = options.text || '';\r\n        var note = options.note ? (\"<p class='progressbar-note'><span class='progressbar-note-title'>\" + m_str.note + \": </span>\" + options.note + \"</p>\") : '';\r\n        var updateImmediately = options.updateImmediately || true;\r\n        var updateInterval = options.updateInterval || 1000;\r\n        var rateControl = options.rateControl || function(percentOld, callback) {\r\n                callback(percentOld + 1);\r\n            };\r\n        var callback_complete = options.callback_complete;\r\n        var callback_error = options.callback_error;\r\n\r\n        var isComplete = options.isComplete || function(percentOld, callback_complete) {\r\n                if (percentOld >= 100) {\r\n                    if (callback_complete) {\r\n                        callback_complete();\r\n                    }\r\n                }\r\n            };\r\n\r\n        var updateIntervalHighSpeed = options.updateIntervalHighSpeed || 50;\r\n        var autoEndFlag = false;\r\n        var completeFlag = false;\r\n        var errorFlag = false;\r\n        var progressBarMaxLength = 450;\r\n        var closeProgressBar = function() {\r\n            var tmp = $(\"div.alert-container.progress-bar\");\r\n            tmp.hide();\r\n            $('body').off('mousedown.focus');\r\n            $('body').off('keydown.focus');\r\n            $.hideCover();\r\n        };\r\n\r\n        var str = \"<div class='con2'><p class='center'>\" + text + \"</p><div class='gbar-parent' style='width:\" + progressBarMaxLength + \"px;'><div class='gbar' id='_gbar'><b class='gitem' id='gitem'>\" + percent + \"%</b></div></div>\" + note + \"</div>\";\r\n        $.progressBar(str);\r\n\r\n        $.auto(function(args) {\r\n            if (autoEndFlag) {\r\n                return false;\r\n            }\r\n\r\n            var gbar = $('#_gbar');\r\n            var gitem = $('#gitem');\r\n\r\n            rateControl(percent, function(percentNew) {\r\n                if (percentNew > 100) {\r\n                    percentNew = 100;\r\n                }\r\n                percent = percentNew;\r\n                gbar.animate({\r\n                    width: progressBarMaxLength / 100 * percentNew\r\n                }, $.auto_interval, function() {\r\n                    gitem.html(percentNew + \"%\");\r\n                    if (percentNew >= 100 && completeFlag) {\r\n                        autoEndFlag = true\r\n                    }\r\n                });\r\n            });\r\n            isComplete(percent, function() {\r\n                completeFlag = true;\r\n                //                reset the rateControl method.\r\n                rateControl = function(percentOld, callback) {\r\n                    callback(percentOld + 1);\r\n                };\r\n                //                reset the the interval of $auto\r\n                $.auto_interval = updateIntervalHighSpeed;\r\n                //                reset isComplete. beacuse it has benn already completed, it don't need to judge again.\r\n                isComplete = function() {};\r\n            }, function(data) {\r\n                autoEndFlag = true;\r\n                errorFlag = true;\r\n                callback_error.call($, data);\r\n            });\r\n\r\n        }, updateInterval, updateImmediately, [], function() {\r\n            closeProgressBar();\r\n            if (!errorFlag) {\r\n                if (callback_complete) {\r\n                    callback_complete();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    goToOtherPage: function(page, navName, callback) {\r\n        var flag_channelChange = false;\r\n        var askInterval = 200;\r\n        if (!page || !navName) {\r\n            return;\r\n        }\r\n\r\n        if ($.curPage == page) {\r\n            if ($.isFunction(callback)) {\r\n                callback();\r\n            }\r\n            return;\r\n        }\r\n        var timer1 = setInterval(function() {\r\n            if ($('#top-nav').hasClass('disabled')) {\r\n                return;\r\n            }\r\n            var navSelected = $('#ul-nav li.selected');\r\n            if (navSelected.length == 0 || (!$('#quicksetup').text().match(/\\S/) && (!$('#menu').data('tpMenu') || $('#main').is(':empty')))) {\r\n                return;\r\n            } else {\r\n                clearInterval(timer1);\r\n                if (navSelected.attr('id') != navName) {\r\n                    $('#' + navName).click();\r\n                    flag_channelChange = true;\r\n                } else {\r\n                    flag_channelChange = false;\r\n                }\r\n\r\n                var timer2 = setInterval(function() {\r\n                    var li = $('#menuTree').find('a[url=\"' + page + '\"]:not(.more)').parent('li');\r\n                    if (li.length === 0) {\r\n                        return;\r\n                    }\r\n\r\n                    clearInterval(timer2);\r\n                    var parentScrollTop = 0;\r\n                    if (li.hasClass('ml2') && li.is(':hidden')) {\r\n                        var parentLi = li.parents('li.ml1');\r\n                        parentScrollTop = parentLi.offset().top;\r\n                        $('#menu').scrollTop(parentScrollTop);\r\n                        (parentLi.find('a'))[0].click();\r\n                    }\r\n                    (li.find('a'))[0].click();\r\n                    setTimeout(function() {\r\n                        //                        $('#menu').scrollTop(li.offset().top + parentScrollTop);\r\n                        $('#menu').scrollTop(li.position().top - $('#menu').children(':first').position().top);\r\n                        if ($.isFunction(callback)) {\r\n                            callback();\r\n                        }\r\n                    }, 200);\r\n                }, flag_channelChange ? askInterval : 10);\r\n            }\r\n        }, ($('#ul-nav li.selected').length > 0 ? 10 : askInterval));\r\n    },\r\n\r\n    turnqss: function(str) {\r\n        if ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n        else return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n    },\r\n\r\n    num: function() {\r\n        var l = arguments.length - 1;\r\n        var unalert = arguments[l];\r\n        if (unalert !== true) {\r\n            l++;\r\n            unalert = false;\r\n        }\r\n        var val = arguments[0];\r\n        if (typeof val === \"string\" && val.match(/\\D/))\r\n            return $.alert(ERR_NUM_INVAD, unalert);\r\n        var val = parseInt(val, 10);\r\n        if (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n        if (l == 1) return 0;\r\n        for (var i = 1; i < l; i++) {\r\n            if (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n                return 0;\r\n        }\r\n        return $.alert(ERR_NUM_OUTRANGE, unalert);\r\n    },\r\n\r\n    step: function(num, step) {\r\n        return Math.round(parseInt(num, 10) / step) * step;\r\n    },\r\n\r\n    asc: function(str, unalert) {\r\n        for (var i = 0, l = str.length; i < l; i++)\r\n            if (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n        return 0;\r\n    },\r\n\r\n\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t},\r\n\r\n    ip2num: function(ip) {\r\n        if (typeof ip === \"number\") return ip;\r\n        var ret, val;\r\n        if (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n        for (var i = 1, val = 0; i <= 4; i++) {\r\n            if (parseInt(ret[i], 10) > 255) return false;\r\n            val = (val << 8) + parseInt(ret[i], 10);\r\n        }\r\n        return val;\r\n    },\r\n\r\n    num2ip: function(num) {\r\n        if (typeof num !== \"number\") return false;\r\n        return \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n    },\r\n\r\n    ifip: function(ip, unalert) {\r\n        if ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n        if (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n        var net = ip >> 24;\r\n        if (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n        if (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n        if (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n        if (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n        return 0;\r\n    },\r\n\r\n    mask: function(mask, unalert) {\r\n        if ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n        for (var i = 32; i > 0; i--, mask = mask >> 1)\r\n            if (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n    },\r\n\r\n    ipmask: function(ip, mask, unalert) {\r\n        var temp;\r\n        ip = $.ip2num(ip);\r\n        mask = $.ip2num(mask);\r\n        if ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n        if ((ip & ~mask) == ~mask || (ip & ~mask) == 0) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n        return 0;\r\n    },\r\n\r\n    ipmaskgw: function(ip, mask, gw, unalert) {\r\n        ip = $.ip2num(ip);\r\n        mask = $.ip2num(mask);\r\n        gw = $.ip2num(gw);\r\n        if ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n        return 0;\r\n    },\r\n\r\n    mac: function(mac, unalert) {\r\n        if (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n        if (mac == \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n        if (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n        if (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n        return 0;\r\n    },\r\n\r\n    ip2ip: function(ip) {\r\n        var ipParts = ip.split(\".\");\r\n        for (var i = 0; i < 4; i++) {\r\n            ipParts[i] = parseInt(ipParts[i], 10);\r\n        }\r\n        var ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n        return ipStr;\r\n    },\r\n\r\n    isname: function(pName) {\r\n        return pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n    },\r\n\r\n    isdomain: function(domain) {\r\n        var c;\r\n        var gotDot = false;\r\n        var ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        if ((domain.charAt(0) == \".\") || (domain.charAt(0) == \"-\") || ((domain.charAt(domain.length - 1) == \".\")) || ((domain.charAt(domain.length - 1) == \"-\")))\r\n            return false;\r\n        for (var i = 0; i < domain.length; i++) {\r\n            c = domain.charAt(i);\r\n            if (ch.indexOf(c) == -1)\r\n                return false;\r\n            if ((c == \"-\") && (gotDot == true))\r\n                return false;\r\n            if ((c == \".\") && (gotDot == true))\r\n                return false;\r\n            if ((c == \".\") && (gotDot == false))\r\n                gotDot = true;\r\n            if ((c == \"-\") && (gotDot == false))\r\n                gotDot = true;\r\n            if ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n                gotDot = false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    isnum: function(num_string) {\r\n        var c;\r\n        var ch = \"0123456789\";\r\n        for (var i = 0; i < num_string.length; i++) {\r\n            c = num_string.charAt(i);\r\n            if (ch.indexOf(c) == -1)\r\n                return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    isSameLan: function(lan1Ip, lan1Mask, lan2Ip, lan2Mask) {\r\n        var count = 0;\r\n        lan1a = lan1Ip.split('.');\r\n        lan1m = lan1Mask.split('.');\r\n        lan2a = lan2Ip.split('.');\r\n        lan2m = lan2Mask.split('.');\r\n        for (i = 0; i < 4; i++) {\r\n            l1a_n = parseInt(lan1a[i]);\r\n            l1m_n = parseInt(lan1m[i]);\r\n            l2a_n = parseInt(lan2a[i]);\r\n            l2m_n = parseInt(lan2m[i]);\r\n            if ((l1a_n & l1m_n) == (l2a_n & l2m_n))\r\n                count++;\r\n        }\r\n        if (count == 4) {\r\n            var testIp = $.ip2num(lan1Ip);\r\n            var lanMask = $.ip2num(lan1Mask);\r\n            if (((testIp & (~lanMask)) == 0) || ((testIp & (~lanMask)) == (~lanMask)))\r\n                return false;\r\n            else\r\n                return true;\r\n        } else\r\n            return false;\r\n    },\r\n\r\n    charCompareA: function(szname, en_limit, cn_limit) {\r\n        var c;\r\n        var ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n        if (szname.length > en_limit) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < szname.length; i++) {\r\n            c = szname.charAt(i);\r\n            if (ch.indexOf(c) == -1) {\r\n                if (szname.length > cn_limit) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    getrightfirstonebitpos: function(num) {\r\n        var i;\r\n        var pos = 0;\r\n        var numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n        for (i = 0; i < 8; i++) {\r\n            if (((num & numArr[i]) >> i) == 0)\r\n                pos++;\r\n        }\r\n        return pos;\r\n    },\r\n\r\n    getmaskbit: function(mask) {\r\n        var i, j;\r\n        var pos = 0;\r\n        var numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n        var maskPart = mask.split(\".\");\r\n        for (i = 3; i >= 0; i--) {\r\n            for (j = 0; j < 8; j++) {\r\n                if (((maskPart[i] & numArr[j]) >> j) == 0)\r\n                    pos++;\r\n            }\r\n        }\r\n        return pos;\r\n    },\r\n\r\n    isOrderIp: function(ip1, ip2) {\r\n        var ipS = ip1.split(\".\");\r\n        var ipE = ip2.split(\".\");\r\n        for (var i = 0; i < 4; i++) {\r\n            if (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n                return true;\r\n            else if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n                return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    reverseStr: function(str) {\r\n        var newStr = \"\";\r\n        for (var i = 0; i < str.length; i++) {\r\n            newStr += str.substring(str.length - 1 - i, str.length - i);\r\n        }\r\n        return newStr;\r\n    },\r\n\r\n    formatNum: function(num) {\r\n        var numNew = $.reverseStr(num.toString());\r\n        if (numNew.length > 3) {\r\n            numNew = numNew.replace(/(\\d\\d\\d)/g, function($0, $1) {\r\n                return $1 + \",\"\r\n            });\r\n        }\r\n        numNew = (numNew.charAt(numNew.length - 1) == ',') ? numNew.substring(0, numNew.length - 1) : numNew;\r\n        return $.reverseStr(numNew);\r\n    },\r\n\r\n    getWl24gMask: function(modeValue, chwidthValue) {\r\n        var mask = 0x0;\r\n        if ((modeValue == \"n-only\") || (modeValue == \"n\") || modeValue == \"gn\") //11n-only,11bgn,11gn\r\n        {\r\n            if (chwidthValue == \"20M\") //HT20\r\n                mask = (1 << IEEE80211_MODE_11NG_HT20);\r\n            else if (chwidthValue == \"40M\") //HT40\r\n                mask = (1 << IEEE80211_MODE_11NG_HT40);\r\n            else if (chwidthValue == \"Auto\") //Auto\r\n                mask = (1 << IEEE80211_MODE_11NG_HT40) | (1 << IEEE80211_MODE_11NG_HT20);\r\n        } else\r\n            $.alert(ERR_WLAN_MODE_INVALID);\r\n\r\n        return mask;\r\n    },\r\n\r\n    getWl5gMask: function(modeValue, chwidthValue) {\r\n        var mask = 0x0;\r\n        if ((modeValue == \"n-only\") || (modeValue == \"an\") || (modeValue == \"ac\") || (modeValue == \"ac-only\") || (modeValue == \"nac\")) //11na, 11n-only,11ac,11ac-only,11ac/n\r\n        {\r\n            if (chwidthValue == \"20M\") //HT20\r\n                mask = (1 << IEEE80211_MODE_11NA_HT20);\r\n            else if (chwidthValue == \"40M\" || chwidthValue == \"80M\") //HT40\r\n                mask = (1 << IEEE80211_MODE_11NA_HT40);\r\n            else if (chwidthValue == \"Auto\") //Auto\r\n                mask = (1 << IEEE80211_MODE_11NA_HT40); //|(1<<IEEE80211_MODE_11NA_HT20)\r\n        } else if (modeValue == \"a\") //11a\r\n            mask = (1 << IEEE80211_MODE_11A);\r\n        else\r\n            $.alert(ERR_WLAN_MODE_INVALID);\r\n\r\n        return mask;\r\n    },\r\n\r\n    is5GSupportRegion: function(standardArg, bandwidthArg, indexArg) {\r\n        var flag = false;\r\n        var enDFS = 0;\r\n        var regionIndex = indexArg * region_chan_table_shift;\r\n        var dfsMask = (1 << IEEE80211_CHAN_REQUIRED_DFS);\r\n        var mask = $.getWl5gMask(standardArg, bandwidthArg);\r\n\r\n        for (i = 1; i <= TOTAL_CHANNEL; i++) {\r\n            if (Region_chan_table[regionIndex + i] & mask) {\r\n                if (((Region_chan_table[regionIndex + i] & dfsMask) == 0) || ((Region_chan_table[regionIndex + i] & dfsMask) && (enDFS == 1))) {\r\n                    flag = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return flag;\r\n    },\r\n\r\n    chgElem: function(elem, val) {\r\n        if (elem && elem.nodeName) {\r\n            switch (elem.nodeName.toLowerCase()) {\r\n                case \"input\":\r\n                    elem.value = val;\r\n                    break;\r\n                case \"option\":\r\n                    elem.text = val;\r\n                    break;\r\n                default:\r\n                    if ($.hasElemClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n                    $(elem).html(val);\r\n                    break;\r\n            }\r\n            //for localization\r\n            //$.removeElemClass(elem, \"T\");\r\n        }\r\n    },\r\n\r\n    upStyle: function() {\r\n        $(\"h3\").each(function() {\r\n            if ($(this).parent('div').hasClass('header-container')) {\r\n                return;\r\n            } else {\r\n                var str = \"<div class='header-container'><h3><span class='T \" + $(this).attr('class') + \"'>\" + $(this).html() + \"</span></h3></div>\";\r\n                $(this).replaceWith(str);\r\n            }\r\n        });\r\n\r\n        if (WEB_INCLUDE_HELP) {\r\n            $.addHelp();\r\n        }\r\n\r\n        $(\"div.mode-change\").tpModeSelect();\r\n\r\n        $(\"input[type='text']\").each(function() {\r\n            var divTmp = $(this).parent('div');\r\n            var bTmp = $(divTmp).find('b');\r\n            $(this).addClass('tp-input-text');\r\n            if (($.isIE) && $(this).is(':not(.mac-address):not(.ip-address)') && $(this).css('borderWidth').search('1px') == 0) {\r\n                $(this).wrap('<div class=\"input-wrapper\">').after('<span class=\"corner-left\"></span><span class=\"corner-right\"></span>');\r\n                var wrap = $(this).parent('.input-wrapper');\r\n                $(this).off('.inputIE').on('focus.inputIE', function() {\r\n                    wrap.addClass('focus');\r\n                }).on('blur.inputIE', function() {\r\n                    wrap.removeClass('focus')\r\n                });\r\n            }\r\n            if ($(bTmp).attr('class') == undefined) {\r\n                if ($(bTmp).attr('id') == undefined) {\r\n                    $(bTmp).replaceWith(\"<label class='label-title'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            } else {\r\n                if ($(bTmp).attr('id') == undefined) {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            }\r\n\r\n            $(divTmp).addClass('pure-control-group');\r\n            $(this).keydown(function(e) {\r\n                if (e.keyCode == 0xD) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        });\r\n\r\n        $(\"input[type='password']\").each(function() {\r\n            var divTmp = $(this).closest('div:not(.tpPassword)');\r\n            var bTmp = $(divTmp).find('b');\r\n            $(this).addClass('tp-input-text');\r\n            if (($.isIE) && $(this).css('borderWidth').search('1px') == 0) {\r\n                $(this).wrap('<div class=\"input-wrapper\">').after('<span class=\"corner-left\"></span><span class=\"corner-right\"></span>');\r\n                var wrap = $(this).parent('.input-wrapper');\r\n                $(this).off('.inputIE').on('focus.inputIE', function() {\r\n                    wrap.addClass('focus');\r\n                }).on('blur.inputIE', function() {\r\n                    wrap.removeClass('focus')\r\n                });\r\n            }\r\n            if ($(bTmp).attr('class') == undefined) {\r\n                if ($(bTmp).attr('id') == undefined) { /* added by hx, 2015.05.28, to get \"id\" of tag <b> */\r\n                    $(bTmp).replaceWith(\"<label class='label-title'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            } else {\r\n                if ($(bTmp).attr('id') == undefined) {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                } else {\r\n                    $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + $(bTmp).attr('class') + \"' id='\" + $(bTmp).attr('id') + \"'>\" + $(bTmp).html() + \"</label>\");\r\n                }\r\n            }\r\n\r\n            $(divTmp).addClass('pure-control-group');\r\n            $(this).keydown(function(e) {\r\n                if (e.keyCode == 0xD) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        });\r\n\r\n        $(\"div.steps\").each(function() {\r\n            $(this).children(\"h5\").addClass(\"title\");\r\n            $(this).find(\"span[id*='step']\").addClass(\"step\");\r\n        });\r\n\r\n        $(\"button[type='submit']\").not(\".button-group-button\").each(function() {\r\n            var tag;\r\n            if ($(this).hasClass(\"tp-btn-custom\")) {\r\n                return;\r\n            }\r\n            $(this).addClass(\"pure-button tp-btn-custom\");\r\n            nameTmp = $(this).html();\r\n            if ((tag = this.className.match(/\\b(T_|t_)(\\w+)\\b/) != null)) {\r\n                tag = tag[0];\r\n            }\r\n            $(this).html('<span class=\"' + tag + '\">' + nameTmp + '</span>');\r\n            var str = \"<div class='button-container'></div>\";\r\n            $(this).wrap(str);\r\n\r\n            if ($(this).hasClass('inline')) {\r\n                $(this).parent().addClass('inline');\r\n            }\r\n            if ($(this).hasClass('left')) {\r\n                $(this).parent().addClass('left');\r\n                $(this).removeClass('left'); // in chrome we should remove 'left', or the text will align left.\r\n            }\r\n            str = \"<form class='pure-form'></form>\";\r\n            $(this).wrap(str);\r\n        });\r\n        $(\"button[type='submit']\").click(function(e) {\r\n            e.preventDefault();\r\n        });\r\n    },\r\n\r\n    addHelp: function() {\r\n        var curPageName = $.curPage.replace(/\\.htm$/, '');\r\n        if ( !! $.helpContent[curPageName] || !! $.helpContent[curPageName + $.sysMode]) {\r\n            var helpstr = '<div class=\"help-container\">' +\r\n                '<div class=\"help-btn-container\">' +\r\n                '<a class=\"btn-help\" href=\"javascript:void(0)\"></a>' +\r\n                '</div>' +\r\n                '<div class=\"help-content-container\">' +\r\n                '<div class=\"position-top-left\"></div>' +\r\n                '<div class=\"position-top-center\"></div>' +\r\n                '<div class=\"position-top-right\"></div>' +\r\n                '<div class=\"position-center-left\">' +\r\n                '<div class=\"position-center-right\">' +\r\n                '<span class=\"help-content-delta\"></span>' +\r\n                '<div class=\"help-content-container-wrap\">' +\r\n                '<div class=\"help-content\"></div>' +\r\n                '</div>' +\r\n                '</div>' +\r\n                '</div>' +\r\n                '<div class=\"position-bottom-left\"></div>' +\r\n                '<div class=\"position-bottom-center\"></div>' +\r\n                '<div class=\"position-bottom-right\"></div>' +\r\n                '</div>' +\r\n                '</div>';\r\n            $('div.help-container').remove();\r\n            $(\"#verticalFixed-con\").append(helpstr);\r\n\r\n            $.loadHelp($.curPage.replace(/\\.htm$/, ''));\r\n            var $helpContainer = $('div.help-container');\r\n            var $helpContent = $('.help-content-container');\r\n            $('div.help-btn-container').on('click', function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if ($helpContainer.hasClass('clicked')) {\r\n                    $helpContainer.removeClass('clicked');\r\n                    $helpContent.slideUp('fast');\r\n                    $(document).off('click.closeHelp');\r\n                } else {\r\n                    $helpContainer.addClass('clicked');\r\n                    $helpContent.slideDown('fast');\r\n                    $(document).off('click.closeHelp').on('click.closeHelp', function() {\r\n                        if ($helpContainer.hasClass('clicked')) {\r\n                            $helpContainer.removeClass('clicked');\r\n                            $helpContent.slideUp('fast');\r\n                            $(document).off('click.closeHelp');\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            $('div.help-btn-container').on('mouseenter.helpBtn', function(e) {\r\n                $(this).find('a.btn-help').addClass('hover');\r\n            });\r\n            $('div.help-btn-container').on('mouseleave.helpBtn', function(e) {\r\n                $(this).find('a.btn-help').removeClass('hover');\r\n            });\r\n            $helpContent.on('click', function(e) {\r\n                e.stopPropagation();\r\n            });\r\n\r\n            var resizeHelp = function() {\r\n                var wrap = $(\"div.help-content-container-wrap\");\r\n                var wh = $(window).height();\r\n                //56是底部栏的高度\r\n                wrap.css(\"max-height\", wh - 290 - 56);\r\n\r\n\r\n                if (($('#scroll').width() - $('#con').width()) / 2 >= $('.help-content-container').width()) {\r\n                    $helpContent.addClass('right');\r\n                } else {\r\n                    $helpContent.removeClass('right');\r\n                }\r\n            };\r\n            resizeHelp();\r\n\r\n            $(window).off('resize.helpBtn').on('resize.helpBtn', function() {\r\n                resizeHelp();\r\n            });\r\n        } else {\r\n            $('div.help-container').hide();\r\n        }\r\n\r\n        $(\"tr.editor-container\").children(\"td\").find(\"div.help-container\").remove();\r\n    },\r\n\r\n    loadHelp: function(name) {\r\n        name = name || $.curPage.replace(/\\.htm$/, '');\r\n        var help = this;\r\n        var index = 1;\r\n        var sectionFlag = false;   //use to mark a section is start or end\r\n\r\n        var render = function(contentObj) {\r\n            var htmlStr = \"\";\r\n            if (contentObj.TITLE) {\r\n                sectionFlag = true;\r\n                htmlStr += \"<div class=\\\"section-container\\\">\";\r\n                htmlStr += \"<h4 class=\\\"title\\\">\" + contentObj.TITLE + \"</h4>\";\r\n            }\r\n            var objContent = contentObj.CONTENT;\r\n            if (name == 'wanBasic') {\r\n                if ($.sysMode.toUpperCase() == 'ETH') {\r\n                    objContent = contentObj.CONTENT_ETH;\r\n                } else if ($.sysMode.toUpperCase() == 'DSL') {\r\n                    objContent = contentObj.CONTENT_DSL;\r\n                }\r\n            }\r\n\r\n            if (objContent) {\r\n                $(objContent).each(function(index, element) {\r\n                    htmlStr += contentRender(element);\r\n                })\r\n            }\r\n            if (sectionFlag == true) {\r\n                //section end\r\n                sectionFlag = false;\r\n                htmlStr += \"</div>\";\r\n            }\r\n            return htmlStr;\r\n        };\r\n\r\n        var contentRender = function(obj) {\r\n            if (obj.hasOwnProperty('display') && obj.display !== 1) {\r\n                if ((typeof obj.display == 'string' && eval(obj.display) != true) || (typeof obj.display == 'undefined') ||\r\n                    (obj.display == 0)) return '';\r\n            }\r\n            var htmlStr = \"\";\r\n            var type = obj.type;\r\n            var connector = obj.connector || \" - \";\r\n            switch (type) {\r\n                case \"title\":\r\n                    if (sectionFlag == true) {\r\n                        //section end\r\n                        htmlStr += \"</div>\";\r\n                    }\r\n                    //section start\r\n                    sectionFlag = true;\r\n                    htmlStr += \"<div class=\\\"section-container\\\">\";\r\n\r\n                    htmlStr += \"<div class=\\\"title-container\\\">\";\r\n                    if ( !! obj.title) {\r\n                        htmlStr += \"<h5 class=\\\"title title-title\\\">\" + obj.title + \"</h5>\";\r\n                        if ( !! obj.content) {\r\n                            htmlStr += \"<p>\" + obj.content + \"</p>\";\r\n                        }\r\n                    } else {\r\n                        htmlStr += \"<h5 class=\\\"title title-title\\\">\" + obj.content + \"</h5>\";\r\n                    }\r\n                    break;\r\n                case \"title2\":\r\n                    htmlStr += \"<div class=\\\"title-container\\\">\";\r\n                    htmlStr += \"<h5 class=\\\"title title-title2\\\">\" + obj.content + \"</h5>\";\r\n                    break;\r\n                case \"name\":\r\n                    if (index >= 2) {\r\n                        var level = index;\r\n                        htmlStr += \"<div class=\\\"name-container\" + level + \"\\\">\";\r\n                        htmlStr += \"<h5 class=\\\"title name-title\" + level + \"\\\">\" + obj.title + \"</h5>\";\r\n                        htmlStr += \"<span class=\\\"connector\\\">\" + connector + \"</span>\";\r\n                        htmlStr += \"<span>\" + (obj.content ? obj.content : '') + \"</span>\";\r\n\r\n                    } else {\r\n                        htmlStr += \"<div class=\\\"name-container\\\">\";\r\n                        htmlStr += \"<h5 class=\\\"title name-title\\\"><span class=\\\"name-text\\\">\" + obj.title + \"</span><span class=\\\"help-arrow\\\">arrow</span></h5>\";\r\n                        htmlStr += \"<div class=\\\"nd\\\"><p>\" + (obj.content ? obj.content : '') + \"</p>\";\r\n                    }\r\n\r\n                    break;\r\n                case \"paragraph\":\r\n                    htmlStr += \"<div class=\\\"paragraph-container\\\">\";\r\n\r\n                    if (obj.title) {\r\n                        htmlStr += \"<h5 class=\\\"title paragraph-title\\\">\" + obj.title + \"</h5>\";\r\n                    }\r\n\r\n                    htmlStr += \"<p class=\\\"paragraph\\\">\" + obj.content + \"</p>\";\r\n                    break;\r\n                case \"step\":\r\n                case \"note\":\r\n                    htmlStr += \"<div class=\\\"note-container\\\">\";\r\n                    htmlStr += \"<h5 class=\\\"title note-title\\\">\" + obj.title + \"</h5>\";\r\n                    htmlStr += \"<ol class=\\\"note\\\">\";\r\n                    $(obj.content).each(function(index, note) {\r\n                        if (note === undefined) {\r\n                            return;\r\n                        }\r\n                        if (typeof note === 'string') {\r\n                            htmlStr += \"<li>\" + note + \"</li>\";\r\n                        } else {\r\n                            htmlStr += \"<li>\" + contentRender(note) + \"</li>\";\r\n                        }\r\n                    });\r\n                    htmlStr += \"</ol>\";\r\n                    break;\r\n\r\n            }\r\n\r\n            if (obj.children) {\r\n                index++;\r\n                htmlStr += \"<div class=\\\"container sub-container  sub-container-\" + index + \"\\\">\";\r\n                $(obj.children).each(function(index, child) {\r\n                    htmlStr += contentRender(child);\r\n                });\r\n                htmlStr += \"</div>\";\r\n                index--;\r\n            }\r\n            if (obj.type == 'name' && index == 1) {\r\n                htmlStr += \"</div>\";\r\n            }\r\n            htmlStr += \"</div>\";\r\n            return htmlStr;\r\n        };\r\n\r\n        var contentObj;\r\n        if ( !! $.helpContent[name]) {\r\n            contentObj = $.helpContent[name];\r\n        } else {\r\n            name += $.sysMode.toUpperCase();\r\n            contentObj = $.helpContent[name];\r\n        }\r\n        var htmlStr = \"\";\r\n        htmlStr = render(contentObj);\r\n        var content = $(\"div.help-content\");\r\n        content.html($(htmlStr));\r\n\r\n        $('div.name-container h5.name-title').each(function() {\r\n            var self = $(this);\r\n            $(this).parent().on('click.help', function() {\r\n                var tempDiv = self.next('div');\r\n                var tempSpan = self.find('span');\r\n                if (tempDiv.hasClass('nd')) {\r\n                    self.addClass('h5-opened');\r\n                    tempDiv.slideDown('fast', function() {\r\n                        tempDiv.removeClass('nd');\r\n\r\n                    });\r\n                } else {\r\n                    self.removeClass('h5-opened');\r\n                    tempDiv.slideUp('fast', function() {\r\n                        tempDiv.addClass('nd');\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        //            wrap.scrollTop(0);\r\n    },\r\n\r\n    /**\r\n     * use to show/hide a section or some items of help\r\n     * @param display {boolean} true for show, false for hide\r\n     * @param sectionIndex {number} start from 0\r\n     * @param itemIndex {number or array} index in a section, start from 0.\r\n     */\r\n    displayHelp: function(display, sectionIndex, itemIndex) {\r\n        if (typeof sectionIndex !== 'number') {\r\n            return;\r\n        }\r\n        //addHelp is executed after init. put this in setTimeout to ensure it is executed after addHelp.\r\n        setTimeout(function() {\r\n            var content = $(\"div.help-content\");\r\n            var section = content.find('.section-container:eq('+ sectionIndex + ')');\r\n            if (itemIndex) {\r\n                if (!$.isArray(itemIndex)) {\r\n                    itemIndex = [itemIndex];\r\n                }\r\n\r\n                for (var i = 0, len = itemIndex.length; i < len; i++) {\r\n                    if (typeof  itemIndex[i] !== 'number') {\r\n                        continue;\r\n                    }\r\n                    //nth-child is start from 1\r\n                    var item = section.find(':nth-child(' +  (itemIndex[i] + 1) + ')');\r\n                    if (display === true) {\r\n                        item.show();\r\n                    } else {\r\n                        item.hide();\r\n                    }\r\n                }\r\n            } else {\r\n                //no itemIndex, display the whole section\r\n                if (display === true) {\r\n                    section.show();\r\n                } else {\r\n                    section.hide();\r\n                }\r\n            }\r\n        }, 100);\r\n\r\n    },\r\n\r\n    pwdIntensityCheck: function(div, val) {\r\n        div.slideDown();\r\n        div.find(\"span[class^=level]\").addClass(\"ori\").removeClass(\"green yellow red\");\r\n        if (!val) {\r\n            return;\r\n        }\r\n        var upperRe = /[A-Z]/;\r\n        var lowerRe = /[a-z]/;\r\n        var digitRe = /\\d/;\r\n        var otherRe = /(.[^a-zA-Z0-9])/;\r\n\r\n        var hasUpper = 0;\r\n        var hasLower = 0;\r\n        var hasDigit = 0;\r\n        var hasOther = 0;\r\n        var largeLength = 0;\r\n\r\n        var level = 0;\r\n\r\n        if (upperRe.test(val)) {\r\n            hasUpper = 1;\r\n        } else {\r\n            hasUpper = 0;\r\n        }\r\n\r\n        if (lowerRe.test(val)) {\r\n            hasLower = 1;\r\n        } else {\r\n            hasLower = 0;\r\n        }\r\n\r\n        if (digitRe.test(val)) {\r\n            hasDigit = 1;\r\n        } else {\r\n            hasDigit = 0;\r\n        }\r\n\r\n        if (otherRe.test(val)) {\r\n            hasOther = 1;\r\n        } else {\r\n            hasOther = 0;\r\n        }\r\n\r\n        if (val.length > 10) {\r\n            largeLength = 1;\r\n        } else {\r\n            largeLength = 0;\r\n        }\r\n\r\n        level = hasUpper + hasLower + hasDigit + largeLength + hasOther;\r\n\r\n        if (val.length <= 5) {\r\n            if (level <= 2) {\r\n                div.find(\"span.level1\").addClass(\"red\");\r\n            } else if (level == 3 || level == 4) {\r\n                div.find(\"span.level2\").addClass(\"yellow\");\r\n            }\r\n        } else {\r\n            if (level <= 1) {\r\n                div.find(\"span.level1\").addClass(\"red\");\r\n            } else if (level == 2 || level == 3) {\r\n                div.find(\"span.level2\").addClass(\"yellow\");\r\n            } else if (level >= 4) {\r\n                div.find(\"span.level3\").addClass(\"green\");\r\n            }\r\n        }\r\n    },\r\n\r\n    isValidGLUIP6Addr: function(ip6Addr) {\r\n        var flag;\r\n        var regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n        if (regExp.test(ip6Addr)) {\r\n            flag = true;\r\n        } else {\r\n            flag = false;\r\n        }\r\n\r\n        regExp = /::/;\r\n        if (flag) {\r\n            if (regExp.test(ip6Addr)) {\r\n                regExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                } else {\r\n                    var index = ip6Addr.indexOf(\"::\");\r\n                    var len = ip6Addr.length;\r\n                    var substr1 = ip6Addr.substr(0, index);\r\n                    var substr2 = ip6Addr.substr(index + 2, len - index - 2);\r\n                    regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                    var num = 0;\r\n\r\n                    if (\"\" == substr1 && \"\" == substr2) {\r\n                        return true;\r\n                    } else if (\"\" == substr2) {\r\n                        if (!regExp.test(substr1)) {\r\n                            flag = false;\r\n                        }\r\n                    } else if (\"\" == substr1) {\r\n\r\n                        if (!regExp.test(substr2)) {\r\n                            flag = false;\r\n                        }\r\n                    } else if (!regExp.test(substr1) || !regExp.test(substr2)) {\r\n                        flag = false;\r\n                    } else if (regExp.test(substr1) && regExp.test(substr2)) {\r\n                        for (var i = 0; i < substr1.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        for (var i = 0; i < substr2.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        if (num > 5) {\r\n                            flag = false;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                if (!regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (flag) {\r\n            var index;\r\n            index = ip6Addr.indexOf(\":\");\r\n            var substr = ip6Addr.substr(0, index);\r\n            if (0 == index || parseInt(substr, 16) == 0) {\r\n                regExp = /^((0{0,4})|::|:)*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n\r\n                regExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            } else if (parseInt(substr, 16) >= 65280) {\r\n                flag = false;\r\n            } else if (parseInt(substr, 16) >= 65152 && parseInt(substr, 16) <= 65215) {\r\n                flag = true;\r\n            } else {\r\n                if (parseInt(substr, 16) >= 8192 && parseInt(substr, 16) <= 16383) {\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return flag;\r\n    },\r\n    isValidGLUIP6AddrStrict: function(ip6Addr) {\r\n        var flag;\r\n        var regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n        if (regExp.test(ip6Addr)) {\r\n            flag = true;\r\n        } else {\r\n            flag = false;\r\n        }\r\n\r\n        regExp = /::/;\r\n        if (flag) {\r\n            if (regExp.test(ip6Addr)) {\r\n                regExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                } else {\r\n                    var index = ip6Addr.indexOf(\"::\");\r\n                    var len = ip6Addr.length;\r\n                    var substr1 = ip6Addr.substr(0, index);\r\n                    var substr2 = ip6Addr.substr(index + 2, len - index - 2);\r\n                    regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                    var num = 0;\r\n\r\n                    if (\"\" == substr1 && \"\" == substr2) {\r\n                        flag = false;\r\n                    } else if (\"\" == substr2) {\r\n                        flag = false;\r\n                    } else if (\"\" == substr1) {\r\n                        if (!regExp.test(substr2)) {\r\n                            flag = false;\r\n                        }\r\n                    } else if (!regExp.test(substr1) || !regExp.test(substr2)) {\r\n                        flag = false;\r\n                    } else if (regExp.test(substr1) && regExp.test(substr2)) {\r\n                        for (var i = 0; i < substr1.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        for (var i = 0; i < substr2.length; i++) {\r\n                            if (substr1.charAt(i) == \":\") {\r\n                                num += 1;\r\n                            }\r\n                        }\r\n\r\n                        if (num > 5) {\r\n                            flag = false;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                regExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n                if (!regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (flag) {\r\n            var index;\r\n            index = ip6Addr.indexOf(\":\");\r\n            var substr = ip6Addr.substr(0, index);\r\n            if (0 == index || parseInt(substr, 16) == 0) {\r\n                regExp = /^((0{0,4})|::|:)*$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n\r\n                regExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n                if (regExp.test(ip6Addr)) {\r\n                    flag = false;\r\n                }\r\n            } else if (parseInt(substr, 16) >= 65280) {\r\n                flag = false;\r\n            } else if (parseInt(substr, 16) >= 65152 && parseInt(substr, 16) <= 65215) {\r\n                flag = true;\r\n            } else {\r\n                if (parseInt(substr, 16) >= 8192 && parseInt(substr, 16) <= 16383) {\r\n                    flag = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return flag;\r\n    },\r\n\r\n    isTimeVaild: function(time) {\r\n        regExp = /^[0-9]{2}:[0-9]{2}$/;\r\n        if (!regExp.test(time)) {\r\n            return false;\r\n        }\r\n        var timePart = time.split(\":\");\r\n        if (timePart[0] > 23 || timePart[1] > 59) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    getDefaultHostname: function() {\r\n        var c;\r\n        var ch = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\r\n        var i = 0;\r\n        var hostname = \"\";\r\n        var hostnameLen = 0;\r\n\r\n        for (i = 0; i < $.model.length; i++) {\r\n            c = $.model.charAt(i);\r\n            if (ch.indexOf(c) == -1) {\r\n                if (hostnameLen == 0 || (hostnameLen > 0 && hostname.charAt(hostnameLen - 1) == \"_\"))\r\n                    continue;\r\n                else {\r\n                    hostname += \"_\";\r\n                    hostnameLen++;\r\n                }\r\n            } else {\r\n                hostname += c;\r\n                hostnameLen++;\r\n            }\r\n        }\r\n\r\n        return ((hostnameLen > 0 && hostname.charAt(hostnameLen - 1) == \"_\") ? hostname.substr(0, hostnameLen - 1) : hostname);\r\n    },\r\n\r\n    trans: function(obj) {\r\n        var elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\", \"label\", \"h3\", \"h5\", \"button\", \"a\"];\r\n        var strs = $.curPage ? n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]] : [];\r\n        for (var i in strs) {\r\n            if (obj.prop('id') == i) {\r\n                $.chgElem(obj.get(0), strs[i]);\r\n            } else {\r\n                $.chgElem(obj.find('#' + i).get(0), strs[i]);\r\n            }\r\n        }\r\n\r\n        $.each(elems, function() {\r\n            if (obj.is('' + this)) {\r\n                var tag;\r\n                tag = obj.prop('class').match(/\\bT_(\\w+)\\b/);\r\n                if (tag && tag[1]) {\r\n                    if (s_str[tag[1]] !== undefined) {\r\n                        $.chgElem(obj.get(0), s_str[tag[1]]);\r\n                    } else if (m_str[tag[1]] !== undefined) {\r\n                        $.chgElem(obj.get(0), m_str[tag[1]]);\r\n                    } else if (strs[tag[1]] !== undefined) {\r\n                        $.chgElem(obj.get(0), strs[tag[1]]);\r\n                    }\r\n                }\r\n            }\r\n            $.each(obj.find('' + this), function() {\r\n                var tag;\r\n                tag = $(this).prop('class').match(/\\bT_(\\w+)\\b/);\r\n                if (tag && tag[1]) {\r\n                    if (s_str[tag[1]] !== undefined) {\r\n                        $.chgElem($(this).get(0), s_str[tag[1]]);\r\n                    } else if (m_str[tag[1]] !== undefined) {\r\n                        $.chgElem($(this).get(0), m_str[tag[1]]);\r\n                    } else if (strs[tag[1]] !== undefined) {\r\n                        $.chgElem($(this).get(0), strs[tag[1]]);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    randomId: function(type) {\r\n        return type + \"-\" + parseInt(Math.random() * 1000 * 1000 * 1000 * 10, 10).toString();\r\n    },\r\n\r\n    setCentralPosition: function(me) {\r\n        var me = me || this;\r\n\r\n        var posX = parseInt(($(window).width() - me.width()) / 2, 10);\r\n        var posY = parseInt(($(window).height() - me.height()) / 2, 10);\r\n\r\n        me.css({\r\n            left: posX,\r\n            top: posY\r\n        });\r\n\r\n        return {\r\n            x: posX,\r\n            y: posY\r\n        }\r\n    },\r\n\r\n    setFixedCentral: function(me) {\r\n        var me = me || this;\r\n\r\n        var posX = parseInt(($(window).width() - me.width()) / 2, 10);\r\n        var posY = parseInt(($(window).height() - me.height()) / 2, 10);\r\n\r\n        me.css({\r\n            left: posX,\r\n            top: posY,\r\n            bottom: \"auto\",\r\n            right: \"auto\",\r\n            position: \"fixed\"\r\n        });\r\n\r\n        var changeSize = function() {\r\n            posX = parseInt(($(window).width() - me.width()) / 2, 10);\r\n            posY = parseInt(($(window).height() - me.height()) / 2, 10);\r\n\r\n            me.css({\r\n                left: posX,\r\n                top: posY\r\n            });\r\n        };\r\n\r\n        $(window).off(\"resize.setfixed\");\r\n        $(\"body#mainBody\").off(\"resize.setfixed\");\r\n        $(window).on(\"resize.setfixed\", changeSize);\r\n        $(\"body#mainBody\").on(\"resize.setfixed\", changeSize);\r\n    },\r\n\r\n    showCover: function() {\r\n        if ($.isMobileFlag) return;\r\n        var mask = $('div.mask#mask');\r\n        !!mask.length || (mask = $('<div id=\"mask\" class=\"mask\"><div id=\"cover-loading\"></div></div>').appendTo($('body#mainBody')));\r\n        mask.show();\r\n    },\r\n\r\n    hideCover: function() {\r\n        if ($.isMobileFlag) return;\r\n        var mask = $('div.mask#mask');\r\n        !!mask.length && mask.hide();\r\n    },\r\n\r\n    showWaiting: function() {\r\n        var detBox = $(\"#cover-loading\"),\r\n            width = 0,\r\n            height = 0,\r\n            con = $(\"#mask\"),\r\n            docWidth = document.documentElement.clientWidth,\r\n            docHeight = document.documentElement.clientHeight;\r\n\r\n        detBox.css(\"display\", \"block\");\r\n        var width = detBox.get(0).offsetWidth;\r\n        var height = detBox.get(0).offsetHeight;\r\n        var marginX = docWidth > width ? -(width / 2) : 0;\r\n        var marginY = docHeight > height ? -(height / 2) : 0;\r\n        var left = marginX == 0 ? 0 : '50%';\r\n        var top = marginY == 0 ? 0 : '50%';\r\n        detBox.css({\r\n            left: left,\r\n            top: top\r\n        });\r\n    },\r\n\r\n\tinitTpLteSmsTips: function() {\r\n\t    var tmp = $(\"div.lteSmsTips-container\").length == 0 ? $(\"<div id=\\\"lteSmsTips-container\\\" class=\\\"lteSmsTips-container\\\"></div>\").appendTo($(\"body\")) : $(\"div.lteSmsTips-container\");\r\n\t    tmp.tpLteSmsTips();\r\n\t},\r\n    /**\r\n     * The base implementation of `_.indexOf` without support for binary searches\r\n     * or `fromIndex` constraints.\r\n     *\r\n     * @private\r\n     * @param {Array} array The array to search.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @returns {number} Returns the index of the matched value or `-1`.\r\n     */\r\n    baseIndexOf: function(array, value, fromIndex) {\r\n        var index = (fromIndex || 0) - 1,\r\n            length = array ? array.length : 0;\r\n\r\n        while (++index < length) {\r\n            if (array[index] === value) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    },\r\n\r\n    errorTip: function(id, content) {\r\n        var str;\r\n        var errno = content;\r\n        if ($.isNumeric(errno)) {\r\n            if (e_str[errno]) {\r\n                str = e_str[errno];\r\n            } else {\r\n                str = e_str[ERR_UNKOWN];\r\n            }\r\n        } else {\r\n            str = content;\r\n        }\r\n        //        str += '&nbsp;<i>' + s_str.clickhide + '</i>';\r\n        $('#' + id + '_tips').showCold('fast');\r\n        $('#' + id + '_tips_content').html(str);\r\n    },\r\n\r\n    isMobile: function() {\r\n        if (!(\"WEB_INCLUDE_MOBILE_UI\" in window && window[\"WEB_INCLUDE_MOBILE_UI\"] == 1)) {\r\n            return false;\r\n        }\r\n        var check = false;\r\n        (function(a) {\r\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true\r\n        })(navigator.userAgent || navigator.vendor || window.opera);\r\n        $.isMobileFlag = check && (document.cookie.search('UserChange=true') === -1);\r\n        return check;\r\n    },\r\n\r\n    alert: function() {\r\n        if ($.isMobileFlag) {\r\n            return $.alertMobile(arguments)\r\n        } else {\r\n            return $.alertPC.apply($, arguments);\r\n        }\r\n    },\r\n\r\n    alertAsnyc: function() {\r\n        if ($.isMobileFlag) {\r\n            return $.alertMobile(arguments);\r\n        } else {\r\n            return $.alertPC.apply($, arguments);\r\n        }\r\n    },\r\n\r\n    toastGlobal: function(options) {\r\n        options = $.extend({}, options);\r\n        options.className = options.className || '';\r\n        options.text = options.text || '';\r\n\r\n        var html = '<div id=\"global-toast-container\">' +\r\n            '<div class=\"global-toast-wrapper\">' +\r\n            '<div class=\"shadow-top-left\"></div>' +\r\n            '<div class=\"shadow-top\"></div>' +\r\n            '<div class=\"shadow-top-right\"></div>' +\r\n            '<div class=\"shadow-left\">' +\r\n            '<div class=\"shadow-right\">' +\r\n            '<div class=\"global-toast-inner\">' +\r\n            '<span id=\"global-toast-text\"></span><span class=\"icon-close\"></span> </span>' +\r\n            '</div>' +\r\n            '</div>' +\r\n            '</div>' +\r\n            '<div class=\"shadow-bot-left\"></div>' +\r\n            '<div class=\"shadow-bot\"></div>' +\r\n            '<div class=\"shadow-bot-right\"></div>' +\r\n            '</div>' +\r\n            '</div>';\r\n        var toast_container = $('#global-toast-container').length > 0 ? $('#global-toast-container') : $(html).appendTo('body');\r\n        toast_container.removeClass().fadeInCold(400);\r\n        if (options.className) {\r\n            toast_container.addClass(options.className);\r\n        }\r\n        $('#global-toast-text').html(options.text);\r\n        $('#global-toast-container .icon-close').off('click').on('click', function() {\r\n            $('#global-toast-container').fadeOutCold(400);\r\n            if ($.isFunction(options.callback_close)) {\r\n                options.callback_close.call(window);\r\n            }\r\n        });\r\n    },\r\n\r\n    Base64Encoding: function(input) {\r\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = $.utf8_encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    },\r\n\r\n    utf8_encode: function(string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        var utftext = \"\";\r\n\r\n        for (var n = 0; n < string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n});\r\n\r\n(function($) {\r\n    $.fn.divmask = function() {\r\n        $(this).parent().append('<div class=\"div-mask\"> </div>');\r\n    };\r\n\r\n    $.fn.unmask = function() {\r\n        $(this).parent().find(\".div-mask\").remove();\r\n    };\r\n    $.fn.hideCold = function(speed, callback) {\r\n        if ($.isIE) {\r\n            $(this).hide(callback);\r\n        } else {\r\n            $(this).hide(speed, callback)\r\n        }\r\n    };\r\n    $.fn.showCold = function(speed, callback) {\r\n        if ($.isIE) {\r\n            $(this).show(callback);\r\n        } else {\r\n            $(this).show(speed, callback);\r\n        }\r\n    };\r\n    $.fn.fadeInCold = function(speed, callback) {\r\n        if ($.isIE) {\r\n            $(this).show(callback);\r\n        } else {\r\n            $(this).fadeIn(speed, callback);\r\n        }\r\n    };\r\n    $.fn.fadeOutCold = function(speed, callback) {\r\n        $(this).show(callback);\r\n        if ($.isIE) {\r\n            $(this).hide(callback);\r\n        } else {\r\n            $(this).fadeOut(speed, callback);\r\n        }\r\n    }\r\n})(jQuery);\r\n\r\nfunction initIndex() {\r\n    if ($('div')[0].style.borderRadius === undefined) {\r\n        $.isIE = true;\r\n    }\r\n     $.initTpLteSmsTips();\r\n    $.unloadCover = $.unlock;\r\n    try {\r\n        document.execCommand('BackgroundImageCache', false, true);\r\n    } catch (e) {}\r\n\r\n    var newcss = function() {\r\n        var link = $.c(\"link\");\r\n        link.rel = \"Stylesheet\";\r\n        link.type = \"text/css\";\r\n        return link;\r\n    };\r\n    var css = newcss();\r\n    if ($.browser.msie) {\r\n        switch (parseInt($.browser.version, 10)) {\r\n            case 8:\r\n            case 9:\r\n            case 10:\r\n                css.href = \"./css/ie.file.css\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    $.head.insertBefore(css, $.head.firstChild);\r\n\r\n    $.w.onresize = $.resize;\r\n\r\n    $.attach(document.documentElement, \"keydown\", function(e) {\r\n        var key = e.keyCode ? e.keyCode : e.charCode;\r\n        if (key == 116) {\r\n            $.refresh();\r\n            if (document.all) {\r\n                e.keyCode = 0;\r\n                e.returnValue = false;\r\n            } else {\r\n                e.cancelBubble = true;\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    });\r\n\r\n    if ($.local)\r\n        $.io($.params, true);\r\n\r\n    var infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\"]);\r\n    var ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n    var sysmodeobj;\r\n    \r\n\tif (INCLUDE_WAN_MODE)\r\n\t{\r\n\t\tif(INCLUDE_MULTIMODE)\r\n\t\t{\r\n\t\t\tsysmodeobj = $.act(ACT_GET, MULTIMODE, null, null, [\"mode\"]);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, null);\t\r\n\t\t}\r\n\t}\r\n\t\r\n    $.act(ACT_CGI, \"/cgi/info\");\r\n\r\n    $.exe();\r\n    if ($.local) {\r\n        infoobj = {\r\n            modelName: \"TD-W89741N\",\r\n            description: \"ADSL+ Router\"\r\n        };\r\n        ethobj = {\r\n            numberOfVirtualPorts: 4\r\n        };\r\n        sysmodeobj = {\r\n            mode: \"DSL\"\r\n        };\r\n    }\r\n    $.model = infoobj.modelName;\r\n    $.desc = infoobj.description;\r\n    $.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\r\n    if (INCLUDE_WAN_MODE)\r\n        $.sysMode = sysmodeobj.mode;\r\n\t\tif (INCLUDE_USB_3G_BACKUP)\r\n\t\t\t$.usb3gBackup = sysmodeobj.usb3gBackup;\r\n\t\tif (INCLUDE_EWAN_BACKUP)\r\n\t\t\t$.ewanBackup = sysmodeobj.ewanBackup;\r\n    try {\r\n        if ($.model) document.title = $.model;\r\n    } catch (e) {}\r\n    $.isFD = infoobj.X_TP_IsFD;\r\n\r\n    /*preload image*/\r\n    var img = new Image();\r\n    img.src = '/img/loading.gif';\r\n    delete img;\r\n\r\n    //$.cgi(\"/cgi/getParm\");\r\n    var ee=\"010001\";\r\n\tvar nn=\"B0768E8E77928A5C9C50E86611F9756BF898C91964E5112B05AC511B04A8935A15C262FE46B7C288D8D48DC06BEE9346EB83D007ADAEA9E741C1C05AB0F0FF49C8267CF3479F641E3008275F210F32262B995B490D3F79D09ECE5981B0C5F32FB0286524FA6D6052B064988A40BCA412E8BB16DCD73F670513F09240B502E5C5\";\r\n\tvar userSetting=1;\r\n\t$.ee = ee;\r\n    $.nn = nn;\r\n\r\n    $(function() {\r\n        if (typeof Object.getPrototypeOf !== 'function') {\r\n            if (typeof 'test'.__proto__ === 'object') {\r\n                Object.getPrototypeOf = function(object) {\r\n                    return object.__proto__;\r\n                };\r\n            } else {\r\n                Object.getPrototypeOf = function(object) {\r\n                    return object.constructor.prototype;\r\n                };\r\n            }\r\n        }\r\n    });\r\n}\r\n"
      }
    }, {
      "location" : {
        "uri" : "marked.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 21
      },
      "contents" : {
        "text" : "/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment|closed|closing) *(?:\\n{2,}|\\s*$)/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3]\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(this.smartypants(cap[0]));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/--/g, '\\u2014')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  return html.replace(/&([#\\w]+);/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function() {\n      var out, err;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n"
      }
    }, {
      "location" : {
        "uri" : "route6Edit.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 22
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar opt = $.mainParam[0];\r\nvar stk = $.mainParam[1];\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar staticRteList;\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\t\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (flag)\r\n\t{\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction isValidGLUIP6Addr(ip6Addr)\r\n{\r\n\tvar flag;\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (flag)\r\n\t{\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction init()\r\n{\r\n\tif (opt ==1)\r\n\t{\r\n\t\tvar staticRteCfg = $.act(ACT_GET, L3_IP6_FORWARDING_ENTRY, stk, null, [\"destIPv6Address\", \"destIPv6AddressPrefixLength\", \"gatewayIPv6Address\", \"__ifAliasName\",\"interface\",\"enable\"]);\t\r\n\t}\r\n\t\r\n\tipConnList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"name\", \"enable\", \"X_TP_IfName\", \"X_TP_IPv6Enabled\"]);\r\n\tpppConnList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"name\", \"enable\", \"X_TP_IfName\", \"X_TP_IPv6Enabled\"]);\r\n\tvar sel = $.id(\"wanInf\");\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var i = 0; i < ipConnList.length; i++)\r\n\t\t{\t\r\n\t\t\tif (ipConnList[i].enable == 1 && ipConnList[i].X_TP_IPv6Enabled == 1)\r\n\t\t\t{\r\n\t\t\t\tvar option = $.c(\"option\");\r\n\t\t\t\toption.value = ipConnList[i].name;\r\n\t\t\t\toption.text = ipConnList[i].name;\r\n\t\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var i = 0; i < pppConnList.length; i++)\r\n\t\t{\t\r\n\t\t\tif (pppConnList[i].enable == 1 && pppConnList[i].X_TP_IPv6Enabled == 1)\r\n\t\t\t{\r\n\t\t\t\tvar option = $.c(\"option\");\r\n\t\t\t\toption.value = pppConnList[i].name;\r\n\t\t\t\toption.text = pppConnList[i].name;\r\n\t\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = s_str.lan;\r\n\t\toption.text = s_str.lan;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tif (opt == 1)\r\n\t\t{\r\n\t\t\t$.id(\"desAddr\").value = staticRteCfg.destIPv6Address;\r\n\t\t\t$.id(\"prelen\").value = staticRteCfg.destIPv6AddressPrefixLength;\r\n\t\t\t$.id(\"defGw\").value = staticRteCfg.gatewayIPv6Address;\r\n\t\t\t$.id(\"wanInf\").value = staticRteCfg.__ifAliasName;\r\n\t\t\t$.id(\"state\").value = staticRteCfg.enable;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction doSave()\r\n{\r\n\tvar regExp = /^[0-9]{1,2}$/;\r\n\t\r\n\tif (!isValidGLUIP6Addr($.id(\"desAddr\").value))\r\n\t{\r\n\t\t$.alert(ERR_ROUTE6_DST_ADDR_VALID);\r\n\t\tvar element = $.id(\"desAddr\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ((!regExp.test($.id(\"prelen\").value)) || $.id(\"prelen\").value > 64 || ($.id(\"prelen\").value%8) != 0 )\r\n\t{\r\n\t\t$.alert(ERR_ROUTE6_PREFIX_LEN_VALID);\r\n\t\tvar element = $.id(\"prelen\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!isValidGLUIP6AddrStrict($.id(\"defGw\").value))\r\n\t{\r\n\t\t$.alert(ERR_ROUTE6_GW_ADDR_VALID);\r\n\t\tvar element = $.id(\"defGw\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar staticRteAttrs = {}; \r\n\tstaticRteAttrs.destIPv6Address = $.id(\"desAddr\").value;\r\n\tstaticRteAttrs.destIPv6AddressPrefixLength = $.id(\"prelen\").value;\r\n\tstaticRteAttrs.gatewayIPv6Address = $.id(\"defGw\").value;\r\n\r\n\tstaticRteAttrs.__ifAliasName = $.id(\"wanInf\").value;\r\n\tstaticRteAttrs.enable = $.id(\"state\").value;\r\n\r\n\tif ($.id(\"wanInf\").value == s_str.lan)  \r\n\t{\r\n\t\tstaticRteAttrs['interface'] = \"br0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (var i = 0; i < ipConnList.length; i++)\r\n\t\t{\r\n\t\t\tif (ipConnList[i].enable == 1 && ipConnList[i].X_TP_IPv6Enabled == 1 && ipConnList[i].name == staticRteAttrs.__ifAliasName)\r\n\t\t\t{\r\n\t\t\t\tstaticRteAttrs['interface'] = ipConnList[i].X_TP_IfName;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var i = 0; i < pppConnList.length; i++)\r\n\t\t{\r\n\t\t\tif (pppConnList[i].enable == 1 && pppConnList[i].X_TP_IPv6Enabled == 1 && pppConnList[i].name == staticRteAttrs.__ifAliasName)\r\n\t\t\t{\r\n\t\t\t\tstaticRteAttrs['interface'] = pppConnList[i].X_TP_IfName;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (opt == 0)\r\n\t\t$.act(ACT_ADD, L3_IP6_FORWARDING_ENTRY, null, null, staticRteAttrs);\r\n\telse if (opt == 1)\r\n\t\t$.act(ACT_SET, L3_IP6_FORWARDING_ENTRY, stk, null, staticRteAttrs);\r\n\t\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\t$.loadMain(\"route6.htm\");\r\n\t\t}\r\n\t});\r\n}\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 Static Route</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"L1 T\" id=\"t_info\">IPv6 Static Route information can be set on this page.</p>\r\n<p class=\"L1 T\" id=\"t_note\">Note: Only support IPv6 address which prefix length is 8/16/24/32/40/48/56/64.</p>\r\n<p class=\"br\"></p>\r\n<p class=\"L1\"><b class=\"item M T\" id=\"t_dstip6\">Destination IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"desAddr\" size=\"17\"  maxlength=\"39\" /></p>\r\n<p class=\"L1\"><b class=\"item M T\" id=\"t_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"prelen\" size=\"17\"  maxlength=\"39\" /></p>\r\n<p class=\"L1\"><b class=\"item M T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"defGw\" size=\"17\"  maxlength=\"39\" /></p>\r\n<p class=\"L1\"><b class=\"item M T T_intf\">Interface:</b><select class=\"L\" id=\"wanInf\"></select></p>\r\n<p class=\"L1\"><b class=\"item M T T_status\">Status:</b><select class=\"L\" id=\"state\">\r\n\t\t\t<option value=\"1\" class=\"T T_enabled\" id=\"state_en\">Enabled</option>\r\n\t\t\t<option value=\"0\" class=\"T T_disabled\" id=\"state_dis\">Disabled</option>\r\n</select></p>\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\">\r\n<input type=\"button\" class=\"button L T T_save\" id=\"saveBtn\" value=\"Save\" onclick=\"doSave();\" />\r\n<input type=\"button\" class=\"button L T T_back\" value=\"Back\" onclick=\"$.loadMain('route6.htm')\"/>\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "route6Edit_1.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 23
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar opt = $.mainParam[0];\r\nvar stk = $.mainParam[1];\r\nvar ipConnList;\r\nvar pppConnList;\r\nvar staticRteList;\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\t\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (flag)\r\n\t{\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction isValidGLUIP6Addr(ip6Addr)\r\n{\r\n\tvar flag;\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (flag)\r\n\t{\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction init()\r\n{\r\n\tif (opt ==1)\r\n\t{\r\n\t\tvar staticRteCfg = $.act(ACT_GET, L3_IP6_FORWARDING_ENTRY, stk, null, [\"destIPv6Address\", \"destIPv6AddressPrefixLength\", \"gatewayIPv6Address\", \"__ifAliasName\",\"interface\",\"enable\"]);\t\r\n\t}\r\n\t\r\n\tipConnList = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"name\", \"enable\", \"X_TP_IfName\", \"X_TP_IPv6Enabled\"]);\r\n\tpppConnList = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"name\", \"enable\", \"X_TP_IfName\", \"X_TP_IPv6Enabled\"]);\r\n\tvar sel = $.id(\"wanInf\");\r\n\tif (!$.exe())\r\n\t{\r\n\t\tfor (var i = 0; i < ipConnList.length; i++)\r\n\t\t{\t\r\n\t\t\tif (ipConnList[i].enable == 1 && ipConnList[i].X_TP_IPv6Enabled == 1)\r\n\t\t\t{\r\n\t\t\t\tvar option = $.c(\"option\");\r\n\t\t\t\toption.value = ipConnList[i].name;\r\n\t\t\t\toption.text = ipConnList[i].name;\r\n\t\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var i = 0; i < pppConnList.length; i++)\r\n\t\t{\t\r\n\t\t\tif (pppConnList[i].enable == 1 && pppConnList[i].X_TP_IPv6Enabled == 1)\r\n\t\t\t{\r\n\t\t\t\tvar option = $.c(\"option\");\r\n\t\t\t\toption.value = pppConnList[i].name;\r\n\t\t\t\toption.text = pppConnList[i].name;\r\n\t\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = \"LAN\";\r\n\t\toption.text = \"LAN\";\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\r\n\t\tif (opt == 1)\r\n\t\t{\r\n\t\t\t$.id(\"desAddr\").value = staticRteCfg.destIPv6Address;\r\n\t\t\t$.id(\"prelen\").value = staticRteCfg.destIPv6AddressPrefixLength;\r\n\t\t\t$.id(\"defGw\").value = staticRteCfg.gatewayIPv6Address;\r\n\t\t\t$.id(\"wanInf\").value = staticRteCfg.__ifAliasName;\r\n\t\t\t$.id(\"state\").value = staticRteCfg.enable;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction doSave()\r\n{\r\n\tvar regExp = /^[0-9]{1,2}$/;\r\n\t\r\n\tif (!isValidGLUIP6Addr($.id(\"desAddr\").value))\r\n\t{\r\n\t\t$.alert(ERR_ROUTE6_DST_ADDR_VALID);\r\n\t\tvar element = $.id(\"desAddr\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ((!regExp.test($.id(\"prelen\").value)) || $.id(\"prelen\").value > 64 || ($.id(\"prelen\").value%8) != 0 )\r\n\t{\r\n\t\t$.alert(ERR_ROUTE6_PREFIX_LEN_VALID);\r\n\t\tvar element = $.id(\"prelen\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!isValidGLUIP6AddrStrict($.id(\"defGw\").value))\r\n\t{\r\n\t\t$.alert(ERR_ROUTE6_GW_ADDR_VALID);\r\n\t\tvar element = $.id(\"defGw\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tvar staticRteAttrs = {}; \r\n\tstaticRteAttrs.destIPv6Address = $.id(\"desAddr\").value;\r\n\tstaticRteAttrs.destIPv6AddressPrefixLength = $.id(\"prelen\").value;\r\n\tstaticRteAttrs.gatewayIPv6Address = $.id(\"defGw\").value;\r\n\r\n\tstaticRteAttrs.__ifAliasName = $.id(\"wanInf\").value;\r\n\tstaticRteAttrs.enable = $.id(\"state\").value;\r\n\r\n\tif ($.id(\"wanInf\").value == \"LAN\")  \r\n\t{\r\n\t\tstaticRteAttrs['interface'] = \"br0\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (var i = 0; i < ipConnList.length; i++)\r\n\t\t{\r\n\t\t\tif (ipConnList[i].enable == 1 && ipConnList[i].X_TP_IPv6Enabled == 1 && ipConnList[i].name == staticRteAttrs.__ifAliasName)\r\n\t\t\t{\r\n\t\t\t\tstaticRteAttrs['interface'] = ipConnList[i].X_TP_IfName;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var i = 0; i < pppConnList.length; i++)\r\n\t\t{\r\n\t\t\tif (pppConnList[i].enable == 1 && pppConnList[i].X_TP_IPv6Enabled == 1 && pppConnList[i].name == staticRteAttrs.__ifAliasName)\r\n\t\t\t{\r\n\t\t\t\tstaticRteAttrs['interface'] = pppConnList[i].X_TP_IfName;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (opt == 0)\r\n\t\t$.act(ACT_ADD, L3_IP6_FORWARDING_ENTRY, null, null, staticRteAttrs);\r\n\telse if (opt == 1)\r\n\t\t$.act(ACT_SET, L3_IP6_FORWARDING_ENTRY, stk, null, staticRteAttrs);\r\n\t\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\t$.loadMain(\"route6.htm\");\r\n\t\t}\r\n\t});\r\n}\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 Static Route</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"L1 T\" id=\"t_info\">IPv6 Static Route information can be set on this page.</p>\r\n<p class=\"L1 T\" id=\"t_note\">Note: Only support IPv6 address which prefix length is 8/16/24/32/40/48/56/64.</p>\r\n<p class=\"br\"></p>\r\n<p class=\"L1\"><b class=\"item M T\" id=\"t_dstip6\">Destination IPv6 Address:</b><input type=\"text\" class=\"text\" id=\"desAddr\" size=\"17\"  maxlength=\"39\" /></p>\r\n<p class=\"L1\"><b class=\"item M T\" id=\"t_plen\">Prefix Length:</b><input type=\"text\" class=\"text\" id=\"prelen\" size=\"17\"  maxlength=\"39\" /></p>\r\n<p class=\"L1\"><b class=\"item M T T_gateway\">Gateway:</b><input type=\"text\" class=\"text\" id=\"defGw\" size=\"17\"  maxlength=\"39\" /></p>\r\n<p class=\"L1\"><b class=\"item M T T_intf\">Interface:</b><select class=\"L\" id=\"wanInf\"></select></p>\r\n<p class=\"L1\"><b class=\"item M T T_status\">Status:</b><select class=\"L\" id=\"state\">\r\n\t\t\t<option value=\"1\" class=\"T T_enabled\" id=\"state_en\">Enabled</option>\r\n\t\t\t<option value=\"0\" class=\"T T_disabled\" id=\"state_dis\">Disabled</option>\r\n</select></p>\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\">\r\n<input type=\"button\" class=\"button L T T_save\" id=\"saveBtn\" value=\"Save\" onclick=\"doSave();\" />\r\n<input type=\"button\" class=\"button L T T_back\" value=\"Back\" onclick=\"$.loadMain('route6.htm')\"/>\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\ninit();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "tunnel6.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 24
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar wanIpList;\r\nvar wanPppList;\r\nvar mainTunnel;\r\nvar dsliteTunnel;\r\nvar sit6rdTunnel;\r\n\r\nfunction isValidIP6Prefix(ip6Prefix)\r\n{\r\n\tvar len = 0; \r\n\tvar flag = true ;\r\n\tvar temStr = \"\";\r\n\tvar num = 0;\r\n\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Prefix))\r\n\t\t{\t\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Prefix))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Prefix.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Prefix.length;\r\n\t\t\t\tvar substr1 = ip6Prefix.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Prefix.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Prefix))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction isValidGLUIP6AddrStrict(ip6Addr)\r\n{\r\n\tvar flag;\r\n\tvar regExp = /^(:|[a-f]|[A-F]|[0-9]){1,39}$/;\r\n\tif (regExp.test(ip6Addr))\r\n\t{\r\n\t\tflag = true;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tflag = false;\r\n\t}\r\n\t\r\n\tregExp = /::/;\r\n\tif (flag)\r\n\t{\r\n\t\tif (regExp.test(ip6Addr))\r\n\t\t{\t\r\n\t\t\tregExp = /^([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*(::)([a-f]|[A-F]|[0-9])*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvar index = ip6Addr.indexOf(\"::\");\r\n\t\t\t\tvar len = ip6Addr.length;\r\n\t\t\t\tvar substr1 = ip6Addr.substr(0, index);\r\n\t\t\t\tvar substr2 = ip6Addr.substr(index+2, len - index - 2);\r\n\t\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){0,6}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\t\tvar num = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tif (\"\" == substr1 && \"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr2)\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (\"\" == substr1)\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tif (!regExp.test(substr2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (!regExp.test(substr1) || !regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t}\r\n\t\t\t\telse if (regExp.test(substr1) && regExp.test(substr2))\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < substr1.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i < substr2.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (substr1.charAt(i) == \":\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnum += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tif (num > 5)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tregExp = /^(([a-f]|[A-F]|[0-9]){1,4}(:)){7}([a-f]|[A-F]|[0-9]){1,4}$/;\r\n\t\t\tif (!regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (flag)\r\n\t{\r\n\t\tvar index;\r\n\t\tindex = ip6Addr.indexOf(\":\");\r\n\t\tvar substr = ip6Addr.substr(0,index);\r\n\t\tif (0 == index || parseInt(substr,16) == 0)\r\n\t\t{\r\n\t\t\tregExp = /^((0{0,4})|::|:)*$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tregExp = /^(((0){0,4})|::|:)*((0){0,3}(1))$/;\r\n\t\t\tif (regExp.test(ip6Addr))\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65280)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t}\r\n\t\telse if (parseInt(substr,16) >= 65152 && parseInt(substr,16) <= 65215)\r\n\t\t{\r\n\t\t\tflag = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (parseInt(substr,16) >= 8192 && parseInt(substr,16) <= 16383)\r\n\t\t\t{\r\n\t\t\t\tflag = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn flag;\r\n}\r\n\r\nfunction changeMechanism()\r\n{\r\n\tif ($.id(\"t_dslite\").selected == 1)\r\n\t{\r\n\t\tif (dsliteTunnel.dynamic == 1)\r\n\t\t\t$.id(\"auto\").checked = 1;\r\n\t\telse\r\n\t\t\t$.id(\"manual\").checked =1;\r\n\t\t\t\r\n\t\t$.removeClass($.id(\"wan6_select\"), \"nd\");\r\n\t\t$.addClass($.id(\"wan_select\"), \"nd\");\r\n\t\t\r\n\t\t$.removeClass($.id(\"conf_type\"), \"nd\");\r\n\r\n\t\t$.removeClass($.id(\"dslite_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"6rd_elem\"), \"nd\");\r\n\t}\r\n\telse if ($.id(\"t_6rd\").selected == 1)\r\n\t{\r\n\t\tif (sit6rdTunnel.dynamic == 1)\r\n\t\t\t$.id(\"auto\").checked = 1;\r\n\t\telse\r\n\t\t\t$.id(\"manual\").checked = 1;\r\n\t\t\r\n\t\t$.addClass($.id(\"wan6_select\"), \"nd\");\r\n\t\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\t\r\n\t\t$.removeClass($.id(\"conf_type\"), \"nd\");\r\n\t\t\r\n\t\t$.addClass($.id(\"dslite_elem\"), \"nd\");\r\n\t\t$.removeClass($.id(\"6rd_elem\"), \"nd\");\r\n\t}\r\n\telse if ($.id(\"t_6to4\").selected == 1)\r\n\t{\r\n\t\t$.addClass($.id(\"wan6_select\"), \"nd\");\r\n\t\t$.removeClass($.id(\"wan_select\"), \"nd\");\r\n\t\t\r\n\t\t$.addClass($.id(\"conf_type\"), \"nd\");\r\n\t\t\r\n\t\t$.addClass($.id(\"dslite_elem\"), \"nd\");\r\n\t\t$.addClass($.id(\"6rd_elem\"), \"nd\");\r\n\t}\r\n\t\r\n\tchangeMode();\r\n}\r\n\r\nfunction changeMode()\r\n{\r\n\tif ($.id(\"auto\").checked == 1)\r\n\t{\r\n\t\t$.id(\"raddr\").disabled = 1;\r\n\t\t$.id(\"masklen\").disabled = 1;\r\n\t\t$.id(\"pre\").disabled = 1;\r\n\t\t$.id(\"prelen\").disabled = 1;\r\n\t\t$.id(\"relayaddr\").disabled = 1;\r\n\t}\r\n\telse\r\n\t{\t\r\n\t\t$.id(\"raddr\").disabled = 0;\r\n\t\t$.id(\"masklen\").disabled = 0;\r\n\t\t$.id(\"pre\").disabled = 0;\r\n\t\t$.id(\"prelen\").disabled = 0;\r\n\t\t$.id(\"relayaddr\").disabled = 0;\r\n\t}\r\n}\r\n\r\nfunction checkDSLiteAttr(obj)\r\n{\r\n\tif (!isValidGLUIP6AddrStrict(obj.remoteIPv6Address))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\tvar element = $.id(\"raddr\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\t$.alert(ERR_TUNNEL6_DSLITE_REMOTE_INVALID);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction check6rdAttr(obj)\r\n{\t\r\n\tif ($.num(obj.IPv4MaskLen, [0, 31], true))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\tvar element = $.id(\"masklen\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\t$.alert(ERR_TUNNEL6_6RD_IP_MASK_LEN_INVALID);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif (!isValidIP6Prefix(obj.prefix))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\tvar element = $.id(\"pre\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\t$.alert(ERR_TUNNEL6_6RD_PREFIX_INVALID);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.num(obj.prefixLen, [1, 32], true))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\tvar element = $.id(\"prelen\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\t$.alert(ERR_TUNNEL6_6RD_PREFIX_LEN_INVALID);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tif ($.ifip(obj.borderRelayIPv4Address, true))\r\n\t{\r\n\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\tvar element = $.id(\"relayaddr\");\r\n\t\tif (element){\r\n\t\t\telement.focus();\r\n\t\t\telement.select();\r\n\t\t}\r\n\t\t$.alert(ERR_TUNNEL6_6RD_BR_INVALID);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n\r\nfunction initWan()\r\n{\r\n\tvar index = 0;\r\n\tvar sel = $.id(\"waninf\");\r\n\r\n\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t{\r\n\t\tif (wanIpList[i].enable == 1 && wanIpList[i].X_TP_IPv4Enabled == 1 && wanIpList[i].connectionType != \"IP_Bridged\" && wanIpList[i].connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\tvar option = $.c(\"option\");\r\n\t\t\toption.value = wanIpList[i].__stack;\r\n\t\t\toption.text = wanIpList[i].name;\r\n\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\tindex++;\r\n\t\t\tif (wanIpList[i].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tsel.selectedIndex = index - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (var j = 0; j < wanPppList.length; j++)\r\n\t{\r\n\t\tif (wanPppList[j].enable == 1 && wanPppList[j].X_TP_IPv4Enabled == 1 && wanPppList[j].connectionStatus == \"Connected\")\r\n\t\t{\r\n\t\t\tvar option = $.c(\"option\");\r\n\t\t\toption.value = wanPppList[j].__stack;\r\n\t\t\toption.text = wanPppList[j].name;\r\n\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\tindex++;\r\n\t\t\tif (wanPppList[j].X_TP_IfName == mainTunnel.associatedWanIfName)\r\n\t\t\t{\r\n\t\t\t\tsel.selectedIndex = index - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (index == 0)\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t}\r\n}\r\n\r\nfunction initWan6()\r\n{\r\n\tvar index = 0;\r\n\tvar sel = $.id(\"wan6inf\");\r\n\r\n\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t{\r\n\t\tif (wanIpList[i].enable == 1 && wanIpList[i].X_TP_IPv6Enabled == 1 && wanIpList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t{\r\n\t\t\tvar option = $.c(\"option\");\r\n\t\t\toption.value = wanIpList[i].__stack;\r\n\t\t\toption.text = wanIpList[i].name;\r\n\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\tindex++;\r\n\t\t\t\r\n\t\t\tif (wanIpList[i].X_TP_IfName == mainTunnel.associatedWanIfName )\r\n\t\t\t{\r\n\t\t\t\tsel.selectedIndex = index - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (var j = 0; j < wanPppList.length; j++)\r\n\t{\r\n\t\tif (wanPppList[j].enable == 1 && wanPppList[j].X_TP_IPv6Enabled == 1 && wanPppList[j].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t{\r\n\t\t\tvar option = $.c(\"option\");\r\n\t\t\toption.value = wanPppList[j].__stack;\r\n\t\t\toption.text = wanPppList[j].name;\r\n\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\tindex++;\r\n\t\t\t\r\n\t\t\tif (wanPppList[j].X_TP_IfName == mainTunnel.associatedWanIfName )\r\n\t\t\t{\r\n\t\t\t\tsel.selectedIndex = index - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (index == 0)\r\n\t{\r\n\t\tvar option = $.c(\"option\");\r\n\t\toption.value = 0;\r\n\t\toption.text = s_str.noAvailIntf;\r\n\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t}\r\n}\r\n\r\nfunction init()\r\n{\r\n\tmainTunnel = $.act(ACT_GET, IP6_TUNNEL, null, null);\r\n\tdsliteTunnel = $.act(ACT_GET, DSLITE, null, null);\r\n\tsit6rdTunnel = $.act(ACT_GET, SIT_6RD, null, null);\r\n\t\r\n\twanIpList = $.act(ACT_GL, WAN_IP_CONN, null, null);\r\n\twanPppList = $.act(ACT_GL, WAN_PPP_CONN, null, null);\r\n\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tinitWan();\r\n\t\t\tinitWan6();\r\n\t\t\t\r\n\t\t\t$.id(\"tunnel_en\").checked = (mainTunnel.enabled == 1) ? 1 : 0;\r\n\t\t\t\r\n\t\t\t$.id(\"raddr\").value = dsliteTunnel.remoteIPv6Address ? dsliteTunnel.remoteIPv6Address : \"::\";\r\n\r\n\t\t\t$.id(\"masklen\").value = sit6rdTunnel.IPv4MaskLen;\r\n\t\t\t$.id(\"pre\").value = sit6rdTunnel.prefix ? sit6rdTunnel.prefix : \"::\";\r\n\t\t\t$.id(\"prelen\").value = sit6rdTunnel.prefixLen;\r\n\t\t\t$.id(\"relayaddr\").value = sit6rdTunnel.borderRelayIPv4Address ? sit6rdTunnel.borderRelayIPv4Address : \"0.0.0.0\";\r\n\t\t\t\r\n\t\t\tif (mainTunnel.mechanism == 0)\r\n\t\t\t\t$.id(\"t_dslite\").selected = 1;\r\n\t\t\telse if (mainTunnel.mechanism == 1)\r\n\t\t\t\t$.id(\"t_6rd\").selected = 1;\r\n\t\t\telse if (mainTunnel.mechanism == 2)\r\n\t\t\t\t$.id(\"t_6to4\").selected = 1;\r\n\t\t\tchangeMechanism();\r\n\t\t\t\r\n\t\t\tif (mainTunnel.enabled == 1)\r\n\t\t\t{\r\n\t\t\t\tif (mainTunnel.mechanism == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t\t\t{\t\t\t\r\n\t\t\t\t\t\tif (wanIpList[i].connectionStatus == \"Connected\" && wanIpList[i].connectionType != \"IP_Bridged\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.alert(ERR_TUNNEL6_DSLITE_WAN_CONN_ERR);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t\t\t\t{\t\t\t\r\n\t\t\t\t\t\tif (wanPppList[i].connectionStatus == \"Connected\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.alert(ERR_TUNNEL6_DSLITE_WAN_CONN_ERR);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (mainTunnel.mechanism == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t\t\t{\t\t\t\r\n\t\t\t\t\t\tif (wanIpList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.alert(ERR_TUNNEL6_6RD_WAN_CONN_ERR);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t\t\t\t{\t\t\t\r\n\t\t\t\t\t\tif (wanPppList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.alert(ERR_TUNNEL6_6RD_WAN_CONN_ERR);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (mainTunnel.mechanism == 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t\t\t{\t\t\t\r\n\t\t\t\t\t\tif (wanIpList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.alert(ERR_TUNNEL6_6TO4_WAN_CONN_ERR);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t\t\t\t{\t\t\t\r\n\t\t\t\t\t\tif (wanPppList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.alert(ERR_TUNNEL6_6TO4_WAN_CONN_ERR);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction doSave()\r\n{\r\n\tvar wan6InfName;\r\n\tvar wanInfName;\r\n\tvar tunnelAttrs = {};\r\n\tvar dsliteAttrs = {};\r\n\tvar sit6rdAttrs = {};\r\n\t\t\r\n\ttunnelAttrs.enabled = ($.id(\"tunnel_en\").checked == 1) ? 1 : 0 ;\r\n\t\r\n\tif ($.id(\"t_dslite\").selected == 1)\r\n\t{\r\n\t\ttunnelAttrs.mechanism = 0;\r\n\t\t\r\n\t\tif (tunnelAttrs.enabled == 1)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t{\t\t\t\r\n\t\t\t\tif (wanIpList[i].connectionStatus == \"Connected\" && wanIpList[i].connectionType != \"IP_Bridged\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_DSLITE_WAN_CONN_ERR);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t\t{\t\t\t\r\n\t\t\t\tif (wanPppList[i].connectionStatus == \"Connected\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_DSLITE_WAN_CONN_ERR);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twan6InfName = $.id(\"wan6inf\").options[$.id(\"wan6inf\").selectedIndex].text;\r\n\t\tif ((!wan6InfName) || (wan6InfName == \"No available interface.\"))\r\n\t\t{\r\n\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t{\r\n\t\t\tif (wanIpList[i].name == wan6InfName)\r\n\t\t\t{\r\n\t\t\t\ttunnelAttrs.associatedWanIfName = wanIpList[i].X_TP_IfName;\r\n\t\t\t\ttunnelAttrs.localAddress = wanIpList[i].X_TP_ExternalIPv6Address;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t{\r\n\t\t\tif (wanPppList[i].name == wan6InfName)\r\n\t\t\t{\r\n\t\t\t\ttunnelAttrs.associatedWanIfName = wanPppList[i].X_TP_IfName;\r\n\t\t\t\ttunnelAttrs.localAddress = wanPppList[i].X_TP_ExternalIPv6Address;\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"t_6rd\").selected == 1)\r\n\t{\r\n\t\ttunnelAttrs.mechanism = 1;\r\n\t\t\r\n\t\tif (tunnelAttrs.enabled == 1)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (wanIpList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_6RD_WAN_CONN_ERR);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (wanPppList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_6RD_WAN_CONN_ERR);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twanInfName = $.id(\"waninf\").options[$.id(\"waninf\").selectedIndex].text;\r\n\t\tif ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\t\t{\r\n\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t{\t\t\t\r\n\t\t\tif (wanIpList[i].name == wanInfName)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"auto\").checked == 1 && wanIpList[i].addressingType == \"Static\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_6RD_NOT_SUPPORT_AUTO);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttunnelAttrs.associatedWanIfName = wanIpList[i].X_TP_IfName;\r\n\t\t\t\ttunnelAttrs.localAddress = wanIpList[i].externalIPAddress;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t{\t\t\t\r\n\t\t\tif (wanPppList[i].name == wanInfName)\r\n\t\t\t{\r\n\t\t\t\tif ($.id(\"auto\").checked == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_6RD_NOT_SUPPORT_AUTO);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttunnelAttrs.associatedWanIfName = wanPppList[i].X_TP_IfName;\r\n\t\t\t\ttunnelAttrs.localAddress = wanPppList[i].externalIPAddress;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if ($.id(\"t_6to4\").selected == 1)\r\n\t{\r\n\t\ttunnelAttrs.mechanism = 2;\r\n\t\tif (tunnelAttrs.enabled == 1)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (wanIpList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_6TO4_WAN_CONN_ERR);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (wanPppList[i].X_TP_IPv6ConnStatus == \"Connected\")\r\n\t\t\t\t{\r\n\t\t\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t\t\t$.alert(ERR_TUNNEL6_6TO4_WAN_CONN_ERR);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twanInfName = $.id(\"waninf\").options[$.id(\"waninf\").selectedIndex].text;\r\n\t\tif ((!wanInfName) || (wanInfName == \"No available interface.\"))\r\n\t\t{\r\n\t\t\t$.removeLoading($.id(\"saveBtn\"));\r\n\t\t\t$.alert(ERR_IP6_WAN_CONN_NONE);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t{\r\n\t\t\tif (wanIpList[i].name == wanInfName)\r\n\t\t\t{\r\n\t\t\t\ttunnelAttrs.associatedWanIfName = wanIpList[i].X_TP_IfName;\r\n\t\t\t\ttunnelAttrs.localAddress = wanIpList[i].externalIPAddress;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t{\t\t\t\r\n\t\t\tif (wanPppList[i].name == wanInfName)\r\n\t\t\t{\r\n\t\t\t\ttunnelAttrs.associatedWanIfName = wanPppList[i].X_TP_IfName;\r\n\t\t\t\ttunnelAttrs.localAddress = wanPppList[i].externalIPAddress;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t$.act(ACT_SET, SIT_6RD, null, null, [\"enabled=0\"]);\r\n\t}\r\n\t$.addLoading($.id(\"saveBtn\"));\r\n\t$.act(ACT_SET, IP6_TUNNEL, null, null, tunnelAttrs);\r\n\t\r\n\t$.exe(function(err)\r\n\t{\r\n\t\tif (!err)\r\n\t\t{\r\n\t\t\tif ($.id(\"t_dslite\").selected == 1)\r\n\t\t\t{\r\n\t\t\t\tvar isDynamic;\r\n\t\t\t\tisDynamic = ($.id(\"auto\").checked == 1) ? 1 : 0;\r\n\t\t\t\tif (tunnelAttrs.enabled == 1) \r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tif ((wanIpList[i].X_TP_IfName == tunnelAttrs.associatedWanIfName))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, wanIpList[i].__stack, null, [\"X_TP_DSLiteEnabled=\"+isDynamic]);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i = 0; i < wanPppList.length; i++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tif ((wanPppList[i].X_TP_IfName == tunnelAttrs.associatedWanIfName))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.act(ACT_SET, WAN_PPP_CONN, wanPppList[i].__stack, null, [\"X_TP_DSLiteEnabled=\"+isDynamic]);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdsliteAttrs.dynamic = isDynamic;\r\n\t\t\t\tif ( dsliteAttrs.dynamic == 0 )\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tdsliteAttrs.remoteIPv6Address = $.id(\"raddr\").value;\r\n\t\t\t\t\tif (!checkDSLiteAttr(dsliteAttrs))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdsliteAttrs.enabled = 1;\t\r\n\t\t\t\tsit6rdAttrs.enabled = 0;\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"t_6rd\").selected == 1)\r\n\t\t\t{\r\n\t\t\t\tvar isDynamic;\r\n\t\t\t\tisDynamic = ($.id(\"auto\").checked == 1) ? 1 : 0;\r\n\t\t\t\t\r\n\t\t\t\tif (tunnelAttrs.enabled == 1) \r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var i = 0; i < wanIpList.length; i++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tif ((wanIpList[i].X_TP_IfName == tunnelAttrs.associatedWanIfName))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.act(ACT_SET, WAN_IP_CONN, wanIpList[i].__stack, null, [\"X_TP_Sit6rdEnabled=\"+isDynamic]);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t\tsit6rdAttrs.dynamic = isDynamic;\r\n\t\t\t\tif (sit6rdAttrs.dynamic == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tsit6rdAttrs.IPv4MaskLen = $.id(\"masklen\").value;\r\n\t\t\t\t\tsit6rdAttrs.prefix = $.id(\"pre\").value;\r\n\t\t\t\t\tsit6rdAttrs.prefixLen = $.id(\"prelen\").value;\r\n\t\t\t\t\tsit6rdAttrs.borderRelayIPv4Address = $.id(\"relayaddr\").value;\r\n\t\t\t\t\tif (!check6rdAttr(sit6rdAttrs))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdsliteAttrs.enabled = 0;\r\n\t\t\t\tsit6rdAttrs.enabled = 1;\r\n\t\t\t}\r\n\t\t\telse if ($.id(\"t_6to4\").selected == 1)\r\n\t\t\t{\r\n\t\t\t\tdsliteAttrs.enabled = 0;\t\r\n\t\t\t\tsit6rdAttrs.enabled = 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.act(ACT_SET, DSLITE, null, null, dsliteAttrs);\r\n\t\t\t$.act(ACT_SET, SIT_6RD, null, null, sit6rdAttrs);\r\n\t\t\t$.exe(function(ret){if (!ret) $.loadMain(\"tunnel6.htm\");});\t\r\n\t\t}\r\n\t});\r\n}\r\n</script>\r\n<p class=\"et T\" id=\"et\">IPv6 Tunnel</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"L1 T\" id=\"t_note\">Note: You must reconfigure this page after rebooting the device. And you must also make sure that the WAN connection you want to use is connected before you configure the tunnel.</p>\r\n<p class=\"br\"></p>\r\n<p class=\"L1\"><b class=\"item L T T_en\">Enable:</b><input type=\"checkbox\" id=\"tunnel_en\"/></p>\r\n<p class=\"L1\"><b class=\"item T\" id=\"t_mech\">Mechanism:</b>\r\n<select id=\"mechanism\" onchange=\"changeMechanism();\">\r\n<option value=\"0\" id=\"t_dslite\">DS-Lite</option>\r\n<option value=\"1\" id=\"t_6rd\">6RD</option>\r\n<option value=\"2\" id=\"t_6to4\">6to4</option>\r\n</select>\r\n</p>\r\n<p class=\"br\"></p>\r\n<div id=\"wan6_select\">\r\n<p class=\"L1\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"wan6inf\"></select></p>\r\n</div>\r\n<div id=\"wan_select\" class=\"nd\">\r\n<p class=\"L1\"><b class=\"item L T T_wanconn\">WAN Connection:</b><select id=\"waninf\"></select></p>\r\n</div>\r\n<div id=\"conf_type\">\r\n<p class=\"L1\"><b class=\"item L T\" id=\"t_conftype\">Configuration Type:</b>\r\n<input name=\"mode\" type=\"radio\" id=\"auto\" onclick=\"changeMode();\"/><span class=\"T T_auto\">Auto</span>\r\n<input name=\"mode\" type=\"radio\" id=\"manual\" onclick=\"changeMode();\"/><span class=\"T\" id=\"t_manual\">Manual</span>\r\n</p>\r\n</div>\r\n<div id=\"dslite_elem\">\r\n<p class=\"L1\"><b class=\"item T\" id=\"t_remote\">Remote IPv6 Address:</b><input type=\"text\" class=\"text\" size=\"17\" maxlength=\"40\" id=\"raddr\" /></p>\r\n</div>\r\n<div id=\"6rd_elem\" class=\"nd\">\r\n<p class=\"L1\"><b class=\"item T\" id=\"t_masklen\">IPv4 Mask Length:</b><input type=\"text\" class=\"text\" size=\"17\" maxlength=\"17\" id=\"masklen\" /></p>\r\n<p class=\"L1\"><b class=\"item T\" id=\"t_6rdpfx\">6RD Prefix:</b><input type=\"text\" class=\"text\" size=\"17\" maxlength=\"40\" id=\"pre\" /></p>\r\n<p class=\"L1\"><b class=\"item T\" id=\"t_6rdplen\">6RD Prefix Length:</b><input type=\"text\" class=\"text\" size=\"17\" maxlength=\"17\" id=\"prelen\" /></p>\r\n<p class=\"L1\"><b class=\"item T\" id=\"t_braddr\">Border Relay IPv4 Address:</b><input type=\"text\" class=\"text\" size=\"17\" maxlength=\"17\" id=\"relayaddr\" /></p>\r\n</div>\r\n</div>\r\n<p class=\"bl\"></p>\r\n\t<p class=\"tail\" id=\"tail\"><input type=\"button\" class=\"button L T T_save\" id=\"saveBtn\" value=\"Save\" onclick=\"doSave();\" /></p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\n$.loadHelpFrame(\"IPv6TunnelHelp.htm\");\r\ninit();\r\n</script>"
      }
    }, {
      "location" : {
        "uri" : "index_10.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 25
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<link rel=\"Stylesheet\" href=\"./css/other.css\" type=\"text/css\" />\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/icon.jpg\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n</head>\r\n<frameset rows=\"90,*\" border='0' framespacing='0'>\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset border=\"5\" framespacing=\"5\" cols=\"226,55%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"0\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"0\">\r\n\t</frameset>\r\n</frameset>\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "index_11.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 26
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/icon.jpg\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n</head>\r\n<frameset rows=\"90,*\">\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset cols=\"212,55%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\" noResize frameBorder=\"1\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"1\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"1\">\r\n\t</frameset>\r\n</frameset>\r\n</html>"
      }
    }, {
      "location" : {
        "uri" : "index_12.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 27
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<link rel=\"Stylesheet\" href=\"./css/other.css\" type=\"text/css\" />\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/icon.jpg\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n</head>\r\n<frameset rows=\"90,*\" border='0' framespacing='0'>\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset border=\"5\" framespacing=\"5\" cols=\"230,55%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"0\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"0\">\r\n\t</frameset>\r\n</frameset>\r\n</html>"
      }
    }, {
      "location" : {
        "uri" : "index_13.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 28
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"../css/main.css\" type=\"text/css\" />\r\n\t<script src=\"../js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"../js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"../js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"../js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"../js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"../js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/icon.jpg\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n</head>\r\n<frameset rows=\"90,*\">\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./tr069/cwmp.htm\" frameBorder=\"1\">\r\n</frameset>\r\n</html>"
      }
    }, {
      "location" : {
        "uri" : "index_4.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 29
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/icon.jpg\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n</head>\r\n<frameset rows=\"90,*\">\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset cols=\"182,55%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\" noResize frameBorder=\"1\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"1\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"1\">\r\n\t</frameset>\r\n</frameset>\r\n</html>"
      }
    }, {
      "location" : {
        "uri" : "index_5.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 30
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<link rel=\"Stylesheet\" href=\"./css/other.css\" type=\"text/css\" />\r\n\t<script src=\"./js/language.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/root.js\" type=\"text/javascript\"></script>\t\r\n\t<script src=\"./js/cryptoJS.min.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/encrypt.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/tpEncrypt.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/login/favicon.ico\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n\t<!-- <meta http-equiv=\"Pragma\" content=\"no-cache\" /> -->\r\n\t<meta http-equiv=\"cache-control\" content=\"no-cache\" />\r\n</head>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar  paramLang = { \r\n\t\"en_US\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"es_MX\":{\r\n\t\t\"menuWidth\":\"340,55%,*\"\r\n\t},\r\n\t\"fr_FR\":{\r\n\t\t\"menuWidth\":\"236,63%,*\"\r\n\t},\r\n\t\"jp_JP\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ko_KR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pl_PL\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pt_BR\":{\r\n\t\t\"menuWidth\":\"285,55%,*\"\r\n\t},\r\n\t\"ro_RO\":{\r\n\t\t\"menuWidth\":\"232,55%,*\"\r\n\t},\r\n\t\"ru_RU\":{\r\n\t\t\"menuWidth\": \"320,55%,*\"\r\n\t},\r\n\t\"vi_VN\":{\r\n\t\t\"menuWidth\":\"250,60%,*\"\r\n\t},\r\n\t\"zh_TW\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t}\r\n};\r\n\r\ndocument.write('<frameset rows=\"90,*\" border=\"0\" framespacing=\"0\">');\r\ndocument.write('<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">');\r\ndocument.write('<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"10\" rows=\"*,40\">');\r\ndocument.write('<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" scrolling=\"auto\"  frameSpacing=\"0\"  frameBorder=\"0\">');\r\ndocument.write('<frame id=\"qrFrame\" name=\"qrFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./qr.htm\"  scrolling=\"auto\"  frameSpacing=\"0\" frameBorder=\"0\"/>');\r\ndocument.write('</frameset>');\r\ndocument.write('<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"0\">');\r\ndocument.write('</frameset>');\r\ndocument.write('</frameset>');\r\nif ( typeof paramLang[$.country] != \"undefined\")\r\n{\r\n\tdocument.getElementsByTagName(\"frameset\")[1].cols = paramLang[$.country].menuWidth;\r\n}\r\nvar curlock=false;\r\n</script>\r\n<!--\r\n<frameset rows=\"90,*\" border='0' framespacing='0'>\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"0\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"\" frameBorder=\"0\">\r\n\t</frameset>\r\n</frameset>\r\n-->\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "index_6.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 31
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<script src=\"./js/language.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t\r\n\t<script id=\"str-js\"  src=\"./locale/en_US/str.js\" type=\"text/javascript\"></script>\r\n\t<script id=\"err-js\"  src=\"./locale/en_US/err.js\" type=\"text/javascript\"></script>\r\n\t<script id=\"help-js\" src=\"./locale/en_US/help.js\" type=\"text/javascript\"></script>\r\n\t\r\n\t\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/login/favicon.ico\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n\t<!-- <meta http-equiv=\"Pragma\" content=\"no-cache\" /> -->\r\n\t<meta http-equiv=\"cache-control\" content=\"no-cache\" />\r\n</head>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nfunction logout()\r\n{\r\n\t$.act(ACT_CGI, \"/cgi/logout\");\r\n\t$.exe();\r\n\t$.deleteCookie(\"Authorization\");\r\n\tlocalStorage.removeItem(\"language\");\r\n\twindow.location.reload();\r\n}\r\nfunction init()\r\n{\r\n    var langObj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"X_TP_SupportedLanguages\", \"X_TP_CurrentLanguage\", \"X_TP_LanguageSetByUser\"]);\r\n    if (!$.exe())\r\n    {\r\n        if (typeof INCLUDE_WEBUI_SUPPORT != \"undefined\" && INCLUDE_WEBUI_SUPPORT == 1)\r\n        {\r\n            localStorage.setItem(\"lang\",langObj.X_TP_CurrentLanguage);\r\n        }\r\n        var languageAlreadySet = langObj.X_TP_LanguageSetByUser;\r\n        if (languageAlreadySet == 0)\r\n        {\r\n\t\t\tvar newLanguage = localStorage.getItem(\"language\");\r\n\t\t\tif (newLanguage == null)\r\n\t\t\t{\r\n\t\t\t\tlogout();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.act(ACT_SET, IGD_DEV_INFO, null, null, [\"X_TP_CurrentLanguage=\" + newLanguage, \"X_TP_LanguageSetByUser=1\"]);\r\n\t\t\t\t$.exe(function (err) {\r\n\t\t\t\t\tif (!err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalStorage.removeItem(\"language\");\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.removeItem(\"language\");\r\n\t\t\t}\r\n        }\r\n    }\r\n\telse\r\n\t{\r\n\t\tlogout();\r\n\t}\r\n}\r\ninit();\r\nvar  paramLang = { \r\n\t\"en_US\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"es_MX\":{\r\n\t\t\"menuWidth\":\"340,55%,*\"\r\n\t},\r\n\t\"fr_FR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"jp_JP\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ko_KR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pl_PL\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pt_BR\":{\r\n\t\t\"menuWidth\":\"285,55%,*\"\r\n\t},\r\n\t\"ro_RO\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ru_RU\":{\r\n\t\t\"menuWidth\": \"320,55%,*\"\r\n\t},\r\n\t\"uk_UA\":{\r\n\t\t\"menuWidth\": \"320,55%,*\"\r\n\t},\t\r\n\t\"vi_VN\":{\r\n\t\t\"menuWidth\":\"250,60%,*\"\r\n\t},\r\n\t\"zh_TW\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t}\r\n};\r\ndocument.write('<frameset rows=\"90,*\" border=\"0\" framespacing=\"0\">');\r\ndocument.write('<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">');\r\ndocument.write('<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"10\" rows=\"*,40\">');\r\ndocument.write('<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" scrolling=\"auto\"  frameBorder=\"0\">');\r\ndocument.write('<frame id=\"qrFrame\" name=\"qrFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./qr.htm\"  scrolling=\"auto\"  frameSpacing=\"0\" frameBorder=\"0\"/>');\r\ndocument.write('</frameset>');\r\ndocument.write('<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"0\">');\r\ndocument.write('</frameset>');\r\ndocument.write('</frameset>');\r\n\r\nif ( typeof paramLang[$.country] != \"undefined\")\r\n{\r\n\tdocument.getElementsByTagName(\"frameset\")[1].cols = paramLang[$.country].menuWidth;\r\n}\r\nvar curlock=false;\r\n</script>\r\n<!--\r\n<frameset rows=\"90,*\" border='0' framespacing='0'>\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"0\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"\" frameBorder=\"0\">\r\n\t</frameset>\r\n</frameset>\r\n-->\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "index_7.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 32
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<link rel=\"Stylesheet\" href=\"./css/other.css\" type=\"text/css\" />\r\n\t<script src=\"./js/language.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/login/favicon.ico\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n\t<!-- <meta http-equiv=\"Pragma\" content=\"no-cache\" /> -->\r\n\t<meta http-equiv=\"cache-control\" content=\"no-cache\" />\r\n</head>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar  paramLang = { \r\n\t\"en_US\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"es_MX\":{\r\n\t\t\"menuWidth\":\"340,55%,*\"\r\n\t},\r\n\t\"fr_FR\":{\r\n\t\t\"menuWidth\":\"236,63%,*\"\r\n\t},\r\n\t\"jp_JP\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ko_KR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pl_PL\":{\r\n\t\t\"menuWidth\":\"240,63%,*\"\r\n\t},\r\n\t\"pt_BR\":{\r\n\t\t\"menuWidth\":\"285,55%,*\"\r\n\t},\r\n\t\"ro_RO\":{\r\n\t\t\"menuWidth\":\"232,55%,*\"\r\n\t},\r\n\t\"ru_RU\":{\r\n\t\t\"menuWidth\": \"320,55%,*\"\r\n\t},\r\n\t\"vi_VN\":{\r\n\t\t\"menuWidth\":\"250,60%,*\"\r\n\t},\r\n\t\"zh_TW\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t}\r\n};\r\ndocument.write('<frameset rows=\"90,*\" border=\"0\" framespacing=\"0\">');\r\ndocument.write('<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">');\r\ndocument.write('<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"10\" rows=\"*,40\">');\r\ndocument.write('<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" scrolling=\"auto\"  frameBorder=\"0\">');\r\ndocument.write('<frame id=\"qrFrame\" name=\"qrFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./qr.htm\"  scrolling=\"auto\"  frameSpacing=\"0\" frameBorder=\"0\"/>');\r\ndocument.write('</frameset>');\r\ndocument.write('<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"0\">');\r\ndocument.write('</frameset>');\r\ndocument.write('</frameset>');\r\n\r\nif ( typeof paramLang[$.country] != \"undefined\")\r\n{\r\n\tdocument.getElementsByTagName(\"frameset\")[1].cols = paramLang[$.country].menuWidth;\r\n}\r\nvar curlock=false;\r\n</script>\r\n<!--\r\n<frameset rows=\"90,*\" border='0' framespacing='0'>\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"0\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"\" frameBorder=\"0\">\r\n\t</frameset>\r\n</frameset>\r\n-->\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "index_8.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 33
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<link rel=\"Stylesheet\" href=\"./css/other.css\" type=\"text/css\" />\r\n\t<script src=\"./js/language.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/help.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/err.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/3g.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/login/favicon.ico\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n\t<!-- <meta http-equiv=\"Pragma\" content=\"no-cache\" /> -->\r\n\t<meta http-equiv=\"cache-control\" content=\"no-cache\" />\r\n</head>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar  paramLang = { \r\n\t\"en_US\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"es_MX\":{\r\n\t\t\"menuWidth\":\"340,55%,*\"\r\n\t},\r\n\t\"fr_FR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"jp_JP\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ko_KR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pl_PL\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pt_BR\":{\r\n\t\t\"menuWidth\":\"240,55%,*\"\r\n\t},\r\n\t\"ro_RO\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ru_RU\":{\r\n\t\t\"menuWidth\":\"320,55%,*\"\r\n\t},\r\n\t\"vi_VN\":{\r\n\t\t\"menuWidth\":\"250,60%,*\"\r\n\t},\r\n\t\"zh_TW\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t}\r\n};\r\ndocument.write('<frameset rows=\"90,*\" border=\"0\" framespacing=\"0\">');\r\ndocument.write('<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">');\r\ndocument.write('<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"10\" rows=\"*,40\">');\r\ndocument.write('<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" scrolling=\"auto\"  frameBorder=\"0\">');\r\ndocument.write('<frame id=\"qrFrame\" name=\"qrFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./qr.htm\"  scrolling=\"auto\"  frameSpacing=\"0\" frameBorder=\"0\"/>');\r\ndocument.write('</frameset>');\r\ndocument.write('<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"0\">');\r\ndocument.write('</frameset>');\r\ndocument.write('</frameset>');\r\n\r\nif ( typeof paramLang[$.country] != \"undefined\")\r\n{\r\n\tdocument.getElementsByTagName(\"frameset\")[1].cols = paramLang[$.country].menuWidth;\r\n}\r\nvar curlock=false;\r\n</script>\r\n<!--\r\n<frameset rows=\"90,*\" border='0' framespacing='0'>\r\n\t\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t\t<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">\r\n\t\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t\t\r\n\t\t\t<frameset border='5' framespacing='10' rows=\"*\">\r\n\t\t\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" scrolling=\"auto\"  frameBorder=\"0\">\r\n\t\t\t\t<frame id=\"qrFrame\" name=\"qrFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./qr.htm\"  scrolling=\"auto\"  frameSpacing=\"0\" frameBorder=\"0\"/>\r\n\t\t\t</frameset>\r\n\t\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./help/StatusHelpRpm.htm\" frameBorder=\"0\">\t\r\n\t\t</frameset>\r\n</frameset>\r\n-->\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "index_9.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 34
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n</script>\r\n<head>\r\n\t<link rel=\"Stylesheet\" href=\"./css/main.css\" type=\"text/css\" />\r\n\t<script src=\"./js/language.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/oid_str.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/root.js\" type=\"text/javascript\"></script>\t\r\n\t<script src=\"./js/cryptoJS.min.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/encrypt.js\" type=\"text/javascript\"></script>\r\n\t<script src=\"./js/tpEncrypt.js\" type=\"text/javascript\"></script>\r\n\t<script id=\"str-js\"  src=\"./locale/ar_AR/str.js\" type=\"text/javascript\"></script>\r\n\t<script id=\"err-js\"  src=\"./locale/ar_AR/err.js\" type=\"text/javascript\"></script>\r\n\t<script id=\"help-js\" src=\"./locale/ar_AR/help.js\" type=\"text/javascript\"></script>\r\n\t\r\n\t\r\n\t<script src=\"./js/lib.js\" type=\"text/javascript\"></script>\r\n\t<link rel=\"Shortcut Icon\" href=\"./img/login/favicon.ico\" type=\"image/jpeg\" />\r\n\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n\t<!-- <meta http-equiv=\"Pragma\" content=\"no-cache\" /> -->\r\n\t<meta http-equiv=\"cache-control\" content=\"no-cache\" />\r\n</head>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nfunction logout()\r\n{\r\n\t$.act(ACT_CGI, \"/cgi/logout\");\r\n\t//$.exe();\r\n\t//$.deleteCookie(\"Authorization\");\r\n\t$.exe(null, false, 1);\r\n\t$.newencryptorManager.cleanStorage();\r\n\tlocalStorage.removeItem(\"language\");\r\n\twindow.location.reload();\r\n}\r\nfunction init()\r\n{\r\n    var langObj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"X_TP_SupportedLanguages\", \"X_TP_CurrentLanguage\", \"X_TP_LanguageSetByUser\"]);\r\n    if (!$.exe())\r\n    {\r\n        if (typeof INCLUDE_WEBUI_SUPPORT != \"undefined\" && INCLUDE_WEBUI_SUPPORT == 1)\r\n        {\r\n            localStorage.setItem(\"lang\",langObj.X_TP_CurrentLanguage);\r\n        }\r\n        var languageAlreadySet = langObj.X_TP_LanguageSetByUser;\r\n        if (languageAlreadySet == 0)\r\n        {\r\n\t\t\tvar newLanguage = localStorage.getItem(\"language\");\r\n\t\t\tif (newLanguage == null)\r\n\t\t\t{\r\n\t\t\t\tlogout();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t$.act(ACT_SET, IGD_DEV_INFO, null, null, [\"X_TP_CurrentLanguage=\" + newLanguage, \"X_TP_LanguageSetByUser=1\"]);\r\n\t\t\t\t$.exe(function (err) {\r\n\t\t\t\t\tif (!err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalStorage.removeItem(\"language\");\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tlocalStorage.removeItem(\"language\");\r\n\t\t\t}\r\n        }\r\n    }\r\n\telse\r\n\t{\r\n\t\tlogout();\r\n\t}\r\n}\r\ninit();\r\nvar  paramLang = { \r\n\t\"en_US\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"es_MX\":{\r\n\t\t\"menuWidth\":\"340,55%,*\"\r\n\t},\r\n\t\"fr_FR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"jp_JP\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ko_KR\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pl_PL\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"pt_BR\":{\r\n\t\t\"menuWidth\":\"285,55%,*\"\r\n\t},\r\n\t\"ro_RO\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ru_RU\":{\r\n\t\t\"menuWidth\":\"320,55%,*\"\r\n\t},\r\n\t\"uk_UA\":{\r\n\t\t\"menuWidth\":\"320,55%,*\"\r\n\t},\t\r\n\t\"vi_VN\":{\r\n\t\t\"menuWidth\":\"250,60%,*\"\r\n\t},\r\n\t\"zh_TW\":{\r\n\t\t\"menuWidth\":\"182,63%,*\"\r\n\t},\r\n\t\"ar_AR\":{\r\n\t\t\"menuWidth\":\"320,55%,*\"\r\n\t}\r\n};\r\nvar leftFrame = menuFrameSrc = \"./MenuRpm.htm\";\r\nvar leftFrameName = menuFrameName = \"bottomLeftFrame\";\r\nvar rightFrame = helpFrameSrc = \"./help/StatusHelpRpm.htm\";\r\nvar rightFrameName = helpFrameName = \"helpFrame\";\r\nif (localStorage.getItem(\"lang\") === \"ar_AR\") {\r\n\trightFrame = menuFrameSrc;\r\n\tleftFrame = helpFrameSrc;\r\n\trightFrameName = menuFrameName;\r\n\tleftFrameName = helpFrameName;\r\n}\r\ndocument.write('<frameset rows=\"90,*\" border=\"0\" framespacing=\"0\">');\r\ndocument.write('<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">');\r\ndocument.write('<frame id=\"frame1\" name=\"' + leftFrameName + '\" marginWidth=\"0\" marginHeight=\"0\" src=\"' + leftFrame + '\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">');\r\ndocument.write('<frameset border=\"5\" framespacing=\"10\" rows=\"*,40\">');\r\ndocument.write('<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" scrolling=\"auto\"  frameBorder=\"0\">');\r\ndocument.write('<frame id=\"qrFrame\" name=\"qrFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./qr.htm\"  scrolling=\"auto\"  frameSpacing=\"0\" frameBorder=\"0\"/>');\r\ndocument.write('</frameset>');\r\ndocument.write('<frame name=\"' + rightFrameName + '\" marginWidth=\"0\" marginHeight=\"0\" src=\"' + rightFrame + '\" frameBorder=\"0\">');\r\ndocument.write('</frameset>');\r\ndocument.write('</frameset>');\r\n\r\nif ( typeof paramLang[$.country] != \"undefined\")\r\n{\r\n\tdocument.getElementsByTagName(\"frameset\")[1].cols = paramLang[$.country].menuWidth;\r\n}\r\nvar curlock=false;\r\n</script>\r\n<!--\r\n<frameset rows=\"90,*\" border='0' framespacing='0'>\r\n\t<frame name=\"topFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./frame/top.htm\" noResize scrolling=\"no\" frameSpacing=\"0\" frameBorder=\"0\">\r\n\t<frameset border=\"5\" framespacing=\"5\" cols=\"182,63%,*\">\r\n\t\t<frame id=\"frame1\" name=\"bottomLeftFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./MenuRpm.htm\"  frameBorder=\"0\" scrolling=\"auto\" style=\"overflow-x:hidden\">\r\n\t\t<frame id=\"frame2\" name=\"mainFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"./mainFrame.htm\" frameBorder=\"0\">\r\n\t\t<frame name=\"helpFrame\" marginWidth=\"0\" marginHeight=\"0\" src=\"\" frameBorder=\"0\">\r\n\t</frameset>\r\n</frameset>\r\n-->\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "login_1.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 35
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n<META http-equiv=Content-Type content=\"text/html; charset=utf-8\" />\r\n<META http-equiv=Pragma content=no-cache>\r\n<META http-equiv=Expires content=0>\r\n<style type=\"text/css\">\r\nbody\r\n{\r\n\tfont-family:Arial, sans-serief;\r\n\tbackground-color:#E5E5E5;\r\n\tmargin:0;\r\n\tpadding:0;\r\n}\r\ndiv.loginBox\r\n{\r\n\tdisplay: block;\r\n\tposition:relative;\r\n\tmargin-top:10%;\r\n\ttext-align:center;\r\n}\r\n.noteDiv\r\n{\r\n\tcolor:gray;\t\r\n\tfont-family:Arial;\t\r\n\twidth:395px;\t\r\n\ttext-align:left;\t\r\n\tmargin:0 auto;\t\r\n\tfont-size:14px;\r\n\tfont-weight:bold;\r\n}\r\n#note\r\n{\r\n\tdisplay:inline-block;\r\n\tvertical-align:top;\r\n\t_display:inline;\r\n\t_zoom:1;\r\n\twidth:50px;\r\n\tfont-weight:bold;\r\n}\r\n#tip\r\n{\r\n\tdisplay:inline-block;\r\n\tvertical-align:top;\r\n\t_display:inline;\r\n\t_zoom:1;\r\n\twidth:340px;\r\n}\r\ndiv.panelThre\r\n{\r\n\tmargin-top:10px;\r\n}\r\ndiv.picDiv\r\n{\r\n\twidth:395px;\r\n\theight:276px;\r\n\tbackground:url(../img/login/bg2.png);\r\n\tposition:relative;\r\n}\r\ninput.pcPassword\r\n{\r\n\twidth:300px;\r\n\theight:50px;\r\n\tline-height:50px;\r\n\tpadding-left:20px;\r\n}\r\ndiv.PCBtnDiv\r\n{\r\n\tposition:relative;\r\n\tmargin-top:20px;\r\n}\r\nimg.logoPic\r\n{\r\n\twidth:100%;\r\n}\r\n/*topLogo\r\n{\r\n\tbackground:url(../img/login/top_bg.jpg);\r\n\theight:90px;\r\n}*/\r\nul\r\n{\r\n\tpadding:60px 0 0 0;\r\n\tmargin:0;\r\n\tlist-style:none;\r\n}\r\nul li\r\n{\r\n\theight:34px;\r\n\twidth:222px;\r\n}\r\nli.unLi\r\n{\r\n\tbackground:url(../img/login/idunselect.png);\r\n}\r\nli.pwLi\r\n{\r\n\tbackground:url(../img/login/pwunselect.png);\r\n}\r\nli.blank\r\n{\r\n\theight:15px;\r\n}\r\nbutton.loginBtn\r\n{\r\n\tborder:none;\r\n\theight:34px;\r\n\tdisplay:inline-block;\r\n\twidth:113px;\r\n\tmargin-top:30px;\r\n\tbackground:url(../img/login/login.png);\r\n\tcursor:pointer;\r\n}\r\ninput.text\r\n{\r\n\tborder:0;\r\n\theight:26px;\r\n\tline-height:26px;\r\n\twidth:175px;\r\n\tpadding:0;\r\n\tmargin:4px 0 0 30px;\r\n\tfont-size:14px;\r\n\tcolor:#6a6969;\r\n\tfont-family:\"Verdana\",\"Arial\";\r\n\toutline: none;\r\n}\r\n#copyright\r\n{\r\n\t-webkit-text-size-adjust:none;\r\n\tfont-size:9px;\r\n\tcolor:#6a6969;\r\n\tfont-family:\"Verdana\";\r\n\tmargin-top:40px;\r\n\tdisplay:inline-block;\r\n}\r\n.nd\t\r\n{\r\n\tdisplay: none !important;\r\n}\r\n</style>\r\n\r\n<script type=\"text/javascript\">\r\n\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n\r\nvar isLocked = false;\r\n\r\ndeleteCookie(\"Authorization\");\r\nif (window.parent != window)\r\n{\r\n\tvar refresh = function(domain, port, frame, page) {\r\n\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t}\r\n\trefresh();\r\n}\r\n\r\nfunction Base64Encoding(input) \r\n{\r\n\tvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\tvar output = \"\";\r\n\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\tvar i = 0;\r\n\tinput = utf8_encode(input);\r\n\twhile (i < input.length) \r\n\t{\r\n\t\tchr1 = input.charCodeAt(i++);\r\n\t\tchr2 = input.charCodeAt(i++);\r\n\t\tchr3 = input.charCodeAt(i++);\r\n\t\tenc1 = chr1 >> 2;\r\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\tenc4 = chr3 & 63;\r\n\t\t\r\n\t\tif (isNaN(chr2)) \r\n\t\t{\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t} \r\n\t\telse if (isNaN(chr3)) \r\n\t\t{\r\n\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction utf8_encode (string) \r\n{\r\n\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\tvar utftext = \"\";\r\n\t\r\n\tfor (var n = 0; n < string.length; n++) \r\n\t{\r\n\t\tvar c = string.charCodeAt(n);\r\n\t\tif (c < 128) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode(c);\r\n\t\t}\r\n\t\telse if((c > 127) && (c < 2048)) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t}\t\r\n\treturn utftext;\r\n}\r\n\r\nfunction PCWin(event)\r\n{\r\n\tif (event.keyCode == 13)\r\n\t{\r\n\t\tPCSubWin();\r\n\t}\r\n}\r\n\r\nfunction PCSubWin()\r\n{\t\r\n\tif (isLocked == true)\r\n\t{\r\n\t\treturn ;\r\n\t}\r\n\t\t\r\n\tvar auth;\r\n\tvar password = $(\"pcPassword\").value;\r\n\tvar userName = $(\"userName\").value;\r\n\r\n/*\tif (forbidAdminLogin == 1){\r\n\t\t$(\"note\").innerHTML = \"NOTE:\";\r\n\t\t$(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\treturn;\r\n\t}*/\r\n\r\n\tauth = \"Basic \"+Base64Encoding(userName+\":\"+password);\r\n\tdocument.cookie = \"Authorization=\" + auth;\r\n\twindow.location.reload();\r\n}\r\n\r\nfunction deleteCookie(name) \r\n{ \r\n    var LargeExpDate = new Date ();\r\n    document.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n}\r\n\r\nfunction $(id)\r\n{\r\n\treturn document.getElementById(id);\r\n}\r\n\r\nfunction lockWeb(bLock)\r\n{\r\n\t$(\"userName\").disabled = bLock;\r\n\t$(\"pcPassword\").disabled = bLock;\r\n\t$(\"pcPassword\").blur();\r\n\t$(\"userName\").blur();\r\n}\r\n\r\nfunction resize()\r\n{\r\n\tbodyObj = document.body;\r\n\tbodyObj.style[\"width\"] = (document.documentElement.clientWidth < 1000 ? 1000 : document.documentElement.clientWidth) + \"px\";\r\n}\r\n\r\nfunction pageLoad()\r\n{\r\n\tresize();\r\n\twindow.onresize = resize;\r\n\tvar tip = $(\"tip\"), tipStr=\"\", note = $(\"note\");\r\n\tvar unLi = $(\"unLi\");\r\n\tvar pwLi = $(\"pwLi\");\r\n\tvar userName = $(\"userName\");\r\n\tvar pcPassword = $(\"pcPassword\");\r\n\t\r\n\tdeleteCookie(\"Authorization\");\r\n\r\n\tpcPassword.onfocus = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwselect.png)\";\r\n\t};\r\n\t\r\n\tpcPassword.onblur = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwunselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onfocus = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onblur = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idunselect.png)\";\r\n\t};\r\n\t\r\n\ttry { \r\n\t\tif (modelName) \r\n\t\t{\r\n\t\t\t\tdocument.title = modelName; \r\n\t\t\t\t$(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t\t}\t\r\n\t\tif(modelDesc)\r\n\t\t{\r\n\t\t\t$(\"mname\").innerHTML = modelDesc;\r\n\t\t}\r\n\t}catch(e) {}\r\n\r\n\tif (forbidAdminLogin == 1)\r\n\t{\r\n\t\t$(\"note\").innerHTML = \"NOTE:\";\r\n\t\t$(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\tforbidAdminLogin = 0;\r\n\t\tauthTimes = 0;\r\n\t\tif (usernameIsAdmin) \r\n\t\t{\r\n\t\t\tuserName.value = \"admin\";\r\n\t\t\tpcPassword.focus();\r\n\t\t\tpcPassword.select();\r\n\t\t}\r\n\t\tlockWeb(true);\r\n\t\treturn;\r\n\t}\t\t\r\n\t\r\n\tif (authTimes > 0)\r\n\t{\r\n\t\t$(\"note\").innerHTML = \"NOTE:\";\r\n\t\t$(\"tip\").innerHTML = \"The username or password is incorrect, please try again.\";\r\n\t}\t\r\n\t\r\n\tif (authTimes >= 10)\r\n\t{\r\n\t\tisLocked = true;\r\n\t\tlockWeb(true);\r\n\t\t$(\"note\").innerHTML = \"NOTE：\";\r\n\t\ttipStr = \"You have exceeded ten attempts. Please try again in \";\r\n\t\tcount = 7200 - forbidTime;\r\n\t\t$(\"tip\").innerHTML = tipStr + count + \"s.\";\t\t\r\n\t\twindow.setTimeout(function()\r\n\t\t{\r\n\t\t\tif (count < 1)\r\n\t\t\t{\r\n\t\t\t\t$(\"note\").innerHTML = \"\";\r\n\t\t\t\t$(\"tip\").innerHTML = \"\";\r\n\t\t\t\tisLocked = false;\r\n\t\t\t\tlockWeb(false);\r\n\t\t\t\tuserName.focus();\r\n\t\t\t\tdeleteCookie(\"Authorization\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\t$(\"tip\").innerHTML = tipStr + count + \"s.\";\r\n\t\t\twindow.setTimeout(arguments.callee, 1000);\r\n\t\t}, 1000);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tuserName.focus();\r\n\t}\r\n\tif (usernameIsAdmin) \r\n\t{\r\n\t\tuserName.value = \"admin\";\r\n\t\tpcPassword.focus();\r\n\t\tpcPassword.select();\r\n\t}\r\n}\r\n</script>\r\n</head>\r\n\r\n<body onkeypress=\"PCWin(event)\" onload=\"pageLoad()\">\r\n<div class=\"nd\" style=\"height: 0; background: url(../img/login/1.jpg);\"></div>\r\n<div style=\"height: 90px; background: #09C url(../img/login/top_bg.jpg) repeat-x;\">\r\n\t<a href=\"http://www.tp-link.com\"><img id=\"logo\" src=\"../img/login/top1_1.jpg\" style=\"float: left;\" border=\"0\" /></a>\r\n\t<div id=\"mod\" style=\"height: 87px; margin: 0; text-align: right; overflow: hidden; background: url(../img/login/top1_2.jpg) no-repeat right;\" >\r\n\t<p id=\"mname\" style=\"font-size: 16px; font-weight: bold; color: #fff; margin: 37px 24px 0 0; padding: 0;\"></p>\r\n\t<p id=\"mnum\" style=\"font-size: 12px; font-weight: bold; color: #fff; margin: 2px 24px 0 0; padding: 0;\"></p>\r\n\t</div>\r\n\t<img id=\"bhr\" src=\"../img/login/top2.jpg\" style=\"height: 3px; width: 100%; display: block;\" />\r\n</div>\r\n<div class=\"loginBox\">\r\n\t<div class=\"noteDiv\">\r\n\t\t<span id=\"note\"></span>\r\n\t\t<span id=\"tip\"></span>\r\n\t</div>\r\n\t<div class=\"panelThre\" align=\"center\">\r\n\t\t<div class=\"picDiv\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li id=\"unLi\" class=\"unLi\"><input class=\"text\" id=\"userName\" type=\"text\" maxlength=\"32\" autocomplete=\"off\"/></li>\r\n\t\t\t\t<li class=\"blank\"></li>\r\n\t\t\t\t<li id=\"pwLi\" class=\"pwLi\"><input class=\"text\" id=\"pcPassword\" type=\"password\" maxlength=\"32\" autocomplete=\"off\"/></li>\r\n\t\t\t</ul>\t\t\t\r\n\t\t\t<button id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"></button>\r\n\t\t\t<div>\r\n\t\t\t\t<label id=\"copyright\">Copyright &copy; 2016 TP-LINK Technologies Co., Ltd. All rights reserved. </label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</body>\r\n</html>"
      }
    }, {
      "location" : {
        "uri" : "login_2.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 36
      },
      "contents" : {
        "text" : "<!DOCTYPE html> \r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n<META http-equiv=Content-Type content=\"text/html; charset=utf-8\" />\r\n<META http-equiv=Pragma content=no-cache>\r\n<META http-equiv=Expires content=0>\r\n\r\n<!-- \r\n<link rel=\"stylesheet\" href=\"../css/login.css\" type=\"text/css\" />\r\n<link rel=\"stylesheet\" href=\"../img/login/login.css\" type=\"text/css\" />\r\n-->\r\n<link rel=\"Shortcut Icon\" href=\"../img/login/favicon.ico\" type=\"image/jpeg\" />\r\n<style type=\"text/css\">\r\nbody{\r\n    font-family:Arial, sans-serief;\r\n    background-color:#FFFFFF;\r\n    margin:0px;\r\n    padding:0px;\r\n}\r\ndiv.loginBox\r\n{\r\n    display: block;\r\n    position:relative;\r\n    margin-top:10%;\r\n    text-align:center;\r\n}\r\n.noteDiv{\r\n    color:gray;\r\n    font-family:Arial;\r\n    width:395px;\r\n    text-align:left;\r\n    margin:0px auto;\r\n    font-size:14px;\r\n}\r\n#note{\r\n    /*display:inline-block;*/\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:50px;\r\n    font-weight:bold;\r\n}\r\n#tip{\r\n    display:inline-block;\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:340px;\r\n    font-weight:bold;\r\n}\r\ndiv.panelThre{\r\n    margin-top:10px;\r\n}\r\ndiv.picDiv{\r\n    width:497px;\r\n    height:276px;\r\n    /*background:url(../login/loginbg.png);*/\r\n    position:relative;\r\n}\r\ninput.pcPassword{\r\n    width:300px;\r\n    height:50px;\r\n    line-height:50px;\r\n    padding-left:20px;\r\n}\r\ndiv.PCBtnDiv{\r\n    position:relative;\r\n    margin-top:20px;\r\n}\r\nimg.logoPic{\r\n    width:100%;\r\n}\r\n#copyright{\r\n    -webkit-text-size-adjust:none;\r\n    font-size:8px;\r\n    color:#6a6969;\r\n    font-family:\"Verdana\";\r\n    font-weight:normal;\r\n    margin-top:40px;\r\n    display:inline-block;\r\n}\r\n.topLogo{\r\n    background-color: #4ACBD6;\r\n    height:96px;\r\n    overflow: hidden;\r\n}\r\ntr{\r\n    vertical-align: top;\r\n}\r\n.topLogo td a img{\r\n    margin:27px 0 0 25px;\r\n}\r\n.topLogo td.last-td img{\r\n    float: right;\r\n    margin-right: 14px;\r\n    opacity: 0.3;\r\n    filter:alpha(opacity=30);\r\n}\r\nul{\r\n    padding: 71px 0px 0px 0px;\r\n    margin:0px;\r\n    list-style:none;\r\n}\r\nul li{\r\n    height:32px;\r\n    width:250px;\r\n    text-align: left;\r\n}\r\nli.unLi{\r\n    border: 1px solid #cbcbcb;\r\n\tborder-radius: 3px;\r\n}\r\n.unLi.focus {\r\n\tborder-color: #4ACBD6;\r\n}\r\nli.pwLi{\r\n\tborder: 1px solid #cbcbcb;\r\n\tborder-radius: 3px;\r\n}\r\n.pwLi.focus {\r\n\tborder-color: #4ACBD6;\r\n}\r\nli.blank{\r\n    height:8px;\r\n}\r\ninput.text{\r\n    border:0px;\r\n    height:32px;\r\n    line-height:32px;\r\n    width:175px;\r\n    padding:0px;\r\n    /*margin-left: 39px;*/\r\n    font-size:14px;\r\n    color:#A7A9AC;\r\n    font-family:\"Arial\",\"Verdana\";\r\n    font-weight:normal;\r\n    background-color: transparent;\r\n    vertical-align: top;\r\n}\r\ninput.text:focus{\r\n    outline: none;\r\n}\r\nlabel.loginBtn{\r\n    height:32px;\r\n    display:inline-block;\r\n    width:250px;\r\n    margin-top: 25px;\r\n    line-height: 32px;\r\n    color: #FFFFFF;\r\n    font-size:18px;\r\n    font-family: Arial;\r\n\t\tbackground-color: #4acbd6;\r\n\t\tborder-radius: 3px;\r\n    cursor:pointer;\r\n}\r\n\r\n.loginBtn.disabled {\r\n\tbackground-color: #cbcbcb;\r\n\tcursor: default;\r\n}\r\n\r\nli img{\r\n\tvertical-align: bottom;\r\n\tline-height: 40px;\r\n\tmargin: -1px 6px 9px 9px;\r\n}\r\n\r\n#pwLi img {\r\n\tmargin-top: 9px;\r\n}\r\n\r\niframe#top{\r\n    width:100%;\r\n    height:96px;\r\n    border: none;\r\n    display: block;\r\n}\r\n\r\nhtml{\r\n    overflow: hidden;\r\n}\r\ntable,tr,td{\r\n    padding: 0;\r\n}\r\ntd {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\nform {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\n/*\r\nbody {\r\n    font-family:\"Arial Black\", \"ºÚÌå\";\r\n    font-size: 16px;\r\n    background: #4ACBD6\r\n}\r\n*/\r\n.style1 {\r\n    font-family:Arial;\r\n    color: #FFFFFF;\r\n    font-size: 18px;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n}\r\n.style2 {\r\n    font-size: 14px;\r\n    font-family:Arial;\r\n    font-weight: bold;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    color: #FFFFFF;\r\n}\r\n\r\ntr{\r\n    vertical-align: top;\r\n}\r\n#first-td{\r\n    width:234px;\r\n}\r\n#first-td img {\r\n    margin:27px 0 0 25px;\r\n    cursor: pointer;\r\n}\r\n#second-td {\r\n    padding-top: 25px;\r\n}\r\n#third-td img {\r\n    float:right;\r\n    opacity: 0.3;\r\n    filter\\0: alpha(opacity=30);\r\n    margin-right: 14px;\r\n}\r\ninput[type=\"text\"]::-ms-clear,\r\ninput[type='password']::-ms-reveal{\r\n    display:none;\r\n}\r\n\t\t.nd {\r\n\t\t\tdisplay: none !important;\r\n\t\t}\r\n\r\n\t\t.change-pwd-title {\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 23px;\r\n\t\t\tcolor: #36444b;\r\n\t\t}\r\n\r\n\t\t.change-pwd-p {\r\n\t\t\tcolor: #a7a8ac;\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 16px;\r\n\t\t\tmargin-top: 12px;\r\n\t\t}\r\n\t\t.pwd-tip {\r\n\t\t\theight: auto;\r\n\t\t\tpadding-left: 60px;\r\n\t\t\tmargin-bottom: 2px;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tcolor: #999;\r\n\t\t}\r\n\t\t.pwd-tip .icon {\r\n\t\t\tmargin-left: -28px;\r\n\t\t\tmargin-right: 4px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t\twidth: 24px;\r\n\t\t\theight: 24px;\r\n\t\t\tbackground-image: url(\"../img/login/icons.png\");\r\n\t\t\tbackground-position: -26px -2px;\r\n\t\t\tvertical-align: middle;\r\n\t\t}\r\n\t\t.pwd-tip.active .icon {\r\n\t\t\tbackground-position: -51px -2px;\r\n\t\t}\r\n\t\t.pwd-tip.error .icon {\r\n\t\t\tbackground-position: 0 -2px;\r\n\t\t}\r\n\r\n\t\t.eye-icon {\r\n\t\t\tdisplay: inline-block;\r\n\t\t\twidth: 20px;\r\n\t\t\theight: 20px;\r\n\t\t\tmargin-top: 7px;\r\n\t\t\tmargin-left: 15px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tbackground: url(\"../img/login/unview.png\");\r\n\t\t}\r\n\r\n\t\t.eye-icon.show {\r\n\t\t\tbackground: url(\"../img/login/view.png\");\r\n\t\t}\r\n\r\n\t\t.fl {\r\n\t\t\tfloat: left;\r\n\t\t}\r\n</style>\r\n<!--[if lte IE 8]>\r\n<style>\r\n\t.eye-icon {\r\n\t\tdisplay: none;\r\n\t}\r\n</style>\r\n<![endif]-->\r\n<script src=\"../js/oid_str.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/str.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/err.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/language.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/root.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/cryptoJS.min.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/encrypt.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/tpEncrypt.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/lib.js\" type=\"text/javascript\"></script>\r\n<script type=\"text/javascript\">\r\n$.curPage=\"login.htm\";\r\nvar lang = \"en_US\";\r\nif($.country)\r\n{\r\n\t//console.log(\"lang = $.country: \", $.country);\r\n\tlang = $.country;\r\n}\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n\r\nvar isLocked = false;\r\n\r\ndeleteCookie(\"Authorization\");\r\nif (window.parent != window)\r\n{\r\n\tvar refresh = function(domain, port, frame, page) {\r\n\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t}\r\n\trefresh();\r\n}\r\n\r\nfunction Base64Encoding(input) \r\n{\r\n\tvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\tvar output = \"\";\r\n\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\tvar i = 0;\r\n\tinput = utf8_encode(input);\r\n\twhile (i < input.length) \r\n\t{\r\n\t\tchr1 = input.charCodeAt(i++);\r\n\t\tchr2 = input.charCodeAt(i++);\r\n\t\tchr3 = input.charCodeAt(i++);\r\n\t\tenc1 = chr1 >> 2;\r\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\tenc4 = chr3 & 63;\r\n\t\t\r\n\t\tif (isNaN(chr2)) \r\n\t\t{\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t} \r\n\t\telse if (isNaN(chr3)) \r\n\t\t{\r\n\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction utf8_encode (string) \r\n{\r\n\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\tvar utftext = \"\";\r\n\t\r\n\tfor (var n = 0; n < string.length; n++) \r\n\t{\r\n\t\tvar c = string.charCodeAt(n);\r\n\t\tif (c < 128) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode(c);\r\n\t\t}\r\n\t\telse if((c > 127) && (c < 2048)) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t}\t\r\n\treturn utftext;\r\n}\r\n\r\nfunction onFocusPwd(event) {\r\n\t$.removeClass($.id(\"pwd-tips\"), \"nd\");\r\n\tfor (var i = 0, len = tipArr.length; i < len; i++) {\r\n\t\tvar tip = tipArr[i];\r\n\t\t$.removeClass(tip, \"nd\");\r\n\t\t$.removeClass(tip, \"error\");\r\n\t}\r\n\t$.addClass((event.target || event.srcElement).parentNode, \"focus\");\r\n\tonKeyUpPwd(event);\r\n}\r\n\r\nfunction onKeyUpPwd(event) {\r\n\tvar value = (event.target || event.srcElement).value,\r\n\t\t\tspaceTip = tipArr[0],\r\n\t\t\tlengthTip = tipArr[1],\r\n\t\t\tcharTip = tipArr[2];\r\n\r\n\tcheckSpace(value) ? $.addClass(spaceTip, \"active\") : $.removeClass(spaceTip, \"active\");\r\n\tcheckLength(value) ? $.addClass(lengthTip, \"active\") : $.removeClass(lengthTip, \"active\");\r\n\tcheckChar(value) ? $.addClass(charTip, \"active\") : $.removeClass(charTip, \"active\");\r\n}\r\n\r\nfunction onBlurPwd(event) {\r\n\tvar tips = tipArr;\r\n\tvar showBtn = true;\r\n\tvar btn = $.id(\"createBtn\")\r\n\r\n\t$.removeClass((event.target || event.srcElement).parentNode, \"focus\");\r\n\tfor (var i = 0, len = tips.length; i < len; i++) {\r\n\t\tvar tip = tips[i];\r\n\t\tif($.hasClass(tip, \"active\")) {\r\n\t\t\t$.addClass(tip, \"nd\");\r\n\t\t} else {\r\n\t\t\tshowBtn = false;\r\n\t\t\t$.addClass(tip, \"error\");\r\n\t\t}\r\n\t}\r\n\tshowBtn ? $.removeClass(btn, \"disabled\") : $.addClass(btn, \"disabled\");\r\n}\r\n\r\nfunction checkSpace(value) {\r\n\tvar re = /[^\\x00-\\x19\\x21-\\xff]/;\r\n\tif (re.test(value)) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction checkLength(value) {\r\n\tif (value.length > 5 && value.length < 33) return true;\r\n\treturn false;\r\n}\r\n\r\nfunction checkChar(value) {\r\n\tvar patternNum = /[0-9]/g;\r\n\tvar patternLetter = /[A-Za-z]/g;\r\n\tvar patternSign = /[\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\_\\+\\[\\]\\{\\}\\;\\:\\'\\\"\\\\\\|\\/\\?\\.\\,\\<\\>\\x20]/g;\r\n\tvar level = 0;\r\n\r\n\tif (patternNum.test(value)) level++;\r\n\tif (patternLetter.test(value)) level++;\r\n\tif (patternSign.test(value)) level++;\r\n\r\n\treturn level > 1;\r\n}\r\n\r\nfunction PCWin(event)\r\n{\r\n\t\t\tif (event.keyCode == 13) {\r\n\t\t\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\t\tif (isFirstLogin === \"1\") {\r\n\t\t\t\t\t\tcreatePwd();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPCSubWin();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPCSubWin();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\nfunction PCSubWin()\r\n{\t\r\n\tif (isLocked == true)\r\n\t{\r\n\t\treturn ;\r\n\t}\r\n\t\t\r\n\tvar auth;\r\n\tvar password = $.id(\"pcPassword\").value;\r\n\t\t\tvar userName;\r\n\t\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\tuserName = \"admin\";\r\n\t\t\t} else {\r\n\t\t\t\tuserName = $.id(\"userName\").value;\r\n\t\t\t}\r\n\r\n\t\t\tdoLogin(userName, password);\r\n\t\t}\r\n\t\r\n\t\tfunction doLogin(userName, password) {\r\n\tif(INCLUDE_LOGIN_GDPR_ENCRYPT)\r\n\t{\r\n\t\r\n\t\t$.act(ACT_CGI, \"/cgi/getParm\");\r\n\t\t$.exe(null,false,0);\r\n\t\t$.nn = nn;\r\n\t\t$.ee = ee;\r\n\t\t$.seq = seq;\r\n\r\n\t\t$.Iencryptor.setSeq($.seq);\r\n\t\t$.Iencryptor.setRSAKey($.nn, $.ee);\r\n\t\t$.Iencryptor.setHash(userName, password);\r\n\t\t$.Iencryptor.genAESKey();\r\n\t\r\n\t\tvar tmpcount = {};\r\n\t\ttmpcount.username=userName;\r\n\t\ttmpcount.password=password;\r\n\t\t\r\n\t\t$.act(ACT_CGI, \"/cgi/login\", null, null, tmpcount);\r\n\t\t$.newencryptorManager.recordEncryptor();\r\n\t\tif(!$.exe(null, false, 1))\r\n\t\t{\r\n\t\t\twindow.location.reload();\r\n\t\t}\t\r\n\t}\r\n\t\t}\r\n\r\n\t\tfunction createPwd() {\r\n\t\t\tif (isFirstLogin === \"0\" || $.hasClass($.id(\"createBtn\"), \"disabled\")) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar re = /[^\\x00-\\x19\\x21-\\xff]/;\r\n\t\t\tvar password = $.id(\"change-pcPassword\").value;\r\n\t\t\tvar confirmPassword = $.id(\"confirm-pcPassword\").value;\r\n\t\t\tvar userName = \"admin\";\r\n\r\n\t\t\tif (re.test(password)) {\r\n\t\t\t\t$.alert(ERR_USER_PWD_HAS_SPACE);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (password === \"\") {\r\n\t\t\t\t$.alert(ERR_USER_PWD_EMPTY);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ($.asc(password, true)) {\r\n\t\t\t\t$.alert(ERR_USER_PWD_ASCII);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (password.length > 32) {\r\n\t\t\t\talert(localString[lang].CHANGE_PWD_TITLE);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (password !== confirmPassword) {\r\n\t\t\t\t$.alert(ERR_USER_NAME_PWD_CONFLICT);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(!checkSpace(password) || !checkLength(password) || !checkChar(password))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.act(ACT_CGI, \"/cgi/auth\", null, null, {\r\n\t\t\t\tname: userName,\r\n\t\t\t\toldPwd: \"admin\",\r\n\t\t\t\tpwd: password\r\n\t\t\t});\r\n\t\t\tif (!$.exe(null, null, 0)) {\r\n\t\t\t\tdoLogin(userName, password);\r\n\t\t\t}\r\n\t\t}\r\n\r\nfunction deleteCookie(name) \r\n{ \r\n    var LargeExpDate = new Date ();\r\n    document.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n}\r\n/*\r\nfunction $(id)\r\n{\r\n\treturn document.getElementById(id);\r\n}\r\n*/\r\n\t\tfunction lockWeb(bLock) {\r\n\t\t\t$.id(\"pcPassword\").disabled = bLock;\r\n\t\t\t$.id(\"pcPassword\").blur();\r\n\t\t\tif (!INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\t$.id(\"userName\").disabled = bLock;\r\n\t\t\t\t$.id(\"userName\").blur();\r\n\t\t\t}\r\n\t\t}\r\n\r\nfunction resize()\r\n{\r\n\tbodyObj = document.body;\r\n\tbodyObj.style[\"width\"] = (document.documentElement.clientWidth < 1000 ? 1000 : document.documentElement.clientWidth) + \"px\";\r\n}\r\n\r\nfunction pageLoad()\r\n{\r\n\tresize();\r\n\twindow.onresize = resize;\r\n\tvar tip = $.id(\"tip\"), tipStr=\"\", note = $.id(\"note\");\r\n\tvar unLi = $.id(\"unLi\");\r\n\tvar pwLi = $.id(\"pwLi\");\r\n\t\t\tvar pcPassword = $.id(\"pcPassword\");\r\n\t\t\tif (!INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\tvar userName = $.id(\"userName\");\r\n\t\t\t}\r\n\tdeleteCookie(\"Authorization\");\r\n\t/*\r\n\tpcPassword.onfocus = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwselect.png)\";\r\n\t};\r\n\t\r\n\tpcPassword.onblur = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwunselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onfocus = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onblur = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idunselect.png)\";\r\n\t};\r\n\t*/\r\n\t\r\n\ttry { \r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = localString[lang].MODEL_NO + modelName;\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t}\r\n\t\tif(modelDesc)\r\n\t\t{\r\n\t\t\t$.id(\"mname\").innerHTML = modelDesc;\r\n\t\t}\r\n\t}catch(e) {}\r\n\r\n\tif (forbidAdminLogin == 1)\r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[lang].NOTE;\r\n\t\t\t$.id(\"tip\").innerHTML = localString[lang].TIP_CONFLICT;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\t}\r\n\t\t\r\n\t\tforbidAdminLogin = 0;\r\n\t\tauthTimes = 0;\r\n\t\t\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\tpcPassword.focus();\r\n\t\t\tpcPassword.select();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tuserName.focus();\r\n\t\t\tuserName.select();\r\n\t\t}\r\n\t\tlockWeb(true);\r\n\t\treturn;\r\n\t}\t\t\r\n\t\r\n\tif (authTimes > 0)\r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[lang].NOTE;\r\n\t\t\t$.id(\"tip\").innerHTML = localString[lang].TIP_ERROR;\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The username or password is incorrect, please try again.\";\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tif (authTimes >= 10)\r\n\t{\r\n\t\tisLocked = true;\r\n\t\tlockWeb(true);\r\n\t\tcount = 7200 - forbidTime;\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[lang].NOTE;\r\n\t\t\ttipStr = localString[lang].TIP_EXCE1;\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[lang].TIP_EXCE2;;\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE：\";\r\n\t\t\ttipStr = \"You have exceeded ten attempts. Please try again in \";\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\t\t\r\n\t\t}\r\n\r\n\t\twindow.setTimeout(function()\r\n\t\t{\r\n\t\t\tif (count < 1)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"note\").innerHTML = \"\";\r\n\t\t\t\t$.id(\"tip\").innerHTML = \"\";\r\n\t\t\t\tisLocked = false;\r\n\t\t\t\tlockWeb(false);\r\n\t\t\t\t\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\t\t\t\tpcPassword.focus();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuserName.focus();\r\n\t\t\t\t\t\t}\r\n\t\t\t\tdeleteCookie(\"Authorization\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\tif (localString)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[lang].TIP_EXCE2;\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\r\n\t\t\t}\r\n\t\t\twindow.setTimeout(arguments.callee, 1000);\r\n\t\t}, 1000);\r\n\t\t\t} else {\r\n\t\t\t\tpcPassword.focus();\r\n\t\t\t}\r\n\t\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\tpcPassword.focus();\r\n\t\t\t\tpcPassword.select();\r\n\t}\r\n\telse{\r\n\t\tuserName.focus();\r\n\t\tuserName.select();\r\n\t}\r\n}\r\n\r\n\tfunction toggleEye (event) {\r\n\t\tvar eyeIcon = event.target || event.srcElement;\r\n\t\tvar ele = eyeIcon.previousSibling;\r\n\t\tvar type = ele.getAttribute(\"type\");\r\n\t\tif (type === \"text\") {\r\n\t\t\tele.setAttribute(\"type\", \"password\");\r\n\t\t\t$.removeClass(eyeIcon, \"show\");\r\n\t\t} else {\r\n\t\t\tele.setAttribute(\"type\", \"text\");\r\n\t\t\t$.addClass(eyeIcon, \"show\");\r\n\t\t}\r\n\t}\r\n</script>\r\n</head>\r\n\r\n<body onkeypress=\"PCWin(event)\" onload=\"pageLoad()\">\r\n<!--\r\n<div class=\"nd\" style=\"height: 0; background: url(../img/login/1.jpg);\"></div>\r\n-->\r\n<div class=\"topLogo\">\r\n\t<span class=\"preload nd eye-icon show\"></span>\r\n\t<!--\r\n\t<a href=\"http://www.tp-link.com\"><img id=\"logo\" src=\"../img/login/top1_1.jpg\" style=\"float: left;\" border=\"0\" /></a>\r\n\t<div id=\"mod\" style=\"height: 87px; margin: 0; text-align: right; overflow: hidden; background: url(../img/login/top1_2.jpg) no-repeat right;\" >\r\n\t<p id=\"mname\" style=\"font-size: 16px; font-weight: bold; color: #fff; margin: 37px 24px 0 0; padding: 0;\"></p>\r\n\t<p id=\"mnum\" style=\"font-size: 12px; font-weight: bold; color: #fff; margin: 2px 24px 0 0; padding: 0;\"></p>\r\n\t</div>\r\n\t<img id=\"bhr\" src=\"../img/login/top2.jpg\" style=\"height: 3px; width: 100%; display: block;\" />\r\n\t-->\r\n\t<table cellspacing=0 width=\"100%\">\r\n        <tr>\r\n            <td>\r\n                <table border=\"0\" cellspacing=\"0\" width=\"100%\">\r\n                    <tr>\r\n                        <td id=\"first-td\">\r\n                            <a OnClick=\"return NewW();\" onMouseOver=\"return ShowUrl();\" onMouseOut=\"return EraseUrl();\">\r\n                                <img src=\"../img/login/logo.png\">\r\n                            </a>\r\n                        </td>\r\n                        <td id=\"second-td\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td id=\"mname\" class=\"style1\"></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td id=\"mnum\" class=\"style2\"></td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n\t\t\t\t\t\t<td id=\"third-td\">\r\n\t\t\t\t\t\t\t<img src=\"../img/login/top-right.png\">\r\n\t\t\t\t\t\t</td>\r\n                    </tr>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n        <!--<tr>-->\r\n            <!--<td>-->\r\n                <!--<IMG height=3 src=\"../images/top2.jpg\" width=\"100%\" align=top border=0>-->\r\n            <!--</td>-->\r\n        <!--</tr>-->\r\n    </table>\r\n</div>\r\n\t<div id=\"login-container\" class=\"loginBox nd\">\r\n\t<div class=\"noteDiv\">\r\n\t\t<span id=\"note\"></span>\r\n\t\t<span id=\"tip\"></span>\r\n\t</div>\r\n\t<div class=\"panelThre\" align=\"center\">\r\n\t\t<div align=\"center\" class=\"picDiv\">\r\n\t\t\t<ul>\r\n\t\t\t\t\t<div id=\"login-username\" class=\"nd\">\r\n\t\t\t\t<li id=\"unLi\" class=\"unLi\"><img src=\"../img/login/username.png\"><input class=\"text\" id=\"userName\" type=\"text\" maxlength=\"32\" placeholder=\"Username\" autocomplete=\"off\"/></li>\r\n\t\t\t\t<li class=\"blank\"></li>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<li id=\"pwLi\" class=\"pwLi\"><img src=\"../img/login/password.png\"><input class=\"text\" id=\"pcPassword\" type=\"password\" maxlength=\"32\" placeholder=\"Password\" autocomplete=\"off\"/></li>\r\n\t\t\t</ul>\t\t\t\r\n\t\t\t<!--<button id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"></button>-->\r\n\t\t\t<label id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"/><span id=\"loginBtnText\">Login</span></label>\r\n\t\t\t<!--\r\n\t\t\t<div>\r\n\t\t\t\t<label id=\"copyright\">Copyright &copy; 2016 TP-LINK Technologies Co., Ltd. All rights reserved. </label>\r\n\t\t\t</div>\r\n\t\t\t-->\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\t<div id=\"change-pwd-container\" class=\"loginBox nd\">\r\n\t\t<div class=\"panelThre\" align=\"center\">\r\n\t\t\t<div align=\"center\" class=\"picDiv\">\r\n\t\t\t\t<div id=\"change-pwd-title\" class=\"change-pwd-title\">Create Login Password</div>\r\n\t\t\t\t<div id=\"change-pwd-p\" class=\"change-pwd-p\">Enter 6-32 characters to create login password. Strong password with\r\n\t\t\t\t\ta mix of numbers, letters, and symbols is recommended.</div>\r\n\t\t\t\t<ul class=\"pw-ul\">\r\n\t\t\t\t\t<li id=\"change-pwLi\" class=\"pwLi\" style=\"margin-bottom: 4px;\">\r\n\t\t\t\t\t\t<img src=\"../img/login/password.png\" class=\"\"><input class=\"text\" id=\"change-pcPassword\" onfocus=\"onFocusPwd(event)\" onkeyup=\"onKeyUpPwd(event)\" onblur=\"onBlurPwd(event)\" type=\"password\" autocomplete=\"off\" placeholder=\"Password\" /><div class=\"eye-icon\" onclick=\"toggleEye(event)\"></div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<div id=\"pwd-tips\" class=\"nd\">\r\n\t\t\t\t\t\t<li class=\"pwd-tip\"><span class=\"icon\"></span><span id=\"pwd-tip-space\">Must contain no space(s).</span></li>\r\n\t\t\t\t\t\t<li class=\"pwd-tip\"><span class=\"icon\"></span><span id=\"pwd-tip-long\">Must be 6-32 characters long.</span></li>\r\n\t\t\t\t\t\t<li class=\"pwd-tip\"><span class=\"icon\"></span><span id=\"pwd-tip-char\">Must contain at least two types of the following characters: letters, numbers and symbols.</span></li>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<li class=\"blank\"></li>\r\n\t\t\t\t\t<li id=\"confirm-pwLi\" class=\"pwLi\">\r\n\t\t\t\t\t\t<img src=\"../img/login/password.png\" class=\"\"><input class=\"text\" id=\"confirm-pcPassword\" type=\"password\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" /><div class=\"eye-icon\" onclick=\"toggleEye(event)\">\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<label id=\"createBtn\" class=\"loginBtn disabled\" onclick=\"createPwd()\"><span id=\"createBtnText\">Create</span></label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n<iframe id=\"qrFrame\" name=qrFrame marginWidth=0 marginHeight=0 frameBorder='0' src=\"../qr.htm\" noResize scrolling=no frameSpacing=0 id=\"qrFrame\" style=\"position:absolute;bottom:0;width:100%;height:200px;\">\r\n</iframe>\r\n</body>\r\n<script type=\"text/javascript\">\r\n\tvar changePwdCont = $.id(\"change-pwd-container\");\r\n\tvar loginCont = $.id(\"login-container\");\r\n\tvar isFirstLogin = \"0\";\r\n\tvar tipArr = document.querySelectorAll(\".pwd-tip\");\r\n\t\r\n\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t$.addClass($.id(\"login-username\"), \"nd\");\r\n\t\tvar GmultiMode = $.act(ACT_GET, MULTIMODE, null, null);\r\n\t\tif (!$.exe(null, null, 0)){\r\n\t\t\tisFirstLogin = GmultiMode.webauth_first_login;\r\n\t\t\tif (isFirstLogin === \"1\") {\r\n\t\t\t\t$.removeClass(changePwdCont, \"nd\");\r\n\t\t\t\t$.addClass(loginCont, \"nd\");\r\n\t\t\t} else {\r\n\t\t\t\t$.addClass(changePwdCont, \"nd\");\r\n\t\t\t\t$.removeClass(loginCont, \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\t$.addClass(changePwdCont, \"nd\");\r\n\t\t$.removeClass(loginCont, \"nd\");\r\n\t\t$.removeClass($.id(\"login-username\"), \"nd\");\r\n\t}\r\n\tif (localString) {\r\n\t\tif (!INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\tdocument.getElementById(\"userName\").placeholder = localString[lang].USERNAME;\r\n\t\t}\r\n\tdocument.getElementById(\"pcPassword\").placeholder = localString[lang].PASSWORD;\r\n\tdocument.getElementById(\"loginBtnText\").innerHTML = localString[lang].LOGIN;\r\n\t\t\r\n\t\tdocument.getElementById(\"change-pwd-title\").innerHTML = localString[lang].CHANGE_TITLE;\r\n\t\tdocument.getElementById(\"change-pwd-p\").innerHTML = localString[lang].CHANGE_P;\r\n\t\tdocument.getElementById(\"change-pcPassword\").placeholder = localString[lang].PASSWORD;\r\n\t\tdocument.getElementById(\"confirm-pcPassword\").placeholder = localString[lang].CONFIRM_PWD;\r\n\t\tdocument.getElementById(\"createBtnText\").innerHTML = localString[lang].CREATE;\r\n\t\tdocument.getElementById(\"pwd-tip-space\").innerHTML = localString[lang].PWD_TIP_SPACE;\r\n\t\tdocument.getElementById(\"pwd-tip-long\").innerHTML = localString[lang].PWD_TIP_LONG;\r\n\t\tdocument.getElementById(\"pwd-tip-char\").innerHTML = localString[lang].PWD_TIP_CHAR;\r\n\t}\r\n\r\n function NewW() {\r\n\tif (newWin) newWin.close();\r\n\tnewWin = window.open(url, \"\", \"scrollbars=yes,resizable=yes,toolbar=yes,status=yes,menubar=yes,scrollbar=yes,location=yes\");\r\n\treturn true;\r\n}\r\nfunction ShowUrl() {\r\n\tstatus = url;\r\n\treturn true;\r\n}\r\nfunction EraseUrl() {\r\n\tstatus = \"\";\r\n\treturn true;\r\n}\r\nif(INCLUDE_LOGIN_GDPR_ENCRYPT)\r\n{\r\n\t$.newencryptorManager = $.encrypt.encryptManager;\r\n\t$.newencryptorManager.cleanStorage();\r\n\t$.Iencryptor = $.newencryptorManager.genEncryptor();\r\n}\r\n</script>\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "login_3.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 37
      },
      "contents" : {
        "text" : "<!DOCTYPE html> \r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n<META http-equiv=Content-Type content=\"text/html; charset=utf-8\" />\r\n<META http-equiv=Pragma content=no-cache>\r\n<META http-equiv=Expires content=0>\r\n\r\n<!-- \r\n<link rel=\"stylesheet\" href=\"../css/login.css\" type=\"text/css\" />\r\n<link rel=\"stylesheet\" href=\"../img/login/login.css\" type=\"text/css\" />\r\n-->\r\n<style type=\"text/css\">\r\nbody{\r\n    font-family:Arial, sans-serief;\r\n    background-color:#FFFFFF;\r\n    margin:0px;\r\n    padding:0px;\r\n}\r\ndiv.loginBox\r\n{\r\n    /*display: block;*/\r\n    position:relative;\r\n    margin-top:10%;\r\n    text-align:center;\r\n}\r\n.nd {\r\n    display: none !important;\r\n}\r\n.noteDiv{\r\n    color:gray;\r\n    font-family:Arial;\r\n    width:395px;\r\n    text-align:left;\r\n    margin:0px auto;\r\n    font-size:14px;\r\n}\r\n#note{\r\n    /*display:inline-block;*/\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:50px;\r\n    font-weight:bold;\r\n}\r\n#tip{\r\n    display:inline-block;\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:340px;\r\n    font-weight:bold;\r\n}\r\ndiv.panelThre{\r\n    margin-top:10px;\r\n}\r\ndiv.picDiv{\r\n    width:395px;\r\n    height:276px;\r\n    /*background:url(../login/loginbg.png);*/\r\n    position:relative;\r\n}\r\ninput.pcPassword{\r\n    width:300px;\r\n    height:50px;\r\n    line-height:50px;\r\n    padding-left:20px;\r\n}\r\ndiv.PCBtnDiv{\r\n    position:relative;\r\n    margin-top:20px;\r\n}\r\nimg.logoPic{\r\n    width:100%;\r\n}\r\n#copyright{\r\n    -webkit-text-size-adjust:none;\r\n    font-size:8px;\r\n    color:#6a6969;\r\n    font-family:\"Verdana\";\r\n    font-weight:normal;\r\n    margin-top:40px;\r\n    display:inline-block;\r\n}\r\n.topLogo{\r\n    background-color: #4ACBD6;\r\n    height:96px;\r\n    overflow: hidden;\r\n}\r\ntr{\r\n    vertical-align: top;\r\n}\r\n.topLogo td a img{\r\n    margin:27px 0 0 25px;\r\n}\r\n.topLogo td.last-td img{\r\n    float: right;\r\n    margin-right: 14px;\r\n    opacity: 0.3;\r\n    filter:alpha(opacity=30);\r\n}\r\nul{\r\n    padding:60px 0px 0px 0px;\r\n    margin:0px;\r\n    list-style:none;\r\n}\r\nul li{\r\n    height:32px;\r\n    width:250px;\r\n    text-align: left;\r\n}\r\nli.unLi{\r\n    /*background:url(../login/loginUser.png);*/\r\n    background:url(../img/login/input-box.png);\r\n\r\n}\r\nli.pwLi{\r\n    /*background:url(../login/loginPwd.png);*/\r\n    background:url(../img/login/input-box.png);\r\n}\r\nli.blank{\r\n    height:8px;\r\n}\r\ninput.text{\r\n    border:0px;\r\n    height:32px;\r\n    line-height:32px;\r\n    width:175px;\r\n    padding:0px;\r\n    /*margin-left: 39px;*/\r\n    font-size:14px;\r\n    color:#A7A9AC;\r\n    font-family:\"Arial\",\"Verdana\";\r\n    font-weight:normal;\r\n    background-color: transparent;\r\n    vertical-align: top;\r\n}\r\ninput.text:focus{\r\n    outline: none;\r\n}\r\nlabel.loginBtn{\r\n    height:32px;\r\n    display:inline-block;\r\n    width:250px;\r\n    margin-top:8px;\r\n    line-height: 32px;\r\n    color: #FFFFFF;\r\n    font-size:18px;\r\n    font-family: Arial;\r\n\t/*background:url(../img/login/loginButton.png);*/\r\n    background-color:#4ACBD6;\r\n\tborder-radius:5px;\r\n\tcursor:pointer;\r\n}\r\n\r\nli img{\r\n    line-height: 40px;\r\n    margin: 9px 6px 9px 9px;\r\n}\r\n\r\niframe#top{\r\n    width:100%;\r\n    height:96px;\r\n    border: none;\r\n    display: block;\r\n}\r\n\r\nhtml{\r\n    overflow: hidden;\r\n}\r\ntable,tr,td{\r\n    padding: 0;\r\n}\r\ntd {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\nform {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\n/*\r\nbody {\r\n    font-family:\"Arial Black\", \"ºÚÌå\";\r\n    font-size: 16px;\r\n    background: #4ACBD6\r\n}\r\n*/\r\n.style1 {\r\n    font-family:Arial;\r\n    color: #FFFFFF;\r\n    font-size: 18px;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n}\r\n.style2 {\r\n    font-size: 14px;\r\n    font-family:Arial;\r\n    font-weight: bold;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    color: #FFFFFF;\r\n}\r\n\r\ntr{\r\n    vertical-align: top;\r\n}\r\n#first-td{\r\n    width:234px;\r\n}\r\n#first-td img {\r\n    margin:27px 0 0 25px;\r\n    cursor: pointer;\r\n}\r\n#second-td {\r\n    padding-top: 25px;\r\n}\r\n#third-td img {\r\n    float:right;\r\n    opacity: 0.3;\r\n    filter\\0: alpha(opacity=30);\r\n    margin-right: 14px;\r\n}\r\ninput[type=\"text\"]::-ms-clear,\r\ninput[type='password']::-ms-reveal{\r\n    display:none;\r\n}\r\n#languageBox {\r\n    margin: auto;\r\n    width: 420px;\r\n//    height: 290px;\r\n    margin: auto;\r\n    margin-top: 7%;\r\n}\r\n#languageList {\r\n    padding: 2px 0;\r\n//    border: 1px solid #4acbd6;\r\n    border: 1px solid #23c4c4;\r\n    border-radius: 5px;\r\n    overflow-y: hidden;\r\n    background-color: white;\r\n}\r\n#languageBox ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n#languageBox li {\r\n    list-style: none;\r\n    line-height: 40px;\r\n    height: 40px;\r\n    text-align: left;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin: 2px 0;\r\n}\r\n#languageBox li span {\r\n    padding-left: 15px;\r\n}\r\n#languageBox li:hover {\r\n    cursor: pointer;\r\n    background: #23c4c4;\r\n    color: white;\r\n}\r\n#languageBox li.cur_lang {\r\n    background: #4acbd6;\r\n    color: white;\r\n}\r\n#buttonStart {\r\n    margin-top: 50px;\r\n    width: 250px;\r\n    line-height: 29px;\r\n    /*background:url(../img/login/loginButton.png);*/\r\n    background-color:#4ACBD6;\r\n\tborder-radius:5px;\r\n    border: none;\r\n    color: white;\r\n    font-size: 18px;\r\n    font-family: 'Arial', 'sans-serif';\r\n}\r\n\r\n#buttonStart:hover {\r\n    cursor:pointer;\r\n}\r\n#langTip {\r\n    color: #ba1365;\r\n    font-size: 14px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n}\r\n</style>\r\n\r\n<script type=\"text/javascript\">\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI = 71017;\r\n</script>\r\n<script src=\"../js/oid_str.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/language.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/lib.js\" type=\"text/javascript\"></script>\r\n\r\n<script type=\"text/javascript\">\r\nvar g_lang = \"en_US\";\r\n\r\nvar url = window.location.href;\r\n/*\r\nwindow.$ = {\r\n\tid:function (id) {\r\n\t\t\treturn document.getElementById(id);\r\n\t}\r\n}\r\n*/\r\n\t\t\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n\r\nvar isLocked = false;\r\n\r\ndeleteCookie(\"Authorization\");\r\nif (window.parent != window)\r\n{\r\n\tvar refresh = function(domain, port, frame, page) {\r\n\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t}\r\n\trefresh();\r\n}\r\n\r\nfunction Base64Encoding(input) \r\n{\r\n\tvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\tvar output = \"\";\r\n\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\tvar i = 0;\r\n\tinput = utf8_encode(input);\r\n\twhile (i < input.length) \r\n\t{\r\n\t\tchr1 = input.charCodeAt(i++);\r\n\t\tchr2 = input.charCodeAt(i++);\r\n\t\tchr3 = input.charCodeAt(i++);\r\n\t\tenc1 = chr1 >> 2;\r\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\tenc4 = chr3 & 63;\r\n\t\t\r\n\t\tif (isNaN(chr2)) \r\n\t\t{\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t} \r\n\t\telse if (isNaN(chr3)) \r\n\t\t{\r\n\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction utf8_encode (string) \r\n{\r\n\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\tvar utftext = \"\";\r\n\t\r\n\tfor (var n = 0; n < string.length; n++) \r\n\t{\r\n\t\tvar c = string.charCodeAt(n);\r\n\t\tif (c < 128) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode(c);\r\n\t\t}\r\n\t\telse if((c > 127) && (c < 2048)) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t}\t\r\n\treturn utftext;\r\n}\r\n\r\nfunction PCWin(event)\r\n{\r\n\tif (event.keyCode == 13)\r\n\t{\r\n        if (hasClass(document.getElementById(\"languageBox\"), \"nd\"))\r\n        {\r\n\t\t    PCSubWin();\r\n        }\r\n\t}\r\n\r\n    /*\r\n     *  Tab Pressed\r\n     */\r\n    if (event.keyCode == 9)\r\n    {\r\n\r\n        if (hasClass(document.getElementById(\"languageBox\"), \"nd\"))\r\n        {\r\n        }\r\n        else\r\n        {\r\n            var nextLanguageIndex = (currentLanguageIndex + 1) % languageItemArray.length;\r\n            selectLanguage(nextLanguageIndex);\r\n            window.focus();\r\n        }\r\n    }\r\n}\r\n\r\nfunction PCSubWin()\r\n{\t\r\n\tif (isLocked == true)\r\n\t{\r\n\t\treturn ;\r\n\t}\r\n\t\t\r\n\tvar auth;\r\n\tvar password = $.id(\"pcPassword\").value;\r\n\tvar userName = $.id(\"userName\").value;\r\n\r\n/*\tif (forbidAdminLogin == 1){\r\n\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t$.id(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\treturn;\r\n\t}*/\r\n\t//localStorage.setItem(\"language\", newLanguage);\r\n\t\r\n\tauth = \"Basic \"+Base64Encoding(userName+\":\"+password);\r\n\tdocument.cookie = \"Authorization=\" + auth;\r\n    localStorage.setItem(\"language\", newLanguage);\r\n\twindow.location.reload();\r\n\r\n}\r\n\r\nfunction deleteCookie(name) \r\n{ \r\n    var LargeExpDate = new Date ();\r\n    document.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n}\r\n\r\nfunction lockWeb(bLock)\r\n{\r\n\t$.id(\"userName\").disabled = bLock;\r\n\t$.id(\"pcPassword\").disabled = bLock;\r\n\t$.id(\"pcPassword\").blur();\r\n\t$.id(\"userName\").blur();\r\n}\r\n\r\nfunction resize()\r\n{\r\n\tbodyObj = document.body;\r\n\tbodyObj.style[\"width\"] = (document.documentElement.clientWidth < 1000 ? 1000 : document.documentElement.clientWidth) + \"px\";\r\n}\r\n\r\nfunction pageLoad()\r\n{\r\n\tresize();\r\n\twindow.onresize = resize;\r\n\tvar tip = $.id(\"tip\"), tipStr=\"\", note = $.id(\"note\");\r\n\tvar unLi = $.id(\"unLi\");\r\n\tvar pwLi = $.id(\"pwLi\");\r\n\tvar userName = $.id(\"userName\");\r\n\tvar pcPassword = $.id(\"pcPassword\");\r\n\t\r\n\tdeleteCookie(\"Authorization\");\r\n\tpcPassword.onfocus = function()\r\n\t{\r\n\t\t//pwLi.style.background = \"url(../img/login/login-input-focus.png)\";\r\n\t\tpwLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n\t\r\n\tpcPassword.onblur = function()\r\n\t{\r\n\t\t/*pwLi.style.background = \"url(../img/login/login-input-normal.png)\";*/\r\n\t\tpwLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onfocus = function()\r\n\t{\r\n        /*unLi.style.background = \"url(../img/login/login-input-focus.png)\";*/\r\n\t\tunLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onblur = function()\r\n\t{\r\n\t\t/*unLi.style.background = \"url(../img/login/login-input-normal.png)\";*/\r\n        unLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n\r\n\ttry { \r\n\t\tif (modelName) \r\n\t\t{\r\n\t\t\t\tdocument.title = modelName; \r\n\t\t\t\tif (localString)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"mnum\").innerHTML = localString[g_lang].MODEL_NO + modelName;\t\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t\t\t}\r\n\t\t}\t\r\n\t\tif(modelDesc)\r\n\t\t{\r\n\t\t\t\t$.id(\"mname\").innerHTML = modelDesc;\r\n\t\t}\r\n\t}catch(e) {}\r\n\r\n\tif ((typeof forbidAdminLogin) != \"undefined\" && forbidAdminLogin == 1)\r\n\t{\r\n\t\t\r\n\t\t\r\n\t\tif (localString)\r\n        {\r\n            $.id(\"note\").innerHTML = localString[g_lang].NOTE;\r\n            $.id(\"tip\").innerHTML = localString[g_lang].TIP_CONFLICT;\r\n        }\r\n        else\r\n        {\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\t}\r\n\t\t\r\n\t\tforbidAdminLogin = 0;\r\n\t\tauthTimes = 0;\r\n\t\tif (/*usernameIsAdmin*/0) \r\n\t\t{\r\n\t\t\tuserName.value = \"admin\";\r\n\t\t\tpcPassword.focus();\r\n\t\t\tpcPassword.select();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tuserName.focus();\r\n\t\t\tuserName.select();\r\n\t\t}\r\n\t\tlockWeb(true);\r\n\t\treturn;\r\n\t}\t\t\r\n\t\r\n\tif ((typeof authTimes) != \"undefined\" && authTimes > 0)\r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[g_lang].NOTE;\r\n\t\t\t$.id(\"tip\").innerHTML = localString[g_lang].TIP_ERROR;\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The username or password is incorrect, please try again.\";\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tif ((typeof authTimes) != \"undefined\" && authTimes >= 10)\r\n\t{\r\n\t\tisLocked = true;\r\n\t\tlockWeb(true);\r\n\t\t\r\n\t\tcount = 7200 - forbidTime;\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[g_lang].NOTE;\r\n\t\t\ttipStr = localString[g_lang].TIP_EXCE1;\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[g_lang].TIP_EXCE2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE：\";\r\n\t\t\ttipStr = \"You have exceeded ten attempts. Please try again in \";\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\t\t\r\n\t\t}\t\t\r\n\t\twindow.setTimeout(function()\r\n\t\t{\r\n\t\t\tif (count < 1)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"note\").innerHTML = \"\";\r\n\t\t\t\t$.id(\"tip\").innerHTML = \"\";\r\n\t\t\t\tisLocked = false;\r\n\t\t\t\tlockWeb(false);\r\n\t\t\t\tuserName.focus();\r\n\t\t\t\tdeleteCookie(\"Authorization\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\tif (localString)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[g_lang].TIP_EXCE2;\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\r\n\t\t\t}\r\n\t\t\twindow.setTimeout(arguments.callee, 1000);\r\n\t\t}, 1000);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(navigator.appName == \"Microsoft Internet Explorer\" && navigator.appVersion .split(\";\")[1].replace(/[ ]/g,\"\")!=\"MSIE8.0\") userName.focus();\r\n\t}\r\n\tif (/*usernameIsAdmin*/0) \r\n\t{\r\n\t\tuserName.value = \"admin\";\r\n\t\tpcPassword.focus();\r\n\t\tpcPassword.select();\r\n\t}\r\n\telse{\r\n\t\tif(navigator.appName == \"Microsoft Internet Explorer\" && navigator.appVersion .split(\";\")[1].replace(/[ ]/g,\"\")!=\"MSIE8.0\") userName.focus();\r\n\t\tuserName.select();\r\n\t}\r\n}\r\n</script>\r\n\r\n<script type=\"text/javascript\">\r\n\r\nvar languageAreadySet = false;\r\nvar oldLanguage = \"ko_KR\";\r\nvar newLanguage = oldLanguage;\r\nvar supportedLanguages = \"en_US, es_MX, ko_KR, pt_BR, vi_VN, zh_TW\";\r\n\r\n\r\nvar languageItemArray = [];\r\nvar currentLanguageIndex = 0;\r\n\r\nfunction hasClass(elem, className)\r\n{\r\n    var re = new RegExp(className);\r\n    return elem && re.test(elem.className);\r\n}\r\nfunction addClass(elem, className)\r\n{\r\n    if (elem && !hasClass(elem, className))\r\n    {\r\n        elem.className += (elem.className ? \" \" : \"\") + className;\r\n    }\r\n    return elem;\r\n}\r\nfunction remClass(elem, className)\r\n{\r\n    if (elem && hasClass(elem, className))\r\n    {\r\n        elem.className = elem.className.replace(className, \"\");\r\n        elem.className = elem.className.replace(/\\s+/, \" \");\r\n    }\r\n    return elem;\r\n}\r\nfunction updateTopDesc(language)\r\n{\r\n\tif (typeof modelName != \"undefined\" && modelName) \r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = localString[language].MODEL_NO + modelName;\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction getClassName(clsName){\r\n\tvar oParent = document;\r\n\tvar elements = oParent.getElementsByTagName(\"*\");\r\n\tvar ele=[];\r\n\tfor(var i=0;i<elements.length;i++){\r\n\t\tif(elements[i].className.indexOf(clsName)>-1){\r\n\t\t\tele.push(elements[i]);\r\n\t\t}\r\n\t}\r\n\treturn ele;\r\n}\r\nfunction updateText(language)\r\n{\r\n    var textElements = document.getElementsByClassName?document.getElementsByClassName('mtext'):getClassName('mtext');\r\n    var currentLanguageString = localString[language];\r\n    var len = textElements.length;\r\n    var e;\r\n    for (var i = 0; i < len; i++)\r\n    {\r\n        e = textElements[i];\r\n        for (var t in currentLanguageString)\r\n        {\r\n            if (hasClass(e, t))\r\n            {\r\n                if (hasClass(e, 'mph'))\r\n                {\r\n                    e.placeholder = currentLanguageString[t];\r\n                }\r\n                else if (e.value != undefined)\r\n                {\r\n                    e.value = currentLanguageString[t];\r\n                }\r\n                else\r\n                {\r\n                    e.innerHTML =  currentLanguageString[t];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\tupdateTopDesc(language);\r\n}\r\nfunction selectLanguage(selectedIndex)\r\n{\r\n    var languageSelectBox = document.getElementById(\"languageUL\");\r\n    languageSelectBox.selectedIndex = selectedIndex;\r\n\r\n    var languageItems = document.getElementsByClassName?document.getElementsByClassName(\"lang_item\"):getClassName('lang_item');\r\n    var len = languageItems.length;\r\n    for (var i = 0; i < len; i++)\r\n    {\r\n        if (i == selectedIndex)\r\n        {\r\n            addClass(languageItems[i], 'cur_lang');\r\n        }\r\n        else\r\n        {\r\n            remClass(languageItems[i], 'cur_lang');\r\n        }\r\n    }\r\n    currentLanguageIndex = selectedIndex;\r\n    newLanguage = languageItemArray[selectedIndex];\r\n\tg_lang = newLanguage;\r\n    updateText(newLanguage);\r\n\t$.country = newLanguage;\r\n\t//console.log(\"$.country : \", $.country);\r\n\tdocument.getElementById(\"qrFrame\").src=\"../qr.htm\";\r\n}\r\nfunction createLanguageBox()\r\n{\r\n    var languageArray = supportedLanguages.split(\",\");\r\n    var len = languageArray.length;\r\n    var languageSelectBox = document.getElementById(\"languageUL\");\r\n    var selectedLanguageIndex = 0;\r\n    languageSelectBox.innerHTML = \"\";\r\n    for (var i  = 0; i < len; i++)\r\n    {\r\n        language = languageArray[i].replace(/(^\\s*)|(\\s*$)/g,\"\"); \r\n        if (language.match(/\\S+/)) \r\n        {\r\n            languageItemArray.push(language);\r\n            languageSelectBox.innerHTML += \"<li class='lang_item' onclick='selectLanguage(\" + i + \");' tabindex=\" + i + \"><span>\" + localLanguageName[language] + \"</span></li>\";\r\n            if (language == oldLanguage)\r\n            {\r\n                selectedLanguageIndex = i;\r\n            }\r\n        }\r\n    }\r\n    selectLanguage(selectedLanguageIndex);\r\n}\r\nfunction showLogin()\r\n{\r\n        remClass(document.getElementById(\"loginBox\"), \"nd\");\r\n        addClass(document.getElementById(\"languageBox\"), \"nd\");\r\n}\r\nfunction init() \r\n{\r\n\tvar langObj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"X_TP_SupportedLanguages\", \"X_TP_CurrentLanguage\", \"X_TP_LanguageSetByUser\"]);\r\n    if (!$.exe())\r\n    {\r\n        if (typeof INCLUDE_WEBUI_SUPPORT != \"undefined\" && INCLUDE_WEBUI_SUPPORT == 1)\r\n        {\r\n            localStorage.setItem(\"language\",langObj.X_TP_CurrentLanguage);\r\n        }\r\n        \r\n        languageAreadySet = langObj.X_TP_LanguageSetByUser;\r\n        oldLanguage = langObj.X_TP_CurrentLanguage;\r\n        newLanguage = oldLanguage;\r\n        supportedLanguages = langObj.X_TP_SupportedLanguages;\r\n\t\tg_lang = newLanguage;\r\n    }\r\n\t\r\n    if (languageAreadySet == \"0\")\r\n    {\r\n        addClass(document.getElementById(\"loginBox\"), \"nd\");\r\n        remClass(document.getElementById(\"languageBox\"), \"nd\");\r\n        createLanguageBox();\r\n    }\r\n    else\r\n    {\r\n        remClass(document.getElementById(\"loginBox\"), \"nd\");\r\n        addClass(document.getElementById(\"languageBox\"), \"nd\");\r\n\t\tdocument.getElementById(\"qrFrame\").src=\"../qr.htm\";\r\n        updateText(newLanguage);\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n</head>\r\n\r\n<body onkeypress=\"PCWin(event)\" onload=\"pageLoad()\">\r\n<!--\r\n<div class=\"nd\" style=\"height: 0; background: url(../img/login/1.jpg);\"></div>\r\n-->\r\n<div class=\"topLogo\">\r\n\t<!--\r\n\t<a href=\"http://www.tp-link.com\"><img id=\"logo\" src=\"../img/login/top1_1.jpg\" style=\"float: left;\" border=\"0\" /></a>\r\n\t<div id=\"mod\" style=\"height: 87px; margin: 0; text-align: right; overflow: hidden; background: url(../img/login/top1_2.jpg) no-repeat right;\" >\r\n\t<p id=\"mname\" style=\"font-size: 16px; font-weight: bold; color: #fff; margin: 37px 24px 0 0; padding: 0;\"></p>\r\n\t<p id=\"mnum\" style=\"font-size: 12px; font-weight: bold; color: #fff; margin: 2px 24px 0 0; padding: 0;\"></p>\r\n\t</div>\r\n\t<img id=\"bhr\" src=\"../img/login/top2.jpg\" style=\"height: 3px; width: 100%; display: block;\" />\r\n\t-->\r\n\t<table cellspacing=0 width=\"100%\">\r\n        <tr>\r\n            <td>\r\n                <table border=\"0\" cellspacing=\"0\" width=\"100%\">\r\n                    <tr>\r\n                        <td id=\"first-td\">\r\n                            <a OnClick=\"return NewW();\" onMouseOver=\"return ShowUrl();\" onMouseOut=\"return EraseUrl();\">\r\n                                <img src=\"../img/login/logo.png\">\r\n                            </a>\r\n                        </td>\r\n                        <td id=\"second-td\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td id=\"mname\" class=\"style1\"></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td id=\"mnum\" class=\"style2\"></td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n\t\t\t\t\t\t<td id=\"third-td\">\r\n\t\t\t\t\t\t\t<img src=\"../img/login/top-right.png\">\r\n\t\t\t\t\t\t</td>\r\n                    </tr>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n        <!--<tr>-->\r\n            <!--<td>-->\r\n                <!--<IMG height=3 src=\"../images/top2.jpg\" width=\"100%\" align=top border=0>-->\r\n            <!--</td>-->\r\n        <!--</tr>-->\r\n    </table>\r\n</div>\r\n\r\n<div class=\"languageBox\" id=\"languageBox\" >\r\n    <div id=\"langTip\" class=\"mtext LANG_TIP\">\r\n        Please select your prefered language.\r\n    </div>\r\n    <div id=\"languageList\">\r\n        <ul id=\"languageUL\">\r\n        </ul>\r\n    </div>\r\n    <center>\r\n        <input type=\"button\" id=\"buttonStart\" class=\"mtext START\" onclick=\"showLogin()\" />\r\n    </center>\r\n</div>\r\n\r\n<div class=\"loginBox\" id=\"loginBox\">\r\n\t<div class=\"noteDiv\">\r\n\t\t<span id=\"note\"></span>\r\n\t\t<span id=\"tip\"></span>\r\n\t</div>\r\n\t<div class=\"panelThre\" align=\"center\">\r\n\t\t<div align=\"center\" class=\"picDiv\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li id=\"unLi\" class=\"unLi\"><img src=\"../img/login/username.gif\"><input class=\"text mtext mph USERNAME\" id=\"userName\" type=\"text\" maxlength=\"32\" placeholder=\"Username\" autocomplete=\"off\"/></li>\r\n\t\t\t\t<li class=\"blank\"></li>\r\n\t\t\t\t<li id=\"pwLi\" class=\"pwLi\"><img src=\"../img/login/password.gif\"><input class=\"text mtext mph PASSWORD\" id=\"pcPassword\" type=\"password\" maxlength=\"32\" placeholder=\"Password\" autocomplete=\"off\"/></li>\r\n\t\t\t</ul>\t\t\t\r\n\t\t\t<!--<button id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"></button>-->\r\n\t\t\t<label id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"/><span class=\"mtext LOGIN\">Log In</span></label>\r\n\t\t\t<!--\r\n\t\t\t<div>\r\n\t\t\t\t<label id=\"copyright\">Copyright &copy; 2016 TP-LINK Technologies Co., Ltd. All rights reserved. </label>\r\n\t\t\t</div>\r\n\t\t\t-->\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<iframe id=\"qrFrame\" name=qrFrame marginWidth=0 marginHeight=0 frameBorder='0' src=\"../qr.htm\" noResize scrolling=no frameSpacing=0 id=\"qrFrame\" style=\"position:absolute;bottom:0;width:100%;height:200px;\">\r\n</iframe>\r\n\r\n</body>\r\n</html>\r\n<script type=\"text/javascript\">\r\n        var newWin;\r\n        var url = \"http://\" + \"www.tp-link.com\";\r\n\t\r\n\r\n        function Click() {\r\n             return false;\r\n        }\r\n        document.oncontextmenu = Click;\r\n\r\n        function NewW() {\r\n            if (newWin) newWin.close();\r\n            newWin = window.open(url, \"\", \"scrollbars=yes,resizable=yes,toolbar=yes,status=yes,menubar=yes,scrollbar=yes,location=yes\");\r\n            return true;\r\n        }\r\n        function ShowUrl() {\r\n            status = url;\r\n            return true;\r\n        }\r\n        function EraseUrl() {\r\n            status = \"\";\r\n            return true;\r\n        }\r\n\r\n\t\tinit();\r\n</script>\r\n<script type=\"text/javascript\"> var authTimes=0; var forbidTime=0; var modelName=\"Archer C55\"; var modelDesc=\"Roteador para Fibra Wireless Dual Band AC1200\"; var forbidAdminLogin=0; var forbidUserLogin=0; var usernameIsAdmin=1;</script>"
      }
    }, {
      "location" : {
        "uri" : "login_4.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 38
      },
      "contents" : {
        "text" : "<!DOCTYPE html> \r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n<META http-equiv=Content-Type content=\"text/html; charset=utf-8\" />\r\n<META http-equiv=Pragma content=no-cache>\r\n<META http-equiv=Expires content=0>\r\n\r\n<!-- \r\n<link rel=\"stylesheet\" href=\"../css/login.css\" type=\"text/css\" />\r\n<link rel=\"stylesheet\" href=\"../img/login/login.css\" type=\"text/css\" />\r\n-->\r\n<link rel=\"Shortcut Icon\" href=\"../img/login/favicon.ico\" type=\"image/jpeg\" />\r\n<style type=\"text/css\">\r\nbody{\r\n    font-family:Arial, sans-serief;\r\n    background-color:#FFFFFF;\r\n    margin:0px;\r\n    padding:0px;\r\n}\r\ndiv.loginBox\r\n{\r\n    display: block;\r\n    position:relative;\r\n    margin-top:10%;\r\n    text-align:center;\r\n}\r\n.noteDiv{\r\n    color:gray;\r\n    font-family:Arial;\r\n    width:395px;\r\n    text-align:left;\r\n    margin:0px auto;\r\n    font-size:14px;\r\n}\r\n#note{\r\n    /*display:inline-block;*/\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:50px;\r\n    font-weight:bold;\r\n}\r\n#tip{\r\n    display:inline-block;\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:340px;\r\n    font-weight:bold;\r\n}\r\ndiv.panelThre{\r\n    margin-top:10px;\r\n}\r\ndiv.picDiv{\r\n    width:395px;\r\n    height:276px;\r\n    /*background:url(../login/loginbg.png);*/\r\n    position:relative;\r\n}\r\ninput.pcPassword{\r\n    width:300px;\r\n    height:50px;\r\n    line-height:50px;\r\n    padding-left:20px;\r\n}\r\ndiv.PCBtnDiv{\r\n    position:relative;\r\n    margin-top:20px;\r\n}\r\nimg.logoPic{\r\n    width:100%;\r\n}\r\n#copyright{\r\n    -webkit-text-size-adjust:none;\r\n    font-size:8px;\r\n    color:#6a6969;\r\n    font-family:\"Verdana\";\r\n    font-weight:normal;\r\n    margin-top:40px;\r\n    display:inline-block;\r\n}\r\n.topLogo{\r\n    background-color: #4ACBD6;\r\n    height:96px;\r\n    overflow: hidden;\r\n}\r\ntr{\r\n    vertical-align: top;\r\n}\r\n.topLogo td a img{\r\n    margin:27px 0 0 25px;\r\n}\r\n.topLogo td.last-td img{\r\n    float: right;\r\n    margin-right: 14px;\r\n    opacity: 0.3;\r\n    filter:alpha(opacity=30);\r\n}\r\nul{\r\n    padding:60px 0px 0px 0px;\r\n    margin:0px;\r\n    list-style:none;\r\n}\r\nul li{\r\n    height:32px;\r\n    width:250px;\r\n    text-align: left;\r\n}\r\nli.unLi{\r\n    /*background:url(../login/loginUser.png);*/\r\n    background:url(../img/login/input-box.png);\r\n\r\n}\r\nli.pwLi{\r\n    /*background:url(../login/loginPwd.png);*/\r\n    background:url(../img/login/input-box.png);\r\n}\r\nli.blank{\r\n    height:8px;\r\n}\r\ninput.text{\r\n    border:0px;\r\n    height:32px;\r\n    line-height:32px;\r\n    width:175px;\r\n    padding:0px;\r\n    /*margin-left: 39px;*/\r\n    font-size:14px;\r\n    color:#A7A9AC;\r\n    font-family:\"Arial\",\"Verdana\";\r\n    font-weight:normal;\r\n    background-color: transparent;\r\n    vertical-align: top;\r\n}\r\ninput.text:focus{\r\n    outline: none;\r\n}\r\nlabel.loginBtn{\r\n    height:32px;\r\n    display:inline-block;\r\n    width:250px;\r\n    margin-top:8px;\r\n    line-height: 32px;\r\n    color: #FFFFFF;\r\n    font-size:18px;\r\n    font-family: Arial;\r\n    background:url(../img/login/loginButton.png);\r\n    cursor:pointer;\r\n}\r\n\r\nli img{\r\n    line-height: 40px;\r\n    margin: 9px 6px 9px 9px;\r\n}\r\n\r\niframe#top{\r\n    width:100%;\r\n    height:96px;\r\n    border: none;\r\n    display: block;\r\n}\r\n\r\nhtml{\r\n    overflow: hidden;\r\n}\r\ntable,tr,td{\r\n    padding: 0;\r\n}\r\ntd {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\nform {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\n/*\r\nbody {\r\n    font-family:\"Arial Black\", \"ºÚÌå\";\r\n    font-size: 16px;\r\n    background: #4ACBD6\r\n}\r\n*/\r\n.style1 {\r\n    font-family:Arial;\r\n    color: #FFFFFF;\r\n    font-size: 18px;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n}\r\n.style2 {\r\n    font-size: 14px;\r\n    font-family:Arial;\r\n    font-weight: bold;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    color: #FFFFFF;\r\n}\r\n\r\ntr{\r\n    vertical-align: top;\r\n}\r\n#first-td{\r\n    width:234px;\r\n}\r\n#first-td img {\r\n    margin:27px 0 0 25px;\r\n    cursor: pointer;\r\n}\r\n#second-td {\r\n    padding-top: 25px;\r\n}\r\n#third-td img {\r\n    float:right;\r\n    opacity: 0.3;\r\n    filter\\0: alpha(opacity=30);\r\n    margin-right: 14px;\r\n}\r\ninput[type=\"text\"]::-ms-clear,\r\ninput[type='password']::-ms-reveal{\r\n    display:none;\r\n}\r\n</style>\r\n<script src=\"../js/oid_str.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/str.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/err.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/language.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/lib.js\" type=\"text/javascript\"></script>\r\n<script type=\"text/javascript\">\r\nvar lang = \"en_US\";\r\nif($.country)\r\n{\r\n\t//console.log(\"lang = $.country: \", $.country);\r\n\tlang = $.country;\r\n}\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n\r\nvar isLocked = false;\r\n\r\ndeleteCookie(\"Authorization\");\r\nif (window.parent != window)\r\n{\r\n\tvar refresh = function(domain, port, frame, page) {\r\n\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t}\r\n\trefresh();\r\n}\r\n\r\nfunction Base64Encoding(input) \r\n{\r\n\tvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\tvar output = \"\";\r\n\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\tvar i = 0;\r\n\tinput = utf8_encode(input);\r\n\twhile (i < input.length) \r\n\t{\r\n\t\tchr1 = input.charCodeAt(i++);\r\n\t\tchr2 = input.charCodeAt(i++);\r\n\t\tchr3 = input.charCodeAt(i++);\r\n\t\tenc1 = chr1 >> 2;\r\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\tenc4 = chr3 & 63;\r\n\t\t\r\n\t\tif (isNaN(chr2)) \r\n\t\t{\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t} \r\n\t\telse if (isNaN(chr3)) \r\n\t\t{\r\n\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction utf8_encode (string) \r\n{\r\n\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\tvar utftext = \"\";\r\n\t\r\n\tfor (var n = 0; n < string.length; n++) \r\n\t{\r\n\t\tvar c = string.charCodeAt(n);\r\n\t\tif (c < 128) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode(c);\r\n\t\t}\r\n\t\telse if((c > 127) && (c < 2048)) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t}\t\r\n\treturn utftext;\r\n}\r\n\r\nfunction PCWin(event)\r\n{\r\n\tif (event.keyCode == 13)\r\n\t{\r\n\t\tPCSubWin();\r\n\t}\r\n}\r\n\r\nfunction PCSubWin()\r\n{\t\r\n\tif (isLocked == true)\r\n\t{\r\n\t\treturn ;\r\n\t}\r\n\t\t\r\n\tvar auth;\r\n\tvar password = $.id(\"pcPassword\").value;\r\n\tvar userName = $.id(\"userName\").value;\r\n\r\n/*\tif (forbidAdminLogin == 1){\r\n\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t$.id(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\treturn;\r\n\t}*/\r\n\r\n\tauth = \"Basic \"+Base64Encoding(userName+\":\"+password);\r\n\tdocument.cookie = \"Authorization=\" + auth;\r\n\twindow.location.reload();\r\n}\r\n\r\nfunction deleteCookie(name) \r\n{ \r\n    var LargeExpDate = new Date ();\r\n    document.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n}\r\n/*\r\nfunction $(id)\r\n{\r\n\treturn document.getElementById(id);\r\n}\r\n*/\r\nfunction lockWeb(bLock)\r\n{\r\n\t$.id(\"userName\").disabled = bLock;\r\n\t$.id(\"pcPassword\").disabled = bLock;\r\n\t$.id(\"pcPassword\").blur();\r\n\t$.id(\"userName\").blur();\r\n}\r\n\r\nfunction resize()\r\n{\r\n\tbodyObj = document.body;\r\n\tbodyObj.style[\"width\"] = (document.documentElement.clientWidth < 1000 ? 1000 : document.documentElement.clientWidth) + \"px\";\r\n}\r\n\r\nfunction pageLoad()\r\n{\r\n\tresize();\r\n\twindow.onresize = resize;\r\n\tvar tip = $.id(\"tip\"), tipStr=\"\", note = $.id(\"note\");\r\n\tvar unLi = $.id(\"unLi\");\r\n\tvar pwLi = $.id(\"pwLi\");\r\n\tvar userName = $.id(\"userName\");\r\n\tvar pcPassword = $.id(\"pcPassword\");\r\n\t\r\n\tdeleteCookie(\"Authorization\");\r\n\t/*\r\n\tpcPassword.onfocus = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwselect.png)\";\r\n\t};\r\n\t\r\n\tpcPassword.onblur = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwunselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onfocus = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onblur = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idunselect.png)\";\r\n\t};\r\n\t*/\r\n\ttry { \r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = localString[lang].MODEL_NO + modelName;\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t}\r\n\t\tif(modelDesc)\r\n\t\t{\r\n\t\t\t$.id(\"mname\").innerHTML = modelDesc;\r\n\t\t}\r\n\t}catch(e) {}\r\n\r\n\tif (forbidAdminLogin == 1)\r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[lang].NOTE;\r\n\t\t\t$.id(\"tip\").innerHTML = localString[lang].TIP_CONFLICT;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\t}\r\n\t\t\r\n\t\tforbidAdminLogin = 0;\r\n\t\tauthTimes = 0;\r\n\t\tif (/*usernameIsAdmin*/0) \r\n\t\t{\r\n\t\t\tuserName.value = \"admin\";\r\n\t\t\tpcPassword.focus();\r\n\t\t\tpcPassword.select();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tuserName.focus();\r\n\t\t\tuserName.select();\r\n\t\t}\r\n\t\tlockWeb(true);\r\n\t\treturn;\r\n\t}\t\t\r\n\t\r\n\tif (authTimes > 0)\r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[lang].NOTE;\r\n\t\t\t$.id(\"tip\").innerHTML = localString[lang].TIP_ERROR;\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The username or password is incorrect, please try again.\";\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tif (authTimes >= 10)\r\n\t{\r\n\t\tisLocked = true;\r\n\t\tlockWeb(true);\r\n\t\tcount = 7200 - forbidTime;\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[lang].NOTE;\r\n\t\t\ttipStr = localString[lang].TIP_EXCE1;\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[lang].TIP_EXCE2;;\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE：\";\r\n\t\t\ttipStr = \"You have exceeded ten attempts. Please try again in \";\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\t\t\r\n\t\t}\r\n\r\n\t\twindow.setTimeout(function()\r\n\t\t{\r\n\t\t\tif (count < 1)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"note\").innerHTML = \"\";\r\n\t\t\t\t$.id(\"tip\").innerHTML = \"\";\r\n\t\t\t\tisLocked = false;\r\n\t\t\t\tlockWeb(false);\r\n\t\t\t\tuserName.focus();\r\n\t\t\t\tdeleteCookie(\"Authorization\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\tif (localString)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[lang].TIP_EXCE2;\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\r\n\t\t\t}\r\n\t\t\twindow.setTimeout(arguments.callee, 1000);\r\n\t\t}, 1000);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tuserName.focus();\r\n\t}\r\n\tif (/*usernameIsAdmin*/0) \r\n\t{\r\n\t\tuserName.value = \"admin\";\r\n\t\tpcPassword.focus();\r\n\t\tpcPassword.select();\r\n\t}\r\n\telse{\r\n\t\tuserName.focus();\r\n\t\tuserName.select();\r\n\t}\r\n}\r\n</script>\r\n</head>\r\n\r\n<body onkeypress=\"PCWin(event)\" onload=\"pageLoad()\">\r\n<!--\r\n<div class=\"nd\" style=\"height: 0; background: url(../img/login/1.jpg);\"></div>\r\n-->\r\n<div class=\"topLogo\">\r\n\t<!--\r\n\t<a href=\"http://www.tp-link.com\"><img id=\"logo\" src=\"../img/login/top1_1.jpg\" style=\"float: left;\" border=\"0\" /></a>\r\n\t<div id=\"mod\" style=\"height: 87px; margin: 0; text-align: right; overflow: hidden; background: url(../img/login/top1_2.jpg) no-repeat right;\" >\r\n\t<p id=\"mname\" style=\"font-size: 16px; font-weight: bold; color: #fff; margin: 37px 24px 0 0; padding: 0;\"></p>\r\n\t<p id=\"mnum\" style=\"font-size: 12px; font-weight: bold; color: #fff; margin: 2px 24px 0 0; padding: 0;\"></p>\r\n\t</div>\r\n\t<img id=\"bhr\" src=\"../img/login/top2.jpg\" style=\"height: 3px; width: 100%; display: block;\" />\r\n\t-->\r\n\t<table cellspacing=0 width=\"100%\">\r\n        <tr>\r\n            <td>\r\n                <table border=\"0\" cellspacing=\"0\" width=\"100%\">\r\n                    <tr>\r\n                        <td id=\"first-td\">\r\n                            <a OnClick=\"return NewW();\" onMouseOver=\"return ShowUrl();\" onMouseOut=\"return EraseUrl();\">\r\n                                <img src=\"../img/login/logo.png\">\r\n                            </a>\r\n                        </td>\r\n                        <td id=\"second-td\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td id=\"mname\" class=\"style1\"></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td id=\"mnum\" class=\"style2\"></td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n\t\t\t\t\t\t<td id=\"third-td\">\r\n\t\t\t\t\t\t\t<img src=\"../img/login/top-right.png\">\r\n\t\t\t\t\t\t</td>\r\n                    </tr>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n        <!--<tr>-->\r\n            <!--<td>-->\r\n                <!--<IMG height=3 src=\"../images/top2.jpg\" width=\"100%\" align=top border=0>-->\r\n            <!--</td>-->\r\n        <!--</tr>-->\r\n    </table>\r\n</div>\r\n<div class=\"loginBox\">\r\n\t<div class=\"noteDiv\">\r\n\t\t<span id=\"note\"></span>\r\n\t\t<span id=\"tip\"></span>\r\n\t</div>\r\n\t<div class=\"panelThre\" align=\"center\">\r\n\t\t<div align=\"center\" class=\"picDiv\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li id=\"unLi\" class=\"unLi\"><img src=\"../img/login/username.png\"><input class=\"text\" id=\"userName\" type=\"text\" maxlength=\"32\" placeholder=\"Username\" autocomplete=\"off\"/></li>\r\n\t\t\t\t<li class=\"blank\"></li>\r\n\t\t\t\t<li id=\"pwLi\" class=\"pwLi\"><img src=\"../img/login/password.png\"><input class=\"text\" id=\"pcPassword\" type=\"password\" maxlength=\"32\" placeholder=\"Password\" autocomplete=\"off\"/></li>\r\n\t\t\t</ul>\t\t\t\r\n\t\t\t<!--<button id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"></button>-->\r\n\t\t\t<label id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"/><span id=\"loginBtnText\">Login</span></label>\r\n\t\t\t<!--\r\n\t\t\t<div>\r\n\t\t\t\t<label id=\"copyright\">Copyright &copy; 2016 TP-LINK Technologies Co., Ltd. All rights reserved. </label>\r\n\t\t\t</div>\r\n\t\t\t-->\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<iframe id=\"qrFrame\" name=qrFrame marginWidth=0 marginHeight=0 frameBorder='0' src=\"../qr.htm\" noResize scrolling=no frameSpacing=0 id=\"qrFrame\" style=\"position:absolute;bottom:0;width:100%;height:200px;\">\r\n</iframe>\r\n</body>\r\n<script type=\"text/javascript\">\r\nif (localString)\r\n{\r\n\tdocument.getElementById(\"userName\").placeholder = localString[lang].USERNAME;\r\n\tdocument.getElementById(\"pcPassword\").placeholder = localString[lang].PASSWORD;\r\n\tdocument.getElementById(\"loginBtnText\").innerHTML = localString[lang].LOGIN;\r\n}\r\n</script>\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "login_5.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 39
      },
      "contents" : {
        "text" : "<!DOCTYPE html> \r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n<META http-equiv=Content-Type content=\"text/html; charset=utf-8\" />\r\n<META http-equiv=Pragma content=no-cache>\r\n<META http-equiv=Expires content=0>\r\n\r\n<!-- \r\n<link rel=\"stylesheet\" href=\"../css/login.css\" type=\"text/css\" />\r\n<link rel=\"stylesheet\" href=\"../img/login/login.css\" type=\"text/css\" />\r\n-->\r\n<style type=\"text/css\">\r\nbody{\r\n    font-family:Arial, sans-serief;\r\n    background-color:#FFFFFF;\r\n    margin:0px;\r\n    padding:0px;\r\n}\r\ndiv.loginBox\r\n{\r\n    /*display: block;*/\r\n    position:relative;\r\n    margin-top:10%;\r\n    text-align:center;\r\n}\r\n.nd {\r\n    display: none !important;\r\n}\r\n.noteDiv{\r\n    color:gray;\r\n    font-family:Arial;\r\n    width:395px;\r\n    text-align:left;\r\n    margin:0px auto;\r\n    font-size:14px;\r\n}\r\n#note{\r\n    /*display:inline-block;*/\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:50px;\r\n    font-weight:bold;\r\n}\r\n#tip{\r\n    display:inline-block;\r\n    vertical-align:top;\r\n    _display:inline;\r\n    _zoom:1;\r\n    width:340px;\r\n    font-weight:bold;\r\n}\r\ndiv.panelThre{\r\n    margin-top:10px;\r\n}\r\ndiv.picDiv{\r\n    width:395px;\r\n    height:276px;\r\n    /*background:url(../login/loginbg.png);*/\r\n    position:relative;\r\n}\r\ninput.pcPassword{\r\n    width:300px;\r\n    height:50px;\r\n    line-height:50px;\r\n    padding-left:20px;\r\n}\r\ndiv.PCBtnDiv{\r\n    position:relative;\r\n    margin-top:20px;\r\n}\r\nimg.logoPic{\r\n    width:100%;\r\n}\r\n#copyright{\r\n    -webkit-text-size-adjust:none;\r\n    font-size:8px;\r\n    color:#6a6969;\r\n    font-family:\"Verdana\";\r\n    font-weight:normal;\r\n    margin-top:40px;\r\n    display:inline-block;\r\n}\r\n.topLogo{\r\n    background-color: #4ACBD6;\r\n    height:96px;\r\n    overflow: hidden;\r\n}\r\ntr{\r\n    vertical-align: top;\r\n}\r\n.topLogo td a img{\r\n    margin:27px 0 0 25px;\r\n}\r\n.topLogo td.last-td img{\r\n    float: right;\r\n    margin-right: 14px;\r\n    opacity: 0.3;\r\n    filter:alpha(opacity=30);\r\n}\r\nul{\r\n    padding:60px 0px 0px 0px;\r\n    margin:0px;\r\n    list-style:none;\r\n}\r\nul li{\r\n    height:32px;\r\n    width:250px;\r\n    text-align: left;\r\n}\r\nli.unLi{\r\n    border: 1px solid #cbcbcb;\r\n\tborder-radius: 3px;\r\n}\r\n.unLi.focus {\r\n\tborder-color: #4ACBD6;\r\n}\r\nli.pwLi{\r\n\tborder: 1px solid #cbcbcb;\r\n\tborder-radius: 3px;\r\n}\r\n.pwLi.focus {\r\n\tborder-color: #4ACBD6;\r\n}\r\nli.blank{\r\n    height:8px;\r\n}\r\ninput.text{\r\n    border:0px;\r\n    height:32px;\r\n    line-height:32px;\r\n    width:175px;\r\n    padding:0px;\r\n    /*margin-left: 39px;*/\r\n    font-size:14px;\r\n    color:#A7A9AC;\r\n    font-family:\"Arial\",\"Verdana\";\r\n    font-weight:normal;\r\n    background-color: transparent;\r\n    vertical-align: top;\r\n}\r\ninput.text:focus{\r\n    outline: none;\r\n}\r\nlabel.loginBtn{\r\n    height:32px;\r\n    display:inline-block;\r\n    width:250px;\r\n    margin-top: 25px;\r\n    line-height: 32px;\r\n    color: #FFFFFF;\r\n    font-size:18px;\r\n    font-family: Arial;\r\n\t/*background:url(../img/login/loginButton.png);*/\r\n    background-color:#4ACBD6;\r\n\tborder-radius:5px;\r\n\tcursor:pointer;\r\n}\r\n\r\n.loginBtn.disabled {\r\n\tbackground-color: #cbcbcb;\r\n\tcursor: default;\r\n}\r\n\r\nli img{\r\n\tvertical-align: bottom;\r\n    line-height: 40px;\r\n\tmargin: -1px 6px 9px 9px;\r\n}\r\n\r\n#pwLi img {\r\n\tmargin-top: 9px;\r\n}\r\n\r\niframe#top{\r\n    width:100%;\r\n    height:96px;\r\n    border: none;\r\n    display: block;\r\n}\r\n\r\nhtml{\r\n    overflow: hidden;\r\n}\r\ntable,tr,td{\r\n    padding: 0;\r\n}\r\ntd {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\nform {\r\n    font-family:\"Times New Roman\", \"ËÎÌå\";\r\n    font-size: 12px;\r\n}\r\n/*\r\nbody {\r\n    font-family:\"Arial Black\", \"ºÚÌå\";\r\n    font-size: 16px;\r\n    background: #4ACBD6\r\n}\r\n*/\r\n.style1 {\r\n    font-family:Arial;\r\n    color: #FFFFFF;\r\n    font-size: 18px;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n}\r\n.style2 {\r\n    font-size: 14px;\r\n    font-family:Arial;\r\n    font-weight: bold;\r\n    padding-right: 50;\r\n    text-align: left;\r\n    white-space: nowrap;\r\n    color: #FFFFFF;\r\n}\r\n\r\ntr{\r\n    vertical-align: top;\r\n}\r\n#first-td{\r\n    width:234px;\r\n}\r\n#first-td img {\r\n    margin:27px 0 0 25px;\r\n    cursor: pointer;\r\n}\r\n#second-td {\r\n    padding-top: 25px;\r\n}\r\n#third-td img {\r\n    float:right;\r\n    opacity: 0.3;\r\n    filter: alpha(opacity=30);\r\n    margin-right: 14px;\r\n}\r\ninput[type=\"text\"]::-ms-clear,\r\ninput[type='password']::-ms-reveal{\r\n    display:none;\r\n}\r\n#languageBox {\r\n    margin: auto;\r\n    width: 420px;\r\n    /* height: 290px; */\r\n    margin: auto;\r\n    margin-top: 7%;\r\n}\r\n#languageList {\r\n\tpadding: 2px 0;\r\n\t/* border: 1px solid #4acbd6; */\r\n    border: 1px solid #23c4c4;\r\n    border-radius: 5px;\r\n    overflow-y: hidden;\r\n    background-color: white;\r\n}\r\n#languageBox ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n#languageBox li {\r\n    list-style: none;\r\n    line-height: 40px;\r\n    height: 40px;\r\n    text-align: left;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    margin: 2px 0;\r\n}\r\n#languageBox li span {\r\n    padding-left: 15px;\r\n}\r\n#languageBox li:hover {\r\n    cursor: pointer;\r\n    background: #23c4c4;\r\n    color: white;\r\n}\r\n#languageBox li.cur_lang {\r\n    background: #4acbd6;\r\n    color: white;\r\n}\r\n#buttonStart {\r\n    margin-top: 50px;\r\n    width: 250px;\r\n    line-height: 29px;\r\n    /*background:url(../img/login/loginButton.png);*/\r\n    background-color:#4ACBD6;\r\n\tborder-radius:5px;\r\n    border: none;\r\n    color: white;\r\n    font-size: 18px;\r\n    font-family: 'Arial', 'sans-serif';\r\n}\r\n\r\n#buttonStart:hover {\r\n    cursor:pointer;\r\n}\r\n#langTip {\r\n    color: #ba1365;\r\n    font-size: 14px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n}\r\n.nd {\r\n\tdisplay: none !important;\r\n}\r\n\r\n.change-pwd-title {\r\n\ttext-align: center;\r\n\tfont-size: 23px;\r\n\tcolor: #36444b;\r\n}\r\n\r\n.change-pwd-p {\r\n\tcolor: #a7a8ac;\r\n\ttext-align: center;\r\n\tfont-size: 16px;\r\n\tmargin-top: 12px;\r\n}\r\n.pwd-tip {\r\n\theight: auto;\r\n\tpadding-left: 60px;\r\n\tmargin-bottom: 2px;\r\n\tfont-size: 14px;\r\n\tcolor: #999;\r\n}\r\n.pwd-tip .icon {\r\n\tmargin-left: -28px;\r\n\tmargin-right: 4px;\r\n\tdisplay: inline-block;\r\n\twidth: 24px;\r\n\theight: 24px;\r\n\tbackground-image: url(\"../img/login/icons.png\");\r\n\tbackground-position: -26px -2px;\r\n\tvertical-align: middle;\r\n}\r\n.pwd-tip.active .icon {\r\n\tbackground-position: -51px -2px;\r\n}\r\n.pwd-tip.error .icon {\r\n\tbackground-position: 0 -2px;\r\n}\r\n\r\n.eye-icon {\r\n\tdisplay: inline-block;\r\n\twidth: 20px;\r\n\theight: 20px;\r\n\tmargin-top: 7px;\r\n\tmargin-left: 15px;\r\n\tcursor: pointer;\r\n\tbackground: url(\"../img/login/unview.png\");\r\n}\r\n\r\n.eye-icon.show {\r\n\tbackground: url(\"../img/login/view.png\");\r\n}\r\n\r\n.fl {\r\n\tfloat: left;\r\n}\r\n\r\n#change-pwd-container.rtl,\r\n#login-container.rtl,\r\n.topLogo.rtl {\r\n    direction: rtl;\r\n}\r\n\r\n#change-pwd-container.rtl .pwd-tip .icon {\r\n    margin-left: 4px;\r\n    margin-right: -28px;\r\n}\r\n\r\n#change-pwd-container.rtl .pwd-tip {\r\n\tpadding-right: 60px;\r\n\tpadding-left: 0;\r\n\ttext-align: right;\r\n}\r\n\r\n#login-container.rtl input#pcPassword {\r\n\twidth: 215px;\r\n}\r\n\r\n#login-container.rtl .noteDiv span#tip {\r\n    text-align: right;\r\n}\r\n\r\n.topLogo.rtl td#first-td img {\r\n    margin: 27px 25px 0 0;\r\n}\r\n\r\n.topLogo.rtl #second-td .style1,\r\n.topLogo.rtl #second-td .style2 {\r\n    padding-right: 0;\r\n    text-align: right;\r\n}\r\n\r\n.topLogo.rtl td#third-td img {\r\n    float: left;\r\n    margin-left: 14px;\r\n    -moz-transform: scaleX(-1);\r\n    -webkit-transform: scaleX(-1);\r\n    -o-transform: scaleX(-1);\r\n    transform: scaleX(-1);\r\n    filter: fliph; /*IE*/ \r\n}\r\n</style>\r\n<!--[if lte IE 8]>\r\n<style>\r\n\t.eye-icon {\r\n\t\tdisplay: none;\r\n\t}\r\n</style>\r\n<![endif]-->\r\n<script type=\"text/javascript\">\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI = 71017;\r\n</script>\r\n<script src=\"../js/oid_str.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/language.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/root.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/cryptoJS.min.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/encrypt.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/tpEncrypt.js\" type=\"text/javascript\"></script>\r\n<script src=\"../js/lib.js\" type=\"text/javascript\"></script>\r\n\r\n<script type=\"text/javascript\">\r\n$.curPage=\"login.htm\";\r\nvar g_lang = \"en_US\";\r\n\r\nvar url = window.location.href;\r\n/*\r\nwindow.$ = {\r\n\tid:function (id) {\r\n\t\t\treturn document.getElementById(id);\r\n\t}\r\n}\r\n*/\r\n\t\t\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n\r\nvar isLocked = false;\r\n\r\ndeleteCookie(\"Authorization\");\r\nif (window.parent != window)\r\n{\r\n\tvar refresh = function(domain, port, frame, page) {\r\n\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t}\r\n\trefresh();\r\n}\r\n\r\nfunction Base64Encoding(input) \r\n{\r\n\tvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\tvar output = \"\";\r\n\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\tvar i = 0;\r\n\tinput = utf8_encode(input);\r\n\twhile (i < input.length) \r\n\t{\r\n\t\tchr1 = input.charCodeAt(i++);\r\n\t\tchr2 = input.charCodeAt(i++);\r\n\t\tchr3 = input.charCodeAt(i++);\r\n\t\tenc1 = chr1 >> 2;\r\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\tenc4 = chr3 & 63;\r\n\t\t\r\n\t\tif (isNaN(chr2)) \r\n\t\t{\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t} \r\n\t\telse if (isNaN(chr3)) \r\n\t\t{\r\n\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction utf8_encode (string) \r\n{\r\n\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\tvar utftext = \"\";\r\n\t\r\n\tfor (var n = 0; n < string.length; n++) \r\n\t{\r\n\t\tvar c = string.charCodeAt(n);\r\n\t\tif (c < 128) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode(c);\r\n\t\t}\r\n\t\telse if((c > 127) && (c < 2048)) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t}\t\r\n\treturn utftext;\r\n}\r\nfunction onFocusPwd(event) {\r\n\t$.removeClass($.id(\"pwd-tips\"), \"nd\");\r\n\tfor (var i = 0, len = tipArr.length; i < len; i++) {\r\n\t\tvar tip = tipArr[i];\r\n\t\t$.removeClass(tip, \"nd\");\r\n\t\t$.removeClass(tip, \"error\");\r\n\t}\r\n\t$.addClass((event.target || event.srcElement).parentNode, \"focus\");\r\n\tonKeyUpPwd(event);\r\n}\r\n\r\nfunction onKeyUpPwd(event) {\r\n\tvar value = (event.target || event.srcElement).value,\r\n\t\t\tspaceTip = tipArr[0],\r\n\t\t\tlengthTip = tipArr[1],\r\n\t\t\tcharTip = tipArr[2];\r\n\r\n\tcheckSpace(value) ? $.addClass(spaceTip, \"active\") : $.removeClass(spaceTip, \"active\");\r\n\tcheckLength(value) ? $.addClass(lengthTip, \"active\") : $.removeClass(lengthTip, \"active\");\r\n\tcheckChar(value) ? $.addClass(charTip, \"active\") : $.removeClass(charTip, \"active\");\r\n}\r\n\r\nfunction onBlurPwd(event) {\r\n\tvar tips = tipArr;\r\n\tvar showBtn = true;\r\n\tvar btn = $.id(\"createBtn\")\r\n\r\n\t$.removeClass((event.target || event.srcElement).parentNode, \"focus\");\r\n\tfor (var i = 0, len = tips.length; i < len; i++) {\r\n\t\tvar tip = tips[i];\r\n\t\tif($.hasClass(tip, \"active\")) {\r\n\t\t\t$.addClass(tip, \"nd\");\r\n\t\t} else {\r\n\t\t\tshowBtn = false;\r\n\t\t\t$.addClass(tip, \"error\");\r\n\t\t}\r\n\t}\r\n\tshowBtn ? $.removeClass(btn, \"disabled\") : $.addClass(btn, \"disabled\");\r\n}\r\n\r\nfunction checkSpace(value) {\r\n\tvar re = /[^\\x00-\\x19\\x21-\\xff]/;\r\n\tif (re.test(value)) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction checkLength(value) {\r\n\tif (value.length > 5 && value.length < 33) return true;\r\n\treturn false;\r\n}\r\n\r\nfunction checkChar(value) {\r\n\tvar patternNum = /[0-9]/g;\r\n\tvar patternLetter = /[A-Za-z]/g;\r\n\tvar patternSign = /[\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\_\\+\\[\\]\\{\\}\\;\\:\\'\\\"\\\\\\|\\/\\?\\.\\,\\<\\>\\x20]/g;\r\n\tvar level = 0;\r\n\r\n\tif (patternNum.test(value)) level++;\r\n\tif (patternLetter.test(value)) level++;\r\n\tif (patternSign.test(value)) level++;\r\n\r\n\treturn level > 1;\r\n}\r\nfunction PCWin(event)\r\n{\r\n\tif (event.keyCode == 13) {\r\n\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\tif (isFirstLogin === \"1\") {\r\n\t\t\t\tcreatePwd();\r\n\t\t\t} else {\r\n\t\t\t\tPCSubWin();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tPCSubWin();\r\n\t\t}\r\n\t}\r\n\r\n    /*\r\n     *  Tab Pressed\r\n     */\r\n    if (event.keyCode == 9)\r\n    {\r\n\r\n        if (hasClass(document.getElementById(\"languageBox\"), \"nd\"))\r\n        {\r\n        }\r\n        else\r\n        {\r\n            var nextLanguageIndex = (currentLanguageIndex + 1) % languageItemArray.length;\r\n            selectLanguage(nextLanguageIndex);\r\n            window.focus();\r\n        }\r\n    }\r\n}\r\n\r\nfunction PCSubWin()\r\n{\t\r\n\tif (isLocked == true)\r\n\t{\r\n\t\treturn ;\r\n\t}\r\n\t\t\r\n\tvar auth;\r\n\tvar password = $.id(\"pcPassword\").value;\r\n\tvar userName;\r\n\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\tuserName = \"admin\";\r\n\t} else {\r\n\t\tuserName = $.id(\"userName\").value;\r\n\t}\r\n\r\n    doLogin(userName, password);\r\n\r\n/*\tif (forbidAdminLogin == 1){\r\n\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t$.id(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\treturn;\r\n\t}*/\r\n\t//localStorage.setItem(\"language\", newLanguage);\r\n\tlocalStorage.setItem(\"language\", newLanguage);\r\n}\r\n\r\nfunction doLogin(userName, password) {\r\n\tif(INCLUDE_LOGIN_GDPR_ENCRYPT)\r\n\t{\r\n\t\r\n\t\t$.act(ACT_CGI, \"/cgi/getParm\");\r\n\t\t$.exe(null,false,0);\r\n\t\t$.nn = nn;\r\n\t\t$.ee = ee;\r\n\t\t$.seq = seq;\r\n\r\n\t\t$.Iencryptor.setSeq($.seq);\r\n\t\t$.Iencryptor.setRSAKey($.nn, $.ee);\r\n\t\t$.Iencryptor.setHash(userName, password);\r\n\t\t$.Iencryptor.genAESKey();\r\n\t\r\n\t\tvar tmpcount = {};\r\n\t\ttmpcount.username=userName;\r\n\t\ttmpcount.password=password;\r\n\t\t\r\n\t\t$.act(ACT_CGI, \"/cgi/login\", null, null, tmpcount);\r\n\t\t$.newencryptorManager.recordEncryptor();\r\n\t\tif(!$.exe(null, false, 1))\r\n\t\t{\r\n\t\t\twindow.location.reload();\r\n\t\t}\t\r\n\t}\r\n\r\n}\r\n\r\nfunction createPwd() {\r\n\tif (isFirstLogin === \"0\" || $.hasClass($.id(\"createBtn\"), \"disabled\")) {\r\n\t\treturn;\r\n\t}\r\n\tvar re = /[^\\x00-\\x19\\x21-\\xff]/;\r\n\tvar password = $.id(\"change-pcPassword\").value;\r\n\tvar confirmPassword = $.id(\"confirm-pcPassword\").value;\r\n\tvar userName = \"admin\";\r\n\r\n\tif (re.test(password)) {\r\n\t\t$.alert(ERR_USER_PWD_HAS_SPACE);\r\n\t\treturn false;\r\n\t}\r\n\tif (password === \"\") {\r\n\t\t$.alert(ERR_USER_PWD_EMPTY);\r\n\t\treturn false;\r\n\t}\r\n\tif ($.asc(password, true)) {\r\n\t\t$.alert(ERR_USER_PWD_ASCII);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (password.length > 32) {\r\n\t\talert(localString[g_lang].CHANGE_PWD_TITLE);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (password !== confirmPassword) {\r\n\t\tif(g_lang === \"en_US\") {\r\n\t\t\talert(\"The Confirm Password does not match the New Password!\");\r\n\t\t}\r\n\t\telse if(g_lang === \"ar_AR\") {\r\n\t\t\talert(\"لا تتطابق كلمة مرور التأكيد مع كلمة المرور الجديدة!\");\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif(!checkSpace(password) || !checkLength(password) || !checkChar(password))\r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t$.act(ACT_CGI, \"/cgi/auth\", null, null, {\r\n\t\tname: userName,\r\n\t\toldPwd: \"admin\",\r\n\t\tpwd: password\r\n\t});\r\n\tif (!$.exe(null, null, 0)) {\r\n\t\tdoLogin(userName, password);\r\n\t\tlocalStorage.setItem(\"language\", newLanguage);\r\n\t}\r\n}\r\n\r\nfunction deleteCookie(name) \r\n{ \r\n    var LargeExpDate = new Date ();\r\n    document.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n}\r\n\r\nfunction lockWeb(bLock) {\r\n\t$.id(\"pcPassword\").disabled = bLock;\r\n\t$.id(\"pcPassword\").blur();\r\n\tif (!INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t    $.id(\"userName\").disabled = bLock;\r\n\t    $.id(\"userName\").blur();\r\n\t}\r\n}\r\n\r\nfunction resize()\r\n{\r\n\tbodyObj = document.body;\r\n\tbodyObj.style[\"width\"] = (document.documentElement.clientWidth < 1000 ? 1000 : document.documentElement.clientWidth) + \"px\";\r\n}\r\n\r\nfunction pageLoad()\r\n{\r\n\tresize();\r\n\twindow.onresize = resize;\r\n\tvar tip = $.id(\"tip\"), tipStr=\"\", note = $.id(\"note\");\r\n\tvar unLi = $.id(\"unLi\");\r\n\tvar pwLi = $.id(\"pwLi\");\r\n\tvar pcPassword = $.id(\"pcPassword\");\r\n\tif (!INCLUDE_FORBIDDEN_OLD_PWD) {\r\n    \tvar userName = $.id(\"userName\");\r\n\t}\r\n\t\r\n\tdeleteCookie(\"Authorization\");\r\n    /*\r\n\tpcPassword.onfocus = function()\r\n\t{\r\n\t\t//pwLi.style.background = \"url(../img/login/login-input-focus.png)\";\r\n\t\tpwLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n\t\r\n\tpcPassword.onblur = function()\r\n\t{\r\n\t\t//pwLi.style.background = \"url(../img/login/login-input-normal.png)\";\r\n\t\tpwLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onfocus = function()\r\n\t{\r\n        //unLi.style.background = \"url(../img/login/login-input-focus.png)\";\r\n\t\tunLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onblur = function()\r\n\t{\r\n\t\t//unLi.style.background = \"url(../img/login/login-input-normal.png)\";\r\n        unLi.style.background = \"url(../img/login/input-box.png)\";\r\n\t};\r\n    */\r\n\ttry { \r\n\t\tif (modelName) \r\n\t\t{\r\n\t\t\t\tdocument.title = modelName; \r\n\t\t\t\tif (localString)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"mnum\").innerHTML = localString[g_lang].MODEL_NO + modelName;\t\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t\t\t}\r\n\t\t}\t\r\n\t\tif(modelDesc)\r\n\t\t{\r\n\t\t\t\t$.id(\"mname\").innerHTML = modelDesc;\r\n\t\t}\r\n\t}catch(e) {}\r\n\r\n\tif ((typeof forbidAdminLogin) != \"undefined\" && forbidAdminLogin == 1)\r\n\t{\r\n\t\t\r\n\t\t\r\n\t\tif (localString)\r\n        {\r\n            $.id(\"note\").innerHTML = localString[g_lang].NOTE;\r\n            $.id(\"tip\").innerHTML = localString[g_lang].TIP_CONFLICT;\r\n        }\r\n        else\r\n        {\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\t}\r\n\t\t\r\n\t\tforbidAdminLogin = 0;\r\n\t\tauthTimes = 0;\r\n\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\tpcPassword.focus();\r\n\t\t\tpcPassword.select();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tuserName.focus();\r\n\t\t\tuserName.select();\r\n\t\t}\r\n\t\tlockWeb(true);\r\n\t\treturn;\r\n\t}\t\t\r\n\t\r\n\tif ((typeof authTimes) != \"undefined\" && authTimes > 0)\r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[g_lang].NOTE;\r\n\t\t\t$.id(\"tip\").innerHTML = localString[g_lang].TIP_ERROR;\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t$.id(\"tip\").innerHTML = \"The username or password is incorrect, please try again.\";\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tif ((typeof authTimes) != \"undefined\" && authTimes >= 10)\r\n\t{\r\n\t\tisLocked = true;\r\n\t\tlockWeb(true);\r\n\t\t\r\n\t\tcount = 7200 - forbidTime;\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = localString[g_lang].NOTE;\r\n\t\t\ttipStr = localString[g_lang].TIP_EXCE1;\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[g_lang].TIP_EXCE2;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"note\").innerHTML = \"NOTE：\";\r\n\t\t\ttipStr = \"You have exceeded ten attempts. Please try again in \";\r\n\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\t\t\r\n\t\t}\t\t\r\n\t\twindow.setTimeout(function()\r\n\t\t{\r\n\t\t\tif (count < 1)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"note\").innerHTML = \"\";\r\n\t\t\t\t$.id(\"tip\").innerHTML = \"\";\r\n\t\t\t\tisLocked = false;\r\n\t\t\t\tlockWeb(false);\r\n\t\t\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\t\tpcPassword.focus();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuserName.focus();\r\n\t\t\t\t}\r\n\t\t\t\tdeleteCookie(\"Authorization\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\tif (localString)\r\n\t\t\t{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + localString[g_lang].TIP_EXCE2;\t\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t$.id(\"tip\").innerHTML = tipStr + count + \"s.\";\r\n\t\t\t}\r\n\t\t\twindow.setTimeout(arguments.callee, 1000);\r\n\t\t}, 1000);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(navigator.appName == \"Microsoft Internet Explorer\" && navigator.appVersion .split(\";\")[1].replace(/[ ]/g,\"\")!=\"MSIE8.0\") pcPassword.focus();\r\n\t}\r\n\r\n\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\tpcPassword.focus();\r\n\t\tpcPassword.select();\r\n\t}\r\n\telse{\r\n\t\tif(navigator.appName == \"Microsoft Internet Explorer\" && navigator.appVersion .split(\";\")[1].replace(/[ ]/g,\"\")!=\"MSIE8.0\") userName.focus();\r\n\t\tuserName.select();\r\n\t}\r\n}\r\n\r\nfunction toggleEye (event) {\r\n\tvar eyeIcon = event.target || event.srcElement;\r\n\tvar ele = eyeIcon.previousSibling;\r\n\tvar type = ele.getAttribute(\"type\");\r\n\tif (type === \"text\") {\r\n\t\tele.setAttribute(\"type\", \"password\");\r\n\t\t$.removeClass(eyeIcon, \"show\");\r\n\t} else {\r\n\t\tele.setAttribute(\"type\", \"text\");\r\n\t\t$.addClass(eyeIcon, \"show\");\r\n\t}\r\n}\r\n</script>\r\n\r\n<script type=\"text/javascript\">\r\n\r\nvar languageAreadySet = false;\r\nvar oldLanguage = \"ko_KR\";\r\nvar newLanguage = oldLanguage;\r\nvar supportedLanguages = \"en_US, es_MX, ko_KR, pt_BR, vi_VN, zh_TW\";\r\n\r\n\r\nvar languageItemArray = [];\r\nvar currentLanguageIndex = 0;\r\n\r\nfunction hasClass(elem, className)\r\n{\r\n    var re = new RegExp(className);\r\n    return elem && re.test(elem.className);\r\n}\r\nfunction addClass(elem, className)\r\n{\r\n    if (elem && !hasClass(elem, className))\r\n    {\r\n        elem.className += (elem.className ? \" \" : \"\") + className;\r\n    }\r\n    return elem;\r\n}\r\nfunction remClass(elem, className)\r\n{\r\n    if (elem && hasClass(elem, className))\r\n    {\r\n        elem.className = elem.className.replace(className, \"\");\r\n        elem.className = elem.className.replace(/\\s+/, \" \");\r\n    }\r\n    return elem;\r\n}\r\nfunction updateTopDesc(language)\r\n{\r\n\tif (typeof modelName != \"undefined\" && modelName) \r\n\t{\r\n\t\tif (localString)\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = localString[language].MODEL_NO + modelName;\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t}\r\n\t}\t\r\n}\r\nfunction getClassName(clsName){\r\n\tvar oParent = document;\r\n\tvar elements = oParent.getElementsByTagName(\"*\");\r\n\tvar ele=[];\r\n\tfor(var i=0;i<elements.length;i++){\r\n\t\tif(elements[i].className.indexOf(clsName)>-1){\r\n\t\t\tele.push(elements[i]);\r\n\t\t}\r\n\t}\r\n\treturn ele;\r\n}\r\nfunction updateText(language)\r\n{\r\n    var textElements = document.getElementsByClassName?document.getElementsByClassName('mtext'):getClassName('mtext');\r\n    var currentLanguageString = localString[language];\r\n    var len = textElements.length;\r\n    var e;\r\n    for (var i = 0; i < len; i++)\r\n    {\r\n        e = textElements[i];\r\n        for (var t in currentLanguageString)\r\n        {\r\n            if (hasClass(e, t))\r\n            {\r\n                if (hasClass(e, 'mph'))\r\n                {\r\n                    e.placeholder = currentLanguageString[t];\r\n                }\r\n                else if (e.value != undefined)\r\n                {\r\n                    e.value = currentLanguageString[t];\r\n                }\r\n                else\r\n                {\r\n                    e.innerHTML =  currentLanguageString[t];\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\tupdateTopDesc(language);\r\n}\r\nfunction selectLanguage(selectedIndex)\r\n{\r\n    var languageSelectBox = document.getElementById(\"languageUL\");\r\n    languageSelectBox.selectedIndex = selectedIndex;\r\n\r\n    var languageItems = document.getElementsByClassName?document.getElementsByClassName(\"lang_item\"):getClassName('lang_item');\r\n    var len = languageItems.length;\r\n    for (var i = 0; i < len; i++)\r\n    {\r\n        if (i == selectedIndex)\r\n        {\r\n            addClass(languageItems[i], 'cur_lang');\r\n        }\r\n        else\r\n        {\r\n            remClass(languageItems[i], 'cur_lang');\r\n        }\r\n    }\r\n    currentLanguageIndex = selectedIndex;\r\n    newLanguage = languageItemArray[selectedIndex];\r\n\tg_lang = newLanguage;\r\n    updateText(newLanguage);\r\n\t$.country = newLanguage;\r\n\t//console.log(\"$.country : \", $.country);\r\n\tvar ChangeContainer = document.getElementById(\"change-pwd-container\");\r\n\tvar loginContainer = document.getElementById(\"login-container\");\r\n\tvar loginHeader = document.getElementById(\"top-logo\");\r\n\tif (newLanguage == \"ar_AR\") {\r\n\t\taddClass(ChangeContainer, \"rtl\");\r\n\t\taddClass(loginContainer, \"rtl\");\r\n\t\taddClass(loginHeader, \"rtl\");\r\n\t} else {\r\n\t\tremClass(ChangeContainer, \"rtl\");\r\n\t\tremClass(loginContainer, \"rtl\");\r\n\t\tremClass(loginHeader, \"rtl\");\r\n\t}\r\n\tlocalStorage.setItem(\"language\", newLanguage);\r\n\tdocument.getElementById(\"qrFrame\").src=\"../qr.htm\";\r\n}\r\nfunction createLanguageBox()\r\n{\r\n    var languageArray = supportedLanguages.split(\",\");\r\n    var len = languageArray.length;\r\n    var languageSelectBox = document.getElementById(\"languageUL\");\r\n    var selectedLanguageIndex = 0;\r\n    languageSelectBox.innerHTML = \"\";\r\n    for (var i  = 0; i < len; i++)\r\n    {\r\n        language = languageArray[i].replace(/(^\\s*)|(\\s*$)/g,\"\"); \r\n        if (language.match(/\\S+/)) \r\n        {\r\n            languageItemArray.push(language);\r\n            languageSelectBox.innerHTML += \"<li class='lang_item' onclick='selectLanguage(\" + i + \");' tabindex=\" + i + \"><span>\" + localLanguageName[language] + \"</span></li>\";\r\n            if (language == oldLanguage)\r\n            {\r\n                selectedLanguageIndex = i;\r\n            }\r\n        }\r\n    }\r\n    selectLanguage(selectedLanguageIndex);\r\n}\r\nfunction showLogin()\r\n{\r\n    remClass(document.getElementById(\"loginBox\"), \"nd\");\r\n    addClass(document.getElementById(\"languageBox\"), \"nd\");\r\n\r\n    /*创建密码页面显示*/\r\n\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t$.addClass($.id(\"login-username\"), \"nd\");\r\n\t\tvar GmultiMode = $.act(ACT_GET, MULTIMODE, null, null);\r\n\t\tif (!$.exe(null, null, 0)){\r\n\t\t\tisFirstLogin = GmultiMode.webauth_first_login;\r\n\t\t\tif (isFirstLogin === \"1\") {\r\n\t\t\t\t$.removeClass(changePwdCont, \"nd\");\r\n\t\t\t\t$.addClass(loginCont, \"nd\");\r\n\t\t\t} else {\r\n\t\t\t\t$.addClass(changePwdCont, \"nd\");\r\n\t\t\t\t$.removeClass(loginCont, \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\t$.addClass(changePwdCont, \"nd\");\r\n\t\t$.removeClass(loginCont, \"nd\");\r\n\t\t$.removeClass($.id(\"login-username\"), \"nd\");\r\n\t}\r\n\tif (localString) {\r\n\t\tif (!INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\tdocument.getElementById(\"userName\").placeholder = localString[g_lang].USERNAME;\r\n\t\t}\r\n\t\tdocument.getElementById(\"pcPassword\").placeholder = localString[g_lang].PASSWORD;\r\n\t\tdocument.getElementById(\"loginBtnText\").innerHTML = localString[g_lang].LOGIN;\r\n\t\t\r\n\t\tdocument.getElementById(\"change-pwd-title\").innerHTML = localString[g_lang].CHANGE_TITLE;\r\n\t\tdocument.getElementById(\"change-pwd-p\").innerHTML = localString[g_lang].CHANGE_P;\r\n\t\tdocument.getElementById(\"change-pcPassword\").placeholder = localString[g_lang].PASSWORD;\r\n\t\tdocument.getElementById(\"confirm-pcPassword\").placeholder = localString[g_lang].CONFIRM_PWD;\r\n\t\tdocument.getElementById(\"createBtnText\").innerHTML = localString[g_lang].CREATE;\r\n\t\tdocument.getElementById(\"pwd-tip-space\").innerHTML = localString[g_lang].PWD_TIP_SPACE;\r\n\t\tdocument.getElementById(\"pwd-tip-long\").innerHTML = localString[g_lang].PWD_TIP_LONG;\r\n\t\tdocument.getElementById(\"pwd-tip-char\").innerHTML = localString[g_lang].PWD_TIP_CHAR;\r\n\t}\r\n}\r\nfunction init() \r\n{\r\n\tvar langObj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"X_TP_SupportedLanguages\", \"X_TP_CurrentLanguage\", \"X_TP_LanguageSetByUser\"]);\r\n    if (!$.exe(null,false,0))\r\n    {\r\n        if (typeof INCLUDE_WEBUI_SUPPORT != \"undefined\" && INCLUDE_WEBUI_SUPPORT == 1)\r\n        {\r\n            localStorage.setItem(\"language\",langObj.X_TP_CurrentLanguage);\r\n        }\r\n        \r\n        languageAreadySet = langObj.X_TP_LanguageSetByUser;\r\n        oldLanguage = langObj.X_TP_CurrentLanguage;\r\n        newLanguage = oldLanguage;\r\n        supportedLanguages = langObj.X_TP_SupportedLanguages;\r\n\t\tg_lang = newLanguage;\r\n    }\r\n\t\r\n    if (languageAreadySet == \"0\")\r\n    {\r\n        addClass(document.getElementById(\"loginBox\"), \"nd\");\r\n        remClass(document.getElementById(\"languageBox\"), \"nd\");\r\n        createLanguageBox();\r\n    }\r\n    else\r\n    {\r\n        remClass(document.getElementById(\"loginBox\"), \"nd\");\r\n        addClass(document.getElementById(\"languageBox\"), \"nd\");\r\n\t\tdocument.getElementById(\"qrFrame\").src=\"../qr.htm\";\r\n        updateText(newLanguage);\r\n\r\n\t\tvar loginContainer = document.getElementById(\"login-container\");\r\n\t\tvar loginHeader = document.getElementById(\"top-logo\");\r\n\t\tif (newLanguage == \"ar_AR\") {\r\n\t\t\taddClass(loginContainer, \"rtl\");\r\n\t\t\taddClass(loginHeader, \"rtl\");\r\n\t\t} else {\r\n\t\t\tremClass(loginContainer, \"rtl\");\r\n\t\t\tremClass(loginHeader, \"rtl\");\r\n\t\t}\r\n\r\n        /*登录页面显示*/\r\n\t\tif (INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t$.addClass($.id(\"login-username\"), \"nd\");\r\n\t\tvar GmultiMode = $.act(ACT_GET, MULTIMODE, null, null);\r\n\t\tif (!$.exe(null, null, 0)){\r\n\t\t\tisFirstLogin = GmultiMode.webauth_first_login;\r\n\t\t\tif (isFirstLogin === \"1\") {\r\n\t\t\t\t$.removeClass(changePwdCont, \"nd\");\r\n\t\t\t\t$.addClass(loginCont, \"nd\");\r\n\t\t\t} else {\r\n\t\t\t\t$.addClass(changePwdCont, \"nd\");\r\n\t\t\t\t$.removeClass(loginCont, \"nd\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t} else {\r\n\t\t\t$.addClass(changePwdCont, \"nd\");\r\n\t\t\t$.removeClass(loginCont, \"nd\");\r\n\t\t\t$.removeClass($.id(\"login-username\"), \"nd\");\r\n\t\t}\r\n\t\tif (localString) {\r\n\t\t\tif (!INCLUDE_FORBIDDEN_OLD_PWD) {\r\n\t\t\t\tdocument.getElementById(\"userName\").placeholder = localString[g_lang].USERNAME;\r\n\t\t\t}\r\n\t\t\tdocument.getElementById(\"pcPassword\").placeholder = localString[g_lang].PASSWORD;\r\n\t\t\tdocument.getElementById(\"loginBtnText\").innerHTML = localString[g_lang].LOGIN;\r\n\t\t\t\r\n\t\t\tdocument.getElementById(\"change-pwd-title\").innerHTML = localString[g_lang].CHANGE_TITLE;\r\n\t\t\tdocument.getElementById(\"change-pwd-p\").innerHTML = localString[g_lang].CHANGE_P;\r\n\t\t\tdocument.getElementById(\"change-pcPassword\").placeholder = localString[g_lang].PASSWORD;\r\n\t\t\tdocument.getElementById(\"confirm-pcPassword\").placeholder = localString[g_lang].CONFIRM_PWD;\r\n\t\t\tdocument.getElementById(\"createBtnText\").innerHTML = localString[g_lang].CREATE;\r\n\t\t\tdocument.getElementById(\"pwd-tip-space\").innerHTML = localString[g_lang].PWD_TIP_SPACE;\r\n\t\t\tdocument.getElementById(\"pwd-tip-long\").innerHTML = localString[g_lang].PWD_TIP_LONG;\r\n\t\t\tdocument.getElementById(\"pwd-tip-char\").innerHTML = localString[g_lang].PWD_TIP_CHAR;\r\n\t\t}\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n</head>\r\n\r\n<body onkeypress=\"PCWin(event)\" onload=\"pageLoad()\">\r\n<!--\r\n<div class=\"nd\" style=\"height: 0; background: url(../img/login/1.jpg);\"></div>\r\n-->\r\n<div id=\"top-logo\" class=\"topLogo\">\r\n\t<!--\r\n\t<a href=\"http://www.tp-link.com\"><img id=\"logo\" src=\"../img/login/top1_1.jpg\" style=\"float: left;\" border=\"0\" /></a>\r\n\t<div id=\"mod\" style=\"height: 87px; margin: 0; text-align: right; overflow: hidden; background: url(../img/login/top1_2.jpg) no-repeat right;\" >\r\n\t<p id=\"mname\" style=\"font-size: 16px; font-weight: bold; color: #fff; margin: 37px 24px 0 0; padding: 0;\"></p>\r\n\t<p id=\"mnum\" style=\"font-size: 12px; font-weight: bold; color: #fff; margin: 2px 24px 0 0; padding: 0;\"></p>\r\n\t</div>\r\n\t<img id=\"bhr\" src=\"../img/login/top2.jpg\" style=\"height: 3px; width: 100%; display: block;\" />\r\n\t-->\r\n\t<table cellspacing=0 width=\"100%\">\r\n        <tr>\r\n            <td>\r\n                <table border=\"0\" cellspacing=\"0\" width=\"100%\">\r\n                    <tr>\r\n                        <td id=\"first-td\">\r\n                            <a OnClick=\"return NewW();\" onMouseOver=\"return ShowUrl();\" onMouseOut=\"return EraseUrl();\">\r\n                                <img src=\"../img/login/logo.png\">\r\n                            </a>\r\n                        </td>\r\n                        <td id=\"second-td\">\r\n                            <table>\r\n                                <tr>\r\n                                    <td id=\"mname\" class=\"style1\"></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td id=\"mnum\" class=\"style2\"></td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n\t\t\t\t\t\t<td id=\"third-td\">\r\n\t\t\t\t\t\t\t<img src=\"../img/login/top-right.png\">\r\n\t\t\t\t\t\t</td>\r\n                    </tr>\r\n                </table>\r\n            </td>\r\n        </tr>\r\n        <!--<tr>-->\r\n            <!--<td>-->\r\n                <!--<IMG height=3 src=\"../images/top2.jpg\" width=\"100%\" align=top border=0>-->\r\n            <!--</td>-->\r\n        <!--</tr>-->\r\n    </table>\r\n</div>\r\n\r\n<div class=\"languageBox nd\" id=\"languageBox\" >\r\n    <div id=\"langTip\" class=\"mtext LANG_TIP\">\r\n        Please select your prefered language.\r\n    </div>\r\n    <div id=\"languageList\">\r\n        <ul id=\"languageUL\">\r\n        </ul>\r\n    </div>\r\n    <center>\r\n        <input type=\"button\" id=\"buttonStart\" class=\"mtext START\" onclick=\"showLogin()\" />\r\n    </center>\r\n</div>\r\n\r\n<div id=\"login-container\" class=\"loginBox nd\">\r\n\t<div class=\"noteDiv\">\r\n\t\t<span id=\"note\"></span>\r\n\t\t<span id=\"tip\"></span>\r\n\t</div>\r\n\t<div class=\"panelThre\" align=\"center\">\r\n\t\t<div align=\"center\" class=\"picDiv\">\r\n\t\t\t<ul>\r\n                <div id=\"login-username\" class=\"nd\">\r\n                    <li id=\"unLi\" class=\"unLi\"><img src=\"../img/login/username.gif\"><input class=\"text mtext mph USERNAME\" id=\"userName\" type=\"text\" maxlength=\"32\" placeholder=\"Username\" autocomplete=\"off\"/></li>\r\n                    <li class=\"blank\"></li>\r\n                </div>\r\n\t\t\t\t<li id=\"pwLi\" class=\"pwLi\"><img src=\"../img/login/password.gif\"><input class=\"text mtext mph PASSWORD\" id=\"pcPassword\" type=\"password\" maxlength=\"32\" placeholder=\"Password\" autocomplete=\"off\"/></li>\r\n\t\t\t</ul>\t\t\t\r\n\t\t\t<!--<button id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"></button>-->\r\n\t\t\t<label id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"/><span id=\"loginBtnText\" class=\"mtext LOGIN\">Log In</span></label>\r\n\t\t\t<!--\r\n\t\t\t<div>\r\n\t\t\t\t<label id=\"copyright\">Copyright &copy; 2016 TP-LINK Technologies Co., Ltd. All rights reserved. </label>\r\n\t\t\t</div>\r\n\t\t\t-->\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<div id=\"change-pwd-container\" class=\"loginBox nd\">\r\n    <div class=\"panelThre\" align=\"center\">\r\n        <div align=\"center\" class=\"picDiv\">\r\n            <div id=\"change-pwd-title\" class=\"change-pwd-title\">Create Login Password</div>\r\n\t\t\t\t<div id=\"change-pwd-p\" class=\"change-pwd-p\">Enter 6-32 characters to create login password. Strong password with\r\n                a mix of numbers, letters, and symbols is recommended.</div>\r\n            <ul class=\"pw-ul\">\r\n\t\t\t\t\t<li id=\"change-pwLi\" class=\"pwLi\" style=\"margin-bottom: 4px;\">\r\n\t\t\t\t\t\t<img src=\"../img/login/password.gif\" class=\"\"><input class=\"text\" id=\"change-pcPassword\" onfocus=\"onFocusPwd(event)\" onkeyup=\"onKeyUpPwd(event)\" onblur=\"onBlurPwd(event)\" type=\"password\" autocomplete=\"off\" placeholder=\"Password\" /><div class=\"eye-icon\" onclick=\"toggleEye(event)\"></div>\r\n                </li>\r\n\t\t\t\t\t<div id=\"pwd-tips\" class=\"nd\">\r\n\t\t\t\t\t\t<li class=\"pwd-tip\"><span class=\"icon\"></span><span id=\"pwd-tip-space\">Must contain no space(s).</span></li>\r\n\t\t\t\t\t\t<li class=\"pwd-tip\"><span class=\"icon\"></span><span id=\"pwd-tip-long\">Must be 6-32 characters long.</span></li>\r\n\t\t\t\t\t\t<li class=\"pwd-tip\"><span class=\"icon\"></span><span id=\"pwd-tip-char\">Must contain at least two types of the following characters: letters, numbers and symbols.</span></li>\r\n\t\t\t\t\t</div>\r\n                <li class=\"blank\"></li>\r\n                <li id=\"confirm-pwLi\" class=\"pwLi\">\r\n\t\t\t\t\t\t<img src=\"../img/login/password.gif\" class=\"\"><input class=\"text\" id=\"confirm-pcPassword\" type=\"password\" autocomplete=\"off\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" /><div class=\"eye-icon\" onclick=\"toggleEye(event)\">\r\n                </li>\r\n            </ul>\r\n\t\t\t\t<label id=\"createBtn\" class=\"loginBtn disabled\" onclick=\"createPwd()\"><span id=\"createBtnText\">Create</span></label>\r\n        </div>\r\n    </div>\r\n</div>\r\n<iframe id=\"qrFrame\" name=qrFrame marginWidth=0 marginHeight=0 frameBorder='0' src=\"../qr.htm\" noResize scrolling=no frameSpacing=0 id=\"qrFrame\" style=\"position:absolute;bottom:0;width:100%;height:200px;\">\r\n</iframe>\r\n\r\n</body>\r\n</html>\r\n<script type=\"text/javascript\">\r\n    var changePwdCont = $.id(\"change-pwd-container\");\r\n\tvar loginCont = $.id(\"login-container\");\r\n\tvar isFirstLogin = \"0\";\r\n\tvar tipArr = document.querySelectorAll(\".pwd-tip\");\r\n\t\r\n\r\n    var newWin;\r\n    var url = \"http://\" + \"www.tp-link.com\";\r\n\r\n\r\n    function Click() {\r\n         return false;\r\n    }\r\n    document.oncontextmenu = Click;\r\n\r\n    function NewW() {\r\n        if (newWin) newWin.close();\r\n        newWin = window.open(url, \"\", \"scrollbars=yes,resizable=yes,toolbar=yes,status=yes,menubar=yes,scrollbar=yes,location=yes\");\r\n        return true;\r\n    }\r\n    function ShowUrl() {\r\n        status = url;\r\n        return true;\r\n    }\r\n    function EraseUrl() {\r\n        status = \"\";\r\n        return true;\r\n    }\r\n    if(INCLUDE_LOGIN_GDPR_ENCRYPT)\r\n\t{\r\n\t\t$.newencryptorManager = $.encrypt.encryptManager;\r\n\t\t$.newencryptorManager.cleanStorage();\r\n\t\t$.Iencryptor = $.newencryptorManager.genEncryptor();\r\n\t}\r\n\tinit();\r\n</script>\r\n<script type=\"text/javascript\"> var authTimes=0; var forbidTime=0; var modelName=\"Archer C55\"; var modelDesc=\"Roteador para Fibra Wireless Dual Band AC1200\"; var forbidAdminLogin=0; var forbidUserLogin=0; var usernameIsAdmin=1;</script>"
      }
    }, {
      "location" : {
        "uri" : "login_6.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 40
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n<META http-equiv=Content-Type content=\"text/html; charset=utf-8\" />\r\n<META http-equiv=Pragma content=no-cache>\r\n<META http-equiv=Expires content=0>\r\n<style type=\"text/css\">\r\nbody\r\n{\r\n\tfont-family:Arial, sans-serief;\r\n\tbackground-color:#E5E5E5;\r\n\tmargin:0;\r\n\tpadding:0;\r\n}\r\ndiv.loginBox\r\n{\r\n\tdisplay: block;\r\n\tposition:relative;\r\n\tmargin-top:10%;\r\n\ttext-align:center;\r\n}\r\n.noteDiv\r\n{\r\n\tcolor:gray;\t\r\n\tfont-family:Arial;\t\r\n\twidth:395px;\t\r\n\ttext-align:left;\t\r\n\tmargin:0 auto;\t\r\n\tfont-size:14px;\r\n\tfont-weight:bold;\r\n}\r\n#note\r\n{\r\n\tdisplay:inline-block;\r\n\tvertical-align:top;\r\n\t_display:inline;\r\n\t_zoom:1;\r\n\twidth:60px;\r\n\tfont-weight:bold;\r\n}\r\n#tip\r\n{\r\n\tdisplay:inline-block;\r\n\tvertical-align:top;\r\n\t_display:inline;\r\n\t_zoom:1;\r\n\twidth:330px;\r\n}\r\ndiv.panelThre\r\n{\r\n\tmargin-top:10px;\r\n}\r\ndiv.picDiv\r\n{\r\n\twidth:395px;\r\n\theight:276px;\r\n\tbackground:url(../img/login/bg2.png);\r\n\tposition:relative;\r\n}\r\ninput.pcPassword\r\n{\r\n\twidth:300px;\r\n\theight:50px;\r\n\tline-height:50px;\r\n\tpadding-left:20px;\r\n}\r\ndiv.PCBtnDiv\r\n{\r\n\tposition:relative;\r\n\tmargin-top:20px;\r\n}\r\nimg.logoPic\r\n{\r\n\twidth:100%;\r\n}\r\n/*topLogo\r\n{\r\n\tbackground:url(../img/login/top_bg.jpg);\r\n\theight:90px;\r\n}*/\r\nul\r\n{\r\n\tpadding:60px 0 0 0;\r\n\tmargin:0;\r\n\tlist-style:none;\r\n}\r\nul li\r\n{\r\n\theight:34px;\r\n\twidth:222px;\r\n}\r\nli.unLi\r\n{\r\n\tbackground:url(../img/login/idunselect.png);\r\n}\r\nli.pwLi\r\n{\r\n\tbackground:url(../img/login/pwunselect.png);\r\n}\r\nli.blank\r\n{\r\n\theight:15px;\r\n}\r\nbutton.loginBtn\r\n{\r\n\tborder:none;\r\n\theight:34px;\r\n\tdisplay:inline-block;\r\n\twidth:113px;\r\n\tmargin-top:30px;\r\n\tbackground:url(../img/login/login.png);\r\n\tcursor:pointer;\r\n}\r\ninput.text\r\n{\r\n\tborder:0;\r\n\theight:26px;\r\n\tline-height:26px;\r\n\twidth:175px;\r\n\tpadding:0;\r\n\tmargin:4px 0 0 30px;\r\n\tfont-size:14px;\r\n\tcolor:#6a6969;\r\n\tfont-family:\"Verdana\",\"Arial\";\r\n\toutline: none;\r\n}\r\n#copyright\r\n{\r\n\t-webkit-text-size-adjust:none;\r\n\tfont-size:9px;\r\n\tcolor:#6a6969;\r\n\tfont-family:\"Verdana\";\r\n\tmargin-top:40px;\r\n\tdisplay:inline-block;\r\n}\r\n.nd\t\r\n{\r\n\tdisplay: none !important;\r\n}\r\n</style>\r\n\r\n<script type=\"text/javascript\">\r\n\r\nvar url = window.location.href;\r\nif (url.indexOf(\"tplinklogin.net\") >= 0)\r\n{\r\n    url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n    window.location = url;\r\n}\r\n\r\nvar isLocked = false;\r\n\r\ndeleteCookie(\"Authorization\");\r\nif (window.parent != window)\r\n{\r\n\tvar refresh = function(domain, port, frame, page) {\r\n\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t}\r\n\trefresh();\r\n}\r\n\r\nfunction Base64Encoding(input) \r\n{\r\n\tvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\tvar output = \"\";\r\n\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\tvar i = 0;\r\n\tinput = utf8_encode(input);\r\n\twhile (i < input.length) \r\n\t{\r\n\t\tchr1 = input.charCodeAt(i++);\r\n\t\tchr2 = input.charCodeAt(i++);\r\n\t\tchr3 = input.charCodeAt(i++);\r\n\t\tenc1 = chr1 >> 2;\r\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\tenc4 = chr3 & 63;\r\n\t\t\r\n\t\tif (isNaN(chr2)) \r\n\t\t{\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t} \r\n\t\telse if (isNaN(chr3)) \r\n\t\t{\r\n\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t}\r\n\treturn output;\r\n}\r\n\r\nfunction utf8_encode (string) \r\n{\r\n\tstring = string.replace(/\\r\\n/g,\"\\n\");\r\n\tvar utftext = \"\";\r\n\t\r\n\tfor (var n = 0; n < string.length; n++) \r\n\t{\r\n\t\tvar c = string.charCodeAt(n);\r\n\t\tif (c < 128) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode(c);\r\n\t\t}\r\n\t\telse if((c > 127) && (c < 2048)) \r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 6) | 192);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tutftext += String.fromCharCode((c >> 12) | 224);\r\n\t\t\tutftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\tutftext += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t}\t\r\n\treturn utftext;\r\n}\r\n\r\nfunction PCWin(event)\r\n{\r\n\tif (event.keyCode == 13)\r\n\t{\r\n\t\tPCSubWin();\r\n\t}\r\n}\r\n\r\nfunction PCSubWin()\r\n{\t\r\n\tif (isLocked == true)\r\n\t{\r\n\t\treturn ;\r\n\t}\r\n\t\t\r\n\tvar auth;\r\n\tvar password = $(\"pcPassword\").value;\r\n\tvar userName = $(\"userName\").value;\r\n\r\n/*\tif (forbidAdminLogin == 1){\r\n\t\t$(\"note\").innerHTML = \"NOTE:\";\r\n\t\t$(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\treturn;\r\n\t}*/\r\n\r\n\tauth = \"Basic \"+Base64Encoding(userName+\":\"+password);\r\n\tdocument.cookie = \"Authorization=\" + auth;\r\n\twindow.location.reload();\r\n}\r\n\r\nfunction deleteCookie(name) \r\n{ \r\n    var LargeExpDate = new Date ();\r\n    document.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n}\r\n\r\nfunction $(id)\r\n{\r\n\treturn document.getElementById(id);\r\n}\r\n\r\nfunction lockWeb(bLock)\r\n{\r\n\t$(\"userName\").disabled = bLock;\r\n\t$(\"pcPassword\").disabled = bLock;\r\n\t$(\"pcPassword\").blur();\r\n\t$(\"userName\").blur();\r\n}\r\n\r\nfunction resize()\r\n{\r\n\tbodyObj = document.body;\r\n\tbodyObj.style[\"width\"] = (document.documentElement.clientWidth < 1000 ? 1000 : document.documentElement.clientWidth) + \"px\";\r\n}\r\n\r\nfunction pageLoad()\r\n{\r\n\tresize();\r\n\twindow.onresize = resize;\r\n\tvar tip = $(\"tip\"), tipStr=\"\", note = $(\"note\");\r\n\tvar unLi = $(\"unLi\");\r\n\tvar pwLi = $(\"pwLi\");\r\n\tvar userName = $(\"userName\");\r\n\tvar pcPassword = $(\"pcPassword\");\r\n\t\r\n\tdeleteCookie(\"Authorization\");\r\n\r\n\tpcPassword.onfocus = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwselect.png)\";\r\n\t};\r\n\t\r\n\tpcPassword.onblur = function()\r\n\t{\r\n\t\tpwLi.style.background = \"url(../img/login/pwunselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onfocus = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idselect.png)\";\r\n\t};\r\n\t   \r\n\tuserName.onblur = function()\r\n\t{\r\n\t\tunLi.style.background = \"url(../img/login/idunselect.png)\";\r\n\t};\r\n\t\r\n\ttry { \r\n\t\tif (modelName) \r\n\t\t{\r\n\t\t\t\tdocument.title = modelName; \r\n\t\t\t\t$(\"mnum\").innerHTML = \"Model No. \" + modelName;\t\r\n\t\t\t}\t\r\n\t\tif(modelDesc)\r\n\t\t{\r\n\t\t\t$(\"mname\").innerHTML = modelDesc;\r\n\t\t}\r\n\t}catch(e) {}\r\n\r\n\tif (forbidAdminLogin == 1)\r\n\t{\r\n\t\t$(\"note\").innerHTML = \"Hinweis:\";\r\n\t\t$(\"tip\").innerHTML = \"Es kann immer nur ein Teilnehmer in den Router eingeloggt sein. Bitte versuchen Sie es später noch einmal.\";\r\n\t\tforbidAdminLogin = 0;\r\n\t\tauthTimes = 0;\r\n\t\tif (usernameIsAdmin) \r\n\t\t{\r\n\t\t\tuserName.value = \"admin\";\r\n\t\t\tpcPassword.focus();\r\n\t\t\tpcPassword.select();\r\n\t\t}\r\n\t\tlockWeb(true);\r\n\t\treturn;\r\n\t}\t\t\r\n\t\r\n\tif (authTimes > 0)\r\n\t{\r\n\t\t$(\"note\").innerHTML = \"Hinweis:\";\r\n\t\t$(\"tip\").innerHTML = \"Ungültige Zugangsdaten. Bitte versuchen Sie es noch einmal.\";\r\n\t}\t\r\n\t\r\n\tif (authTimes >= 10)\r\n\t{\r\n\t\tisLocked = true;\r\n\t\tlockWeb(true);\r\n\t\t$(\"note\").innerHTML = \"Hinweis: \";\r\n\t\ttipStr = \"10 Fehlversuche registriert. Bitte versuchen Sie es in \";\r\n\t\tcount = 7200 - forbidTime;\r\n\t\t$(\"tip\").innerHTML = tipStr + count + \" Sekunden noch einmal.\";\t\t\r\n\t\twindow.setTimeout(function()\r\n\t\t{\r\n\t\t\tif (count < 1)\r\n\t\t\t{\r\n\t\t\t\t$(\"note\").innerHTML = \"\";\r\n\t\t\t\t$(\"tip\").innerHTML = \"\";\r\n\t\t\t\tisLocked = false;\r\n\t\t\t\tlockWeb(false);\r\n\t\t\t\tuserName.focus();\r\n\t\t\t\tdeleteCookie(\"Authorization\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tcount--;\r\n\t\t\t$(\"tip\").innerHTML = tipStr + count + \" Sekunden noch einmal.\";\r\n\t\t\twindow.setTimeout(arguments.callee, 1000);\r\n\t\t}, 1000);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tuserName.focus();\r\n\t}\r\n\tif (usernameIsAdmin) \r\n\t{\r\n\t\tuserName.value = \"admin\";\r\n\t\tpcPassword.focus();\r\n\t\tpcPassword.select();\r\n\t}\r\n}\r\n</script>\r\n</head>\r\n\r\n<body onkeypress=\"PCWin(event)\" onload=\"pageLoad()\">\r\n<div class=\"nd\" style=\"height: 0; background: url(../img/login/1.jpg);\"></div>\r\n<div style=\"height: 90px; background: #09C url(../img/login/top_bg.jpg) repeat-x;\">\r\n\t<a href=\"http://www.tp-link.com\"><img id=\"logo\" src=\"../img/login/top1_1.jpg\" style=\"float: left;\" border=\"0\" /></a>\r\n\t<div id=\"mod\" style=\"height: 87px; margin: 0; text-align: right; overflow: hidden; background: url(../img/login/top1_2.jpg) no-repeat right;\" >\r\n\t<p id=\"mname\" style=\"font-size: 16px; font-weight: bold; color: #fff; margin: 37px 24px 0 0; padding: 0;\"></p>\r\n\t<p id=\"mnum\" style=\"font-size: 12px; font-weight: bold; color: #fff; margin: 2px 24px 0 0; padding: 0;\"></p>\r\n\t</div>\r\n\t<img id=\"bhr\" src=\"../img/login/top2.jpg\" style=\"height: 3px; width: 100%; display: block;\" />\r\n</div>\r\n<div class=\"loginBox\">\r\n\t<div class=\"noteDiv\">\r\n\t\t<span id=\"note\"></span>\r\n\t\t<span id=\"tip\"></span>\r\n\t</div>\r\n\t<div class=\"panelThre\" align=\"center\">\r\n\t\t<div class=\"picDiv\">\r\n\t\t\t<ul>\r\n\t\t\t\t<li id=\"unLi\" class=\"unLi\"><input class=\"text\" id=\"userName\" type=\"text\" maxlength=\"32\" autocomplete=\"off\"/></li>\r\n\t\t\t\t<li class=\"blank\"></li>\r\n\t\t\t\t<li id=\"pwLi\" class=\"pwLi\"><input class=\"text\" id=\"pcPassword\" type=\"password\" maxlength=\"32\" autocomplete=\"off\"/></li>\r\n\t\t\t</ul>\t\t\t\r\n\t\t\t<button id=\"loginBtn\" class=\"loginBtn\" onclick=\"PCSubWin()\"></button>\r\n\t\t\t<div>\r\n\t\t\t\t<label id=\"copyright\">Copyright &copy; 2016 TP-LINK Technologies Co., Ltd. Alle Rechte vorbehalten. </label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n</body>\r\n</html>"
      }
    }, {
      "location" : {
        "uri" : "setPwd.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 41
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n\t\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n    <META http-equiv=Content-Type content=\"text/html; charset=utf-8\" />\r\n    <META http-equiv=Pragma content=no-cache>\r\n    <META http-equiv=Expires content=0>\r\n\r\n    <style type=\"text/css\">\r\n    body {\r\n        font-family:Arial, sans-serief;\r\n        background-color:#E5E5E5;\r\n        margin:0px;\r\n        padding:0px;\r\n    }\r\n    div.loginBox {\r\n        display: block;\r\n        position:relative;\r\n        margin-top:10%;\r\n        text-align:center;\r\n    }\r\n    .noteDiv {\r\n        font-family:Arial;\r\n        width:395px;\r\n        margin:0px auto;\r\n        font-size:14px;\r\n        color:gray;\r\n        text-align:left;\r\n        font-weight:bold;\r\n    }\r\n    div.panelThre {\r\n        margin-top:10px;\r\n    }\r\n    div.picDiv {\r\n        width:395px;\r\n        height:276px;\r\n        background:url(../img/login/bg2.png);\r\n        position:relative;\r\n    }\r\n    #noteSetPwd {\r\n        float: left;\r\n        margin-left: 12px;\r\n        line-height: 34px;\r\n        width: 155px;\r\n        text-align: left;\r\n    }\r\n    #noteCfmPwd {\r\n        float: left;\r\n        margin-left: 12px;\r\n        line-height: 34px;\r\n        width: 155px;\r\n        text-align: left;\r\n    }\r\n    #noteSetUsr {\r\n        float: left;\r\n        margin-left: 12px;\r\n        line-height: 34px;\r\n        width: 155px;\r\n        text-align: left;\r\n    }\r\n    #spanNewUsr {\r\n        background: url(../img/login/setpwdunselect.png);\r\n        height: 34px;\r\n        width: 187px;\r\n        display: inline-block;\r\n    }\r\n    #spanNewPwd {\r\n        background: url(../img/login/setpwdunselect.png);\r\n        height: 34px;\r\n        width: 187px;\r\n        display: inline-block;\r\n    }\r\n    #spanCfmPwd {\r\n        background: url(../img/login/setpwdunselect.png);\r\n        height: 34px;\r\n        width: 187px;\r\n        display: inline-block;\r\n    }\r\n    input.text {\r\n        border:0px;\r\n        height:26px;\r\n        line-height:26px;\r\n        width:150px;\r\n        padding:0px;\r\n        margin:4px 0px 0px 0px;\r\n        font-size:14px;\r\n        color:#6a6969;\r\n        font-family:\"Verdana\", \"Arial\";\r\n        outline: none;\r\n    }\r\n    span.span_error {\r\n        width: 395px;\r\n        display: none;\r\n    }\r\n    #setpwdBtn {\r\n        border:none;\r\n        height:34px;\r\n        display:inline-block;\r\n        width:113px;\r\n        margin-top:5px;\r\n        background:url(../img/login/setpwd.png);\r\n        cursor:pointer;\r\n    }\r\n    #skipBtn {\r\n        border:none;\r\n        height:34px;\r\n        display:inline-block;\r\n        width:113px;\r\n        margin-top:5px;\r\n        margin-left: 40px;\r\n        background:url(../img/login/skip.png);\r\n        cursor:pointer;\r\n    }\r\n    #copyright {\r\n        -webkit-text-size-adjust:none;\r\n        font-size:9px;\r\n        color:#6a6969;\r\n        margin-top:10px;\r\n        font-family:\"Verdana\";\r\n        display:inline-block;\r\n    }\r\n    #note {\r\n        display:inline-block;\r\n        vertical-align:top;\r\n        _display:inline;\r\n        _zoom:1;\r\n        width:50px;\r\n        font-weight:bold;\r\n    }\r\n    #tip {\r\n        display:inline-block;\r\n        vertical-align:top;\r\n        _display:inline;\r\n        _zoom:1;\r\n        width:340px;\r\n    }\r\n    </style>\r\n    <script type=\"text/javascript\">\r\n    var url = window.location.href;\r\n    if (url.indexOf(\"tplinklogin.net\") >= 0) {\r\n        url = url.replace(\"tplinklogin.net\", \"tplinkwifi.net\");\r\n        window.location = url;\r\n    }\r\n\r\n    if (window.parent != window) {\r\n        var refresh = function(domain, port, frame, page) {\r\n            if ($.local) location.reload(true);\r\n            else {\r\n                var ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n                window.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n            }\r\n        }\r\n        refresh();\r\n    }\r\n\r\n    var currUserName = \"\";\r\n\r\n    function Base64Encoding(input) {\r\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n        var output = \"\";\r\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n        var i = 0;\r\n        input = utf8_encode(input);\r\n        while (i < input.length) {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    function utf8_encode(string) {\r\n        string = string.replace(/\\r\\n/g, \"\\n\");\r\n        var utftext = \"\";\r\n\r\n        for (var n = 0; n < string.length; n++) {\r\n            var c = string.charCodeAt(n);\r\n            if (c < 128) {\r\n                utftext += String.fromCharCode(c);\r\n            } else if ((c > 127) && (c < 2048)) {\r\n                utftext += String.fromCharCode((c >> 6) | 192);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            } else {\r\n                utftext += String.fromCharCode((c >> 12) | 224);\r\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n                utftext += String.fromCharCode((c & 63) | 128);\r\n            }\r\n        }\r\n        return utftext;\r\n    }\r\n\r\n    function getHttpObject(hook) {\r\n        var xmlHttp = null;\r\n        try {\r\n            xmlHttp = new XMLHttpRequest();\r\n        } catch (e) {\r\n            try {\r\n                xmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n            } catch (e) {\r\n                try {\r\n                    xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n                } catch (e) {\r\n                    /* How to handle this error? */\r\n                }\r\n            }\r\n        }\r\n        xmlHttp.onreadystatechange = function() {\r\n            if (xmlHttp.readyState == 4) {\r\n                if (hook)\r\n                    hook();\r\n            }\r\n        }\r\n        return xmlHttp;\r\n    }\r\n\r\n    function $(id) {\r\n        return document.getElementById(id);\r\n    }\r\n\r\n    function hideElem(elem) {\r\n        if (elem && elem.style.display != \"none\")\r\n            elem.style.display = \"none\";\r\n    }\r\n\r\n    function showElem(elem) {\r\n        if (elem && elem.style.display != \"inline\")\r\n            elem.style.display = \"inline\";\r\n    }\r\n\r\n    function deleteCookie(name) {\r\n        var LargeExpDate = new Date();\r\n        document.cookie = name + \"=; expires=\" + LargeExpDate.toGMTString();\r\n    }\r\n\r\n    function asc(str) {\r\n        for (var i = 0, l = str.length; i < l; i++)\r\n            if (str.charCodeAt(i) > 127) return true;\r\n        return false;\r\n    }\r\n\r\n    function getUsrName() {\r\n        var xmlHttpObj;\r\n        var args = \"[USER_CFG#0,0,0,0,0,0#0,0,0,0,0,0]0,1\\r\\nadminName\\r\\n\";\r\n\r\n        xmlHttpObj = getHttpObject(function() {\r\n            if (xmlHttpObj.status == 200) {\r\n                currUserName = xmlHttpObj.responseText.split(\"\\n\")[1].replace(\"adminName=\", \"\");\r\n                doSetPassword();\r\n            } else\r\n                return;\r\n        });\r\n        xmlHttpObj.open(\"POST\", \"/cgi?1\", true);\r\n        xmlHttpObj.send(args);\r\n    }\r\n\r\n    function doSetUsrName() {\r\n        var xmlHttpObj;\r\n        var args = \"[USER_CFG#0,0,0,0,0,0#0,0,0,0,0,0]0,1\\r\\nadminName=\" + $(\"newUsr\").value + \"\\r\\n\";\r\n\r\n        xmlHttpObj = getHttpObject(function() {\r\n            if (xmlHttpObj.status == 200) {\r\n                getUsrName();\r\n            } else\r\n                return;\r\n        });\r\n        xmlHttpObj.open(\"POST\", \"/cgi?2\", true);\r\n        xmlHttpObj.send(args);\r\n    }\r\n\r\n    function setUsrName(){\r\n        var newUsr = $(\"newUsr\");\r\n\r\n        if (newUsr.value == \"\") {\r\n            alert(\"Tên đăng nhập mới không thể để trống!\");\r\n            return false;\r\n        }\r\n\r\n        if (asc(newUsr)){\r\n            alert(\"Tên đăng nhập của bạn không có ký tự chữ cái!\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function pwdcheck(arg) {\r\n        var pattern = /^[\\d\\D]{6,}$/;\r\n        if (!pattern.test(arg)) {\r\n            alert(\"Mật mã đăng nhập phải có ít nhất 6 ký tự\");\r\n            return 1;\r\n        }\r\n\r\n        pattern = /[a-zA-Z]+/;\r\n        if (!pattern.test(arg)) {\r\n            alert(\"Mật mã của bạn không có ký tự chữ cái!\");\r\n            return 1;\r\n        }\r\n\r\n        pattern = /[0-9]+/;\r\n        if (!pattern.test(arg)) {\r\n            alert(\"Mật mã của bạn không có ký tự số!\");\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function doSetPassword() {\r\n        var xmlHttpObj;\r\n\r\n        xmlHttpObj = getHttpObject(function() {\r\n            if (xmlHttpObj.status == 200) {\r\n                document.cookie = \"Authorization=Basic \" + Base64Encoding(currUserName + \":\" + $(\"cfmPassword\").value);\r\n                window.location.reload();\r\n            } else\r\n                return;\r\n        });\r\n\r\n        xmlHttpObj.open(\"POST\", \"/cgi/setPwd?pwd=\" + Base64Encoding($(\"cfmPassword\").value), true);\r\n        xmlHttpObj.send(null);\r\n    }\r\n\r\n    function setPassword() {\r\n        var newPwd = $(\"newPwd\");\r\n        var cfmPassword = $(\"cfmPassword\");\r\n\r\n        if (newPwd.value == \"\") {\r\n            alert(\"Mật mã mới không thể để trống!\");\r\n            return false;\r\n        }\r\n\r\n        if (newPwd.value != cfmPassword.value) {\r\n            alert(\"Mật mã xác nhận không trùng khớp với Mật mã mới!\");\r\n            return false;\r\n        }\r\n\r\n        if (newPwd.value == \"admin\") {\r\n            alert(\"Mật mã mới trùng với mật mã cũ!\");\r\n            return false;\r\n        }\r\n\r\n        if (pwdcheck(newPwd.value))\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    function PCWin(event) {\r\n        if (event.keyCode == 13) {\r\n            setUsrCfg();\r\n        }\r\n    }\r\n\r\n    function resize() {\r\n        bodyObj = document.body;\r\n        bodyObj.style[\"width\"] = (document.documentElement.clientWidth < 1000 ? 1000 : document.documentElement.clientWidth) + \"px\";\r\n    }\r\n\r\n    function pageLoad() {\r\n        resize();\r\n        window.onresize = resize;\r\n        $(\"newPwd\").disabled = false;\r\n        $(\"cfmPassword\").disabled = false;\r\n\r\n        $(\"newPwd\").onfocus = function() {\r\n            $(\"spanNewPwd\").style.background = \"url(../img/login/setpwdselect.png)\";\r\n        }\r\n\r\n        $(\"newPwd\").onblur = function() {\r\n            $(\"spanNewPwd\").style.background = \"url(../img/login/setpwdunselect.png)\";\r\n        }\r\n\r\n        $(\"cfmPassword\").onfocus = function() {\r\n            $(\"spanCfmPwd\").style.background = \"url(../img/login/setpwdselect.png)\";\r\n        }\r\n\r\n        $(\"cfmPassword\").onblur = function() {\r\n            $(\"spanCfmPwd\").style.background = \"url(../img/login/setpwdunselect.png)\";\r\n        }\r\n\r\n        $(\"newUsr\").onfocus = function() {\r\n            $(\"spanNewUsr\").style.background = \"url(../img/login/setpwdselect.png)\";\r\n        }\r\n\r\n        $(\"newUsr\").onblur = function() {\r\n            $(\"spanNewUsr\").style.background = \"url(../img/login/setpwdunselect.png)\";\r\n        }\r\n\r\n        $(\"newUsr\").focus();\r\n        $(\"spanNewUsr\").style.background = \"url(../img/login/setpwdselect.png)\";\r\n        hideElem($(\"span_error1\"));\r\n        hideElem($(\"span_error2\"));\r\n\r\n        try {\r\n            if (modelName) {\r\n                document.title = modelName;\r\n                $(\"mnum\").innerHTML = \"Model No. \" + modelName;\r\n            }\r\n            if (modelDesc) {\r\n                $(\"mname\").innerHTML = modelDesc;\r\n            }\r\n        } catch (e) {}\r\n    }\r\n\r\n    function setUsrCfg() {\r\n        if (setUsrName() && setPassword()){\r\n            doSetUsrName();\r\n        }\r\n    }\r\n\r\n    </script>\r\n</head>\r\n\r\n<body onkeypress=\"PCWin(event)\" onload=\"pageLoad()\">\r\n    <div style=\"height: 90px; background: #09C url(../img/login/top_bg.jpg) repeat-x;\">\r\n        <a href=\"http://www.tp-link.com\">\r\n            <img id=\"logo\" src=\"../img/login/top1_1.jpg\" style=\"float: left;\" border=\"0\" />\r\n        </a>\r\n        <div id=\"mod\" style=\"height: 87px; margin: 0; text-align: right; overflow: hidden; background: url(../img/login/top1_2.jpg) no-repeat right;\">\r\n            <p id=\"mname\" style=\"font-size: 16px; font-weight: bold; color: #fff; margin: 37px 24px 0 0; padding: 0;\"></p>\r\n            <p id=\"mnum\" style=\"font-size: 12px; font-weight: bold; color: #fff; margin: 2px 24px 0 0; padding: 0;\"></p>\r\n        </div>\r\n        <img id=\"bhr\" src=\"../img/login/top2.jpg\" style=\"height: 3px; width: 100%; display: block;\" />\r\n    </div>\r\n    <div class=\"loginBox\">\r\n        <div class=\"noteDiv\">\r\n            <span id=\"note\">LƯU Ý:</span>\r\n            <span id=\"tip\">Vì lý do an toàn, vui lòng thay đổi mật mã mặc định của Router và lưu lại thông tin mật mã mới này!</span>\r\n        </div>\r\n        <div class=\"panelThre\" align=\"center\">\r\n            <div class=\"picDiv\">\r\n                <br />\r\n                <p>\r\n                    <span id=\"noteSetUsr\">\r\n                        <font size=\"3\" style=\"font-weight:bold\">Tên đăng nhập mới:</font>\r\n                    </span>\r\n                    <span id=\"spanNewUsr\">\r\n                        <input class=\"text\" id=\"newUsr\" type=\"text\" maxlength=\"15\" autocomplete=\"off\" />\r\n                    </span>\r\n                </p>\r\n                <p>\r\n                    <span id=\"noteSetPwd\">\r\n                        <font size=\"3\" style=\"font-weight:bold\">Mật mã mới:</font>\r\n                    </span>\r\n                    <span id=\"spanNewPwd\">\r\n                        <input class=\"text\" id=\"newPwd\" type=\"password\" maxlength=\"15\" autocomplete=\"off\" />\r\n                    </span>\r\n                </p>\r\n                <p>\r\n                    <span id=\"noteCfmPwd\">\r\n                        <font size=\"3\" style=\"font-weight:bold\">Xác nhận mật mã:</font>\r\n                    </span>\r\n                    <span id=\"spanCfmPwd\">\r\n                        <input class=\"text\" id=\"cfmPassword\" type=\"password\" maxlength=\"15\" autocomplete=\"off\" />\r\n                    </span>\r\n                </p>\r\n                <br />\r\n                <label id=\"setpwdBtn\" onclick=\"setUsrCfg()\"></label>\r\n                <span id=\"span_error1\" class=\"span_error\">\r\n                    <font size=\"2\" color=\"#fd1515\" style=\"float: right; margin-right: 10px;\">Mật mã không thể để trống, vui lòng thử lại.</font>\r\n                </span>\r\n                <span id=\"span_error2\" class=\"span_error\">\r\n                    <font size=\"2\" color=\"#fd1515\" style=\"float: right; margin-right: 10px;\">Mật mã không trùng khớp, vui lòng thử lại.</font>\r\n                </span>\r\n                <label id=\"copyright\">Bản quyền: 2015 TP-LINK Technologies Co., Ltd. Giành quyền tác giả.</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "compressJsInHtml.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 42
      },
      "contents" : {
        "text" : "/* This file extracts all javascript blocks from html files \n * By xiejiabai@tp-link.net\n * argument[0] compress tool dir\n * argument[1] html file to compress\n */\n\n/* modules import */\nexecSync=require('child_process').execSync;\nutil=require('util');\nfs=require('fs');\npath=require('path');\n\n/* get the first argument as webdir */\nvar options = process.argv.splice(2);\nvar utilsDir = options[0];\nvar htmlFile = options[1];\n\nif (path.basename(htmlFile).match('\\.htm'))\n{\n\tvar str = fs.readFileSync(htmlFile,'utf8');\n\tvar re = /(<script[^>]*?type[^>]*?text\\/javascript[^>]*?>)([\\w\\W]*?)(<\\/script>)/i;\n\tvar re_g = /(<script[^>]*?type[^>]*?text\\/javascript[^>]*?>)([\\w\\W]*?)(<\\/script>)/gi;\n\t\n\t/* delete comments */\n\tstr =  str.replace(/<!--[\\w\\W]*?-->/g,'');\n\t\n\tvar res;\n\tvar i=0;\n\tvar strOut = '';\n\tvar index = 0;\n\t\n\t/* search all javascript blocks */\n\twhile(res = re_g.exec(str))\n\t{\n\t\tvar match = res[0].match(re);\n\t\t\n\t\t/* js definition */\n\t\tvar jsPrefix = match[1];\n\t\t\n\t\t/* it shoud be </script> */\n\t\tvar jsBlock = match[2];\n\t\t\n\t\t/* js content */\n\t\tvar jsSuffix = match[3];\n\t\t\n\t\t/* if the js definition only calls a js file (including 'src=' word), do not process it */\n\t\tif (!jsPrefix.match(/src/) && (jsBlock.length != 0))\n\t\t{\n\t\t\tvar jsBlockName = htmlFile+'.'+i+'.js';\n\t\t\tvar jsBlockNameTmp = htmlFile+'.'+i+'.js.temp';\n\n\t\t\ti++;\n\n\t\t\tfs.writeFileSync(jsBlockName, jsBlock,'utf8');\n\t\t\texecSync(\"java -jar \" + utilsDir + \"/yuicompressor.jar --nomunge -o \" + jsBlockNameTmp + ' '+jsBlockName);\n\t\t\texecSync('mv '+ jsBlockNameTmp + ' ' + jsBlockName);\n\n\t\t\tjsBlock = fs.readFileSync(jsBlockName);\n\t\t\texecSync('rm ' + jsBlockName);\n\t\t}\n\t\t\n\t\tstrOut +=str.slice(index, res.index);\n\t\tstrOut +=(jsPrefix + jsBlock+ jsSuffix);\n\t\tindex = re_g.lastIndex;\n\n\t}\n\n\t/* add the last part */\n\tstrOut +=str.slice(index);\n\t//fs.writeFileSync(htmlFile + '.min.htm', strOut, 'utf8');\n\t/* overwrite original file */\n\tfs.writeFileSync(htmlFile, strOut, 'utf8');\n}"
      }
    }, {
      "location" : {
        "uri" : "wlBasicRE.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 43
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\n\nvar mainChannel;\nvar authMode, encryptMode;\nvar cfgModified = false;\nvar first = 0;   // it is a key param for page init \n\n\nvar regionInfo = new Array(\n\t\"Albania\", 1, 13, 2,\n\t\"Algeria\", 1, 13, 2,\n\t\"Argentina\", 1, 13, 2,\n\t\"Armenia\", 1, 13, 2,\n\t\"Australia\", 1, 13, 2,\n\t\"Austria\", 1, 13, 2,\n\t\"Azerbaijan\", 1, 13, 2,\n\t\"Bahrain\", 1, 13, 2,\n\t\"Belarus\", 1, 13, 2,\n\t\"Belgium\", 1, 13, 2,\n\t\"Belize\", 1, 13, 2,\n\t\"Bolivia\", 1, 13, 2,\n\t\"Brazil\", 1, 13, 2,\n\t\"Brunei Darussalam\", 1, 13, 2,\n\t\"Bulgaria\", 1, 13, 2,\n\t\"Cambodia\", 1, 13, 2,\n\t\"Canada\", 1, 11, 2,\n\t\"Chile\", 1, 13, 2,\n\t\"China\", 1, 13, 1,\n\t\"Colombia\", 1, 11, 2,\n\t\"Costa Rica\", 1, 13, 2,\n\t\"Croatia\", 1, 13, 2,\n\t\"Cyprus\", 1, 13, 2,\n\t\"Czech Republic\", 1, 13, 2,\n\t\"Denmark\", 1, 13, 2,\n\t\"Dominican Republic\", 1, 11, 2,\n\t\"Ecuador\", 1, 13, 2,\n\t\"Egypt\", 1, 13, 2,\n\t\"El Salvador\", 1, 13, 2,\n\t\"Estonia\", 1, 13, 2,\n\t\"Finland\", 1, 13, 2,\n\t\"France\", 1, 13, 2,\n\t\"Georgia\", 1, 13, 2,\n\t\"Germany\", 1, 13, 2,\n\t\"Greece\", 1, 13, 2,\n\t\"Guatemala\", 1, 11, 2,\n\t\"Honduras\", 1, 13, 2,\n\t\"Hong Kong\", 1, 13, 2,\n\t\"Hungary\", 1, 13, 2,\n\t\"Iceland\", 1, 13, 2,\n\t\"India\", 1, 13, 2,\n\t\"Indonesia\", 1, 13, 2,\n\t\"Iran\", 1, 13, 2,\n\t\"Iraq\", 1, 13, 2,\n    \"Ireland\", 1, 13, 2,\n\t\"Israel\", 1, 13, 2,\n\t\"Italy\", 1, 13, 2,\n\t\"Japan\", 1, 13, 2,\n\t\"Jordan\", 1, 13, 2,\n\t\"Kazakhstan\", 1, 13, 2,\n\t\"North Korea\", 1, 13, 2,\n\t\"Korea Republic\", 1, 13, 2,\n\t\"Kuwait\", 1, 13, 2,\n\t\"Latvia\", 1, 13, 2,\n\t\"Lebanon\", 1, 13, 2,\n\t\"Liechtenstein\", 1, 13, 2,\n\t\"Lithuania\", 1, 13, 2,\n\t\"Luxembourg\", 1, 13, 2,\n\t\"Macau\", 1, 13, 2,\n\t\"Macedonia\", 1, 13, 2,\n\t\"Malaysia\", 1, 13, 2,\n\t\"Malta\", 1, 13, 2,\n\t\"Mexico\", 1, 11, 2,\n\t\"Monaco\", 1, 13, 2,\n\t\"Morocco\", 1, 13, 2,\n\t\"Netherlands\", 1, 13, 2,\n\t\"New Zealand\", 1, 13, 2,\n\t\"Norway\", 1, 13, 2,\n\t\"Oman\", 1, 13, 2,\n\t\"Pakistan\", 1, 13, 2,\n\t\"Panama\", 1, 11, 2,\n    \"Paraguay\", 1, 13, 2,\n\t\"Peru\", 1, 13, 2,\n\t\"Philippines\", 1, 13, 2,\n\t\"Poland\", 1, 13, 2,\n\t\"Portugal\", 1, 13, 2,\n\t\"Puerto Rico\", 1, 11, 2,\n\t\"Qatar\", 1, 13, 2,\n\t\"Romania\", 1, 13, 2,\n\t\"Russia\", 1, 13, 2,\n\t\"Saudi Arabia\", 1, 13, 2,\n\t\"Singapore\", 1, 13, 2,\n\t\"Serbia\", 1, 13, 2,\n\t\"Slovak Republic\", 1, 13, 2,\n\t\"Slovenia\", 1, 13, 2,\n\t\"South Africa\", 1, 13, 2,\n\t\"Spain\", 1, 13, 2,\n\t\"Sweden\", 1, 13, 2,\n\t\"Switzerland\", 1, 13, 2,\n\t\"Syrian Arab Republic\", 1, 13, 2,\n\t\"Taiwan\", 1, 11, 2,\n\t\"Thailand\", 1, 13, 2,\n\t\"Trinidad And Tobago\", 1, 13, 2,\n\t\"Tunisia\", 1, 13, 2,\n\t\"Turkey\", 1, 13, 2,\n\t\"Ukraine\", 1, 13, 2,\n\t\"United Arab Emirates\", 1, 13, 2,\n\t\"United Kingdom\", 1, 13, 2,\n\t\"United States\", 1, 11, 2,\n\t\"Uruguay\", 1, 13, 2,\n\t\"Uzbekistan\", 1, 11, 2,\n\t\"Venezuela\", 1, 11, 2,\n\t\"Viet Nam\", 1, 13, 2,\n\t\"Yemen\", 1, 13, 2,\n\t\"Zimbabwe\", 1, 13, 2\n);\n\nvar regionCodeInfo = new Array(\n\t[8, \"AL \", 0,3, \"ALBANIA\"],\n\t[12,\"DZ \", 0,3, \"ALGERIA\"],\n\t[32,\"AR \", 0,3, \"ARGENTINA\"],\n\t[51,\"AM \", 0,3,\"ARMENIA\"],\n\t[36,\"AU \", 0,3, \"AUSTRALIA\"],\n\t[40,\"AT \", 0,3,\"AUSTRIA\"],\n\t[31,\"AZ \", 0,3,\"AZERBAIJAN\"],\n\t[48,\"BH \", 0,3,\"BAHRAIN\"],\n\t[112,\"BY\", 0,3,\"BELARUS\"],\n\t[56,\"BE \", 0,3,\"BELGIUM\"],\n\t[84,\"BZ \", 0,8,\"BELIZE\"],\n\t[68,\"BO \", 0,8,\"BOLIVIA\"],\n\t[76,\"BR \", 0,3,\"BRAZIL\"],\n\t[96,\"BN \", 0,3,\"BRUNEI DARUSSALAM\"],\n\t[100,\"BG \", 0,3,\"BULGARIA\"],\n\t[116,\"KH \", 0,3,\"CAMBODIA\"],\n\t[124,\"CA \", 0,1,\"CANADA\"],\n\t[152,\"CL \", 0,3,\"CHILE\"],\n\t[156,\"CN \", 0,3,\"CHINA\"],\n\t[170,\"CO \", 0,1,\"COLOMBIA\"],\n\t[188,\"CR \", 0,3,\"COSTA RICA\"],\n\t[191,\"HR \", 0,3,\"CROATIA\"],\n\t[196,\"CY \", 0,3,\"CYPRUS\"],\n\t[203,\"CZ \", 0,3,\"CZECH REPUBLIC\"],\n\t[208,\"DK \", 0,3,\"DENMARK\"],\n\t[214,\"DO \", 0,1,\"DOMINICAN REPUBLIC\"],\n\t[218,\"EC \", 0,3,\"ECUADOR\"],\n\t[818,\"EG \", 0,3,\"EGYPT\"],\n\t[222,\"SV \", 0,3,\"EL SALVADOR\"],\n\t[233,\"EE \", 0,3,\"ESTONIA\"],\n\t[246,\"FI \", 0,3,\"FINLAND\"],\n\t[250,\"FR \", 0,3,\"FRANCE\"],\n\t[268,\"GE \", 0,3,\"GEORGIA\"],\n\t[276,\"DE \", 0,3,\"GERMANY\"],\n\t[300,\"GR \", 0,3,\"GREECE\"],\n\t[320,\"GT \", 0,1,\"GUATEMALA\"],\n\t[340,\"HN \", 0,3,\"HONDURAS\"],\n\t[344,\"HK \", 0,3,\"HONG KONG\"],\n\t[348,\"HU \", 0,3,\"HUNGARY\"],\n\t[352,\"IS \", 0,3,\"ICELAND\"],\n\t[356,\"IN \", 0,3,\"INDIA\"],\n\t[360,\"ID \", 0,3,\"INDONESIA\"],\n\t[364,\"IR \", 0,3,\"IRAN\"],\n    [368,\"IQ\",  0,3, \"IRAQ\"],\n\t[372,\"IE \", 0,3,\"IRELAND\"],\n\t[376,\"IL \", 0,7,\"ISRAEL\"],\n\t[380,\"IT \", 0,3,\"ITALY\"],\n\t[392,\"JP \", 3,6,\"JAPAN\"],\n\t[400,\"JO \", 0,3,\"JORDAN\"],\n\t[398,\"KZ \", 0,3,\"KAZAKHSTAN\"],\n\t[410,\"KP \", 2,3,\"NORTH KOREA\"],\n\t[408,\"KR \", 2,3,\"KOREA REPUBLIC\"],\n\t[414,\"KW \", 0,3,\"KUWAIT\"],\n\t[428,\"LV \", 0,3,\"LATVIA\"],\n\t[422,\"LB \", 0,3,\"LEBANON\"],\n\t[438,\"LI \", 0,3,\"LIECHTENSTEIN\"],\n\t[440,\"LT \", 0,3,\"LITHUANIA\"],\n\t[442,\"LU \", 0,3,\"LUXEMBOURG\"],\n\t[446,\"MO \", 0,3,\"MACAU\"],\n\t[807,\"MK \", 0,3,\"MACEDONIA\"],\n\t[458,\"MY \", 0,3,\"MALAYSIA\"],\n\t[470,\"MT\", 0,3, \"MALTA\",],\n\t[484,\"MX \", 0,1,\"MEXICO\"],\n\t[492,\"MC \", 0,3,\"MONACO\"],\n\t[504,\"MA \", 0,3,\"MOROCCO\"],\n\t[528,\"NL \", 0,3,\"NETHERLANDS\"],\n\t[554,\"NZ \", 0,8,\"NEW ZEALAND\"],\n\t[578,\"NO \", 0,3,\"NORWAY\"],\n\t[512,\"OM \", 0,3,\"OMAN\"],\n\t[586,\"PK \", 0,3,\"PAKISTAN\"],\n\t[591,\"PA \", 0,1,\"PANAMA\"],\n    [600,\"PY\",  0,3,\"PARAGUAY\"],\n\t[604,\"PE \", 0,3,\"PERU\"],\n\t[608,\"PH \", 0,3,\"PHILIPPINES\"],\n\t[616,\"PL \", 0,3,\"POLAND\"],\n\t[620,\"PT \", 0,3,\"PORTUGAL\"],\n\t[630,\"PR \", 0,1,\"PUERTO RICO\"],\n\t[634,\"QA \", 0,3,\"QATAR\"],\n\t[642,\"RO \", 0,3,\"ROMANIA\"],\n\t[643,\"RU \", 0,3,\"RUSSIA\"],\n\t[682,\"SA \", 0,3,\"SAUDI ARABIA\"],\n\t[702,\"SG \", 4,3,\"SINGAPORE\"],\n\t[688,\"RS \", 0,3,\"SERBIA\"],\n\t[703,\"SK \", 0,3,\"SLOVAK REPUBLIC\"],\n\t[705,\"SI \", 0,3,\"SLOVENIA\"],\n\t[710,\"ZA \", 0,3,\"SOUTH AFRICA\"],\n\t[724,\"ES \", 0,3,\"SPAIN\"],\n\t[752,\"SE \", 0,3,\"SWEDEN\"],\n\t[756,\"CH \", 0,3,\"SWITZERLAND\"],\n\t[760,\"SY \", 0,3,\"SYRIAN ARAB REPUBLIC\"],\n\t[158,\"TW \", 1,1,\"TAIWAN\"],\n\t[764,\"TH \", 0,3,\"THAILAND\"],\n\t[780,\"TT \", 0,3,\"TRINIDAD AND TOBAGO\"],\n\t[788,\"TN \", 0,3,\"TUNISIA\"],\n\t[792,\"TR \", 0,3,\"TURKEY\"],\n\t[804,\"UA \", 0,3,\"UKRAINE\"],\n\t[784,\"AE \", 0,3,\"UNITED ARAB EMIRATES\"],\n\t[826,\"GB \", 0,3,\"UNITED KINGDOM\"],\n\t[840,\"US \", 0,1,\"UNITED STATES\"],\n\t[858,\"UY \", 0,3,\"URUGUAY\"],\n\t[860,\"UZ \", 0,1,\"UZBEKISTAN\"],\n\t[862,\"VE \", 0,8,\"VENEZUELA\"],\n\t[704,\"VN \", 0,3,\"VIET NAM\"],\n\t[887,\"YE \", 0,3,\"YEMEN\"],\n\t[716,\"ZW \", 0,3,\"ZIMBABWE\"]\n);\n\nfunction isRegionSupported(region)\n{\n\tif (INCLUDE_WLAN_REGION_LIST)\n\t{\n\t\t\n\t\tvar supportedRegionList = wlanObj.X_TP_SupportedRegionList;\n\t\tvar listLen = supportedRegionList.length;\n\t\t\n\t\tif (supportedRegionList == '*' || supportedRegionList == '')\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\tfor (var i = 0; i < listLen; i += 2)\n\t\t{\n\t\t\tvar re = new RegExp(\"\\s*\" + supportedRegionList.substr(i, 2) + \"\\s*\");\n\t\t\tif (re.test(region))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn true;\n\t}\n}\n/*\nfunction showRegionHelp()\n{\n\tif (typeof parent.frames[\"helpFrame\"].document.getElementsByClassName !== 'function')\n\t{\n\t\tparent.frames[\"helpFrame\"].document.getElementsByClassName = function(className, element) {\n\t\t\tvar children = parent.frames[\"helpFrame\"].document.getElementsByTagName('*');\n\t\t\tvar elements = new Array();\n\t\t\tfor (var i = 0; i < children.length; i++)\n\t\t\t{\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar classNameList = child.className.split(' ');\n\t\t\t\tfor (var j = 0; j < classNameList.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (classNameList[j] == className)\n\t\t\t\t\t{\n\t\t\t\t\t\telements.push(child);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elements;\n\t\t}\n\t}\n\tvar regionHelpElements = parent.frames[\"helpFrame\"].document.getElementsByClassName(\"region_help\");\n\tif (regionHelpElements.length == 0)\n\t{\n\t\tsetTimeout(showRegionHelp, 100);\n\t\treturn;\n\t}\n\tfor (var index = 0; index < regionHelpElements.length; index++)\n\t{\n\t\t$.removeClass(regionHelpElements[index], \"nd\");\n\t}\n}\n*/\nfunction initRegionList()\n{\n\tvar region = $.id(\"region\");\n\tvar selectedIndex = 0;\n\tvar optionIndex = 0;\n\n\t\n\t//if (INCLUDE_FORCE_REGION_SELECT && wlanObj.X_TP_DomainSetByUser == 0)\n\tif (INCLUDE_FORCE_REGION_SELECT )\n\t{\n\t\tvar t_opt = $.c(\"option\");\n\t\tt_opt.text = \"--Please Select--\"; \n\t\tif (s_str.noselect)\n\t\t\tt_opt.text = s_str.noselect ;\n\t\tt_opt.value =  -1;\n\n\t\t\n\t\t$.id(\"region\").add(t_opt);\n\t\t$.id(\"region\").value = -1;\n\t\t//$.addClass(t_opt, \"nd\");\n\t}\n\t\n\tfor(i=0; i < (regionInfo.length / 4); i++)\n\t{\n\t\tif (isRegionSupported(regionCodeInfo[i][1]) == false)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tvar opt=$.c(\"option\");\n\t\topt.value=i;\n\t\tif (country_str && country_str[i])\n\t\t{\n\t\t\topt.text=country_str[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\topt.text=regionInfo[4 * i];\n\t\t}\n\t\t\n\t\ttry {\n\t\t\t//region.add(opt,null);\n\t\t\t$.id(\"region\").add(opt,null);\n\t\t} catch(e) {\n\t\t\t//region.add(opt);\n\t\t\t$.id(\"region\").add(opt);\n\t\t}\n\n\t\tif (regionCodeInfo[i][1] == wlanObj.regulatoryDomain)\n\t\t{\n\t\t\tselectedIndex=optionIndex;\n\t\t}\n\t\toptionIndex++;\n\t}\n\n\tif (showRegion == 1)\n\t{\n\t\t/*\n\t\t$.removeClass($.id(\"regionBox\"), \"nd\");\n\t\t$.removeClass($.id(\"regionWarning\"), \"nd\");\n\t\t*/\n\t\t$(\"#regionBox\").removeClass(\"nd\");\n\t\t$(\"#regionWarning\").removeClass(\"nd\");\n\t\t//showRegionHelp();\n\t}\n\n\t//region.selectedIndex=selectedIndex;\n\t$(\"#region option[value='\" + selectedIndex  + \"']\").prop(\"selected\", \"selected\");\n}\n\nfunction changeRegion()\n{\n\tisChangeRegion = 1;\n}\n\nfunction hide_wep()\n{\n\t/*\n\t$.addClass($.id(\"wep_security\"),\"nd\");\n\t$.addClass($.id(\"password\"),\"nd\");\n\n\t$.id(\"connWepidx\").disabled=true;\n\t$.id(\"authType\").disabled=true;\n\t$.id(\"wepkeyFormat\").disabled=true;\n\t$.id(\"connKeyText\").disabled=true;\n\t*/\n\t$(\"#wep_security\").addClass(\"nd\");\n\t$(\"#password\").addClass(\"nd\");\n\t\n\t$(\"#connWepidx\").prop(\"disabled\", true);\n\t$(\"#authType\").prop(\"disabled\", true);\n\t$(\"#wepkeyFormat\").prop(\"disabled\", true);\n\t$(\"#connKeyText\").prop(\"disabled\", true);\n\t\n\t$(\"#connWepidx\").tpSelect({refresh: 1});\n\t$(\"#authType\").tpSelect({refresh: 1});\n\t$(\"#wepkeyFormat\").tpSelect({refresh: 1});\n\t\n}\n\nfunction show_wep()\n{\n\t/*\n\t$.removeClass($.id(\"wep_security\"),\"nd\");\n\t$.removeClass($.id(\"password\"),\"nd\");\n\n\t$.id(\"connWepidx\").disabled=false;\n\t$.id(\"authType\").disabled=false;\n\t$.id(\"wepkeyFormat\").disabled=false;\n\t$.id(\"connKeyText\").disabled=false;\n\t*/\n\t$(\"#wep_security\").removeClass(\"nd\");\n\t$(\"#password\").removeClass(\"nd\");\n\t\n\t$(\"#connWepidx\").prop(\"disabled\", false);\n\t$(\"#authType\").prop(\"disabled\", false);\n\t$(\"#wepkeyFormat\").prop(\"disabled\", false);\n\t$(\"#connKeyText\").prop(\"disabled\", false);\n\t\n\t$(\"#connWepidx\").tpSelect({refresh: 1});\n\t$(\"#authType\").tpSelect({refresh: 1});\n\t$(\"#wepkeyFormat\").tpSelect({refresh: 1});\n}\n\nfunction hide_psk()\n{\n\t/*\n\t$.addClass($.id(\"wpa_tkip_notice\"),\"nd\");\n\t$.addClass($.id(\"password\"),\"nd\");\n\t$.id(\"connKeyText\").disabled=true;\n\t*/\n\t$(\"#wpa_tkip_notice\").addClass(\"nd\");\n\t$(\"#password\").addClass(\"nd\");\n\t\n\t$(\"#connKeyText\").prop(\"disabled\", true);\n\n}\n\nfunction show_psk()\n{\n\tif ( encryptMode != \"TKIPEncryption\")\n\t{\n\t\tencryptMode=\"AESEncryption\";\n\t}\n\telse\n\t{\n\t\t//$.removeClass($.id(\"wpa_tkip_notice\"),\"nd\");\n\t\t$(\"#wpa_tkip_notice\").removeClass(\"nd\");\n\t}\n\t/*\n\t$.removeClass($.id(\"password\"),\"nd\");\n\t$.id(\"connKeyText\").disabled=false;\n\t*/\n\t$(\"#password\").removeClass(\"nd\");\n\t$(\"#connKeyText\").prop(\"disabled\", false);\n}\n\nfunction initParam()\n{\n\tif (!$.mainParam)\n\t{\n\t\treturn;\n\t}\n\n\twlanObj.SSID=$.mainParam.ssid;\n\twlanObj.standard=$.mainParam.standard;\n\twlanObj.channel=$.mainParam.channel;\n\twlanObj.autoChannelEnable=$.mainParam.autoChannel;\n\twlanObj.X_TP_Bandwidth=$.mainParam.bandWidth;\n\n\tif(!INCLUDE_LAN_WLAN_HWSWITCH)\n\t{\n\t\twlanObj.enable=$.mainParam.apEn;\n\t}\n\n\twlanObj.SSIDAdvertisementEnabled=$.mainParam.SSIDAdvertisementEnabled;\n}\n\nfunction getParam()\n{\n\tbeaconType = wlanObj.beaconType;\n\tbasicAuthenticationMode = wlanObj.basicAuthenticationMode;\n\tWEPKeyIndex = wlanObj.WEPKeyIndex;\n\tvar wep_index = 0;\n\t$.each(wepList,function(arg,index){\n\t\twepKeyArray[wep_index] = this.WEPKey;\n\t\twep_index++;\n\t});\n\n\twepLevel = wlanObj.WEPEncryptionLevel.split(\",\");\n\tbasicEncryptionModes = wlanObj.basicEncryptionModes;\n\tWPAAuthenticationMode = wlanObj.WPAAuthenticationMode;\n\tWPAEncryptionModes = wlanObj.WPAEncryptionModes;\n\tIEEE11iAuthenticationMode = wlanObj.IEEE11iAuthenticationMode;\n\tIEEE11iEncryptionModes = wlanObj.IEEE11iEncryptionModes;\n\tX_TP_PreSharedKey = wlanObj.X_TP_PreSharedKey;\n\tX_TP_GroupKeyUpdateInterval = wlanObj.X_TP_GroupKeyUpdateInterval;\n\tX_TP_RadiusServerIP = wlanObj.X_TP_RadiusServerIP;\n\tX_TP_RadiusServerPort = wlanObj.X_TP_RadiusServerPort;\n\tX_TP_RadiusServerPassword = wlanObj.X_TP_RadiusServerPassword;\n}\n\nfunction changeSec()\n{\n\t//if (\"wep\" == $.id(\"sec_select\").value)\n\tif (\"wep\" == $(\"#sec_select\").data(\"value\"))\n\t{\n\t\t//$.removeClass($.id(\"wep_idx\"),\"nd\");\n\t\t$(\"#wep_idx\").removeClass(\"nd\");\n\t}\n\telse\n\t{\n\t\t//$.addClass($.id(\"wep_idx\"),\"nd\");\n\t\t$(\"#wep_idx\").addClass(\"nd\");\n\t}\n\t\n\t//if (\"none\" == $.id(\"sec_select\").value)\n\tif (\"none\" == $(\"#sec_select\").data(\"value\"))\n\t{\n\t\t/*\n\t\t$.id(\"extKeyText\").disabled=true;\n\t\t$.id(\"extKeyText\").value=\"\";\n\t\t*/\n\t\t$(\"#extKeyText\").prop(\"disabled\", true);\n\t\t$(\"#extKeyText\").val(\"\");\n\t}\n\telse\n\t{\n\t\t//$.id(\"extKeyText\").disabled=false;\n\t\t$(\"#extKeyText\").prop(\"disabled\", false);\n\t}\n}\n\n\nfunction changeConnSec()\n{\t\t\n\t//if (\"wep\" == $.id(\"keyType\").value)\n\tif (\"wep\" == $(\"#keyType\").data(\"value\"))\n\t{\n\t\thide_psk();\n\t\tshow_wep();\n\t}\n\t//else if (\"none\" == $.id(\"keyType\").value)\n\telse if (\"none\" == $(\"#keyType\").data(\"value\"))\n\t{\n\t\thide_psk();\n\t\thide_wep();\n\t}\n\telse\n\t{\n\t\thide_wep();\n\t\tshow_psk();\n\t}\t\n\n\tcfgModified  =  true;\n}\n\n\nfunction changeRadioCheckbox()\n{\n\tif ($(\"#host_re\").prop(\"data-checked\") == false)\n\t{\n\t\t/*\n\t\t$.id(\"keyType\").disabled = true;\n\t\t$.id(\"bridgeSSID\").disabled = true;\n\t\t$.id(\"t_scanner\").disabled = true;\t\n\t\t*/\n\t\t$(\"#keyType\").prop(\"disabled\", true);\n\t\t$(\"#keyType\").tpSelect({refresh: 1});\n\t\t$(\"#bridgeSSID\").prop(\"disabled\", true);\n\t\t$(\"#bridgeBSSID\").prop(\"disabled\", true);\n\t\t$(\"#t_scanner\").prop(\"disabled\", true);\n\t}\n\telse\n\t{\n\t\t/*\n\t\t$.id(\"connKeyText\").disabled = false;\n\t\t$.id(\"keyType\").disabled = false;\n\t\t$.id(\"bridgeSSID\").disabled = false;\n\t\t$.id(\"wep_security\").disabled = false;\n\t\t$.id(\"t_scanner\").disabled = false;\n\t\t*/\n\t\t$(\"#connKeyText\").prop(\"disabled\", false);\n\t\t$(\"#keyType\").prop(\"disabled\", false);\n\t\t$(\"select#keyType\").tpSelect({refresh: 1});\n\t\t$(\"#bridgeSSID\").prop(\"disabled\", false);\n\t\t$(\"#bridgeBSSID\").prop(\"disabled\", false);\n\t\t//$(\"#wep_security\").prop(\"disabled\", false);\n\t\t$(\"#t_scanner\").prop(\"disabled\", false);\n\t}\n\tchangeConnSec();\n}\n\nfunction copyHostSSID()\n{\n\t//$.id(\"extssid\").value = wdsObj.bridgeSSID;\n\t//$(\"#extssid\").val(wdsObj.bridgeSSID);\n\t$(\"#extssid\").val($(\"#bridgeSSID\").val());\n}\n\nfunction initWDS()\n{\n\tif (1 == wdsObj.bridgeEnable || $.mainParam)\n\t{\n\t\t//$.id(\"host_re\").checked = true;\n\t\t$(\"#host_re\").prop(\"checked\", true);\n\t}\n\telse\n\t{\n\t\t//$.id(\"host_re\").checked = false;\n\t\t$(\"#host_re\").prop(\"checked\", false);\n\t}\n\t$(\"#host_re\").tpCheckbox({refresh: 1 });\n\n\tif ($.mainParam && $.mainParam.wdsExist == 1)\n\t{\n\t\t/*\n\t\t$.id(\"bridgeSSID\").value = $.mainParam.SSID;\n\t\t$.id(\"bridgeBSSID\").value = $.mainParam.BSSID;\n\t\t*/\n\t\t$(\"#bridgeSSID\").val($.mainParam.SSID);\n\t\t$(\"#bridgeBSSID\").val($.mainParam.BSSID);\n\t\t\t\n\t\tmainChannel = $.mainParam.channel;\n\n\t\tif ($.mainParam.authMode == 0 /*\"Open\"*/ && $.mainParam.wepStatus == 1/*\"None\"*/)\n\t\t{\n\t\t\t//$.id(\"keyType\").selectedIndex = 0;\n\t\t\t$(\"#keyType option[value='none']\").prop(\"selected\", \"selected\");\n\t\t}\n\t\telse if($.mainParam.wepStatus == 0/*\"WEPEncryption\"*/ || $.mainParam.authMode == 2)\n\t\t{\n\t\t\t//$.id(\"keyType\").selectedIndex = 3;\n\t\t\t$(\"#keyType option[value='wep']\").prop(\"selected\", \"selected\");\n\t\t\tif($.mainParam.authMode == 1 /*\"SharedAuthentication\"*/)\n\t\t\t{\n\t\t\t\t//$.id(\"authType\").selectedIndex=1;\n\t\t\t\t$(\"#authType option[value='shared']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\t\t\telse if($.mainParam.authMode == 0 /*\"Open\"*/)\n\t\t\t{\n\t\t\t\t//$.id(\"authType\").selectedIndex = 0;\n\t\t\t\t$(\"#authType option[value='open']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\n\t\t\t//$.id(\"connWepidx\").selectedIndex = wdsObj.bridgeWepKeyIndex - 1;\n\t\t\t$(\"#wepKeyIndex option[value='\"+wdsObj.bridgeWepKeyIndex+\"']\").prop(\"selected\", \"selected\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\n\t\t\tif ($.mainParam.authMode == 3 || $.mainParam.authMode == 5 || $.mainParam.authMode == 4 /*\"PSKAuthentication\"*/)\n\t\t\t{\n\t\t\t\t$.id(\"keyType\").selectedIndex = 1;\n\t\t\t\t$(\"#keyType option[value='wpa']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\t\t\telse if ($.mainParam.authMode == 6 || $.mainParam.authMode == 7 /*\"PSK2Authentication\"*/ )\n\t\t\t{\n\t\t\t\t//$.id(\"keyType\").selectedIndex=2;\n\t\t\t\t$(\"#keyType option[value='wpa2']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\t//$.id(\"keyType\").selectedIndex=3;\n\t\t\t\t$(\"#keyType option[value='wep']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\t//if ($.id(\"keyType\").value == \"none\")\n\t\tif ($(\"#keyType\").data(\"value\") == \"none\")\n\t\t{\n\t\t\tauthMode = \"Open\";\n\t\t\tencryptMode = \"None\";\n\t\t}\n\t\t//else if($.id(\"keyType\").value == \"wep\")\n\t\telse if ($(\"#keyType\").data(\"value\") == \"wep\")\n\t\t{\n\t\t\tencryptMode = \"WEPEncryption\";\n\t\t\t//if ($.id(\"authType\").value == \"open\")\n\t\t\tif ($(\"#authType\").data(\"value\") == \"open\")\n\t\t\t{\n\t\t\t\tauthMode = \"Open\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tqauthMode = \"SharedAuthentication\";\n\t\t\t}\n\t\t}\n\t\t//else if ($.id(\"keyType\").value == \"wpa\")\n\t\telse if ($(\"#keyType\").data(\"value\") == \"wpa\")\n\t\t{\n\t\t\tauthMode = \"PSKAuthentication\";\n\t\t\tencryptMode = \"AESEncryption\";\n\t\t}\n\t\t//else if($.id(\"keyType\").value == \"wpa2\")\n\t\telse if ($(\"#keyType\").data(\"value\") == \"wpa2\")\n\t\t{\n\t\t\tauthMode = \"PSK2Authentication\";\n\t\t\tencryptMode = \"AESEncryption\";\n\t\t}\t\t\n\t\telse\n\t\t{\n\t\t\tauthMode = \"PSK2Authentication\";\n\t\t\tencryptMode = \"AESEncryption\";\n\t\t}\n\t\t\n\t\tif ($.mainParam.wepStatus == 4)\n\t\t{\t\n\t\t\tif($.mainParam.authMode == 3 || $.mainParam.authMode == 5 || $.mainParam.authMode == 4/*\"PSKAuthentication\"*/)\n\t\t\t{\n\t\t\t\tauthMode = \"PSKAuthentication\";\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tauthMode = \"PSK2Authentication\";\n\t\t\t}\n\t\t\t\t\n\t\t\tencryptMode=\"TKIPEncryption\";\n\t\t}\n\t\t\t\n\t}\n\telse\n\t{\n\t\t/*\n\t\t$.id(\"bridgeSSID\").value = wdsObj.bridgeSSID;\n\t\t$.id(\"bridgeBSSID\").value = wdsObj.bridgeBSSID;\n\t\t*/\n\t\t$(\"#bridgeSSID\").val(wdsObj.bridgeSSID);\n\t\t$(\"#bridgeBSSID\").val(wdsObj.bridgeBSSID);\n\t\t\n\t\t//no scan param input, reset channel to active channel scanning\n\t\tif (wlanObj.channel != 6)\n\t\t{\n\t\t\tmainChannel = 6;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmainChannel = 5;\n\t\t}\t\t\n\t\t//authMode = wdsObj.BridgeAuthMode;\n\t\tauthMode = wdsObj.bridgeAuthMode;\n\t\tencryptMode = wdsObj.bridgeEncryptMode;\n\t\n\t\tif (wdsObj.bridgeAuthMode == \"Open\" && wdsObj.bridgeEncryptMode == \"None\")\n\t\t{\n\t\t\t/*\n\t\t\t$.id(\"keyType\").selectedIndex = 0;\n\t\t\t$.id(\"connKeyText\").value = \"\";\n\t\t\t*/\n\t\t\t$(\"#keyType option[value='none']\").prop(\"selected\", \"selected\");\n\t\t\t$(\"#connKeyText\").val(\"\");\n\t\t}\n\t\telse if (wdsObj.bridgeEncryptMode == \"WEPEncryption\")\n\t\t{\n\t\t\t//$.id(\"keyType\").selectedIndex = 3;\n\t\t\t$(\"#keyType option[value='wep']\").prop(\"selected\", \"selected\");\n\t\t\tif (wdsObj.bridgeAuthMode == \"SharedAuthentication\")\n\t\t\t{\n\t\t\t\t//$.id(\"authType\").selectedIndex = 1;\n\t\t\t\t$(\"#authType option[value='shared']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\t\t\telse if(wdsObj.bridgeAuthMode = \"Open\")\n\t\t\t{\n\t\t\t\t//$.id(\"authType\").selectedIndex = 0;\n\t\t\t\t$(\"#authType option[value='open']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\n\t\t\tif (wdsObj.bridgeKey.length == 5 || wdsObj.bridgeKey.length == 13 || wdsObj.bridgeKey.length == 16)\n\t\t\t{\n            \t//$.id(\"wepkeyFormat\").selectedIndex = 0;\n\t\t\t\t$(\"#wepkeyFormat option[value='ascii']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\t\t\telse if (wdsObj.bridgeKey.length == 10 || wdsObj.bridgeKey.length == 26 || wdsObj.bridgeKey.length == 32)\n\t\t\t{\n\t\t\t\t//$.id(\"wepkeyFormat\").selectedIndex = 1;\n\t\t\t\t$(\"#wepkeyFormat option[value='hex']\").prop(\"selected\", \"selected\");\n\t\t\t}\n\n\t\t\t//$.id(\"connWepidx\").selectedIndex = wdsObj.bridgeWepKeyIndex - 1;\n\t\t\t//$.id(\"connKeyText\").value = wdsObj.bridgeKey;\n\t\t\t\n\t\t\t$(\"#wepKeyIndex option[value='\"+$.qd.wds.wepKeyIndex+\"']\").prop(\"selected\", \"selected\");\n\t\t\t$(\"#connKeyText\").val(wdsObj.bridgeKey);\n\t\t}\n\t\telse if (wdsObj.bridgeAuthMode == \"PSKAuthentication\")\n\t\t{\n\t\t\t/*\n\t\t\t$.id(\"keyType\").selectedIndex = 1;\n\t\t\t$.id(\"connKeyText\").value = wdsObj.bridgeKey;\n\t\t\t*/\n\t\t\t$(\"#keyType option[value='wpa']\").prop(\"selected\", \"selected\");\n\t\t\t$(\"#connKeyText\").val(wdsObj.bridgeKey);\n\t\t}\n\t\telse if (wdsObj.bridgeAuthMode == \"PSK2Authentication\")\n\t\t{\n\t\t\t/*\n\t\t\t$.id(\"keyType\").selectedIndex = 2;\n\t\t\t$.id(\"connKeyText\").value = wdsObj.bridgeKey;\n\t\t\t*/\n\t\t\t$(\"#keyType option[value='wpa2']\").prop(\"selected\", \"selected\");\n\t\t\t$(\"#connKeyText\").val(wdsObj.bridgeKey);\n\t\t}\t\n\t\telse\n\t\t{\n\t\t\t/*\n\t\t\t$.id(\"keyType\").selectedIndex = 3;\t\t\t\t\n\t\t\t$.id(\"connKeyText\").value = wdsObj.bridgeKey;\n\t\t\t*/\n\t\t\t$(\"#keyType option[value='wep']\").prop(\"selected\", \"selected\");\n\t\t\t$(\"#connKeyText\").val(wdsObj.bridgeKey);\n\t\t}\n\t}\n\t$(\"select#keyType\").tpSelect({refresh:1});\t\n\t\n\t//changeConnSec();\n\tchangeRadioCheckbox();\n}\n\nfunction initShow()\n{\n\tvar i;\n\n\tif (INCLUDE_LAN_WLAN_WDS)\n\t{\n\t\tinitWDS();\n\t}\n\n\tif (INCLUDE_LAN_WLAN_HWSWITCH)\n\t{\n\t\t//$.addClass($.id(\"wifiswitch\"), \"nd\");\n\t\t$(\"#wifiswitch\").addClass(\"nd\");\n\t}\n\telse\n\t{\n\t\tif (1 == wlanObj.enable)\n\t\t{\n\t\t\t//$.id(\"apen\").checked=true;\n\t\t\t$(\"#apen\").prop(\"checked\",true);\n\t\t}\n\t}\n\n\t//$.id(\"extssid\").value = wlanObj.SSID;\n\t$(\"#extssid\").val(wlanObj.SSID);\n\t\n\tif (beaconType == \"Basic\" && basicEncryptionModes == \"None\")\n\t{\n\t\t//$.id(\"sec_select\").value = \"none\";\n\t\t$(\"#sec_select option[value='none']\").prop(\"selected\", \"selected\");\n\t}\n\telse if (beaconType == \"Basic\" && basicEncryptionModes == \"WEPEncryption\")\n\t{\n\t\t//$.id(\"sec_select\").value = \"wep\";\n\t\t$(\"#sec_select option[value='wep']\").prop(\"selected\", \"selected\");\n\t\tfor (i = 1; i <= 4; i++)\n\t\t{\n\t\t\tif (wepKeyArray[i-1] != \"\")\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t$.id(\"extKeyText\").value = wepKeyArray[i-1];\n\t\t\t\t$.id(\"extWepidx\").value = i;\n\t\t\t\t*/\n\t\t\t\t$(\"#extKeyText\").val(wepKeyArray[i-1]);\n\t\t\t\t$(\"#extWepidx option[value='\"+i+\"']\").prop(\"selected\", \"selected\");\n\t\t\t\t$(\"#extWepidx\").tpSelect({refresh: 1});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\t\n\t}\n\telse if (beaconType == \"WPA\")\n\t{\n\t\tif (WPAAuthenticationMode == \"PSKAuthentication\")\n\t\t{\n\t\t\t//$.id(\"sec_select\").value = \"wpa\";\n\t\t\t$(\"#sec_select option[value='wpa']\").prop(\"selected\", \"selected\");\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//$.id(\"sec_select\").value = \"wpa\";\n\t\t\t$(\"#sec_select option[value='wpa2']\").prop(\"selected\", \"selected\");\t\n\t\t}\n\t\t\n\t\t//$.id(\"extKeyText\").value = X_TP_PreSharedKey;\n\t\t$(\"#extKeyText\").val(X_TP_PreSharedKey);\n\t}\n\telse if(beaconType == \"11i\" || beaconType == \"WPAand11i\")\n\t{\n\t\tif(IEEE11iAuthenticationMode == \"PSKAuthentication\")\n\t\t{\n\t\t\t//$.id(\"sec_select\").value = \"wpa\";\n\t\t\t$(\"#sec_select option[value='wpa']\").prop(\"selected\", \"selected\");\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.id(\"sec_select\").value = \"wpa\";\n\t\t\t$(\"#sec_select option[value='wpa2']\").prop(\"selected\", \"selected\");\t\n\t\t}\n\t\t\t\n\t\t//$.id(\"extKeyText\").value = X_TP_PreSharedKey;\n\t\t$(\"#extKeyText\").val(X_TP_PreSharedKey);\n\t}\n\telse\n\t{\n\t}\n\t\t\n\tchangeSec();\n}\n\nfunction apScan(obj)\n{\n\t$.act(ACT_OP, ACT_OP_WLAN_SCAN, wlanObj.__stack);\n\t$.addLoading(obj);\n\tparam = new Object();\n\tparam.ssid = wlanObj.SSID;\n\tparam.standard = wlanObj.standard;\n\tparam.channel = wlanObj.channel;\n\tparam.autoChannel = wlanObj.autoChannelEnable;\n\tparam.bandWidth = wlanObj.X_TP_Bandwidth;\n\tparam.multiMode = 1; //0 Router, 1 Repeater, 2 Client\n\n\t//param.apEn = $.id(\"apen\").checked?1:0;\n\tparam.apEn = 1;\n\t\n\t//param.SSIDAdvertisementEnabled = $.id(\"ssidBroadcast\").checked?1:0;\n\tparam.SSIDAdvertisementEnabled = wlanObj.SSIDAdvertisementEnabled;\n\t$.exe(function(ret){ \n\t\tif (!ret) \n\t\t\t$.loadMain(\"wlScan.htm\",param)}\n\t);\n}\n\nfunction isHex(str)\n{\n\tstr=str.toLowerCase();\n\tfor(var i=0;i<str.length;i++)\n\t{\n\t\tif((str.charAt(i)>='0'&&str.charAt(i)<='9')||(str.charAt(i)>='a'&&str.charAt(i)<='f'))\n\t\t\tcontinue;\n\t\telse\n\t\t{\n\t\t\t$.alert(ERR_WLAN_WDS_HEX_KEY_INVALID);\n\t\t\treturn false;\n\t\t}\n\t}\n\tif(parseInt(str,16)==0)\n\t{\n\t\t$.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction checkWDS()\n{\n\t//var briSSID = $.id(\"bridgeSSID\");\n\t//var ssidLen = $.realLen(briSSID.value);\n\t\n\tvar briSSID=$(\"#bridgeSSID\");\n\tvar briSSIDvalue=$(\"#bridgeSSID\").val();\n\tvar ssidLen=$.realLen(briSSIDvalue);\n\t\n\tif (ssidLen <= 0)\n\t{\n\t\t$.alert(ERR_WLAN_WDS_SSID_IS_EMPTY);\n\t\tbriSSID.focus();\n\t\tbriSSID.select();\n\t\treturn false;\n\t}\n\telse if (ssidLen > 32)\n\t{\n\t\t$.alert(ERR_WLAN_WDS_SSID_LEN_OUTRANGE);\n\t\tbriSSID.focus();\n\t\tbriSSID.select();\n\t\treturn false;\n\t}\n\n\t//var bss = $.id(\"bridgeBSSID\");\n\tvar bss=$(\"#bridgeBSSID\");\n\tvar bssvalue=$(\"#bridgeBSSID\").val();\n\t\n\tif (bssvalue.length == 0)\n\t{\n\t\t$.alert(ERR_WLAN_WDS_BSSID_IS_EMPTY);\n\t\tbss.focus();\n\t\tbss.select();\n\t\treturn false;\n\t}\n\telse if ($.mac(bssvalue, true))\n\t{\n\t\t$.alert(ERR_WLAN_WDS_BSSID_INVALID);\n\t\tbss.focus();\n\t\tbss.select();\n\t\treturn false;\n\t}\n\t\n\t//var key = $.id(\"connKeyText\");\n\tvar key=$(\"#keyText\");\n\tvar keyvalue=$(\"#keyText\").val();\n\t\n\t//if ($.id(\"keyType\").value == \"none\")\n\tif($(\"#keyType\").data(\"value\")==\"none\")\n\t{\n\t}\n\t//else if ($.id(\"keyType\").value == \"wep\")\n\telse if($(\"#keyType\").data(\"value\") ==\"wep\")\n\t{\n        //if ($.id(\"wepkeyFormat\").value == \"ascii\")\n\t\tif($(\"#wepkeyFormat\").data(\"value\") ==\"ascii\")\n\t\t{ \n\t\t\tif (keyvalue.length != 5 && keyvalue.length != 13 && keyvalue.length != 16)\n\t\t\t{\n\t\t\t\t$.alert(ERR_WLAN_WDS_ASCII_KEY_OUTRANGE);\n\t\t\t\tkey.focus();\n\t\t\t\tkey.select();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//else if($.asc(key.value,true))\n\t\t\telse if($.asc(keyvalue,true))\n\t\t\t{\n\t\t\t\t$.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);\n\t\t\t\tkey.focus();\n\t\t\t\tkey.select();\n\t\t\t\treturn false;\t\t\t\t\n\t\t\t}\n\t\t}\n        //else if ($.id(\"wepkeyFormat\").value == \"hex\")\n\t\telse if($(\"#wepkeyFormat\").data(\"value\")==\"hex\")\n\t\t{\n\t\t\t//if (key.value.length != 10 && key.value.length != 26 && key.value.length != 32)\n\t\t\tif(keyvalue.length!=10&&keyvalue.length!=26&&keyvalue.length!=32)\n\t\t\t{\n                $.alert(ERR_WLAN_WDS_HEX_KEY_OUTRANGE);\n                key.focus();\n                key.select();\n                return false;\n            }\t\t\n\t\t\t//else if(!isHex(key.value))\n\t\t\telse if(!isHex(keyvalue))\n\t\t\t{\n\t\t\t\tkey.focus();\n\t\t\t\tkey.select();\n\t\t\t\treturn false;\t\t\t\n\t\t\t}\t\t\t\t\n\t\t}\n\t}\n\telse\n\t{\n\t\t//if (key.value.length > 64 || key.value.length < 8)\n\t\tif(keyvalue.length>64||keyvalue.length<8)\n\t\t{\n\t\t\t$.alert(ERR_WLAN_WDS_PSK_OUTRANGE);\n\t\t\tkey.focus();\n\t\t\tkey.select();\n\t\t\treturn false;\n\t\t}\n\t\t///else if (key.value.length == 64)\n\t\telse if(keyvalue.length==64)\n\t\t{\n\t\t\t//if (!isHex(key.value))\n\t\t\tif(!isHex(keyvalue))\n\t\t\t{\n\t\t\t\tkey.focus();\n\t\t\t\tkey.select();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//if ($.asc(key.value,true))\n\t\t\tif($.asc(keyvalue,true))\n\t\t\t{\n\t\t\t\t$.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);\n\t\t\t\tkey.focus();\n\t\t\t\tkey.select();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction doConnSubmit()\n{\n\tvar arg2g = {};\n\tvar index = 0;\n\t//var ssid = $.id(\"bridgeSSID\").value;\n\tvar ssid = $(\"#bridgeSSID\").val();\n\n\tif (INCLUDE_LAN_WLAN_WDS)\n\t{\n\t\t//var wdsEn = $.id(\"host_re\").checked ? 1 : 0;\n\t\tvar wdsEn = $(\"#host_re\").prop(\"data-checked\") ? 1 : 0;\n\t}\n\n\tvar vapIndex = 0;\n\n\t//if ($.id(\"keyType\").value == \"none\")\n\tif ($(\"#keyType\").data(\"value\") == \"none\")\n\t{\n\t\tauthMode = \"Open\";\n\t\tencryptMode = \"None\";\n\t}\n\t//else if($.id(\"keyType\").value == \"wep\")\n\telse if ($(\"#keyType\").data(\"value\") == \"wep\")\n\t{\n\t\tencryptMode = \"WEPEncryption\";\n\t\t//if($.id(\"authType\").value == \"open\")\n\t\tif($(\"#authType\").data(\"value\") == \"open\")\n\t\t{\n\t\t\tauthMode = \"Open\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tauthMode = \"SharedAuthentication\";\n\t\t}\n\t}\n\t//else if($.id(\"keyType\").value == \"wpa\")\n\telse if($(\"#keyType\").data(\"value\") == \"wpa\")\n\t{\n\t\tauthMode=\"PSKAuthentication\";\n//\t\tencryptMode=\"AESEncryption\";\n\t}\n\t//else if($.id(\"keyType\").value == \"wpa2\")\n\telse if($(\"#keyType\").data(\"value\") == \"wpa2\")\n\t{\n\t\tauthMode = \"PSK2Authentication\";\n//\t\tencryptMode = \"AESEncryption\";\n\t}\t\t\n\telse\n\t{\n\t\tauthMode = \"PSK2Authentication\";\n//\t\tencryptMode = \"AESEncryption\";\n\t}\n\n\tif (INCLUDE_LAN_WLAN_WDS)\n\t{\n\t\tif (1 == wdsEn)\n\t\t{\n\t\t\t/*\n\t\t\t$.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null,\n\t\t\t\t\t[\"BridgeEnable=\" + wdsEn, \"BridgeBSSID=\" + $.id(\"bridgeBSSID\").value,\n\t\t\t\t\t \"BridgeSSID=\" + $.id(\"bridgeSSID\").value, \"BridgeAuthMode=\" + authMode,\n\t\t\t\t\t \"BridgeEncryptMode=\" + encryptMode, \"BridgeKey=\" + $.id(\"connKeyText\").value,\n\t\t\t\t\t \"BridgeWepKeyIndex=\" + $.id(\"connWepidx\").value]);\n\t\t\t*/\n\t\t\t$.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null,\n\t\t\t\t\t[\"BridgeEnable=\" + wdsEn, \"BridgeBSSID=\" + $(\"#bridgeBSSID\").val(),\n\t\t\t\t\t \"BridgeSSID=\" + $(\"#bridgeSSID\").val(), \"BridgeAuthMode=\" + authMode,\n\t\t\t\t\t \"BridgeEncryptMode=\" + encryptMode, \"BridgeKey=\" + $(\"#connKeyText\").val(),\n\t\t\t\t\t \"BridgeWepKeyIndex=\" + $(\"#connWepidx\").data(\"value\")]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.act(ACT_SET, LAN_WLAN_WDSBRIDGE, wdsObj.__stack, null, [\"BridgeEnable=\" + wdsEn]);\n\t\t}\n\t}\n\n    arg2g.enable = 1;\n    arg2g.SSID = ssid;\n    arg2g.autoChannelEnable = 0;\n    arg2g.Channel = mainChannel;\n\targ2g.Standard = wlanObj.standard;\n\targ2g.X_TP_Bandwidth = wlanObj.X_TP_Bandwidth;\n\n    //if ($.id(\"keyType\").value != \"none\") \n\tif ($(\"#keyType\").data(\"value\") != \"none\") \n\t{\n        if (encryptMode == 'WEPEncryption') \n\t\t{\n            arg2g.beaconType = \"Basic\";\n            arg2g.BasicEncryptionModes = \"WEPEncryption\";\n            arg2g.BasicAuthenticationMode = (authMode == \"Open\") ? \"None\" : \"SharedAuthentication\";\n            //arg2g.WEPKeyIndex = $.id(\"connWepidx\").value;\n\t\t\targ2g.WEPKeyIndex = $(\"#connWepidx\").data(\"value\");\n\t\t\t\n\t\t\t$.each(wepList, function(arg, index) {\n\t\t\t\tvar key;\n\t\t\t\t//if ($.id(\"connWepidx\").value != (index + 1))\n\t\t\t\tif ($(\"#connWepidx\").data(\"value\") != (index + 1))\n\t\t\t\t{\n\t\t\t\t\tkey=\"\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t//key=$.id(\"connKeyText\").value;\n\t\t\t\t\tkey=$(\"#connKeyText\").val();\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t$.act(ACT_SET, LAN_WLAN_WEPKEY, this.__stack, null, [\"WEPKey=\" + key]);\n\t\t\t});\t\n\n            $.act(ACT_SET, LAN_WLAN_WPS, wlanObj.__stack, null, [\"enable=0\"]);\n        }\n\t   \telse \n\t\t{\n            arg2g.beaconType = \"11i\";\n            arg2g.IEEE11iEncryptionModes = \"AESEncryption\";\n            arg2g.WPAEncryptionModes = \"AESEncryption\";\n            arg2g.WPAAuthenticationMode = \"PSKAuthentication\";\n            arg2g.IEEE11iAuthenticationMode = \"PSKAuthentication\";     \n            ///arg2g.X_TP_PreSharedKey = $.id(\"connKeyText\").value;\n\t\t\targ2g.X_TP_PreSharedKey = $(\"#connKeyText\").val();\n        }\n\n    }\n   \telse \n\t{\n        arg2g.beaconType = \"Basic\";\n        arg2g.basicEncryptionModes = \"None\";\n        arg2g.BasicAuthenticationMode = \"None\";\n\t}\t\n\t\n\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, arg2g);\n\n\t$.exe(function(ret)\n\t{\n\t\tif (!ret) \n\t\t{\n\t\t\t$.removeLoading();\n\t\t}\n\t\t\n\t\tif (srcPage)\n\t\t{\n\t\t\t$.loadMain(srcPage);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.reload();\n\t\t}\n\t});\n}\n\nfunction doConnSave(obj)\n{\n\tif (INCLUDE_LAN_WLAN_WDS)\n\t{\n\t\t//if(false == $.id(\"host_re\").checked || true == checkWDS())\n\t\tif(false == $(\"#host_re\").prop(\"data-checked\") || true == checkWDS())\n\t\t{\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn;\n\t\t}\n\t}\t\t\n\t$.addLoading(obj);\n\t/* TO CHECK */\n\tdoConnSubmit();\n}\n\nfunction checkParam()\n{\n\t/*\n\tvar extSSID=$.id(\"extssid\");\n\tvar ssidLen=$.realLen(extSSID.value);\n\t*/\n\t\n\tvar extSSID=$(\"#extssid\");\n\tvar extSSIDvalue=$(\"#extssid\").val();\n\tvar ssidLen=$.realLen(extSSIDvalue);\n\t\n\tif(ssidLen<=0)\n\t{\n\t\t$.alert(ERR_WLAN_SSID_IS_EMPTY);\n\t\textSSID.focus();\n\t\textSSID.select();\n\t\treturn false;\n\t}\n\telse if(ssidLen>32)\n\t{\n\t\t$.alert(ERR_WLAN_SSID_LEN_OUTRANGE);\n\t\textSSID.focus();\n\t\textSSID.select();\n\t\treturn false;\n\t}\n\n\t//var key=$.id(\"extKeyText\");\n\tvar key=$(\"#extKeyText\");\n\tvar keyvalue=$(\"#extKeyText\").val();\n\t\n\t//if($.id(\"sec_select\").value==\"none\")\n\tif($(\"#sec_select\").data(\"value\")==\"none\")\n\t{\n\t}\n\t//else if($.id(\"sec_select\").value==\"wep\")\n\telse if($(\"#sec_select\").data(\"value\")==\"wep\")\n\t{\n\t\t//if(key.value.length!=5&&key.value.length!=13&&key.value.length!=16&&key.value.length!=10&&key.value.length!=26&&key.value.length!=32)\n\t\tif(keyvalue.length!=5&&keyvalue.length!=13&&keyvalue.length!=16&&keyvalue.length!=10&&keyvalue.length!=26&&keyvalue.length!=32)\n\t\t{\n\t\t\t$.alert(ERR_WLAN_WDS_ASCII_KEY_OUTRANGE);\n\t\t\tkey.focus();\n\t\t\tkey.select();\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//if(key.value.length==5||key.value.length==13||key.value.length==16)\n\t\t\tif(keyvalue.length==5||keyvalue.length==13||keyvalue.length==16)\n\t\t\t{\n\t\t\t\t//if($.asc(key.value,true))\n\t\t\t\tif($.asc(keyvalue,true))\n\t\t\t\t{\n\t\t\t\t\t$.alert(ERR_WLAN_WDS_ASCII_KEY_INVALID);\n\t\t\t\t\tkey.focus();\n\t\t\t\t\tkey.select();\n\t\t\t\t\treturn false;\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t//else if(key.value.length==10||key.value.length==26||key.value.length==32)\n\t\t\telse if(keyvalue.length==10||keyvalue.length==26||keyvalue.length==32)\n\t\t\t{\n\t\t\t\t//if(!isHex(key.value))\n\t\t\t\tif(!isHex(keyvalue))\n\t\t\t\t{\n\t\t\t\t\tkey.focus();\n\t\t\t\t\tkey.select();\n\t\t\t\t\treturn false;\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\t\t\n\t}\n\telse\n\t{\n\t\t//if(key.value.length>64||key.value.length<8)\n\t\tif(keyvalue.length>64||keyvalue.length<8)\n\t\t{\n\t\t\t$.alert(ERR_WLAN_WPA_PSK_LENGTH_INVALID);\n\t\t\tkey.focus();\n\t\t\tkey.select();\n\t\t\treturn false;\n\t\t}\n\t\t//else if(key.value.length==64)\n\t\telse if(keyvalue.length==64)\n\t\t{\n\t\t\t//if(!isHex(key.value))\n\t\t\tif(!isHex(keyvalue))\n\t\t\t{\n\t\t\t\tkey.focus();\n\t\t\t\tkey.select();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t//if($.asc(key.value,true))\n\t\t\tif($.asc(keyvalue,true))\n\t\t\t{\n\t\t\t\t$.alert(ERR_WLAN_WPA_PSK_ASCII_INVALID);\n\t\t\t\tkey.focus();\n\t\t\t\tkey.select();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\nfunction doExtendSubmit()\n{\n\tvar ssid = $.id(\"extssid\").value;\n\tvar apEn = $.id(\"apen\").checked ? 1 : 0;\n\n\tvar vapIndex =0;\n\t\n\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, [\"SSID=\" + ssid, \"Standard=\" + wlanObj.standard]);\n\n\t//if ($.id(\"sec_select\").value == \"none\")\n\tif ($(\"#sec_select\").data(\"value\") == \"none\")\n\t{\n\t\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, \n\t\t\t\t[\"BeaconType=Basic\", \"BasicEncryptionModes=None\", \"BasicAuthenticationMode=None\"]);\n\t}\n\t//else if ($.id(\"sec_select\").value == \"wep\")\n\telse if ($(\"#sec_select\").data(\"value\") == \"wep\")\n\t{\n\t\tvar wep_index=0;\n\t\tvar authType;\n\n\t\tauthType = \"Auto\";\n\t\t//wepKeyIdx = $.id(\"extWepidx\").value;\n\t\twepKeyIdx = $(\"#extWepidx\").data(\"value\");\n\n\t\t$.each(wepList,function(arg,index) {\n\t\t\tvar key;\n\t\t\t//if ($.id(\"extWepidx\").value != (index + 1))\n\t\t\tif ($(\"#extWepidx\").data(\"value\") != (++wep_index))\n\t\t\t{\n\t\t\t\tkey = \"\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//key = $.id(\"extKeyText\").value;\n\t\t\t\tkey = $(\"#extKeyText\").val();\n\t\t\t}\n\t\t\t\t\n\t\t\t$.act(ACT_SET, LAN_WLAN_WEPKEY, this.__stack, null, [\"WEPKey=\"+key]);\n\t\t});\t\t\n\n\t\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, \n\t\t\t\t[\"BeaconType=Basic\", \"WEPKeyIndex=\" + wepKeyIdx, \"BasicAuthenticationMode=\" + authType,\n\t\t\t\t\t\"BasicEncryptionModes=WEPEncryption\"]);\n\t}\n\t//else if($.id(\"sec_select\").value == \"wpa\")\n\telse if ($(\"#sec_select\").data(\"value\") == \"wpa\")\n\t{\n\t\tvar groupInterval = X_TP_GroupKeyUpdateInterval;\n\t\tvar encryType = \"AESEncryption\";\n\t\t/*\n\t\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, \n\t\t\t\t[\"BeaconType=WPAand11i\", \"WPAEncryptionModes=\" + encryType,\n\t\t\t\t\"WPAAuthenticationMode=PSKAuthentication\",\"IEEE11iAuthenticationMode=PSKAuthentication\",\n\t\t\t\t\"IEEE11iEncryptionModes=\" + encryType,\"X_TP_PreSharedKey=\" + $.id(\"extKeyText\").value,\n\t\t\t\t\"X_TP_GroupKeyUpdateInterval=\" + groupInterval]);\n\t\t*/\n\t\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, \n\t\t\t\t[\"BeaconType=WPAand11i\", \"WPAEncryptionModes=\" + encryType,\n\t\t\t\t\"WPAAuthenticationMode=PSKAuthentication\",\"IEEE11iAuthenticationMode=PSKAuthentication\",\n\t\t\t\t\"IEEE11iEncryptionModes=\" + encryType,\"X_TP_PreSharedKey=\" + $(\"#extKeyText\").val(),\n\t\t\t\t\"X_TP_GroupKeyUpdateInterval=\" + groupInterval]);\n\t}\n\t\n\t$.exe(function(ret)\n\t{\n\t\tif (!ret) \n\t\t{\n\t\t\t$.removeLoading();\n\t\t}\n\t\t\n\t\tif (srcPage)\n\t\t{\n\t\t\t$.loadMain(srcPage);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.reload();\n\t\t}\n\t});\n}\n\nfunction doExtendSave(obj)\n{\n\tif (false==$.id(\"apen\").checked || true==checkParam())\n\t{\n\t}\n\telse\n\t{\n\t\treturn;\n\t}\n\t\n\t$.addLoading(obj);\n\tdoExtendSubmit();\n}\n\nfunction doRegionSave(obj)\n{\n\t$.addLoading(obj);\n\n\t//if (INCLUDE_FORCE_REGION_SELECT && $.id(\"region\").value == -1)\n\tif (INCLUDE_FORCE_REGION_SELECT && $(\"#region\").data(\"value\") == -1)\n\t{\n\t\tif (typeof ERR_WLAN_REGION_IS_EMPTY == \"undefined\")\n\t\t\talert(\"Please Select the Region !\");\n\t\telse\n\t\t\t$.alert(ERR_WLAN_REGION_IS_EMPTY);\n\t\t\t\t\n\t\t//$.id(\"region\").focus();\n\t\t$(\"#region\").focus();\n\t\t\n\t\t$.removeLoading();\n\t\treturn false;\n\t}\n\n\t//var domain = regionCodeInfo[$.id(\"region\").value][1];\n\tvar domain = regionCodeInfo[$(\"#region\").data(\"value\")][1];\n\t\n\tif (wlanObj.regulatoryDomain != domain || \n\t\t\t(INCLUDE_FORCE_REGION_SELECT && wlanObj.X_TP_DomainSetByUser == 0))\n\t{\n\t\tif (INCLUDE_FORCE_REGION_SELECT)\n\t\t{\n\t\t\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, \n\t\t\t\t\t[\"X_TP_DomainSetByUser=1\", \"RegulatoryDomain=\" + domain]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.act(ACT_SET, LAN_WLAN, wlanObj.__stack, null, [\"RegulatoryDomain=\" + domain]);\n\t\t}\n\t\t$.exe(function(ret)\n\t\t{\n\t\t\tif (!ret) \n\t\t\t{\n\t\t\t\t$.removeLoading();\n\t\t\t}\n\t\t\t\n\t\t\tif (srcPage)\n\t\t\t{\n\t\t\t\t$.loadMain(srcPage);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$.reload();\n\t\t\t}\n\t\t});\n\t}\n\telse\n\t{\n\t\t$.removeLoading();\n\t}\n}\n\n\n$(\"#keyType\").on(\"click\", function(){\n\tif(first)\n\t{\n\t\tchangeConnSec();\n\t}\n\n});\n\n$(\"#host_re\").on(\"click\", function(){\n\tif(first)\n\t{\n\t\t//changeConnSec();\n\t\tchangeRadioCheckbox();\n\t}\n\n});\n\n$('#regionSave').on('click', function(e) {\n\tif(first)\n\t{\n\t\tdoRegionSave($(this));\n\t}\n});\n$('#connectSave').on('click', function(e) {\n\tif(first)\n\t{\n\t\tdoConnSave($(this));\n\t}\n});\n$('#extendSave').on('click', function(e) {\n\tif(first)\n\t{\n\t\tdoExtendSave($(this));\n\t}\n});\n\n\n</script>\n<!-- <h3 class=\"T_wl\">Wireless Settings</h3> -->\n<div id=\"wl_container\">\n\t<div id=\"div_wlanSetting\">\n\t<form id=\"form24G\" class=\"pure-form pure-form-aligned\">\n\t\t<div id=\"regionBox\" class=\"nd\">\n\t\t\t<h3 class=\"T_region\" >Region</h3>\n\t\t\t<div>\n\t\t\t\t<b class=\"T_region l\">Region</b> \n\t\t\t\t<select id=\"region\" name=\"region\" onclick=\"changeRegion();\"> \n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"item T T_warn\">Warning:</b>\t\n\t\t\t\t<span class=\"fl\" style=\"width:60%\">\n\t\t\t\t\t<span class=\"T\" id=\"t_warn1\">Ensure you select a correct country to conform local law.</span><br/>\n\t\t\t\t\t<span class=\"T\" id=\"t_warn2\">Incorrect settings may cause interference.</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<button type=\"submit\" class=\"green T_save\" id=\"regionSave\">Save</button>\n\t\t</div>\n\t\t<div id=\"hostNetworkBox\">\n\t\t\t<h3 class=\"T_connect\" id=\"t_connect\" >Connect to Host Network</h3>\n\t\t\t<div class = \"nd\">\n\t\t\t\t<b class=\"l T_host_net\">2.4GHz Network:</b>\n\t\t\t\t<input id=\"host_re\" type=\"checkbox\" />\n\t\t\t\t<label class=\"T\" id=\"t_enre\">Connect to 2.4GHz Network</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"T_t_brssid l\" id=\"t_brssid\">SSID(to be bridge):</b>\n\t\t\t\t<input type=\"text\" id=\"bridgeSSID\" maxlength=\"32\" class=\"xl\"/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"T_t_brbssid l\" id=\"t_brbssid\">MAC Address(to be bridged):</b>\n\t\t\t\t<input type=\"text\" id=\"bridgeBSSID\" maxlength=\"32\" class=\"xl\"/>\n\t\t\t</div>\n\t\t\t<div class=\"wl-scan\">\n\t\t\t\t<b class=\"l\" id=\"t_blank\"></b>\n\t\t\t\t<button type=\"submit\" class=\"green T_scan left\" id=\"Scan\" onclick=\"apScan(this);\">Scan</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"T_security l\">Security:</b>\n\t\t\t\t<select id=\"keyType\" name=\"keyType\" class=\"xl\">\n\t\t\t\t\t<option class=\"T T_noneEnc\" value=\"none\">No Security</option>\n\t\t\t\t\t<option value=\"wpa\">WPA-PSK</option>\n\t\t\t\t\t<option value=\"wpa2\">WPA2-PSK</option>\n\t\t\t\t\t<option value=\"wep\" selected>WEP</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div id=\"wpa_tkip_notice\">\n\t\t\t\t<b class=\"l\" id=\"t_blank\"></b>\n\t\t\t\t<span class=\"L fl warning\" id=\"t_tkip_notice\">\n\t\t\t\t\tWe do not recommend using the TKIP encryption if this device operates in 802.11n mode due to the fact that TKIP is not supported by 802.11n specification.\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div id=\"wep_security\"  class=\"nd\">\n\t\t\t\t<div id=\"t_wep_notice\" style=\"color:#C11C66\">\n\t\t\t\t\t<b class=\"l\" id=\"t_blank\"></b>\n\t\t\t\t\t<span style=\"white-space:normal;padding-left:60px\">We do not recommend using the WEP encryption if this device operates in 802.11n mode due to the fact that WEP is not supported by 802.11n specification.</span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"wepKeyIndex-ctn\">\n\t\t\t\t\t<b class=\"T_c_wepidx l\" id=\"t_wepidx\">WEP Index:</b>\n\t\t\t\t\t<select id=\"connWepidx\" name=\"connWepidx\" class=\"xl\">\n\t\t\t\t\t\t<option value=1>1</option>\n\t\t\t\t\t\t<option value=2>2</option>\n\t\t\t\t\t\t<option value=3>3</option>\n\t\t\t\t\t\t<option value=4>4</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"authType-ctn\">\n\t\t\t\t\t<b class=\"T_c_authtype l\">WEP Authentication Type:</b>\n\t\t\t\t\t <select id=\"authType\" name=\"authType\" class=\"xl\">\n\t\t\t\t\t\t<option class=\"T T_opensys\" value=\"open\">Open System</option>\n\t\t\t\t\t\t<option class=\"T T_sharekey\" value=\"shared\">Shared Key</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"\">\n\t\t\t\t\t<b class=\"T_weptype l\">WEP KeyFormat:</b>\n\t\t\t\t\t<select id=\"wepkeyFormat\" name=\"wepkeyFormat\" class=\"xl\">\n\t\t\t\t\t\t<option class=\"T T_ascii\" value=\"ascii\">ASCII</option>\n\t\t\t\t\t\t<option class=\"T T_hex\" value=\"hex\">Hexadecimal</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"password\">\n\t\t\t\t<b class=\"T_passwd l\">Password:</b>\n\t\t\t\t<input type=\"text\" id=\"connKeyText\" maxlength=\"64\" class=\"tp-input-text xl\"/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"l\" id=\"t_blank\"></b>\n\t\t\t\t<span class=\"L fl warning\" id=\"t_cpcfg_info\">\n\t\t\t\tThe configuration modified here will be automatically synchronized to the extended network settings.\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<button type=\"submit\" class=\"green T_save\" id=\"connectSave\">Save</button>\n\t\t</div>\n\t\t<div id=\"extenderNetworkBox\">\n\t\t\t<h3 class=\"T_connect\" id=\"t_extend\" >Extended Network Settings</h3>\n\t\t\t<div class=\"nd\">\n\t\t\t\t<b class=\"item T T_ext_net\">Extended 2.4GHz:</b>\n\t\t\t\t<input id=\"apen\" type=\"checkbox\"/>\n\t\t\t\t<label class=\"T\" id=\"t_enre\">Enable</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"l\" id=\"t_ext_ssid\">Extended 2.4GHz SSID:</b>\n\t\t\t\t<input type=\"text\" class=\"T xl\" size=\"24\" maxlength=\"32\" id=\"extssid\"/>\n\t\t\t</div>\n\t\t\t<div class=\"copy_line\">\n\t\t\t\t<b class=\"l\" id=\"t_blank\"></b>\n\t\t\t\t<button id=\"cpssid\" class=\"green l T_cpssid left\" type=\"submit\" onclick=\"copyHostSSID();\">Copy Host SSID</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"l\" id=\"t_ext_security\">Extended 2.4GHz Security:</b>\n\t\t\t\t<select id=\"sec_select\" name=\"sec_select\" class=\"xl\" onclick=\"changeSec();\">\n\t\t\t\t\t<option value=\"none\" class=\"T T_noneEnc\">No Security</option>\n\t\t\t\t\t<option value=\"wpa\" selected>WPA-PSK/WPA2-PSK</option>\n\t\t\t\t\t<option value=\"wep\">WEP</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<b class=\"l\" id=\"t_ext_password\">Extended 2.4GHz Password:</b>\n\t\t\t\t<input type=text class=\"T xl\" id=\"extKeyText\" size=\"24\" />\n\t\t\t</div>\n\t\t\t<div id=\"wep_idx\">\n\t\t\t\t<div>\n\t\t\t\t\t<b class=\"l\"></b>\n\t\t\t\t\t<span class=\"L fl warning\" id=\"t_ext_wep_notice\">\n\t\t\t\t\tWe do not recommend using the WEP encryption if this device operates in 802.11n mode due to the fact that WEP is not supported by 802.11n specification.\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<b class=\"l\" id=\"t_ext_wepidx\">Index:</b>\n\t\t\t\t\t<select id=\"extWepidx\" name=\"extWepidx\" class=\"xl\">\n\t\t\t\t\t\t<option value=\"1\" class=\"T T_idx1\" selected>1</option>\n\t\t\t\t\t\t<option value=\"2\" class=\"T T_idx2\">2</option>\n\t\t\t\t\t\t<option value=\"3\" class=\"T T_idx3\">3</option>\n\t\t\t\t\t\t<option value=\"4\" class=\"T T_idx4\">4</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button type=\"submit\" class=\"green T_save\" id=\"extendSave\">Save</button>\n\t\t\t<p class=\"br\"></p>\n\t\t\t<p class=\"br\"></p>\n\t\t\t<p class=\"br\"></p>\n\t\t\t<p class=\"br\"></p>\n\t\t</div>\n\t</form>\n\t</div>\n</div>\n<script language=\"javascript\" type=\"text/javascript\">\nvar srcPage = undefined;\nvar showRegion = 0;\nvar isChangeRegion = 0;\nvar wepKeyArray = new Array(4);\n\nvar wlanObj, wlan52Obj, wepList, wdsObj, wpsObj, qssEnable, isChangeRegion;\n\nvar basicList;\n\nif ($.mainParam) \n{\n\tif ($.mainParam == \"wlGuest.htm\")\n\t{\n\t\tsrcPage = \"wlGuest.htm\";\n\t\t$.mainParam = undefined;\n\t}\n}\n\nfunction init(){\n\tvar basicParams = [\n\t\t\t\"AutoChannelEnable\",\n\t\t\t\"BasicAuthenticationMode\",\n\t\t\t\"BasicEncryptionModes\",\n\t\t\t\"beaconType\",\n\t\t\t\"Channel\",\n\t\t\t\"Enable\",\n\t\t\t\"IEEE11iAuthenticationMode\",\n\t\t\t\"IEEE11iEncryptionModes\",\n\t\t\t\"name\",\n\t\t\t\"PossibleChannels\",\n\t\t\t\"RegulatoryDomain\",\n\t\t\t\"SSID\",\n\t\t\t\"SSIDAdvertisementEnabled\",\n\t\t\t\"Standard\",\n\t\t\t\"WMMEnable\",\n\t\t\t\"WPAAuthenticationMode\",\n\t\t\t\"WEPEncryptionLevel\",\n\t\t\t\"WPAEncryptionModes\",\n\t\t\t\"WEPKeyIndex\",\n\t\t\t\"X_TP_Bandwidth\",\n\t\t\t\"X_TP_Configuration_Modified\",\n\t\t\t\"X_TP_FragmentThreshold\",\n\t\t\t\"X_TP_GroupKeyUpdateInterval\",\n\t\t\t\"X_TP_PreSharedKey\",\n\t\t\t\"X_TP_RadiusServerIP\",\n\t\t\t\"X_TP_RadiusServerPassword\",\n\t\t\t\"X_TP_RadiusServerPort\",\n\t\t\t\"X_TP_ShowRegionSelectionOnWeb\"\n\t\t\t];\n\n\tif (INCLUDE_FORCE_REGION_SELECT)\n\t{\n\t\tbasicParams.push(\"X_TP_DomainSetByUser\");\n\t}\n\n\tif (INCLUDE_WLAN_REGION_LIST)\n\t{\n\t\tbasicParams.push(\"X_TP_SupportedRegionList\");\n\t}\n\t\n\tbasicList = $.act(ACT_GL, LAN_WLAN, null, null, basicParams);\n\n\tif(!$.exe())\n\t{\n\t\twlanObj = basicList[0];\n\t\twlan52Obj = basicList[1];\n\t\twepList = $.act(ACT_GL, LAN_WLAN_WEPKEY, null, wlanObj.__stack, [\"WEPKey\"]);\n\t\tshowRegion = wlanObj.X_TP_ShowRegionSelectionOnWeb;\n\t\t//showRegion = 1;\n\t}\n\n\tif(INCLUDE_LAN_WLAN_WDS)\n\t{\n\t\twdsObj = $.act(ACT_GET, LAN_WLAN_WDSBRIDGE, wlanObj.__stack, null, \n\t\t\t[\n\t\t\t\"BridgeAuthMode\",\n\t\t\t\"BridgeBSSID\",\n\t\t\t\"BridgeEnable\",\n\t\t\t\"BridgeEncryptMode\",\n\t\t\t\"BridgeKey\",\n\t\t\t\"BridgeSSID\",\n\t\t\t\"BridgeWepKeyIndex\"\n\t\t\t]);\n\t}\n\n\tinitRegionList();\n\t\n\tif(!$.exe())\n\t{\n\t\tinitParam();\n\t\tgetParam();\n\t\tinitShow();\n\t}\n}\n\n$(document).ready(function() {\n    $.tpInit(init);\n});\nfirst = 1;\n</script>\n\n"
      }
    }, {
      "location" : {
        "uri" : "jquery.tpRadio.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 44
      },
      "contents" : {
        "text" : "(function($) {\r\n    'use strict';\r\n\r\n    function TPRadio() {}\r\n\r\n    TPRadio.prototype = {\r\n        constructor: TPRadio,\r\n        instances: [],\r\n        init: function(id) {\r\n            var tag = '';\r\n            var self = this;\r\n            self.id = id;\r\n            self.$radio = $(\"#\" + id);\r\n\r\n            var divTmp = self.$radio.parent(\"div\").not(\".pure-control-group\");\r\n            var bTmp = $(divTmp).find(\"b\");\r\n            $(divTmp).addClass(\"pure-control-group\");\r\n            if ($(bTmp).attr('class') !== undefined) {\r\n                /*var tag = $(bTmp).attr('class').match(/\\b(T_|t_)(\\w+)\\b/);*/\r\n                tag = $(bTmp).attr('class');\r\n            }\r\n            $(bTmp).replaceWith(\"<label class='label-title\" + \" \" + tag + \"'>\" + $(bTmp).html() + \"</label>\");\r\n            var labelTmp = self.$radio.next(\"label:first\");\r\n            self.$radio.addClass(\"radio-radio\");\r\n            var str = \"<label class='radio-label \" + $(labelTmp).attr('class') + \"' for='\" + self.$radio.attr('id') + \"'>\";\r\n            str += \"<span class='icon'></span><span class='text'>\" + labelTmp.text() + \"</span></label>\";\r\n            self.$radio.next(\"label:first\").replaceWith(str);\r\n            self.$label = self.$radio.next(\"label:first\");\r\n\r\n            var errorTips = '<div class=\"widget-error-tips\" id=\"' + self.$radio.attr('id') + '_tips\">' +\r\n                '<div class=\"shadow-top-left\"></div>' +\r\n                '<div class=\"shadow-top\"></div>' +\r\n                '<div class=\"shadow-top-right\"></div>' +\r\n                '<div class=\"shadow-left\">' +\r\n                '<div class=\"shadow-right\">' +\r\n                '<span class=\"widget-error-tips-delta\"></span>' +\r\n                '<div class=\"widget-error-tips-wrap\">' +\r\n                '<div class=\"content error-tips-content\">' +\r\n                '<span id=\"' + self.$radio.attr('id') + '_tips_content\"></span>' +\r\n                '</div>' +\r\n                '</div>' +\r\n                '</div>' +\r\n                '</div>' +\r\n                '<div class=\"shadow-bot-left\"></div>' +\r\n                '<div class=\"shadow-bot\"></div>' +\r\n                '<div class=\"shadow-bot-right\"></div>' +\r\n                '</div>';\r\n            self.$label.append(errorTips);\r\n\r\n            self.refresh();\r\n        },\r\n        refresh: function() {\r\n            var self = this;\r\n            var radioText = self.$radio.next('label.radio-label').find('.text');\r\n            var radioIcon = self.$radio.next('label.radio-label').find('.icon');\r\n            radioText.addClass('span-click').removeClass('span-disable-click');\r\n            radioIcon.removeClass('radio-click').removeClass('radio-disable-unchecked').removeClass('radio-disable-click');\r\n            if (self.$radio.prop('disabled')) {\r\n                if (self.$radio.prop('checked') == true || self.$radio.prop('checked') == \"checked\") {\r\n                    radioText.addClass('span-disable-click');\r\n                    radioIcon.addClass('radio-disable-click');\r\n                } else {\r\n                    radioText.addClass('span-disable-click');\r\n                    radioIcon.addClass('radio-disable-unchecked');\r\n                }\r\n            } else {\r\n                self.registerHandlers();\r\n                if (self.$radio.prop('checked') == true || self.$radio.prop('checked') == \"checked\") {\r\n                    radioText.addClass('span-click');\r\n                    radioIcon.addClass('radio-click');\r\n                    self.$radio.click();\r\n                } else {\r\n                    radioText.removeClass('span-click');\r\n                    radioIcon.removeClass('radio-click');\r\n                }\r\n            }\r\n        },\r\n        registerHandlers: function() {\r\n            var self = this;\r\n            self.unregisterHandlers();\r\n            self.$label.on('mouseenter.tpRadio', function(e) {\r\n                self.labelMouseEnter(e);\r\n            });\r\n            self.$label.on('mouseleave.tpRadio', function(e) {\r\n                self.labelMouseLeave(e);\r\n            });\r\n            self.$label.on('click.tpRadio', function(e) {\r\n                self.labelClick(e);\r\n            });\r\n        },\r\n        labelMouseEnter: function() {\r\n            var self = this;\r\n            self.$label.find('.text').addClass('span-hover');\r\n            if (self.$label.prev('.radio-radio').prop('checked')) {\r\n                self.$label.find('.icon').removeClass('radio-click').addClass('radio-hover-checked');\r\n            } else {\r\n                self.$label.find('.icon').addClass('radio-hover-unchecked');\r\n            }\r\n        },\r\n        labelMouseLeave: function() {\r\n            var self = this;\r\n            if (self.$label.prev('.radio-radio').prop('checked')) {\r\n                self.$label.find('.icon').addClass('radio-click');\r\n            }\r\n            self.$label.find('.text').removeClass('span-hover');\r\n            self.$label.find('.icon').removeClass('radio-hover-checked')\r\n                .removeClass('radio-hover-unchecked');\r\n        },\r\n        labelClick: function(e) {\r\n            e.preventDefault();\r\n            var self = this;\r\n            if (self.$radio.prop('checked') == true || self.$radio.prop('checked') == \"checked\" || self.$radio.prop('disabled')) {\r\n                return;\r\n            }\r\n\r\n            // Get the checked radio with the same name but different id, remove its classes \r\n            var radioName = self.$label.prev('input[id=' + self.$label.prop('for') + ']').prop('name');\r\n\r\n            var checkedRadioLabel = $('input[name= ' + radioName + '][id!= ' + self.$label.prop('for') + ']:checked').next('.radio-label');\r\n            checkedRadioLabel.find('.text').removeClass('span-click');\r\n            checkedRadioLabel.find('.icon').removeClass('radio-click');\r\n\r\n            self.$label.find('.text').removeClass('span-hover')\r\n                .addClass('span-click');\r\n            self.$label.find('.icon').removeClass('radio-hover-checked')\r\n                .removeClass('radio-hover-unchecked')\r\n                .addClass('radio-click');\r\n\r\n            self.$radio.prop('checked', true);\r\n            self.$radio.click();\r\n        },\r\n        unregisterHandlers: function() {\r\n            var self = this;\r\n            self.$label.off('.tpRadio');\r\n        },\r\n        destroy: function() {\r\n            var self = this;\r\n            self.unregisterHandlers();\r\n            delete Object.getPrototypeOf(self).instances[self.id];\r\n            $(self).removeData('tpRadio');\r\n        }\r\n    };\r\n\r\n    $.fn.tpRadio = function(options) {\r\n        this.each(function() {\r\n            var tpradio = $(this).data('tpRadio');\r\n            if (!tpradio) {\r\n                var instance = new TPRadio();\r\n                $(this).data('tpRadio', instance);\r\n                instance.instances[this.id] = instance;\r\n                instance.init(this.id);\r\n            } else if (options === 'destroy' && tpradio) {\r\n                tpradio.destroy();\r\n            } else {\r\n                $(this).data('tpRadio').refresh();\r\n            }\r\n        });\r\n    };\r\n})(jQuery);\r\n"
      }
    }, {
      "location" : {
        "uri" : "jquery.tpSearchInput.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 45
      },
      "contents" : {
        "text" : "/**\r\n * Created by hewenlin on 2016/2/24.\r\n */\r\n(function($) {\r\n    function tpSearchInput(id, options) {\r\n        this.element = $('#' + id);\r\n        this.options = $.extend({}, tpSearchInput.prototype.options, options);\r\n        this._create(options);\r\n        if ($.isFunction(this._init)) {\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    tpSearchInput.prototype = {\r\n        constructor: tpSearchInput,\r\n        options: {\r\n            width: null,\r\n            placeholder: null,\r\n            searchButton: false,\r\n            data: [{\r\n                text: 'text',\r\n                value: {}\r\n            }, {\r\n                text: 'text2',\r\n                value: {}\r\n            },{\r\n                text: 'text3',\r\n                value: {}\r\n            },{\r\n                text: 'text4',\r\n                value: {}\r\n            },{\r\n                text: 'text5',\r\n                value: {}\r\n            },{\r\n                text: 'text6',\r\n                value: {}\r\n            },{\r\n                text: 'text7',\r\n                value: {}\r\n            },{\r\n                text: 'text8',\r\n                value: {}\r\n            },{\r\n                text: 'text9',\r\n                value: {}\r\n            },{\r\n                text: 'text10',\r\n                value: {}\r\n            }],\r\n            selectCallback: function(text, value) {\r\n                console.log(text, value)\r\n            }\r\n        },\r\n        _create: function() {\r\n            this.id = this.element.attr('id');\r\n            this.element.wrap('<div class=\"search-input-container\"></div>');         //输入框\r\n            this.wrapper = this.element.parent('div.search-input-container');        //全控件的包裹层\r\n            this.element.wrap('<div class=\"search-input-wrapper\"></div>');\r\n            if ($.isIE) {\r\n                this.element.after('<span class=\"corner-top-left\"></span><span class=\"corner-top-right\"></span><span class=\"corner-bot-left\"></span><span class=\"corner-bot-right\"></span>')\r\n            }\r\n            this.dropDownCon = $('<div class=\"search-input-drop-container\"><ul class=\"search-input-drop\"></ul></div>').appendTo(this.wrapper).hide();   //下拉列表的包裹层，用于控制显示隐藏\r\n            this.dropDown = this.dropDownCon.find('.search-input-drop');             //下拉列表的ul，添加条目，控制翻页等时会用到\r\n            this.dropDownDelta = $('<span class=\"search-input-drop-delta\">').appendTo(this.dropDownCon);   //下拉列表那个三角形。要控制它的位置使它在输入框的右侧\r\n            if (this.options.searchButton === true) {\r\n                //有按钮的逻辑是，只有点按钮才会弹出下拉列表\r\n                this.wrapper.append('<div class=\"search-input-button-container\"><span class=\"search-icon\"></span></div>').addClass('hasButton');\r\n                this.button = this.wrapper.find(\".search-input-button-container\");  //搜索按钮\r\n                this.element.addClass('hasButton');\r\n            } else {\r\n                //没按钮的话，显示的是一个背景图案。输入结果就出现下拉列表\r\n                this.wrapper.append('<div class=\"search-input-button-container\"><span class=\"search-icon\"></span></div>').addClass('hasSearchIcon');\r\n                this.button = this.wrapper.find(\".search-input-button-container\");  //搜索按钮\r\n                this.element.addClass('hasSearchIcon');\r\n            }\r\n            //添加hint，用于代替placeholder\r\n            this.hint = $('<span class=\"search-input-hint\"></span>').appendTo(this.wrapper).hide().css({\r\n                fontSize: this.element.css('fontSize'),\r\n                left: this.element.css('paddingLeft'),\r\n                height: this.element.css('height'),\r\n                lineHeight: this.element.css('height')\r\n            });\r\n\r\n            this._createList(this.options.data);\r\n            this._setOption('width', this.options.width || this.element.width());\r\n\r\n            this.options.placeholder = this.options.placeholder || this.element.attr('placeholder');\r\n            this._setOption('placeholder', this.options.placeholder);\r\n\r\n            var isIE8 = (document.createElement('input').placeholder === undefined);\r\n            if (isIE8 && this.options.placeholder && this.element.val() == '') {\r\n                this.hint.show()\r\n            }\r\n            this._registerHandler();\r\n        },\r\n\r\n        _createList: function(dataArray, clear) {\r\n            if (!$.isArray(dataArray)) {\r\n                return false;\r\n            }\r\n            var drop = this.dropDown;\r\n            if (clear === true) {\r\n                drop.empty();\r\n            }\r\n            for (var i = 0, len = dataArray.length; i < len; i++) {\r\n                $('<li>' + dataArray[i].text + '</li>').data('data', dataArray[i].value).appendTo(drop);\r\n            }\r\n//            $.each(dataArray, function(index, data) {\r\n//                console.log(data);\r\n//            })\r\n        },\r\n\r\n\r\n        _showRelativeItems: function() {\r\n            var me = this;\r\n            var inputValue = me.element.val();\r\n\r\n            //把输入的内容除数字字母下划线外的字符替换成转义字符后，如输入'ab#c*'会被替换成'ab\\#c\\*',生成一个正则表达式\r\n            var regex = new RegExp(inputValue.toLowerCase().replace(/([^\\w])/g, '\\\\$1'), 'i');\r\n            var items = me.dropDown.children();\r\n            var isEmpty = true;\r\n            for (var i = 0, len = items.length; i < len; i++) {\r\n                var tmpItem = items.eq(i);\r\n                var match;\r\n                if (!(match = regex.exec(tmpItem.text()))) {\r\n                    tmpItem.hide();\r\n                } else {\r\n                    isEmpty = false;\r\n                    //将匹配到的文本高亮\r\n                    tmpItem.html(match.input.replace(match[0], '<strong class=\"highlight\">' + match + '</strong>'));\r\n                    tmpItem.show();\r\n                }\r\n            }\r\n\r\n            if (isEmpty) {\r\n                me.dropDownCon.slideUp('fast');\r\n            } else {\r\n                me.dropDownCon.slideDown('fast');\r\n            }\r\n        },\r\n        _registerHandler: function() {\r\n            var me = this;\r\n            var isKeyBoard = false;\r\n            var isIE8 = (document.createElement('input').placeholder === undefined);\r\n//            var hide=function() {\r\n//                console.log('hide');\r\n//                me.dropDown.hide();\r\n//            };\r\n            this.element.on('blur.tpSearchInput', function() {\r\n                if (isIE8 && me.options.placeholder  && me.element.val() == '') {\r\n                    me.hint.show();\r\n                }\r\n            });\r\n\r\n            var _showDropDownList = function() {\r\n                me._showRelativeItems();\r\n\r\n                //点击除输入框外的地方时，隐藏输入框。点击列表的选项，事件会冒泡到这里。\r\n                $(document).off('click.tpSearchInput').on('click.tpSearchInput', function() {\r\n                    me.dropDownCon.slideUp('fast');\r\n//                    hide();\r\n                    $(document).off('click.tpSearchInput');\r\n                });\r\n\r\n            };\r\n\r\n            //获取焦点时，根据输入框当前的值显示相关选项\r\n            this.element.on('focus.tpSearchInput', function() {\r\n                if (isIE8 && me.options.placeholder) {\r\n                    me.hint.hide();\r\n                }\r\n                me.wrapper.addClass('focus');\r\n                if (me.options.searchButton !== true) {\r\n                    //如果有按钮，只有点击按钮才显示\r\n                    _showDropDownList();\r\n                }\r\n            }).on('blur.tpSearchInput', function() {\r\n                me.wrapper.removeClass('focus');\r\n            });\r\n\r\n            if (this.options.searchButton === true) {\r\n                this.button.on('click.tpSearchInput', function() {\r\n                    _showDropDownList();\r\n                    return false;\r\n\r\n                });\r\n            }\r\n            this.wrapper.on('mousemove.tpSearchInput', function() {\r\n                //当用键盘操作选中上下项时，如果触发了滚动，鼠标当前悬停的项会触发mouseenter，造成闪跳。避免此问题加入isKeyBoard记录当前是键盘操作。\r\n                isKeyBoard = false;\r\n            });\r\n\r\n            //获取键盘输入的值，控制上下键\r\n            var keyEventObj = this.options.searchButton === true ? window : this.element;\r\n\r\n            $(keyEventObj).off('keydown.' + this.id).on('keydown.' + this.id, function(e) {\r\n                if (e.keyCode === 38 || e.keyCode === 40) {\r\n                    isKeyBoard = true;\r\n                    e.preventDefault();\r\n\r\n                    var oldItem = me.dropDown.find('li.hover:visible');\r\n                    var newItem;\r\n\r\n                    //当有选项被选中时，选中它的邻近项\r\n                    if (oldItem.length > 0) {\r\n                        if (e.keyCode === 38) {\r\n                            //向上选\r\n                            newItem = oldItem.prevAll('li:visible:first');\r\n\r\n                        } else if (e.keyCode === 40) {\r\n                            //向下选\r\n                            newItem = oldItem.nextAll('li:visible:first');\r\n                        }\r\n                    } else {\r\n                        //选中第一项\r\n                        newItem = me.dropDown.find('li:visible:eq(0)');\r\n                    }\r\n\r\n                    if (newItem.length > 0) {\r\n                        me.dropDown.find('li.hover').removeClass('hover');\r\n                        newItem.addClass('hover');\r\n\r\n                        //新选项在显示区域外时，需要控制dropDown的滚动高度来使其显示。\r\n                        var nit = newItem.position().top; //newItemTop\r\n                        if (nit < 0) {\r\n                            //新选项在可见区域的上面\r\n                            me.dropDown[0].scrollTop = nit - me.dropDown.find('li:visible:first').position().top;\r\n                        } else if (nit > me.dropDown.height() - newItem.height()) {\r\n                            //新选项在可见区域的下面\r\n//                            console.log(newItem.height())\r\n                            //一定要获取可见项，隐藏项的top恒为0\r\n                            me.dropDown[0].scrollTop = nit - me.dropDown.find('li:visible:first').position().top - me.dropDown.height() + newItem.height();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            //获取键盘输入的值\r\n\r\n            $(keyEventObj).off('keyup.' + this.id).on('keyup.' + this.id, function(e) {\r\n                var key = $.code2key(e);\r\n                //通过键盘的上下键切换选项\r\n                if (key == 'enter') {\r\n                    //当用户按下回车键，触发被选中项的点击事件\r\n                    var selectItem;\r\n                    if (me.dropDownCon.is(':visible') && (selectItem = me.dropDown.find('li.hover:visible')) && selectItem.length > 0) {\r\n                        selectItem.click();\r\n                    } else if (me.element.is(':focus')){\r\n                        //当在输入框点击enter\r\n                        _showDropDownList();\r\n                    }\r\n\r\n                } else if(me.options.searchButton !== true){\r\n                    //其他输入时，根据当前的值显示相关条目\r\n                    _showDropDownList();\r\n                }\r\n            });\r\n\r\n            this.element.on('click.tpSearchInput', function(e) {\r\n                //阻止事件冒泡到document\r\n                e.stopPropagation();\r\n            });\r\n\r\n            //鼠标移动到选项上时，添加一个悬停样式\r\n            this.dropDown.on('mouseenter.tpSearchInput', 'li', function() {\r\n                if (!isKeyBoard) {\r\n                    me.dropDown.find('li.hover').removeClass('hover');\r\n                    $(this).addClass('hover');\r\n                }\r\n            });\r\n\r\n            //鼠标离开时移除样式\r\n            this.dropDown.on('mouseleave.tpSearchInput', 'li', function() {\r\n                $(this).removeClass('hover');\r\n            });\r\n\r\n            //点击选项时，把值填到输入框，触发selectCallback，同时事件冒泡到document，隐藏下拉列表\r\n            this.dropDown.on('click.tpSearchInput', 'li', function(e) {\r\n                e.stopPropagation();\r\n\r\n                var text = $(this).text();\r\n                var value = $(this).data('data');\r\n\r\n                me.val(text, value);\r\n\r\n                me.dropDownCon.slideUp('fast'); //不能靠冒泡到document来隐藏，否则连续用键盘操作的时候会有bug\r\n                $(document).off('click.tpSearchInput');\r\n            });\r\n\r\n        },\r\n\r\n        _unregisterHandlers: function() {\r\n            this.element.off('.tpSearchInput').off('.' + this.id);\r\n            this.dropDown.off('.tpSearchInput');\r\n            this.wrapper.off('.tpSearchInput');\r\n            this.button.off('.tpSearchInput');\r\n            $(window).off('.' + this.id);\r\n        },\r\n\r\n        setData: function(dataArray, clear) {\r\n            if (clear === true) {\r\n                this.options.data = dataArray;\r\n            } else {\r\n                this.options.data = this.options.data.concat(dataArray);\r\n            }\r\n\r\n            this._createList(this.options.data, clear);\r\n        },\r\n        _setOption: function(key, value) {\r\n            if (key == 'selectCallback') {\r\n                if ($.isFunction(value)) {\r\n                    this.options.selectCallback = value;\r\n                }\r\n            } else if (key == 'data') {\r\n                this.setData.apply(this, Array.prototype.slice.call(arguments, 1));\r\n            } else if (key == 'width') {\r\n                if (value !== null && value !== undefined) {\r\n                    this.options.width = value;\r\n                    this.element.css('width', value);\r\n                    this.dropDown.css('min-width', value);\r\n                    this.dropDownDelta.css('left', value - this.element.height() - this.dropDownDelta.width() / 2);\r\n                }\r\n            } else if(key == 'placeholder') {\r\n                if (value !== null && value !== undefined) {\r\n                    this.options.placeholder = value;\r\n                    this.hint.text(value);\r\n                    this.element.attr('placeholder', value);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        disabled: function(flag) {\r\n            this.element.prop('disabled', flag);\r\n        },\r\n        _destroy: function() {\r\n            this._unregisterHandlers();\r\n            this.dropDown.remove();\r\n            this.element.unwrap();\r\n        },\r\n        val: function(text, data) {\r\n            if (text !== undefined) {\r\n                this.element.val(text);\r\n                if (text) {   //此逻辑只在ie8下有意义\r\n                    this.hint.hide();\r\n                }\r\n            }\r\n\r\n            if (data) {\r\n                if ($.isFunction(this.options.selectCallback)) {\r\n                    this.options.selectCallback.call(this, text, data);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    $.fn.tpSearchInput = function(options) {\r\n        var arg = arguments;\r\n        var result;\r\n        this.each(function() {\r\n            var input = $(this).data('tpSearchInput');\r\n            if (!input) {\r\n                var instance = new tpSearchInput(this.id,  options);\r\n                $(this).data('tpSearchInput', instance);\r\n            } else if(options == 'option') {\r\n                result =  input._setOption.apply(input, Array.prototype.slice.call(arg, 1));\r\n            } else if(options == 'destroy') {\r\n                result =  input._destroy();\r\n                $(this).removeData('tpSearchInput');\r\n            } else if($.isFunction(input[options])) {\r\n                result =  input[options].apply(input, Array.prototype.slice.call(arg, 1));\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n})(jQuery);"
      }
    }, {
      "location" : {
        "uri" : "jquery.tpSelect.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 46
      },
      "contents" : {
        "text" : "(function($) {\r\n    'use strict';\r\n    $.fn.tpSelect = function(options) {\r\n        options = $.extend({\r\n            render: function(option) {\r\n                return $(\"<li data-val='\" + option.val() + \"'>\" + option.text() + \"</li>\");\r\n            },\r\n            className: '',\r\n            refresh: 0\r\n        }, options);\r\n\r\n        return this.each(function() {\r\n\r\n            var tpselect = $(this).data('tpSelect');\r\n            var keyboardControlFlag = false;\r\n            var namespace = options.namespace || 'tpSelect';\r\n            namespace = '.' + namespace;\r\n            if (!tpselect) {\r\n                $(this).data('tpSelect', this.id);\r\n\r\n            } else if (tpselect && options.refresh == 1) {\r\n                $('#' + '_' + this.id).remove();\r\n            } else {\r\n                return;\r\n            }\r\n\r\n            var select = $(this);\r\n            var bTmp = select.prev('b').hide();\r\n            var title = bTmp.html();\r\n            var bClass = bTmp.prop('class');\r\n\r\n            if (title) {\r\n                var str = '<label class=\"select-title\">' + title +\r\n                    '</label>&nbsp;<div class=\"tp-select\"><div class=\"select-box\"></div><div class=\"select-icon-container\"><span class=\"select-icon\"></span></div></div>';\r\n            } else {\r\n                var str = '<div class=\"tp-select\"><div class=\"select-box\"></div><div class=\"select-icon-container\"><span class=\"select-icon\"></span></div></div>';\r\n            }\r\n            var selectBoxContainer = $('<div>', {\r\n                /* class: 'select-container',*/\r\n                html: str\r\n            });\r\n            if ($.isIE) {\r\n                selectBoxContainer.find('.tp-select').append('<span class=\"corner-top-left\"></span><span class=\"corner-top-right\"></span><span class=\"corner-bot-left\"></span><span class=\"corner-bot-right\"></span>')\r\n            }\r\n            selectBoxContainer.addClass('select-container');\r\n            selectBoxContainer.prop('id', '_' + this.id);\r\n\r\n            /* add size class */\r\n            selectBoxContainer.addClass(select.prop('class'));\r\n            selectBoxContainer.find('label.select-title').addClass(bClass);\r\n\r\n            if (select.prop('disabled')) {\r\n                selectBoxContainer.addClass('disabled');\r\n            }\r\n            var dropDown = $('<ul>', {\r\n                /* class: 'dropDown'*/\r\n            });\r\n            dropDown.addClass('drop-down');\r\n\r\n            var selectBox = selectBoxContainer.find('.select-box');\r\n            var iconContainer = selectBoxContainer.find('.select-icon-container');\r\n\r\n            if (options.className) {\r\n                dropDown.addClass(options.className);\r\n            }\r\n\r\n            select.find('option').each(function(i) {\r\n                var option = $(this);\r\n\r\n                var li = options.render(option);\r\n\r\n                li.click(function() {\r\n\r\n                    selectBox.html(option.text());\r\n                    dropDown.trigger('hide');\r\n\r\n                    li.siblings('li').removeClass('selected');\r\n                    li.addClass('selected');\r\n\r\n                    // When a click occurs, we add selected option to select's data.\r\n                    if (select.data('value') === option.val()) {\r\n                        return;\r\n                    }\r\n                    select.data('value', option.val());\r\n                    select.data('text', option.text());\r\n                    defaultSelectItem = $(this);\r\n                    select.click();\r\n                    return false;\r\n                }).mouseenter(function() {\r\n                    if (keyboardControlFlag) {\r\n                        keyboardControlFlag = false;\r\n                    } else {\r\n                        dropDown.children('.hover').removeClass('hover');\r\n                        $(this).addClass('hover');\r\n                    }\r\n                }).mouseleave(function() {\r\n                    $(this).removeClass('hover');\r\n                });\r\n                if (i == select.prop('selectedIndex')) {\r\n                    selectBox.html(option.text());\r\n                    li.click();\r\n                }\r\n\r\n                // Skip the element, if it has 'skip' data.\r\n                if (option.data('skip')) {\r\n                    return true;\r\n                }\r\n\r\n                dropDown.append(li);\r\n            });\r\n            selectBoxContainer.find('.tp-select').append(dropDown.hide());\r\n            select.hide().after(selectBoxContainer);\r\n\r\n            //ban backspace\r\n            function banBackSpace(e) {\r\n                var ev = e || window.event;\r\n                var obj = ev.target || ev.srcElement;\r\n                var t = obj.type || obj.getAttribute('type');\r\n                var vReadOnly = obj.getAttribute('readonly');\r\n                var vEnable = obj.getAttribute('enabled');\r\n                vReadOnly = (vReadOnly === undefined) ? false : vReadOnly;\r\n                vEnable = (vEnable === undefined) ? true : vEnable;\r\n                var flag1 = (ev.keyCode == 8 && (t == 'password' || t == 'text' || t == 'textarea') && (vReadOnly == true || vEnable == true));\r\n                var flag2 = (ev.keyCode == 8 && t != 'password' && t != 'text' || t != 'textarea');\r\n                if (flag2 || flag1)\r\n                    return false;\r\n            }\r\n\r\n            //smart select\r\n            var selectStr = '';\r\n            var searchBar;\r\n            var defaultSelectItem = dropDown.children('.selected');\r\n            var selectItem;\r\n            var hasMatched = false;\r\n\r\n            function smartSelect(event) {\r\n                $(document).on('keypress' + namespace, banBackSpace).on('keydown' + namespace, banBackSpace);\r\n                $(window).on('keypress' + namespace, banBackSpace).on('keydown' + namespace, banBackSpace);\r\n                if (event === undefined) {\r\n                    selectStr = '';\r\n                    searchBar.text(selectStr);\r\n                } else {\r\n                    if ($.code2key(event) == 'back') {\r\n                        selectStr = selectStr.substr(0, selectStr.length - 1);\r\n                        searchBar.text(selectStr);\r\n                    } else if ($.code2key(event) == 'enter') {\r\n                        selectItem = dropDown.children('.hover').length > 0 ? dropDown.children('.hover') : defaultSelectItem;\r\n                        selectBox.html(selectItem.text());\r\n                        defaultSelectItem = selectItem;\r\n                        // When a click occurs, we add selected option to select's data.\r\n                        //                        if (select.data('value') === selectItem.attr('data-val')) {\r\n                        //                            return;\r\n                        //                        }\r\n                        select.data('value', selectItem.attr('data-val'));\r\n                        select.data('text', selectItem.text());\r\n                        select.click();\r\n                        dropDown.trigger('hide');\r\n                        return;\r\n                    } else if (event.keyCode === 38 || event.keyCode === 40) {\r\n                        keyboardControlFlag = true;\r\n\r\n                        //                        找到hover或selected\r\n                        var oldOne = dropDown.children('li.hover').length > 0 ? dropDown.children('li.hover') : dropDown.children('li.selected');\r\n                        var newOne;\r\n                        //                        如果旧项不是隐藏的，且是在展示列表的可见范围内的。选中它的上一项或下一项。否则直接选中可见列表的第一项\r\n                        if (oldOne.length > 0 && !oldOne.hasClass('nd') && oldOne.position().top < dropDown.height()) {\r\n\r\n                            if (event.keyCode === 38) {\r\n                                //                                不带nd的，不是最后一个节点（对父节点而言是第一个节点，但在prev中反过来），第一个节点\r\n                                newOne = oldOne.prevAll(':not(.nd):not(:last):first');\r\n                            } else if (event.keyCode === 40) {\r\n                                newOne = oldOne.nextAll(':not(.nd):first');\r\n                            }\r\n\r\n                            if (newOne.length > 0) {\r\n                                //                                影响变量selecteItem\r\n                                dropDown.children('.hover').removeClass('hover');\r\n                                newOne.addClass('hover');\r\n                                //                                影响样式\r\n                                //                              控制滚动条的位置。\r\n                                if (newOne.position().top < 0) {\r\n                                    dropDown.get(0).scrollTop = newOne.position().top - dropDown.children(':first').position().top;\r\n                                } else if (newOne.position().top > dropDown.height() - newOne.height()) {\r\n                                    dropDown.get(0).scrollTop = newOne.position().top - dropDown.children(':first').position().top - dropDown.height() + newOne.height();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            oldOne.removeClass('hover');\r\n                            dropDown.children(':not(.nd):eq(1)').addClass('hover');\r\n                        }\r\n                    } else {\r\n                        selectStr += $.code2key(event);\r\n                        searchBar.text(selectStr);\r\n                        //                        滚动条回到顶端\r\n                        dropDown.get(0).scrollTop = 0;\r\n                    }\r\n                }\r\n                var drop_children = dropDown.children();\r\n                var drop_children_show = [];\r\n                for (var i = 0; i < drop_children.length; i++) {\r\n                    var quote = /([^\\w])/g;\r\n                    var patternStr = selectStr.replace(quote, '\\\\$1');\r\n                    var regex = new RegExp(patternStr, 'g');\r\n                    var rs = regex.test(drop_children.eq(i).text().toUpperCase());\r\n                    if (!rs) {\r\n                        drop_children.eq(i).addClass('nd');\r\n                    } else {\r\n                        drop_children.eq(i).removeClass('nd');\r\n                        drop_children_show.push(drop_children.eq(i));\r\n                    }\r\n                    //                    drop_children.eq(i).removeClass('selected');\r\n                }\r\n\r\n            }\r\n\r\n            //select init\r\n\r\n            (function selectInit() {\r\n                searchBar = $('<li>', {\r\n                    html: ''\r\n                });\r\n                searchBar.css({\r\n                    'cursor': 'default',\r\n                    'border-bottom': '1px solid #ccc'\r\n                });\r\n                dropDown.children().eq(0).before(searchBar);\r\n                searchBar.mouseenter(function() {\r\n                    $(this).css({\r\n                        'background': '#fff',\r\n                        'color': '#4d4d4d'\r\n                    })\r\n                });\r\n                searchBar.click(function(e) {\r\n                    e.preventDefault();\r\n                    return false;\r\n                });\r\n            })();\r\n\r\n            function selectReset() {\r\n                searchBar.text('');\r\n                selectStr = '';\r\n                smartSelect();\r\n                $(document).off('keypress' + namespace, banBackSpace).off('keydown' + namespace, banBackSpace);\r\n                $(window).off('keypress' + namespace, banBackSpace).off('keydown' + namespace, banBackSpace);\r\n            }\r\n\r\n            //            var tips;\r\n            //            var lastDrop = dropDown.children().last();\r\n            //            dropDown.children().each(function () {\r\n            //                $(this).hover(\r\n            //                    function () {\r\n            //                        tips = $('<div>', {\r\n            //                            html: '<span class=\"widget-error-tips-delta\"></span>' +\r\n            //                                '<div class=\"widget-error-tips-wrap\">' +\r\n            //                                '<div class=\"content error-tips-content\">' +\r\n            //                                '<span >' + $(this).text() + '</span>' +\r\n            //                                '</div>' +\r\n            //                                '</div>',\r\n            //                            'class': 'widget-error-tips'\r\n            //                        })\r\n            //                        $(this).append(tips);\r\n            //                        if ($(this)[0] === lastDrop[0]) {\r\n            //                            dropDown.append($('li', {html: '1'}))\r\n            //                        }\r\n            //                        $('.widget-error-tips').toggle(\"slow\");\r\n            //                    },\r\n            //                    function () {\r\n            //                        if ($(this) === lastDrop) {\r\n            //                            dropDown.children().last().remove();\r\n            //                        }\r\n            //                        $('.widget-error-tips').remove();\r\n            //                    }\r\n            //                );\r\n            //            });\r\n            // Binding custom show and hide events on the dropDown:\r\n\r\n            dropDown.on('show', function() {\r\n                if (dropDown.is(':animated')) {\r\n                    return false;\r\n                }\r\n                selectBox.parent().addClass('expanded');\r\n                var maxHeight = $('#bot').offset().top - $(selectBox).offset().top - $(selectBox).height();\r\n                maxHeight = maxHeight < 240 ? maxHeight : 240;\r\n                dropDown.css('maxHeight', maxHeight);\r\n                dropDown.slideDown('fast', function() {\r\n                    // 滚动条到合适位置\r\n                    dropDown.get(0).scrollTop = tmp.position().top - dropDown.children(':first').position().top - dropDown.height() / 2;\r\n                });\r\n                var rows = dropDown.children('li');\r\n                rows.each(function() {\r\n                    if ($(this).height() > 40) {\r\n                        $(this).css('line-height', '20px');\r\n                    }\r\n                });\r\n                // 还原选中项的样式\r\n                dropDown.children().removeClass('selected');\r\n                var tmp = dropDown.children('[data-val=\"' + select.data('value') + '\"]').addClass('selected');\r\n\r\n                // 没找到的话默认为第一个\r\n                if (tmp.length === 0) {\r\n                    tmp = rows.eq(1);\r\n                }\r\n\r\n                $(document).on(\"keyup.tpSelect\", smartSelect);\r\n\r\n            }).on('hide', function() {\r\n                if (dropDown.is(':animated')) {\r\n                    return false;\r\n                }\r\n                selectBox.parent().removeClass('expanded');\r\n                dropDown.slideUp('fast');\r\n                $(document).off(\"keyup.tpSelect\", smartSelect);\r\n                selectReset();\r\n            }).on('toggle', function() {\r\n                if (selectBox.parent().hasClass('expanded')) {\r\n                    dropDown.trigger('hide');\r\n                } else {\r\n                    dropDown.trigger('show');\r\n                }\r\n            });\r\n\r\n            // Do not return, cuz if there are more than one select, click one, another should slide up.\r\n            selectBox.click(function() {\r\n                if (select.prop('disabled')) {\r\n                    return false;\r\n                }\r\n                dropDown.trigger('toggle');\r\n                //return false;\r\n            });\r\n\r\n            iconContainer.click(function() {\r\n                if (select.prop('disabled')) {\r\n                    return false;\r\n                }\r\n                dropDown.trigger('toggle');\r\n                //return false;\r\n            });\r\n\r\n            $(document).on('click' + namespace, function() {\r\n                dropDown.trigger('hide');\r\n                //unbind the keyboard event\r\n            });\r\n        });\r\n    }\r\n\r\n})(jQuery);\r\n"
      }
    }, {
      "location" : {
        "uri" : "stat.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 47
      },
      "contents" : {
        "text" : "<style>\r\n#chart-info {\r\n    line-height: 28px;\r\n    text-align: right;\r\n}\r\n#chart-info label {\r\n    display: inline-block;\r\n    width: 15px;\r\n    height:15px;\r\n    margin: 0 5px;\r\n}\r\n#down label {\r\n    background-color: #4ACBD6;\r\n}\r\n#up label {\r\n    background-color: #FFCB00;\r\n}\r\n</style>\r\n<script>\r\nfunction changeX(value) {\r\n    var result = value;\r\n    if (value >= 1024 * 1024 * 1024) {\r\n        result = (result / (1024 * 1024 * 1024)).toFixed(1) + \"G\";\r\n    } else if (value >= 1024 * 1024) {\r\n        result = (result / (1024 * 1024)).toFixed(1) + \"M\";\r\n    } else if (value >= 1024) {\r\n        result = (result / (1024)).toFixed(1) + \"K\";\r\n    }\r\n    return result.toFixed(1);\r\n}\r\n\r\nfunction changeY(value) {\r\n    var result = parseInt(value);\r\n    if (value >= 1000 * 1000 * 1000) {\r\n        result = (result / (1000 * 1000 * 1000)).toFixed(1) + \"G\";\r\n    } else if (value >= 1000 * 1000) {\r\n        result = (result / (1000 * 1000)).toFixed(1) + \"M\";\r\n    } else if (value >= 1000) {\r\n        result = (result / (1000)).toFixed(1) + \"K\";\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction initChart(interval, data) {\r\n    var label = [],\r\n        dataUp = [],\r\n        dataDown = [],\r\n        length = data.length,\r\n        daysCount = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    var time = $.act(ACT_GET, HOUR, null, null, [\"year\", \"month\", \"day\", \"hours\", \"minutes\"]);\r\n    if (!$.exe()) {\r\n        var tmpHour = parseInt(time.hours, 10),\r\n            tmpMinute = parseInt(time.minutes, 10),\r\n            tmpYear = parseInt(time.year, 10),\r\n            tmpMonth = parseInt(time.month, 10),\r\n            tmpDay = parseInt(time.day, 10);\r\n        var hour, minute, year, month, day;\r\n        if ((tmpYear % 400 == 0) || (tmpYear % 400 != 0 && tmpYear % 4 == 0)) {\r\n            daysCount[1] = 29;\r\n        }\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (interval == \"Hor\") {\r\n                hour = tmpHour - length + 1 + i;\r\n                if (hour < 0) {\r\n                    hour = hour + 24;\r\n                }\r\n                hour = hour < 10 ? ('0' + hour) : hour;\r\n                label.push(hour + ':00');\r\n                dataUp.push(data[i].ups / 3600);\r\n                dataDown.push(data[i].downs / 3600);\r\n            } else if (interval == \"Min\") {\r\n                minute = tmpMinute - length + 1 + i;\r\n                if (minute < 0) {\r\n                    minute = minute + 60;\r\n                    hour = (tmpHour == 0) ? 23 : tmpHour - 1;\r\n                } else {\r\n                    hour = tmpHour;\r\n                }\r\n                hour = hour < 10 ? ('0' + hour) : hour;\r\n                minute = minute < 10 ? ('0' + minute) : minute;\r\n                label.push(hour + \":\" + minute);\r\n                dataUp.push(data[i].ups / 60);\r\n                dataDown.push(data[i].downs / 60);\r\n            } else {\r\n                day = tmpDay - length + 1 + i;\r\n                if (day <= 0) {\r\n                    if (tmpMonth == 1) {\r\n                        month = 12;\r\n                        year = tmpYear - 1;\r\n                        day = day + daysCount[month - 1];\r\n                    } else {\r\n                        month = tmpMonth - 1;\r\n                        year = tmpYear;\r\n                        day = day + daysCount[month - 1];\r\n                    }\r\n                } else {\r\n                    month = tmpMonth;\r\n                    year = tmpYear;\r\n                }\r\n                month = month < 10 ? '0' + month : month;\r\n                day = day < 10 ? '0' + day : day;\r\n                label.push([month, day, year].join('.'));\r\n                dataUp.push(data[i].ups / 86400);\r\n                dataDown.push(data[i].downs / 86400);\r\n            }\r\n\r\n        }\r\n        var lineChartData = {\r\n            labels: label,\r\n            datasets: [{\r\n                label: $.tpLang.stat_nstr.t_downstream,\r\n                fillColor: \"rgba(74,203,214,0.2)\",\r\n                strokeColor: \"rgba(74,203,214,1)\",\r\n                pointColor: \"rgba(74,203,214,1)\",\r\n                pointStrokeColor: \"rgba(74,203,214,0.1)\",\r\n                pointHighlightFill: \"#fff\",\r\n                pointHighlightStroke: \"rgba(74,203,214,1)\",\r\n                data: dataDown\r\n            }, {\r\n                label: $.tpLang.stat_nstr.t_upstream,\r\n                fillColor: \"rgba(255,203,0,0.2)\",\r\n                strokeColor: \"rgba(255,203,0,1)\",\r\n                pointColor: \"rgba(255,203,0,1)\",\r\n                pointStrokeColor: \"rgba(255,203,0,0.1)\",\r\n                pointHighlightFill: \"#fff\",\r\n                pointHighlightStroke: \"rgba(255,203,0,1)\",\r\n                data: dataUp\r\n            }]\r\n\r\n        };\r\n        var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\r\n        if (!window.myLine) {\r\n            window.myLine = new Chart(ctx).Line(lineChartData, {\r\n                responsive: true,\r\n                animation: false,\r\n                scaleLabel: \"<%=changeY(value)%>B\",\r\n                scaleLineColor:\"#cccccc\",\r\n                scaleGridLineColor:\"#cccccc\",\r\n                pointDotRadius: 5,\r\n                pointDotStrokeWidth: 2,\r\n                bezierCurveTension: 0,\r\n                multiTooltipTemplate: \"<%= changeX(value)%>B/s\",\r\n                tooltipFillColor:\"rgba(54,68,75,0.9)\",\r\n                legendTemplate: \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><p><%if(datasets[i].label){%><%=datasets[i].label%><%}%></p></li><%}%></ul>\"\r\n            });\r\n        } else {\r\n            window.myLine.initialize(lineChartData);\r\n        }\r\n    }\r\n}\r\n</script>\r\n<h3 id='t_trafficMonitor'>Traffic Monitor</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <div class=\"button-group-container\">\r\n            <b id='t_trafficMonitorEn'>Traffic Monitor:</b>\r\n            <ul>\r\n                <li>\r\n                    <button id=\"t_on\" class=\"fst\" value=\"on\">On</button>\r\n                </li>\r\n                <li>\r\n                    <button id=\"t_off\" class=\"lst\" value=\"off\">Off</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div>\r\n            <p id='t_switchNote' class='nd'></p>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div class=\"content-container\" id='traffic-chart'>\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <div>\r\n            <span id='usage-contianer' style='display:inline-block;width:250px'>\r\n                <label id='t_devUsage' class='xl'>The Traffic Usage of1</label>\r\n                <span id='deviceName'></span>\r\n            </span>\r\n            <select id=\"device\" class=\"inline\"></select>\r\n            <select id=\"interval\" class=\"inline\">\r\n                <option value=\"Day\" id='t_daily'></option>\r\n                <option value=\"Hor\" id='t_hourly'></option>\r\n                <option value=\"Min\" id='t_Minutely'></option>\r\n            </select>\r\n        </div>\r\n        <div id=\"chart\">\r\n            <div id='canvas-container'>\r\n            </div>\r\n        </div>\r\n        <div id='chart-info'>\r\n            <span id='down'>\r\n                <label></label>\r\n                <span id='t_downstream'></span>\r\n            </span>\r\n            <span id='up'>\r\n                <label></label>\r\n                <span id='t_upstream'></span>\r\n            </span>\r\n        </div>\r\n    </form>\r\n</div>\r\n<h3 id=\"t_monitorList\">Traffic Statistics List</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <div class=\"table-op\" id=\"addItem\">\r\n            <div class=\"table-btn\">\r\n                <span id=\"freshAll\" class=\"refresh-icon\"></span>\r\n                <label class=\"T_refresh\">Refresh</label>\r\n                <span id=\"resetAll\" class=\"reset-icon\"></span>\r\n                <label class=\"T_cleanAllRecord\">Reset</label>\r\n            </div>\r\n        </div>\r\n        <table id=\"traffic-stat\">\r\n            <thead></thead>\r\n            <tbody></tbody>\r\n        </table>\r\n    </form>\r\n</div>\r\n<script type=\"text/javascript\">\r\nvar canvas = document.createElement('canvas');\r\ncanvas.id = 'canvas';\r\ndocument.getElementById('canvas-container').appendChild(canvas);\r\nif (!canvas.getContext) {\r\n    G_vmlCanvasManager.initElement(canvas);\r\n}\r\nwindow.myLine = null;\r\n\r\nvar trafficIntervalId,\r\n    listIntervalId;\r\nclearTimeout(trafficIntervalId);\r\nclearTimeout(listIntervalId);\r\n\r\nfunction init() {\r\n    var statCfg = $.act(ACT_GET, STAT_CFG, null, null);\r\n    var recordCfg = $.act(ACT_GET, RECORD_CFG, null, null);\r\n    var deviceList = $.act(ACT_GL, STAT_ENTRY, null, null);\r\n\r\n    if (!$.exe()) {\r\n        if (statCfg.enable == 1) {\r\n            $(\"#t_on\").addClass('selected');\r\n            $(\"#t_off\").removeClass('selected');\r\n            var deviceOpt = '<option value=\"1\" id=\"t_allDev\">' + $.tpLang.stat_nstr.t_allDev + '</option>';\r\n            for (var i = 0; i < deviceList.length; i++) {\r\n                deviceOpt += '<option value=\"' + deviceList[i].hostName + '\">' + deviceList[i].hostName + '</option>';\r\n            }\r\n            if (recordCfg.allDevices != 1) {\r\n                $('#interval').html('<option value=\"Min\" id=\"t_Minutely\">' + $.tpLang.stat_nstr.t_Minutely + '</option>');\r\n            }\r\n            $('#device').append(deviceOpt);\r\n            $('#device').attr('value', recordCfg.allDevices == '1' ? recordCfg.allDevices : recordCfg.hostName);\r\n            if ($('#device').val() == 1) {\r\n                $('#deviceName').html($.tpLang.stat_nstr.t_allDev + ':');\r\n            } else {\r\n                $('#deviceName').html($('#device').val() + ':');\r\n            }\r\n            $('#interval').attr('value', recordCfg.recordInterval);\r\n            $('#traffic-chart').removeClass('nd');\r\n            var statRecord = $.act(ACT_GL, RECORD_ENTRY, null, null);\r\n            var recordCfg = $.act(ACT_GET, RECORD_CFG, null, null);\r\n            if (!$.exe()) {\r\n                initChart(recordCfg.recordInterval, statRecord);\r\n            }\r\n        } else {\r\n            $('#t_switchNote').removeClass('nd');\r\n            $(\"#t_on\").removeClass('selected');\r\n            $(\"#t_off\").addClass('selected');\r\n            $('#traffic-chart').addClass('nd');\r\n        }\r\n        initMonitorList(deviceList);\r\n\r\n        function redrawChart() {\r\n            if ($.curPage !== 'stat.htm') {\r\n                return;\r\n            }\r\n            var statRecord = $.act(ACT_GL, RECORD_ENTRY, null, null);\r\n            if (!$.exe()) {\r\n                try {\r\n                    initChart(recordCfg.recordInterval, statRecord);\r\n                } catch (ex) {\r\n                    return;\r\n                }\r\n                trafficIntervalId = setTimeout(redrawChart, 10000);\r\n            }\r\n        }\r\n        if (statCfg.enable == 1 && recordCfg.recordInterval == 'Min') {\r\n            trafficIntervalId = setTimeout(redrawChart, 10000);\r\n        }\r\n    }\r\n}\r\n\r\nfunction changeUnit(val) {\r\n    if (val >= 1024 * 1024 * 1024) {\r\n        return (val / (1024 * 1024 * 1024)).toFixed(3) + \"G\";\r\n    } else if (val >= 1024 * 1024) {\r\n        return (val / (1024 * 1024)).toFixed(3) + \"M\";\r\n    } else if (val >= 1024) {\r\n        return (val / 1024).toFixed(3) + \"K\";\r\n    } else {\r\n        return val;\r\n    }\r\n}\r\n\r\nfunction initMonitorList(record) {\r\n    var array = [];\r\n    for (var i = 0; i < record.length; i++) {\r\n        array.push([{\r\n            \"text\": record[i].hostType == 'wired' ? table_str.wired : (record[i].hostType == '2.4g' ? table_str.type24g : table_str.type5g),\r\n            \"width\": '20%',\r\n        }, {\r\n            \"text\": record[i].hostName,\r\n            \"width\": '20%',\r\n        }, {\r\n            \"text\": record[i].macAddress.split(':').join('-'),\r\n            \"width\": '20%'\r\n        }, {\r\n            \"text\": '<span>' + changeUnit(record[i].currBytesTx) + 'B/s↑</br>' + changeUnit(record[i].currBytesRx) + 'B/s↓</span>',\r\n            \"width\": '20%'\r\n        }, {\r\n            \"text\": changeUnit(parseInt(record[i].totalBytesRx) + parseInt(record[i].totalBytesTx)),\r\n            \"width\": '20%'\r\n        }]);\r\n    }\r\n\r\n    $.initTableBody($(\"#traffic-stat\"), array);\r\n}\r\nvar headArray = [{\r\n    \"text\": ' ',\r\n    \"width\": \"20%\"\r\n}, {\r\n    \"text\": table_str.devName,\r\n    \"width\": \"20%\"\r\n}, {\r\n    \"text\": table_str.mac,\r\n    \"width\": \"20%\"\r\n}, {\r\n    \"text\": table_str.realRate,\r\n    \"width\": \"20%\"\r\n}, {\r\n    \"text\": table_str.usage,\r\n    \"width\": \"20%\"\r\n}];\r\n$.initTableHead($(\"#traffic-stat\"), headArray);\r\n$(\"#traffic-stat\").tpTable();\r\n$.tpInit(init);\r\n\r\n$(\"#t_on\").click(function() {\r\n    $.act(ACT_SET, STAT_CFG, null, null, [\"Enable=1\"]);\r\n    if (!$.exe()) {\r\n        $.reload();\r\n    }\r\n});\r\n$(\"#t_off\").click(function() {\r\n    $.act(ACT_SET, STAT_CFG, null, null, [\"Enable=0\"]);\r\n    if (!$.exe()) {\r\n        $.reload();\r\n    }\r\n});\r\n$('#device').click(function(e) {\r\n    if ($('#device').data('value') == 1) {\r\n        var recordCfg = $.act(ACT_SET, RECORD_CFG, null, null, ['allDevices=1', 'recordInterval=' + $('#interval').data('value')]);\r\n    } else {\r\n        var recordCfg = $.act(ACT_SET, RECORD_CFG, null, null, ['allDevices=0', 'hostName=' + $('#device').data('value'), 'recordInterval=Min']);\r\n    }\r\n    if (!$.exe()) {\r\n        $.reload();\r\n    }\r\n});\r\n$('#interval').click(function(e) {\r\n    if ($('#device').data('value') == 1) {\r\n        var recordCfg = $.act(ACT_SET, RECORD_CFG, null, null, ['allDevices=1', 'recordInterval=' + $('#interval').data('value')]);\r\n    } else {\r\n        var recordCfg = $.act(ACT_SET, RECORD_CFG, null, null, ['allDevices=0', 'hostName=' + $('#device').data('value'), 'recordInterval=Min']);\r\n    }\r\n    if (!$.exe()) {\r\n        $.reload();\r\n    }\r\n});\r\n$('#freshAll').click(function(e) {\r\n    var deviceList = $.act(ACT_GL, STAT_ENTRY, null, null);\r\n    if (!$.exe()) {\r\n        initMonitorList(deviceList);\r\n    }\r\n});\r\n$(\"#resetAll\").click(function() {\r\n    $.act(ACT_SET, STAT_CFG, null, null, [\"action=1\"]);\r\n    $.exe(function(ret) {\r\n        if (!ret) $.reload();\r\n    });\r\n});\r\n\r\nfunction refreshList() {\r\n    if ($.curPage !== 'stat.htm') {\r\n        return;\r\n    }\r\n    var deviceList = $.act(ACT_GL, STAT_ENTRY, null, null);\r\n    if (!$.exe()) {\r\n        initMonitorList(deviceList);\r\n    }\r\n    listIntervalId = setTimeout(refreshList, 10000);\r\n}\r\nlistIntervalId = setTimeout(refreshList, 10000);\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "time.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 48
      },
      "contents" : {
        "text" : "<script type=\"text/javascript\">\r\nvar daysPerWeek = 7;\r\nvar first = 0;\r\nvar IS_SHOW_REGION = INCLUDE_WEB_REGION && 0; //1.0里region的显示由INCLUDE_WEB_REGION控制，2.0改为都不显示，而在快速设置中设置\r\nfunction addAttrs() {\r\n    var element;\r\n    var dateArray = $(\"#date\").prop('value').split('/');\r\n\r\n    var time = {};\r\n    var hour = {};\r\n\r\n    hour.year = dateArray[2];\r\n    hour.month = INCLUDE_DAY_MONTH_YEAR ? dateArray[1] : dateArray[0];\r\n    hour.day = INCLUDE_DAY_MONTH_YEAR ? dateArray[0] : dateArray[1];\r\n    hour.hours = parseInt($(\"#hour\").data('value'), 10);\r\n    hour.minutes = parseInt($(\"#minute\").data('value'), 10);\r\n    hour.seconds = parseInt($(\"#second\").data('value'), 10);\r\n    time.NTPServer1 = $(\"#ntpA\").prop('value');\r\n    time.NTPServer2 = $(\"#ntpB\").prop('value');\r\n\r\n    if ((hour.year === \"\") || ($.num(hour.year, [1970, 2037], true))) {\r\n        $.alert(ERR_TIME_YEAR_INVAD);\r\n        element = $(\"#date\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    if ((hour.month === \"\") || ($.num(hour.month, [1, 12], true))) {\r\n        $.alert(ERR_TIME_MONTH_INVAD);\r\n        element = $(\"#date\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    if ((hour.day === \"\") || ($.num(hour.day, [1, 31], true))) {\r\n        $.alert(ERR_TIME_DAY_INVAD);\r\n        element = $(\"#date\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    if ((hour.hours === \"\") || ($.num(hour.hours, [0, 23], true))) {\r\n        $.alert(ERR_TIME_HOUR_INVAD);\r\n        element = $(\"#hour\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    if ((hour.minutes === \"\") || ($.num(hour.minutes, [0, 60], true))) {\r\n        $.alert(ERR_TIME_MINUTE_INVAD);\r\n        element = $(\"#minute\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    if ((hour.seconds === \"\") || ($.num(hour.seconds, [0, 60], true))) {\r\n        $.alert(ERR_TIME_SECOND_INVAD);\r\n        element = $(\"#second\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    if ((time.NTPServer1 !== \"\") && (!$.isdomain(time.NTPServer1))) {\r\n        $.alert(ERR_TIME_NTP_SERVER);\r\n        element = $(\"#ntpA\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    if ((time.NTPServer2 !== \"\") && (!$.isdomain(time.NTPServer2))) {\r\n        $.alert(ERR_TIME_NTP_SERVER);\r\n        element = $(\"#ntpB\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return false;\r\n    }\r\n    return [hour, time];\r\n}\r\n\r\nfunction getStatus() {\r\n    var getgmtStr = s_str.getgmt;\r\n    var gmtfailStr = s_str.gmtfail;\r\n    $(\"#GetTime\").prop(\"disabled\", true);\r\n    $.auto(function() {\r\n        var timeobj = $.act(ACT_GET, TIME, null, null, [\"__status\"]);\r\n        if (!$.exe()) {\r\n            if (timeobj.__status == 1) $(\"#t_status\").html('<span>' + getgmtStr + '</span>');\r\n            else if (timeobj.__status == 2) $.reload();\r\n            else if (timeobj.__status == 3) {\r\n                $(\"#t_status\").html('<span>' + gmtfailStr + '</span>');\r\n                $(\"#GetTime\").prop(\"disabled\", false);\r\n            }\r\n        }\r\n    }, 1000);\r\n}\r\n\r\nfunction checkDstDate() {\r\n    var dstStartString = $(\"#dst_start_month\").prop('value') + $(\"#dst_start_weekCount\").prop('value') + $(\"#dst_start_weekDay\").prop('value') + $(\"#dst_start_time\").prop('value');\r\n    var dstEndString = $(\"#dst_end_month\").prop('value') + $(\"#dst_end_weekCount\").prop('value') + $(\"#dst_end_weekDay\").prop('value') + $(\"#dst_end_time\").prop('value');\r\n    var dateArray = $(\"#date\").prop('value').split('/');\r\n    $(\"#dst_start_year\").html(dateArray[2]);\r\n    if (dstStartString > dstEndString) {\r\n        var endYear = parseInt(dateArray[2], 10) + 1;\r\n        $(\"#dst_end_year\").html(endYear);\r\n    } else {\r\n        var endYear = parseInt(dateArray[2], 10);\r\n        $(\"#dst_end_year\").html(endYear);\r\n    }\r\n}\r\n\r\nfunction initRegionList() {\r\n    var regions = $(\"#region\");\r\n    for (var i = 0; i < regionCodeInfo.length; i++) {\r\n        regions.append(\"<option value='\" + i + \"'>\" + regionCodeInfo[i][4] + \"</option>\");\r\n    }\r\n}\r\n\r\nfunction saveWlanRegion() {\r\n    var wlanObj = {};\r\n    var localObj = {};\r\n    for (var i = 0; i < regionCodeInfo.length; i++) {\r\n        if ($(\"#region\").data('text') == regionCodeInfo[i][4]) {\r\n            break;\r\n        }\r\n    }\r\n    if (i >= regionCodeInfo.length) {\r\n        return;\r\n    }\r\n\r\n    localObj.country = regionCodeInfo[i][1].substring(0, 2);\r\n\r\n    $.act(ACT_SET, LOCAL, null, null, localObj);\r\n}\r\n\r\nfunction doEnableDst() {\r\n    if ($(\"#enableDST\").prop(\"checked\") == true) {\r\n        $(\"#dst_start_month\").prop(\"disabled\", false);\r\n        $(\"#dst_start_weekCount\").prop(\"disabled\", false);\r\n        $(\"#dst_start_weekDay\").prop(\"disabled\", false);\r\n        $(\"#dst_start_time\").prop(\"disabled\", false);\r\n\r\n        $(\"#dst_end_month\").prop(\"disabled\", false);\r\n        $(\"#dst_end_weekCount\").prop(\"disabled\", false);\r\n        $(\"#dst_end_weekDay\").prop(\"disabled\", false);\r\n        $(\"#dst_end_time\").prop(\"disabled\", false);\r\n    } else {\r\n        $(\"#dst_start_month\").prop(\"disabled\", true);\r\n        $(\"#dst_start_weekCount\").prop(\"disabled\", true);\r\n        $(\"#dst_start_weekDay\").prop(\"disabled\", true);\r\n        $(\"#dst_start_time\").prop(\"disabled\", true);\r\n\r\n        $(\"#dst_end_month\").prop(\"disabled\", true);\r\n        $(\"#dst_end_weekCount\").prop(\"disabled\", true);\r\n        $(\"#dst_end_weekDay\").prop(\"disabled\", true);\r\n        $(\"#dst_end_time\").prop(\"disabled\", true);\r\n    }\r\n}\r\n\r\nfunction isLeapYear(year) {\r\n    return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0))\r\n}\r\n\r\nfunction isValidDate(year, mon, date) {\r\n    var daysPerMonth = new Array(31, 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);\r\n\r\n    daysPerMonth[1] = isLeapYear(year) ? 29 : 28;\r\n\r\n    return (date <= daysPerMonth[mon]);\r\n}\r\n\r\nfunction getMday(year, mon, weekCnt, wDay) {\r\n    var ret = 0;\r\n    var dateTmp;\r\n    wDay = (wDay + 1) % daysPerWeek;\r\n    dateTmp = new Date(year, mon, 1);\r\n    firstWday = parseInt(dateTmp.getDay(), 10);\r\n\r\n    ret = weekCnt * daysPerWeek + wDay - firstWday + 1;\r\n    if (wDay < firstWday)\r\n        ret = ret + daysPerWeek;\r\n\r\n    if (weekCnt == 4 && !isValidDate(year, mon, ret)) {\r\n        ret = ret - daysPerWeek;\r\n    }\r\n\r\n    if (ret < 10) {\r\n        ret = \"0\" + ret;\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction isEastEarthTime() {\r\n    var now = new Date();\r\n    var timeZone = now.getTimezoneOffset();\r\n    if (timeZone < 0) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction isDayLightTime() {\r\n    var now = new Date();\r\n    var start = new Date();\r\n    var margin = 0;\r\n\r\n    start.setMonth(0);\r\n    start.setDate(1);\r\n    start.setHours(0);\r\n    start.setMinutes(0);\r\n    start.setSeconds(0);\r\n\r\n    var middle = new Date(start.getTime());\r\n    middle.setMonth(6);\r\n\r\n    if ((middle.getTimezoneOffset() - start.getTimezoneOffset()) == 0) {\r\n        return false;\r\n    }\r\n\r\n    if (true == isEastEarthTime()) {\r\n        margin = Math.abs(start.getTimezoneOffset()) > Math.abs(middle.getTimezoneOffset()) ? start.getTimezoneOffset() : middle.getTimezoneOffset();\r\n    } else {\r\n        margin = Math.abs(start.getTimezoneOffset()) < Math.abs(middle.getTimezoneOffset()) ? start.getTimezoneOffset() : middle.getTimezoneOffset();\r\n    }\r\n\r\n    if (now.getTimezoneOffset() == margin) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction clientTimeZone() {\r\n    var munites = new Date().getTimezoneOffset();\r\n    var hour = parseInt(munites / 60);\r\n    if (true == isDayLightTime()) {\r\n        hour = hour + 1;\r\n    }\r\n    var munite = munites % 60;\r\n    var prefix = \"-\";\r\n\r\n    if (hour <= 0 || munite < 0) {\r\n        prefix = \"+\";\r\n        hour = -hour;\r\n        if (munite < 0) {\r\n            munite = -munite;\r\n        }\r\n    }\r\n\r\n    hour = hour + \"\";\r\n    munite = munite + \"\";\r\n\r\n    if (hour.length == 1) {\r\n        hour = \"0\" + hour;\r\n    }\r\n\r\n    if (munite.length == 1) {\r\n        munite = \":0\" + munite;\r\n    } else {\r\n        munite = \":\" + munite;\r\n    }\r\n\r\n    return prefix + hour + munite;\r\n}\r\n\r\nfunction doGetTime() {\r\n    $.act(ACT_SET, TIME, null, null, [\"localTimeZone=\" + $(\"#timezone\").data('value'), \"NTPServer1=\" + $(\"#ntpA\").prop('value'), \"NTPServer2=\" + $(\"#ntpB\").prop('value')]);\r\n    $.act(ACT_OP, ACT_OP_NTP_REQUEST);\r\n    $.exe(function(ret) {\r\n        $.removeLoading();\r\n        if (!ret)\r\n            getStatus();\r\n    });\r\n}\r\n\r\nfunction doGetPCTime() {\r\n    var today = new Date();\r\n    var time = {};\r\n    var hour = {};\r\n\r\n    time.localTimeZone = clientTimeZone();\r\n\r\n    hour.year = parseInt(today.getFullYear(), 10);\r\n    hour.month = parseInt((today.getMonth() + 1), 10);\r\n    hour.day = parseInt(today.getDate(), 10);\r\n    hour.hours = parseInt(today.getHours(), 10);\r\n    hour.minutes = parseInt(today.getMinutes(), 10);\r\n    hour.seconds = parseInt(today.getSeconds(), 10);\r\n\r\n    doSave(time, hour);\r\n}\r\n\r\nfunction doSave(hour, time) {\r\n    $.act(ACT_SET, TIME, null, null, hour);\r\n\r\n    $.act(ACT_SET, HOUR, null, null, time);\r\n\r\n    $.exe(function(ret) {\r\n        $.removeLoading();\r\n        if (!ret)\r\n            $.reload();\r\n    });\r\n\r\n}\r\n\r\n$(\"select[id^='dst_']\").click(function() {\r\n    checkDstDate();\r\n});\r\n\r\n$(\"#GetTime\").click(function() {\r\n    if (first) {\r\n        $.addLoading($(this));\r\n        doGetTime();\r\n    }\r\n});\r\n\r\n$(\"#GetPCTime\").click(function() {\r\n    doGetPCTime();\r\n});\r\n\r\n$(\"#enableDST\").click(function() {\r\n    var options = {\r\n        refresh: 1\r\n    };\r\n    if ($(\"#enableDST\").prop(\"data-checked\") == true) {\r\n        $(\"#dst_start_month\").prop(\"disabled\", false);\r\n        $(\"#dst_start_weekCount\").prop(\"disabled\", false);\r\n        $(\"#dst_start_weekDay\").prop(\"disabled\", false);\r\n        $(\"#dst_start_time\").prop(\"disabled\", false);\r\n\r\n        $(\"#dst_end_month\").prop(\"disabled\", false);\r\n        $(\"#dst_end_weekCount\").prop(\"disabled\", false);\r\n        $(\"#dst_end_weekDay\").prop(\"disabled\", false);\r\n        $(\"#dst_end_time\").prop(\"disabled\", false);\r\n    } else {\r\n        $(\"#dst_start_month\").prop(\"disabled\", true);\r\n        $(\"#dst_start_weekCount\").prop(\"disabled\", true);\r\n        $(\"#dst_start_weekDay\").prop(\"disabled\", true);\r\n        $(\"#dst_start_time\").prop(\"disabled\", true);\r\n\r\n        $(\"#dst_end_month\").prop(\"disabled\", true);\r\n        $(\"#dst_end_weekCount\").prop(\"disabled\", true);\r\n        $(\"#dst_end_weekDay\").prop(\"disabled\", true);\r\n        $(\"#dst_end_time\").prop(\"disabled\", true);\r\n    }\r\n\r\n    $(\"#dst_start_month\").tpSelect(options);\r\n    $(\"#dst_start_weekCount\").tpSelect(options);\r\n    $(\"#dst_start_weekDay\").tpSelect(options);\r\n    $(\"#dst_start_time\").tpSelect(options);\r\n    $(\"#dst_end_month\").tpSelect(options);\r\n    $(\"#dst_end_weekCount\").tpSelect(options);\r\n    $(\"#dst_end_weekDay\").tpSelect(options);\r\n    $(\"#dst_end_time\").tpSelect(options);\r\n\r\n});\r\n\r\n$(\"#timezone\").click(function() {\r\n    if (first) {\r\n        $.addLoading($(this));\r\n        doGetTime();\r\n    }\r\n});\r\n\r\n$(\"#t_save\").click(function() {\r\n    $.addLoading($(this));\r\n    var ret = addAttrs();\r\n    if (ret === false) {\r\n        $.removeLoading();\r\n        return;\r\n    }\r\n\r\n    if (IS_SHOW_REGION) {\r\n        //保存region\r\n        saveWlanRegion();\r\n    }\r\n\r\n    doSave(ret[1], ret[0]);\r\n});\r\n\r\n$(\"#t_save1\").click(function() {\r\n    $.addLoading($(this));\r\n    var dstIsEnable = 0;\r\n    var dstStartYear, dstEndYear;\r\n    var dstStartMday, dstEndMday;\r\n    var dstStartArgs = \"\",\r\n        dstEndArgs = \"\";\r\n    if (WEB_INCLUDE_DST) {\r\n        if ($(\"#enableDST\").prop(\"data-checked\") == true) {\r\n            dstIsEnable = 1;\r\n            dstStartYear = parseInt($(\"#dst_start_year\").html(), 10);\r\n            var dstStartMonthIndex = parseInt($(\"#dst_start_month\").data('value'), 10) - 1;\r\n            var dstStartWeekCountIndex = parseInt($(\"#dst_start_weekCount\").data('value'), 10) - 1;\r\n            var dstStartWeekDayIndex = parseInt($(\"#dst_start_weekDay\").data('value'), 10) - 1;\r\n            dstStartMday = getMday(dstStartYear, dstStartMonthIndex, dstStartWeekCountIndex, dstStartWeekDayIndex);\r\n            dstStartArgs = dstStartYear + \"-\" + $(\"#dst_start_month\").data('value') + \"-\" + dstStartMday + \"T\" + $(\"#dst_start_time\").data('value');\r\n            dstEndYear = parseInt($(\"#dst_end_year\").html(), 10);\r\n            var dstEndMonthIndex = parseInt($(\"#dst_end_month\").data('value'), 10) - 1;\r\n            var dstEndWeekCountIndex = parseInt($(\"#dst_end_weekCount\").data('value'), 10) - 1;\r\n            var dstEndWeekDayIndex = parseInt($(\"#dst_end_weekDay\").data('value'), 10) - 1;\r\n            dstEndMday = getMday(dstEndYear, dstEndMonthIndex, dstEndWeekCountIndex, dstEndWeekDayIndex);\r\n            dstEndArgs = dstEndYear + \"-\" + $(\"#dst_end_month\").data('value') + \"-\" + dstEndMday + \"T\" + $(\"#dst_end_time\").data('value');\r\n\r\n            if (dstStartArgs >= dstEndArgs) {\r\n                dstEndYear += 1;\r\n                dstEndArgs = dstEndYear + \"-\" + $(\"#dst_end_month\").data('value') + \"-\" + dstEndMday + \"T\" + $(\"#dst_end_time\").data('value');\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    if (WEB_INCLUDE_DST) {\r\n        if (dstIsEnable == 1) {\r\n            $.act(ACT_SET, TIME, null, null, [\"localTimeZone=\" + $(\"#timezone\").data('value'),\r\n                \"daylightSavingsUsed=\" + dstIsEnable,\r\n                \"daylightSavingsStart=\" + dstStartArgs,\r\n                \"daylightSavingsEnd=\" + dstEndArgs,\r\n                \"X_TP_DaylightSavingsStartWeekCount=\" + $(\"#dst_start_weekCount\").data('value'),\r\n                \"X_TP_DaylightSavingsEndWeekCount=\" + $(\"#dst_end_weekCount\").data('value')\r\n            ]);\r\n\r\n        } else {\r\n            $.act(ACT_SET, TIME, null, null, [\"daylightSavingsUsed=\" + dstIsEnable]);\r\n        }\r\n        $.exe(function(ret) {\r\n            $.removeLoading();\r\n            if (!ret)\r\n                $.reload();\r\n        });\r\n    }\r\n});\r\n\r\nfunction init() {\r\n    var hour = $.act(ACT_GET, HOUR, null, null, [\"year\", \"month\", \"day\", \"hours\", \"minutes\", \"seconds\"]);\r\n    var time = {};\r\n    var options = {\r\n        refresh: 1\r\n    };\r\n    var date;\r\n    if (IS_SHOW_REGION) {\r\n        //包含 Region功能，显示region\r\n        $('#region').removeClass('nd');\r\n        initRegionList();\r\n        var local = $.act(ACT_GET, LOCAL, null, null, [\"country\"]);\r\n\r\n    }\r\n    if (WEB_INCLUDE_DST) {\r\n        $('#webIncludeDST').removeClass('nd');\r\n        time = $.act(ACT_GET, TIME, null, null, [\"localTimeZone\", \"NTPServer1\", \"NTPServer2\", \"__status\", \"daylightSavingsUsed\", \"daylightSavingsStart\", \"daylightSavingsEnd\", \"X_TP_DaylightSavingsStartWeekCount\", \"X_TP_DaylightSavingsEndWeekCount\"]);\r\n    } else {\r\n        time = $.act(ACT_GET, TIME, null, null, [\"localTimeZone\", \"NTPServer1\", \"NTPServer2\", \"__status\"]);\r\n    }\r\n\r\n    if (!$.exe()) {\r\n        if (IS_SHOW_REGION) {\r\n            //初始化region的选项\r\n            for (var i = 0; i < regionCodeInfo.length; i++) {\r\n                if (local.country == regionCodeInfo[i][1].substring(0, 2)) {\r\n                    break;\r\n                }\r\n            }\r\n            if (i < regionCodeInfo.length) {\r\n                $('#region option[value=\"' + i + '\"]').prop('selected', 'selected');\r\n            }\r\n        }\r\n\r\n        if (INCLUDE_DAY_MONTH_YEAR) {\r\n            $(\"#t_format_dmy\").removeClass(\"nd\");\r\n            date = hour.day + '/' + hour.month + '/' + hour.year;\r\n        } else {\r\n            $(\"#t_format\").removeClass(\"nd\");\r\n            date = hour.month + '/' + hour.day + '/' + hour.year;\r\n        }\r\n\r\n        $(\"#date\").prop('value', date);\r\n        $('#hour option[value=\"' + hour.hours + '\"]').prop('selected', 'selected');\r\n        $('#minute option[value=\"' + hour.minutes + '\"]').prop('selected', 'selected');\r\n        $('#second option[value=\"' + hour.seconds + '\"]').prop('selected', 'selected');\r\n        $(\"#ntpA\").prop('value', time.NTPServer1 ? time.NTPServer1 : \"0.0.0.0\");\r\n        $(\"#ntpB\").prop('value', time.NTPServer2 ? time.NTPServer2 : \"0.0.0.0\");\r\n        var zone = time.localTimeZone ? time.localTimeZone : \"+08:00\";\r\n\r\n        $('#timezone option[value=\"' + zone + '\"]').prop('selected', 'selected');\r\n\r\n        if (time.__status == 1) {\r\n            getStatus();\r\n        }\r\n        if (WEB_INCLUDE_DST) {\r\n            if (time.daylightSavingsUsed == 1) {\r\n                $(\"#enableDST\").prop('checked', 'checked');\r\n            } else {\r\n                $(\"#enableDST\").prop('checked', false);\r\n            }\r\n            if (time.daylightSavingsStart != \"\") {\r\n\r\n                startYear = parseInt(time.daylightSavingsStart.substr(0, 4), 10);\r\n                dstStartMonth = parseInt(time.daylightSavingsStart.substr(5, 2), 10);\r\n                dstStartMday = parseInt(time.daylightSavingsStart.substr(8, 2), 10);\r\n                dstStartTime = parseInt(time.daylightSavingsStart.substr(11, 2), 10);\r\n                dateTmp = new Date(startYear, dstStartMonth - 1, dstStartMday);\r\n                dstStartWeekCount = time.X_TP_DaylightSavingsStartWeekCount;\r\n                dstStartWday = parseInt(dateTmp.getDay(), 10);\r\n                if (dstStartWday == 0) {\r\n                    dstStartWday = 7;\r\n                }\r\n                $(\"#dst_start_month\").get(0).selectedIndex = dstStartMonth - 1;\r\n                $('#dst_start_weekCount option[value=\"' + dstStartWeekCount + '\"]').prop('selected', 'selected');\r\n                $('#dst_start_weekDay option[value=\"' + dstStartWday + '\"]').prop('selected', 'selected');\r\n                $(\"#dst_start_time\").get(0).selectedIndex = dstStartTime;\r\n            }\r\n            if (time.daylightSavingsEnd != \"\") {\r\n                endYear = parseInt(time.daylightSavingsEnd.substr(0, 4), 10);\r\n                dstEndMonth = parseInt(time.daylightSavingsEnd.substr(5, 2), 10);\r\n\r\n                dstEndMday = parseInt(time.daylightSavingsEnd.substr(8, 2), 10);\r\n                dstEndTime = parseInt(time.daylightSavingsEnd.substr(11, 2), 10);\r\n                dateTmp = new Date(endYear, dstEndMonth - 1, dstEndMday);\r\n                dstEndWday = parseInt(dateTmp.getDay(), 10);\r\n                dstEndWeekCount = time.X_TP_DaylightSavingsEndWeekCount;\r\n                if (dstEndWday == 0) {\r\n                    dstEndWday = 7;\r\n                }\r\n                $(\"#dst_end_month\").get(0).selectedIndex = dstEndMonth - 1;\r\n                $('#dst_end_weekCount option[value=\"' + dstEndWeekCount + '\"]').prop('selected', 'selected');\r\n                $('#dst_end_weekDay option[value=\"' + dstEndWday + '\"]').prop('selected', 'selected');\r\n                $(\"#dst_end_time\").get(0).selectedIndex = dstEndTime;\r\n            }\r\n\r\n            checkDstDate();\r\n            doEnableDst();\r\n        }\r\n        $.auto(function() {\r\n            var hour = $.act(ACT_GET, HOUR, null, null, ['year', 'month', 'day', 'hours', 'minutes', 'seconds']);\r\n            if (!$.exe()) {\r\n                var monthTemp = hour.month;\r\n                if (monthTemp < 10) monthTemp = '0' + monthTemp;\r\n                var dayTemp = hour.day;\r\n                if (dayTemp < 10) dayTemp = '0' + dayTemp;\r\n                var date;\r\n                if (INCLUDE_DAY_MONTH_YEAR == 1) {\r\n                    date = dayTemp + '/' + monthTemp + '/' + hour.year;\r\n                } else {\r\n                    date = monthTemp + '/' + dayTemp + '/' + hour.year;\r\n                }\r\n                var hoursTemp = hour.hours;\r\n                if (hoursTemp < 10) hoursTemp = '0' + hoursTemp;\r\n                var minutesTemp = hour.minutes;\r\n                if (minutesTemp < 10) minutesTemp = '0' + minutesTemp;\r\n                var secondsTemp = hour.seconds;\r\n                if (secondsTemp < 10) secondsTemp = '0' + secondsTemp;\r\n                var timeNow = hoursTemp + ':' + minutesTemp + ':' + secondsTemp;\r\n                $('#current_time').val(date + ' ' + timeNow);\r\n            } else {\r\n                return false;\r\n            }\r\n        }, 1000);\r\n    }\r\n}\r\n</script>\r\n<h3 id=\"et\">System Time</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <div>\r\n            <b class=\"s ru-s pl-m it-xxs\" id=\"curTime\"></b>\r\n            <input id=\"current_time\" readonly=\"readonly\" type=\"text\" />\r\n        </div>\r\n        <div>\r\n            <b class=\"T_region xxxs it-xxs pl-m\" id=\"t_region\">Region:</b>\r\n            <select id=\"region\" class=\"xxxl it-xxxl pl-xxl nd\">\r\n                <option id=\"t_plssel\" value=\"none\">Please Select</option>\r\n            </select>\r\n            <b id=\"t_zone\" class=\"xxxs it-xxs pl-m\">Time Zone:</b>\r\n            <select id=\"timezone\" class=\"xxxl pl-xxl it-xxxl\">\r\n                <option value=\"-12:00\" class=\"T T_city1\" id=\"t_city1\">(GMT-12:00) Enewetak, Kwajalein</option>\r\n                <option value=\"-11:00\" class=\"T T_city2\" id=\"t_city2\">(GMT-11:00) Midway Island, Samoa</option>\r\n                <option value=\"-10:00\" class=\"T T_city3\" id=\"t_city3\">(GMT-10:00) Hawaii</option>\r\n                <option value=\"-09:00\" class=\"T T_city4\" id=\"t_city4\">(GMT-09:00) Alaska</option>\r\n                <option value=\"-08:00\" class=\"T T_city5\" id=\"t_city5\">(GMT-08:00) Pacific Time (US & Canada), Tiahuana</option>\r\n                <option value=\"-07:00\" class=\"T T_city6\" id=\"t_city6\">(GMT-07:00) Mountain Time (US & Canada), Arizona</option>\r\n                <option value=\"-06:00\" class=\"T T_city7\" id=\"t_city7\">(GMT-06:00) Central Time (US & Canada), Central America, Mexico City</option>\r\n                <option value=\"-05:00\" class=\"T T_city8\" id=\"t_city8\">(GMT-05:00) Eastern Time (US & Canada), Bogota, Lima</option>\r\n                <option value=\"-04:30\" class=\"T T_city9\" id=\"t_city9\">(GMT-04:30) Caracas</option>\r\n                <option value=\"-04:00\" class=\"T T_city10\" id=\"t_city10\">(GMT-04:00) Atlantic Time (Canada), Santiago, Asuncion</option>\r\n                <option value=\"-03:30\" class=\"T T_city11\" id=\"t_city11\">(GMT-03:30) Newfoundland</option>\r\n                <option value=\"-03:00\" class=\"T T_city12\" id=\"t_city12\">(GMT-03:00) Brasilia, Buenos Aires, Georgetown, Greenland</option>\r\n                <option value=\"-02:00\" class=\"T T_city13\" id=\"t_city13\">(GMT-02:00) Mid-Atlantic</option>\r\n                <option value=\"-01:00\" class=\"T T_city14\" id=\"t_city14\">(GMT-01:00) Azores, Cape Verde Is.</option>\r\n                <option value=\"+00:00\" class=\"T T_city15\" id=\"t_city15\">(GMT) Greenwich Mean Time, Dublin, Edinburgh, London, Lisbon</option>\r\n                <option value=\"+01:00\" class=\"T T_city16\" id=\"t_city16\">(GMT+01:00) Amsterdam, Berlin, Rome, Stockholm, Paris, Prague, Bratislava</option>\r\n                <option value=\"+02:00\" class=\"T T_city17\" id=\"t_city17\">(GMT+02:00) Cairo, Athens, Istanbul, Minsk, Jerusalem, Kiev, Chisinau</option>\r\n                <option value=\"+03:00\" class=\"T T_city18\" id=\"t_city18\">(GMT+03:00) Baghdad, Kuwait, Riyadh</option>\r\n                <option value=\"+03:30\" class=\"T T_city19\" id=\"t_city19\">(GMT+03:30) Tehran</option>\r\n                <option value=\"+04:00\" class=\"T T_city20\" id=\"t_city20\">(GMT+04:00) Abu Dhabi, Muscat, Baku, Tbilisi, Yerevan, Moscow, St.Petersburg</option>\r\n                <option value=\"+04:30\" class=\"T T_city21\" id=\"t_city21\">(GMT+04:30) Kabul</option>\r\n                <option value=\"+05:00\" class=\"T T_city22\" id=\"t_city22\">(GMT+05:00) Islamabad, Karachi, Tashkent</option>\r\n                <option value=\"+05:30\" class=\"T T_city23\" id=\"t_city23\">(GMT+05:30) Madras, Kolkata, Mumbai, New Delhi</option>\r\n                <option value=\"+05:45\" class=\"T T_city24\" id=\"t_city24\">(GMT+05:45) Katmandu</option>\r\n                <option value=\"+06:00\" class=\"T T_city25\" id=\"t_city25\">(GMT+06:00) Almaty, Astana, Dhaka, Ekaterinburg, Bishkek</option>\r\n                <option value=\"+06:30\" class=\"T T_city26\" id=\"t_city26\">(GMT+06:30) Rangoon</option>\r\n                <option value=\"+07:00\" class=\"T T_city27\" id=\"t_city27\">(GMT+07:00) Bangkok, Jakarta, Hanoi, Novosibirsk</option>\r\n                <option value=\"+08:00\" class=\"T T_city28\" id=\"t_city28\">(GMT+08:00) Beijing, Chongqing, Urumchi, Hong Kong, Taipei, Kuala Lumpur, Perth</option>\r\n                <option value=\"+09:00\" class=\"T T_city29\" id=\"t_city29\">(GMT+09:00) Tokyo, Osaka, Sapporo, Seoul</option>\r\n                <option value=\"+09:30\" class=\"T T_city30\" id=\"t_city30\">(GMT+09:30) Darwin, Adelaide</option>\r\n                <option value=\"+10:00\" class=\"T T_city31\" id=\"t_city31\">(GMT+10:00) Brisbane, Guam, Canberra, Melbourne, Sydney, Yakutsk</option>\r\n                <option value=\"+11:00\" class=\"T T_city32\" id=\"t_city32\">(GMT+11:00) Magadan, Solomon Is., New Caledonia</option>\r\n                <option value=\"+12:00\" class=\"T T_city33\" id=\"t_city33\">(GMT+12:00) Fuji, Kamchatka Peninsula, Marshall Is., Wellington</option>\r\n                <option value=\"+13:00\" class=\"T T_city34\" id=\"t_city34\">(GMT+13:00) Nukualofa</option>\r\n            </select>\r\n        </div>\r\n        <div>\r\n            <b id=\"t_date\" class=\"s ru-s pl-m it-xxs\">Date:</b>\r\n            <input type=\"text\" class=\"tp-input-text xxl\" id=\"date\" />\r\n            <span id=\"t_format\" class=\"nd\">(MM/DD/YY)</span>\r\n            <span id=\"t_format_dmy\" class=\"nd\">(DD/MM/YY)</span>\r\n        </div>\r\n        <b id=\"t_time\" class=\"xxxs pl-m it-xxs\">Time:</b>\r\n        <select id=\"hour\" class=\"xs inline\">\r\n            <option value=\"0\" id=\"t_hour0\">0</option>\r\n            <option value=\"1\" id=\"t_hour1\">1</option>\r\n            <option value=\"2\" id=\"t_hour2\">2</option>\r\n            <option value=\"3\" id=\"t_hour3\">3</option>\r\n            <option value=\"4\" id=\"t_hour4\">4</option>\r\n            <option value=\"5\" id=\"t_hour5\">5</option>\r\n            <option value=\"6\" id=\"t_hour6\">6</option>\r\n            <option value=\"7\" id=\"t_hour7\">7</option>\r\n            <option value=\"8\" id=\"t_hour8\">8</option>\r\n            <option value=\"9\" id=\"t_hour9\">9</option>\r\n            <option value=\"10\" id=\"t_hour10\">10</option>\r\n            <option value=\"11\" id=\"t_hour11\">11</option>\r\n            <option value=\"12\" id=\"t_hour12\">12</option>\r\n            <option value=\"13\" id=\"t_hour13\">13</option>\r\n            <option value=\"14\" id=\"t_hour14\">14</option>\r\n            <option value=\"15\" id=\"t_hour15\">15</option>\r\n            <option value=\"16\" id=\"t_hour16\">16</option>\r\n            <option value=\"17\" id=\"t_hour17\">17</option>\r\n            <option value=\"18\" id=\"t_hour18\">18</option>\r\n            <option value=\"19\" id=\"t_hour19\">19</option>\r\n            <option value=\"20\" id=\"t_hour20\">20</option>\r\n            <option value=\"21\" id=\"t_hour21\">21</option>\r\n            <option value=\"22\" id=\"t_hour22\">22</option>\r\n            <option value=\"23\" id=\"t_hour23\">23</option>\r\n        </select>\r\n        <b class=\"time-separater\">:</b>\r\n        <select id=\"minute\" class=\"xs inline\">\r\n            <option value=\"0\" id=\"t_min0\">0</option>\r\n            <option value=\"1\" id=\"t_min1\">1</option>\r\n            <option value=\"2\" id=\"t_min2\">2</option>\r\n            <option value=\"3\" id=\"t_min3\">3</option>\r\n            <option value=\"4\" id=\"t_min4\">4</option>\r\n            <option value=\"5\" id=\"t_min5\">5</option>\r\n            <option value=\"6\" id=\"t_min6\">6</option>\r\n            <option value=\"7\" id=\"t_min7\">7</option>\r\n            <option value=\"8\" id=\"t_min8\">8</option>\r\n            <option value=\"9\" id=\"t_min9\">9</option>\r\n            <option value=\"10\" id=\"t_min10\">10</option>\r\n            <option value=\"11\" id=\"t_min11\">11</option>\r\n            <option value=\"12\" id=\"t_min12\">12</option>\r\n            <option value=\"13\" id=\"t_min13\">13</option>\r\n            <option value=\"14\" id=\"t_min14\">14</option>\r\n            <option value=\"15\" id=\"t_min15\">15</option>\r\n            <option value=\"16\" id=\"t_min16\">16</option>\r\n            <option value=\"17\" id=\"t_min17\">17</option>\r\n            <option value=\"18\" id=\"t_min18\">18</option>\r\n            <option value=\"19\" id=\"t_min19\">19</option>\r\n            <option value=\"20\" id=\"t_min20\">20</option>\r\n            <option value=\"21\" id=\"t_min21\">21</option>\r\n            <option value=\"22\" id=\"t_min22\">22</option>\r\n            <option value=\"23\" id=\"t_min23\">23</option>\r\n            <option value=\"24\" id=\"t_min24\">24</option>\r\n            <option value=\"25\" id=\"t_min25\">25</option>\r\n            <option value=\"26\" id=\"t_min26\">26</option>\r\n            <option value=\"27\" id=\"t_min27\">27</option>\r\n            <option value=\"28\" id=\"t_min28\">28</option>\r\n            <option value=\"29\" id=\"t_min29\">29</option>\r\n            <option value=\"30\" id=\"t_min30\">30</option>\r\n            <option value=\"31\" id=\"t_min31\">31</option>\r\n            <option value=\"32\" id=\"t_min32\">32</option>\r\n            <option value=\"33\" id=\"t_min33\">33</option>\r\n            <option value=\"34\" id=\"t_min34\">34</option>\r\n            <option value=\"35\" id=\"t_min35\">35</option>\r\n            <option value=\"36\" id=\"t_min36\">36</option>\r\n            <option value=\"37\" id=\"t_min37\">37</option>\r\n            <option value=\"38\" id=\"t_min38\">38</option>\r\n            <option value=\"39\" id=\"t_min39\">39</option>\r\n            <option value=\"40\" id=\"t_min40\">40</option>\r\n            <option value=\"41\" id=\"t_min41\">41</option>\r\n            <option value=\"42\" id=\"t_min42\">42</option>\r\n            <option value=\"43\" id=\"t_min43\">43</option>\r\n            <option value=\"44\" id=\"t_min44\">44</option>\r\n            <option value=\"45\" id=\"t_min45\">45</option>\r\n            <option value=\"46\" id=\"t_min46\">46</option>\r\n            <option value=\"47\" id=\"t_min47\">47</option>\r\n            <option value=\"48\" id=\"t_min48\">48</option>\r\n            <option value=\"49\" id=\"t_min49\">49</option>\r\n            <option value=\"50\" id=\"t_min50\">50</option>\r\n            <option value=\"51\" id=\"t_min51\">51</option>\r\n            <option value=\"52\" id=\"t_min52\">52</option>\r\n            <option value=\"53\" id=\"t_min53\">53</option>\r\n            <option value=\"54\" id=\"t_min54\">54</option>\r\n            <option value=\"55\" id=\"t_min55\">55</option>\r\n            <option value=\"56\" id=\"t_min56\">56</option>\r\n            <option value=\"57\" id=\"t_min57\">57</option>\r\n            <option value=\"58\" id=\"t_min58\">58</option>\r\n            <option value=\"59\" id=\"t_min59\">59</option>\r\n        </select>\r\n\r\n        <b class=\"time-separater\">:</b>\r\n        <select id=\"second\" class=\"xs inline\">\r\n            <option value=\"0\" id=\"t_sec0\">0</option>\r\n            <option value=\"1\" id=\"t_sec1\">1</option>\r\n            <option value=\"2\" id=\"t_sec2\">2</option>\r\n            <option value=\"3\" id=\"t_sec3\">3</option>\r\n            <option value=\"4\" id=\"t_sec4\">4</option>\r\n            <option value=\"5\" id=\"t_sec5\">5</option>\r\n            <option value=\"6\" id=\"t_sec6\">6</option>\r\n            <option value=\"7\" id=\"t_sec7\">7</option>\r\n            <option value=\"8\" id=\"t_sec8\">8</option>\r\n            <option value=\"9\" id=\"t_sec9\">9</option>\r\n            <option value=\"10\" id=\"t_sec10\">10</option>\r\n            <option value=\"11\" id=\"t_sec11\">11</option>\r\n            <option value=\"12\" id=\"t_sec12\">12</option>\r\n            <option value=\"13\" id=\"t_sec13\">13</option>\r\n            <option value=\"14\" id=\"t_sec14\">14</option>\r\n            <option value=\"15\" id=\"t_sec15\">15</option>\r\n            <option value=\"16\" id=\"t_sec16\">16</option>\r\n            <option value=\"17\" id=\"t_sec17\">17</option>\r\n            <option value=\"18\" id=\"t_sec18\">18</option>\r\n            <option value=\"19\" id=\"t_sec19\">19</option>\r\n            <option value=\"20\" id=\"t_sec20\">20</option>\r\n            <option value=\"21\" id=\"t_sec21\">21</option>\r\n            <option value=\"22\" id=\"t_sec22\">22</option>\r\n            <option value=\"23\" id=\"t_sec23\">23</option>\r\n            <option value=\"24\" id=\"t_sec24\">24</option>\r\n            <option value=\"25\" id=\"t_sec25\">25</option>\r\n            <option value=\"26\" id=\"t_sec26\">26</option>\r\n            <option value=\"27\" id=\"t_sec27\">27</option>\r\n            <option value=\"28\" id=\"t_sec28\">28</option>\r\n            <option value=\"29\" id=\"t_sec29\">29</option>\r\n            <option value=\"30\" id=\"t_sec30\">30</option>\r\n            <option value=\"31\" id=\"t_sec31\">31</option>\r\n            <option value=\"32\" id=\"t_sec32\">32</option>\r\n            <option value=\"33\" id=\"t_sec33\">33</option>\r\n            <option value=\"34\" id=\"t_sec34\">34</option>\r\n            <option value=\"35\" id=\"t_sec35\">35</option>\r\n            <option value=\"36\" id=\"t_sec36\">36</option>\r\n            <option value=\"37\" id=\"t_sec37\">37</option>\r\n            <option value=\"38\" id=\"t_sec38\">38</option>\r\n            <option value=\"39\" id=\"t_sec39\">39</option>\r\n            <option value=\"40\" id=\"t_sec40\">40</option>\r\n            <option value=\"41\" id=\"t_sec41\">41</option>\r\n            <option value=\"42\" id=\"t_sec42\">42</option>\r\n            <option value=\"43\" id=\"t_sec43\">43</option>\r\n            <option value=\"44\" id=\"t_sec44\">44</option>\r\n            <option value=\"45\" id=\"t_sec45\">45</option>\r\n            <option value=\"46\" id=\"t_sec46\">46</option>\r\n            <option value=\"47\" id=\"t_sec47\">47</option>\r\n            <option value=\"48\" id=\"t_sec48\">48</option>\r\n            <option value=\"49\" id=\"t_sec49\">49</option>\r\n            <option value=\"50\" id=\"t_sec50\">50</option>\r\n            <option value=\"51\" id=\"t_sec51\">51</option>\r\n            <option value=\"52\" id=\"t_sec52\">52</option>\r\n            <option value=\"53\" id=\"t_sec53\">53</option>\r\n            <option value=\"54\" id=\"t_sec54\">54</option>\r\n            <option value=\"55\" id=\"t_sec55\">55</option>\r\n            <option value=\"56\" id=\"t_sec56\">56</option>\r\n            <option value=\"57\" id=\"t_sec57\">57</option>\r\n            <option value=\"58\" id=\"t_sec58\">58</option>\r\n            <option value=\"59\" id=\"t_sec59\">59</option>\r\n        </select>\r\n        <div>\r\n            <b class=\"s pl-m it-xxs\" id=\"t_npt1\">NTP Server 1:</b>\r\n            <input type=\"text\" id=\"ntpA\" class=\"tp-input-text xxl\" size=\"15\" maxlength=\"31\" />\r\n            <span class=\"T_c_optional\">(Optional)</span>\r\n        </div>\r\n        <div>\r\n            <b class=\"s pl-m it-xxs\" id=\"t_npt2\">NTP Server 2:</b>\r\n            <input type=\"text\" id=\"ntpB\" class=\"tp-input-text xxl\" size=\"15\" maxlength=\"31\" />\r\n            <span class=\"T_c_optional\">(Optional)</span>\r\n        </div>\r\n        <div class=\"part-separate-m\">\r\n            <button type=\"submit\" class=\"blue left l ru-xxl pl-xl inline T_getPcTime\" id=\"GetPCTime\">Get From PC</button>\r\n            <button type=\"submit\" class=\"blue left xxl ru-xxl pl-xxl inline\" id=\"GetTime\">Get from the Internet</button>\r\n            <span id=\"t_status\"></span>\r\n        </div>\r\n        \r\n\r\n        <button type=\"submit\" class=\"green T_save\" id=\"t_save\">Save</button>\r\n    </form>\r\n</div>\r\n<div id=\"webIncludeDST\" class=\"nd\">\r\n    <h3 id=\"t_dlsaving\">Daylight Saving</h3>\r\n    <div class=\"content-container\">\r\n        <form class=\"pure-form pure-form-aligned\">\r\n            <div>\r\n                <b class=\"m\" id=\"\"></b>\r\n                <input type=\"checkbox\" id=\"enableDST\" />\r\n                <label id=\"t_endlsaving\">Enable Daylight Saving</label>\r\n            </div>\r\n            <div>\r\n                <span id=\"dst_start_year\" class=\"time-daylight-year\"></span>\r\n                <b class=\"m\" id=\"t_dst_start\">Start: </b>\r\n                <select name=\"dst_start_month\" class=\"inline m\" id=\"dst_start_month\" width=\"15px\">\r\n                    <option value=\"01\" class=\"T_c_month1\">Jan</option>\r\n                    <option value=\"02\" class=\"T_c_month2\">Feb</option>\r\n                    <option value=\"03\" class=\"T_c_month3\" selected>Mar</option>\r\n                    <option value=\"04\" class=\"T_c_month4\">Apr</option>\r\n                    <option value=\"05\" class=\"T_c_month5\">May</option>\r\n                    <option value=\"06\" class=\"T_c_month6\">Jun</option>\r\n                    <option value=\"07\" class=\"T_c_month7\">Jul</option>\r\n                    <option value=\"08\" class=\"T_c_month8\">Aug</option>\r\n                    <option value=\"09\" class=\"T_c_month9\">Sep</option>\r\n                    <option value=\"10\" class=\"T_c_month10\">Oct</option>\r\n                    <option value=\"11\" class=\"T_c_month11\">Nov</option>\r\n                    <option value=\"12\" class=\"T_c_month12\">Dec</option>\r\n                </select>\r\n                <b class=\"time-separater\"></b>\r\n                <select name=\"dst_start_day\" class=\"inline m\" id=\"dst_start_weekCount\" width=\"15px\">\r\n                    <option value=\"1\" class=\"T_c_week1\">1st</option>\r\n                    <option value=\"2\" class=\"T_c_week2\">2nd</option>\r\n                    <option value=\"3\" class=\"T_c_week3\">3rd</option>\r\n                    <option value=\"4\" class=\"T_c_week4\">4th</option>\r\n                    <option value=\"5\" class=\"T_c_week5\" selected>Last</option>\r\n                </select>\r\n                <b class=\"time-separater\"></b>\r\n                <select name=\"dst_start_weekday\" class=\"inline m\" id=\"dst_start_weekDay\" width=\"15px\">\r\n                    <option value=\"1\" class=\"T_c_day1\">Mon</option>\r\n                    <option value=\"2\" class=\"T_c_day2\">Tue</option>\r\n                    <option value=\"3\" class=\"T_c_day3\">Wed</option>\r\n                    <option value=\"4\" class=\"T_c_day4\">Thu</option>\r\n                    <option value=\"5\" class=\"T_c_day5\">Fri</option>\r\n                    <option value=\"6\" class=\"T_c_day6\">Sat</option>\r\n                    <option value=\"7\" class=\"T_c_day7\" selected>Sun</option>\r\n                </select>\r\n                <b class=\"time-separater\"></b>\r\n                <select name=\"dst_start_time\" class=\"inline m\" id=\"dst_start_time\" width=\"15px\">\r\n                    <option value=\"00:00:00\">00:00</option>\r\n                    <option value=\"01:00:00\">01:00</option>\r\n                    <option value=\"02:00:00\" selected>02:00</option>\r\n                    <option value=\"03:00:00\">03:00</option>\r\n                    <option value=\"04:00:00\">04:00</option>\r\n                    <option value=\"05:00:00\">05:00</option>\r\n                    <option value=\"06:00:00\">06:00</option>\r\n                    <option value=\"07:00:00\">07:00</option>\r\n                    <option value=\"08:00:00\">08:00</option>\r\n                    <option value=\"09:00:00\">09:00</option>\r\n                    <option value=\"10:00:00\">10:00</option>\r\n                    <option value=\"11:00:00\">11:00</option>\r\n                    <option value=\"12:00:00\">12:00</option>\r\n                    <option value=\"13:00:00\">13:00</option>\r\n                    <option value=\"14:00:00\">14:00</option>\r\n                    <option value=\"15:00:00\">15:00</option>\r\n                    <option value=\"16:00:00\">16:00</option>\r\n                    <option value=\"17:00:00\">17:00</option>\r\n                    <option value=\"18:00:00\">18:00</option>\r\n                    <option value=\"19:00:00\">19:00</option>\r\n                    <option value=\"20:00:00\">20:00</option>\r\n                    <option value=\"21:00:00\">21:00</option>\r\n                    <option value=\"22:00:00\">22:00</option>\r\n                    <option value=\"23:00:00\">23:00</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <span id=\"dst_end_year\" class=\"time-daylight-year\"></span>\r\n                <b class=\"m\" id=\"t_dst_end\">End:</b>\r\n                <select name=\"dst_end_month\" class=\"inline m\" id=\"dst_end_month\" width=\"15px\">\r\n                    <option value=\"01\" class=\"T_c_month1\">Jan</option>\r\n                    <option value=\"02\" class=\"T_c_month2\">Feb</option>\r\n                    <option value=\"03\" class=\"T_c_month3\">Mar</option>\r\n                    <option value=\"04\" class=\"T_c_month4\">Apr</option>\r\n                    <option value=\"05\" class=\"T_c_month5\">May</option>\r\n                    <option value=\"06\" class=\"T_c_month6\">Jun</option>\r\n                    <option value=\"07\" class=\"T_c_month7\">Jul</option>\r\n                    <option value=\"08\" class=\"T_c_month8\">Aug</option>\r\n                    <option value=\"09\" class=\"T_c_month9\">Sep</option>\r\n                    <option value=\"10\" class=\"T_c_month10\" selected>Oct</option>\r\n                    <option value=\"11\" class=\"T_c_month11\">Nov</option>\r\n                    <option value=\"12\" class=\"T_c_month12\">Dec</option>\r\n                </select>\r\n                <b class=\"time-separater\"></b>\r\n\r\n                <select name=\"dst_end_day\" class=\"inline m\" id=\"dst_end_weekCount\" width=\"15px\">\r\n                    <option value=\"1\" class=\"T_c_week1\">1st</option>\r\n                    <option value=\"2\" class=\"T_c_week2\">2nd</option>\r\n                    <option value=\"3\" class=\"T_c_week3\">3rd</option>\r\n                    <option value=\"4\" class=\"T_c_week4\">4th</option>\r\n                    <option value=\"5\" class=\"T_c_week5\" selected>Last</option>\r\n                </select>\r\n                <b class=\"time-separater\"></b>\r\n\r\n                <select class=\"inline m\" id=\"dst_end_weekDay\" width=\"15px\">\r\n                    <option value=\"1\" class=\"T_c_day1\">Mon</option>\r\n                    <option value=\"2\" class=\"T_c_day2\">Tue</option>\r\n                    <option value=\"3\" class=\"T_c_day3\">Wed</option>\r\n                    <option value=\"4\" class=\"T_c_day4\">Thu</option>\r\n                    <option value=\"5\" class=\"T_c_day5\">Fri</option>\r\n                    <option value=\"6\" class=\"T_c_day6\">Sat</option>\r\n                    <option value=\"7\" class=\"T_c_day7\" selected>Sun</option>\r\n                </select>\r\n                <b class=\"time-separater\"></b>\r\n                <select name=\"dst_end_time\" class=\"inline m\" id=\"dst_end_time\" width=\"15px\">\r\n                    <option value=\"00:00:00\">00:00</option>\r\n                    <option value=\"01:00:00\">01:00</option>\r\n                    <option value=\"02:00:00\">02:00</option>\r\n                    <option value=\"03:00:00\" selected>03:00</option>\r\n                    <option value=\"04:00:00\">04:00</option>\r\n                    <option value=\"05:00:00\">05:00</option>\r\n                    <option value=\"06:00:00\">06:00</option>\r\n                    <option value=\"07:00:00\">07:00</option>\r\n                    <option value=\"08:00:00\">08:00</option>\r\n                    <option value=\"09:00:00\">09:00</option>\r\n                    <option value=\"10:00:00\">10:00</option>\r\n                    <option value=\"11:00:00\">11:00</option>\r\n                    <option value=\"12:00:00\">12:00</option>\r\n                    <option value=\"13:00:00\">13:00</option>\r\n                    <option value=\"14:00:00\">14:00</option>\r\n                    <option value=\"15:00:00\">15:00</option>\r\n                    <option value=\"16:00:00\">16:00</option>\r\n                    <option value=\"17:00:00\">17:00</option>\r\n                    <option value=\"18:00:00\">18:00</option>\r\n                    <option value=\"19:00:00\">19:00</option>\r\n                    <option value=\"20:00:00\">20:00</option>\r\n                    <option value=\"21:00:00\">21:00</option>\r\n                    <option value=\"22:00:00\">22:00</option>\r\n                    <option value=\"23:00:00\">23:00</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"part-separate\"></div>\r\n            <button type=\"submit\" class=\"green T_save\" id=\"t_save1\">Save</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n$.tpInit(init);\r\nfirst = 1;\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "upgrade.html",
        "uriBaseId" : "%SRCROOT%",
        "index" : 49
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\r\n\r\n<style type=\"text/css\">\r\n    /*reset YUI3*/\r\n    html{\r\n        font-family: Verdana, Geneva, sans-serif;\r\n        font-size: 12px;\r\n        color: #4d4d4d;\r\n    }\r\n    body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td{\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n    body{\r\n        -moz-user-select: none;\r\n        -webkit-user-select: none;\r\n        -ms-user-select: none;\r\n        \r\n        cursor: default;\r\n        \r\n        overflow-y: hidden;\r\n        overflow-x: auto;\r\n    }\r\n    input,\r\n    button{\r\n        font-family: Verdana, Geneva, sans-serif;\r\n        color: #4d4d4d;\r\n        border: 0px none;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n    }\r\n    label,\r\n    span,\r\n    a{\r\n        vertical-align: middle;\r\n    }\r\n    ::-webkit-scrollbar {\r\n        width: 13px;\r\n        border: 1px solid #ffffff;\r\n    }\r\n    ::-webkit-scrollbar-button {\r\n        height: 3px;\r\n        background-color: #ffffff;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #ffffff;\r\n        width: 9px;\r\n    }\r\n    ::-webkit-scrollbar-track-piece {\r\n        background-color: #ffffff;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background: #9BDCEB;\r\n        border-radius: 35px;\r\n        border: 3px solid #ffffff;\r\n    }\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #9BDCEB;\r\n    }\r\n    ::-webkit-scrollbar-corner {\r\n        background: #ffffff;\r\n    }\r\n    ::-webkit-scrollbar-resizer {\r\n        background: rgb(200,200,200);\r\n    }\r\n    body,p{\r\n        margin: 0;\r\n    }\r\n    /*css*/\r\n    div.top{\r\n        width: 100%;\r\n        height: 100%;\r\n        min-width: 980px;\r\n        display: block;\r\n    }\r\n    div.top-header{\r\n        background-color: #4acbd6;\r\n        height: 90px;\r\n    }\r\n    div.top-header-wrap{\r\n        width: 980px;\r\n        margin: 0 auto;\r\n        color: #ffffff;\r\n    }\r\n    #tp-tag{\r\n        font-size:30px;\r\n        padding-top: 21px;\r\n        padding-left: 5px;\r\n    }\r\n    #product-tag{\r\n        font-size:12px;\r\n        height: 16px;\r\n        padding: 2px 0 12px 10px;\r\n    }\r\n    .top-content{\r\n        width: 760px;\r\n        position: relative;\r\n        margin: 0 auto;\r\n    }\r\n    #upgrade-container{\r\n        margin-top: 94px;\r\n    }\r\n    .error-note-container{\r\n        width: 570px;\r\n        margin: 0 auto;\r\n    }\r\n    div.file-container{\r\n        margin: 5px 0;\r\n    }\r\n    div.file-container div.fieldlabel-wrap{\r\n        width: 174px;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n    }\r\n    div.file-container div.file-wrap-outer{\r\n        position: relative;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n    }\r\n    div.file-container div.file-wrap{\r\n        position: relative;\r\n        display: inline-block;\r\n        border: 0 none;\r\n        background-color: transparent;\r\n    }\r\n    div.file-container div.file-text-wrap{\r\n        z-index: 2;\r\n        background-color: #f5f5f5;\r\n        border: 1px solid #e6e6e6;\r\n        position: relative;\r\n        display: inline-block;\r\n        padding: 1px;\r\n    }\r\n    input.file-input{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        line-height: 22px;\r\n        line-height: 32px\\0;\r\n        opacity: 0;\r\n        background-color: #ffffff;\r\n        cursor: pointer;\r\n        z-index: -1;\r\n        z-index: 1\\0;\r\n        filter: alpha(opacity=0)\\0;\r\n    }\r\n    div.file-container .file-text-wrap2{\r\n        width: 197px;\r\n        height: 26px;\r\n        display: inline-block;\r\n        padding: 1px;\r\n        border: 1px solid #e6e6e6;\r\n        z-index: -2;\r\n        z-index: 3\\0;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        opacity: 0;\r\n        filter: alpha(opacity=0)\\0;\r\n        background-color: #f5f5f5;\r\n        cursor: pointer;\r\n    }\r\n    .file-container .text-wrap{\r\n        display: inline-block;\r\n    }\r\n    .file-container .file-text{\r\n       width: 164px;\r\n       height: 22px;\r\n       line-height: 22px;\r\n       padding: 2px 8px;\r\n       overflow: hidden;\r\n       text-overflow: ellipsis;\r\n       white-space: nowrap;\r\n       display: inline-block;\r\n    }\r\n    div.file-container div.file-button-wrap{\r\n        z-index: 0;\r\n        margin-left: 13px;\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n    }\r\n    div.file-container .file-button{\r\n        min-width: 80px;\r\n        min-width: 62px\\0;\r\n        padding: 8px 6px 8px 6px;\r\n        background-color: #4acbd6;\r\n        color: #ffffff;\r\n        border: 0 none;\r\n        border-radius: 3px;\r\n\toutline: none;\r\n        font-family: Verdana, Geneva, sans-serif;\r\n        text-align: center;\r\n    }\r\n    div.file-container .file-button:hover{\r\n        background-color: #23c4c4;\r\n    }\r\n    .file-container .button-text{\r\n        color: #ffffff;\r\n    }\r\n    div.button-container{\r\n        text-align: right;\r\n        margin: 5px 0;\r\n    }\r\n    #upgrade-button-container,#upgrade-file-container{\r\n        display: inline-block;\r\n    }\r\n    div.button-container .button-wrap-outer{\r\n        display: inline-block;\r\n        position: relative;\r\n    }\r\n    div.button-container .button-wrap{\r\n        border: 0 none;\r\n        padding: 0;\r\n    }\r\n    div.button-container .button-button{\r\n        padding: 8px 6px 8px 6px;\r\n        background-color: #4acbd6;\r\n        min-width: 90px;\r\n        border-radius: 3px;\r\n\toutline: none;\r\n        font-family: Verdana, Geneva, sans-serif;\r\n        color: #ffffff;\r\n        text-align: center;\r\n        vertical-align: middle;\r\n    }\r\n    div.button-container .button-button.disabled,div.button-container .button-button.disabled:hover{\r\n        background-color: #bfbfbf;\r\n    }\r\n    div.button-container .button-button:hover{\r\n        background-color: #23c4c4;\r\n    }\r\n\r\n    div.progressbar-container{\r\n        display: inline;\r\n        padding: 0;\r\n        margin: 5px 0;\r\n    }\r\n    div.progressbar-container .progressbar-wrap-outer{\r\n        position: relative;\r\n        display: inline-block;\r\n    }\r\n    div.progressbar-container .progressbar-wrap{\r\n        border: 1px solid transparent;\r\n        display: inline-block;\r\n    }\r\n    div.progressbar-container .progressbar-content{\r\n        width: 365px;\r\n        height: 6px;\r\n        border: 0 none;\r\n        background-color: #eeefef;\r\n        position: relative;\r\n        display: inline-block;\r\n    }\r\n    div.progressbar-container .progressbar-value{\r\n        width: 0;\r\n        overflow: hidden;\r\n        background-color: #4acbd6;\r\n        height: 100%;\r\n        position: absolute;\r\n        bottom: 0;\r\n    }\r\n    div.progressbar-container .progressbar-text,div.progressbar-container .progressbar-status{\r\n        display: inline-block;\r\n        width: 50px;\r\n        text-align: right;\r\n        font-size: 12px;\r\n    }\r\n    div.progressbar-container .progressbar-percentage{\r\n        margin: 0 6px;\r\n    }\r\n    div.progressbar-container .progressbar-status{\r\n        width: 370px;\r\n        text-align: left;\r\n        margin-top: 10px;\r\n    }\r\n    div.progressbar-container #upgrade-result{\r\n        font-size: 12px;\r\n        display: none;\r\n\t\tcolor: #dd6b6b;\r\n    }\r\n\r\n    #upgrade-form{\r\n        margin-top: 25px;\r\n        padding-left: 92px;\r\n    }\r\n    #upgrade-probar{\r\n        display: none;\r\n        margin-top: 15px;\r\n    }\r\n    #submit-btn{\r\n        display: none;\r\n    }\r\n</style>\r\n\r\n<title>boot</title>\r\n</head>\r\n<body id=\"boot-body\">\r\n    <div class=\"top\" id=\"boot-main\">\r\n        <div class=\"top-header\">\r\n            <div class=\"top-header-wrap\">\r\n                <p id=\"tp-tag\">TP-Link</p>\r\n                <p id=\"product-tag\">TP_NEED_MODIFIED_PRODUCT_NAME</p>\r\n            </div>\r\n        </div>\r\n        <div id=\"top-main\">\r\n            <div class=\"top-content\">\r\n                <div id=\"upgrade-container\">\r\n                    <div class=\"error-note-container\">\r\n                        <p id=\"error-note\">System error. The router cannot start up normally.<br/>Please upgrade your router. You can download the firmware file from www.tp-link.com.</p>\r\n                    </div>\r\n                    <form action=\"f2.htm\" method=\"post\" id=\"upgrade-form\" target=\"upgrade-iframe\" enctype=\"multipart/form-data\">\r\n                        <div class=\"file-container\" id=\"upgrade-file-container\">\r\n                            <div class=\"fieldlabel-wrap\">\r\n                                <label class=\"file-label\" id=\"upgrade-label\">New Firmware File:</label>\r\n                            </div>\r\n                            <div class=\"file-wrap-outer\" id=\"upgrade-file-wrap\">\r\n                                <div class=\"file-wrap\">\r\n                                    <div class=\"file-text-wrap\">\r\n                                        <span class=\"text-wrap\"><label class=\"file-text text-text\" id=\"upgrade-file-text\"></label></span>\r\n                                    </div>\r\n                                    <div class=\"file-button-wrap\">\r\n                                        <button type=\"button\" class=\"file-button\" name=\"browse\">\r\n                                            <span class=\"text button-text\" id=\"upgrade-text\">Browse</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <input type=\"file\" name=\"firmware\" class=\"file-input\" id=\"upgrade-input\" />\r\n                                    <div class=\"file-text-wrap2\" id=\"file-text-hover\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\t\t\t\t\t\t<div class=\"button-container\" id=\"upgrade-button-container\">\r\n\t\t\t\t\t\t\t<div class=\"button-wrap-outer\">\r\n\t\t\t\t\t\t\t\t<div class=\"button-wrap\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" id=\"submit-btn\"/>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"button-button\" id=\"upgrade-button\" name=\"upgrade\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"text button-text\">Upgrade</span>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                        <div class=\"progressbar-container\" id=\"upgrade-probar\">\r\n                            <div class=\"progressbar-wrap-outer\">\r\n                                <div class=\"proressbar-wrap\" id=\"upgrade-probar-wrap\">\r\n                                    <div class=\"progressbar-content\" id=\"upgrade-probar-content\">\r\n                                        <div class=\"progressbar-value\" id=\"upgrade-probar-value\"></div>\r\n                                    </div>\r\n                                    <div class=\"progressbar-text\">\r\n                                        <span class=\"progressbar-percentage\" id=\"upgrade-probar-percentage\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"progressbar-status\">\r\n                                    <span class=\"progressbar-result-text\" id=\"upgrade-result\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <iframe id=\"frame\" name=\"upgrade-iframe\" src=\"\" style=\"display:none\" frameborder=\"0\"></iframe>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n<script type=\"text/javascript\">\r\nvar doc_char = doc_char || {};\r\ndoc_char.en_us = {\r\n    BOOT: {\r\n        FAILED:                 \"Firmware upgrade failed.\",\r\n        SUCCESSED:              \"Firmware upgrade success.\",\r\n        INVALID_FILE:           \"Upgrade failed. The file is invalid.\",\r\n        INCOMPATIBLE_FIRMWARE:  \"Upgrade failed. The firmware version is not compatible with the router.\",\r\n        CONNECT_ERROR:          \"Upgrade failed. The computer is disconnected from the network.\"\r\n    }\r\n};\r\n\r\nvar lan_type = \"en_us\";\r\nvar _char = doc_char[lan_type];\r\n\r\nwindow.onload = function(){\r\n    var getObjById = function(id){\r\n    return document.getElementById(id);\r\n    };\r\n    var addClass = function(obj,_class){\r\n        obj.className = obj.className + \" \" + _class;\r\n    };\r\n    var removeClass = function(obj,_class){\r\n        obj.className = obj.className.replace(\" \" + _class, \"\");\r\n        obj.className = obj.className.replace(_class, \"\");\r\n    };\r\n    var show = function(obj,style){\r\n        var _css = style ? \"display: \" + style : \"display: block\";\r\n        setCss(obj, _css);\r\n    };\r\n    var hide = function(obj){\r\n        setCss(obj, \"display: none\");\r\n    }\r\n    var getCss = function(obj,key){\r\n        return obj.currentStyle ?  obj.currentStyle[key] : obj.ownerDocument.defaultView.getComputedStyle(obj,null)[key];\r\n    };\r\n    var setCss = function(obj,_css){\r\n        obj.style.cssText = _css;\r\n    };\r\n    var setProbarValue = function(contentObj, valueObj, percentage){\r\n        var totalWidth = parseInt(getCss(contentObj,\"width\"));\r\n        var valWidth = percentage * totalWidth / 100;\r\n        setCss(valueObj,\"width: \" + valWidth + \"px\")\r\n    };\r\n    var stopEventPropagation = function(event){\r\n        var event = event || window.event;\r\n        if(event.stopProragation){\r\n            event.stopPropagation();\r\n        }\r\n        else{\r\n            event.cancelBubble = true;\r\n        }\r\n    };\r\n    var closeSearch = function(){\r\n        var xmlhttp;\r\n        if (window.XMLHttpRequest) {\r\n            xmlhttp = new XMLHttpRequest();\r\n        }\r\n        else {\r\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n        xmlhttp.abort();\r\n        mystop();\r\n    }\r\n\r\n    var mystop = function() {\r\n        if (!!(window.attachEvent && !window.opera)){\r\n            document.execCommand(\"stop\");\r\n        }\r\n        else{\r\n            window.stop();\r\n        }\r\n    }\r\n\r\n    var upgrade_form = getObjById(\"upgrade-form\");\r\n    var upgrade_file_wrap = getObjById(\"upgrade-file-wrap\");\r\n    var upgrade_input = getObjById(\"upgrade-input\");\r\n    var upgrade_button = getObjById(\"upgrade-button\");\r\n    var submit_btn = getObjById(\"submit-btn\");\r\n    var upgrade_probar = getObjById(\"upgrade-probar\");\r\n    var upgrade_probar_value = getObjById(\"upgrade-probar-value\");\r\n    var upgrade_probar_percentage = getObjById(\"upgrade-probar-percentage\");\r\n    var upgrade_probar_content = getObjById(\"upgrade-probar-content\");\r\n    var upgrade_probar_wrap = getObjById(\"upgrade-probar-wrap\");\r\n    var upgrade_probar_result = getObjById(\"upgrade-result\");\r\n    var upgrade_iframe = getObjById(\"frame\");\r\n    var file_text_hover = getObjById(\"file-text-hover\");\r\n\r\n    var upgrade_id = false;\r\n\tvar currentWidth = 0;\r\n    var currentPercentage = 0;\r\n\r\n    upgrade_file_wrap.onclick = function(){\r\n        upgrade_input.click();\r\n    }\r\n    upgrade_input.onchange = function(){\r\n        var value = upgrade_input.value;\r\n        var p = /.+(?=\\\\)/g;\r\n        var v = value.toString().match(p);\r\n        if (v && v[0] && v[0].length){\r\n            v = value.substring(v[0].length+1);\r\n        }else{\r\n            v = value;\r\n        };\r\n        getObjById(\"upgrade-file-text\").innerHTML = v;\r\n        upgrade_probar_result.innerHTML = \"\";\r\n    }\r\n    upgrade_button.onclick = function(){\r\n\t\thide(upgrade_probar_result);\r\n        var value = upgrade_input.value;\r\n        if(!value){\r\n            upgrade_probar_result.innerHTML = _char.BOOT.INVALID_FILE;\r\n            show(upgrade_probar_result,\"inline-block\");\r\n            hide(upgrade_probar_wrap);\r\n            show(upgrade_probar,\"inline-block\");\r\n            return false;\r\n        }\r\n        var regex = /^.+\\.bin$/;\r\n        if (!regex.test(value)){\r\n            upgrade_probar_result.innerHTML = _char.BOOT.INVALID_FILE;\r\n            show(upgrade_probar_result,\"inline-block\");\r\n            hide(upgrade_probar_wrap);\r\n            show(upgrade_probar,\"inline-block\");\r\n            return false;\r\n        }\r\n        upgrade_button.setAttribute(\"disabled\",\"disabled\");\r\n        addClass(upgrade_button,\"disabled\");\r\n        if(upgrade_id){\r\n            clearInterval(upgrade_id);\r\n            upgrade_id=false;\r\n        }\r\n        upgrade_form.submit();\r\n        setCss(upgrade_probar_value,\"width: 0\");\r\n\t\tupgrade_probar_percentage.innerHTML = \"0%\";\r\n        currentWidth = 0;\r\n        currentPercentage = 0;\r\n        show(upgrade_probar_wrap,\"inline-block\");\r\n        show(upgrade_probar,\"inline-block\");\r\n        upgrade_id = setInterval(function(){\r\n            currentWidth += 1;\r\n            currentPercentage = (currentWidth * 100 / 365).toFixed(1);\r\n            if(currentPercentage >=40){\r\n                upgrade_probar_result.innerHTML = _char.BOOT.FAILED;\r\n                show(upgrade_probar_result,\"inline-block\");\r\n                upgrade_button.removeAttribute(\"disabled\");\r\n                removeClass(upgrade_button,\"disabled\");\r\n                clearInterval(upgrade_id);\r\n                closeSearch();\r\n            }\r\n            upgrade_probar_percentage.innerHTML = currentPercentage + \"%\";\r\n            setProbarValue(upgrade_probar_content,upgrade_probar_value,currentPercentage);\r\n        },860);\r\n    }\r\n    file_text_hover.onclick = function(e){\r\n        stopEventPropagation(e);\r\n    }\r\n    if(upgrade_iframe.attachEvent){  \r\n        upgrade_iframe.attachEvent(\"onload\",function(){\r\n            onLoadCallback();\r\n        });  \r\n    }\r\n    else{  \r\n        upgrade_iframe.onload = function(){  \r\n            onLoadCallback(); \r\n        }\r\n    }  \r\n    var onLoadCallback = function(){\r\n\t\tclearInterval(upgrade_id);\r\n        upgrade_id = false;\r\n\t\tvar doc;\r\n\t\ttry{\r\n\t\t\tdoc = document.getElementById(\"frame\").contentDocument.body.textContent || document.getElementById(\"frame\").contentDocument.body.innerHTML;\r\n\t\t}\r\n\t\tcatch(error){\r\n\t\t\tupgrade_probar_result.innerHTML = _char.BOOT.CONNECT_ERROR;\r\n\t\t\tshow(upgrade_probar_result,\"inline-block\");\r\n\t\t\tupgrade_button.removeAttribute(\"disabled\");\r\n\t\t\tremoveClass(upgrade_button,\"disabled\");\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tvar data = !doc ? \"\" : JSON.parse(doc);\r\n\t\tif(typeof(data) == \"object\" && data.success){\r\n\t\t\tcurrentWidth = 146;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tswitch(data.errorcode){\r\n\t\t\tcase \"-2\": upgrade_probar_result.innerHTML = _char.BOOT.INVALID_FILE;break;\r\n\t\t\tcase \"-3\": \r\n\t\t\tcase \"-4\":\r\n\t\t\tcase \"-5\":\r\n\t\t\tcase \"-6\":\r\n\t\t\t\t\t upgrade_probar_result.innerHTML = _char.BOOT.INCOMPATIBLE_FIRMWARE;break;\r\n\t\t\tdefault: upgrade_probar_result.innerHTML = _char.BOOT.FAILED;break;\r\n\t\t\t}\r\n\t\t\tupgrade_probar_percentage.innerHTML = \"40%\";\r\n\t\t\tsetProbarValue(upgrade_probar_content,upgrade_probar_value,40);\r\n\t\t\tshow(upgrade_probar_result,\"inline-block\");\r\n\t\t\tupgrade_button.removeAttribute(\"disabled\");\r\n\t\t\tremoveClass(upgrade_button,\"disabled\");\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n        upgrade_id = setInterval(function(){\r\n            currentWidth += 1;\r\n\t\t\tcurrentPercentage = (currentWidth * 100 / 365).toFixed(1);\r\n            if(currentPercentage >=100){\r\n                currentPercentage = 100;\r\n                upgrade_probar_result.innerHTML = _char.BOOT.SUCCESSED;\r\n                show(upgrade_probar_result,\"inline-block\");\r\n                //upgrade_button.removeAttribute(\"disabled\");\r\n                //removeClass(upgrade_button,\"disabled\");\r\n                clearInterval(upgrade_id);\r\n\t\t\t\tlocation.href=\"/\";\r\n            }\r\n            upgrade_probar_percentage.innerHTML = currentPercentage + \"%\";\r\n            setProbarValue(upgrade_probar_content,upgrade_probar_value,currentPercentage);\r\n        },822);\r\n    }\r\n}\r\n</script></body></html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "folderSharing.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 50
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar userTbl = new Array();\r\nvar smbService;\r\nvar ftpServer;\r\nvar username = \"\";\r\nvar password = \"\";\r\nvar cfPassword = \"\";\r\nvar blank = \"&nbsp;&nbsp;\";\r\nvar usbDeviceList;\r\nvar volumeList;\r\nvar smbService;\r\nvar dlnaService;\r\nvar accessFolderList_samba;\r\nvar accessFolderList_ftp;\r\nvar accessFolderList_dlna;\r\n\r\nvar numAliveDev = 0;\r\nvar numAliveLog = 0;\r\nvar idx;\r\n\r\nvar currVolume = \"\";\r\nvar currPath = \"\";\r\n\r\nvar currentFolder = \"\";\r\nvar fPath = \"\";\r\n\r\nvar firstClick = 1;\r\nvar firstNode = 1;\r\nvar o;\r\nvar prevObj;\r\n\r\nvar folderPath = \"\";\r\nvar currentVol = \"\";\r\n\r\nvar folderIdx;\r\nvar shareTabStatus = \"\";\r\nvar editCurIndex;\r\n\r\nvar g_ftpPort;\r\nvar userCfg;\r\n\r\nfunction selectJudge(index) {\r\n    var i;\r\n    var selectAll = 1;\r\n\r\n    if ($(\"#cb\" + index).prop(\"data-checked\") == true) {\r\n        for (i = 0; i < accessFolderList_samba.length; i++) {\r\n            if ($(\"#cb\" + i).prop(\"data-checked\") == false) {\r\n                selectAll = 0;\r\n            }\r\n        }\r\n\r\n        if (selectAll == 1) {\r\n            $(\"#shareTitle\").prop(\"checked\", true);\r\n            $(\"#shareTitle\").tpCheckbox();\r\n        }\r\n    } else {\r\n        $(\"#shareTitle\").prop(\"checked\", false);\r\n        $(\"#shareTitle\").tpCheckbox();\r\n    }\r\n}\r\n\r\n\r\nfunction initAccessTab() {\r\n    var array = new Array();\r\n    var index;\r\n    var ipv4Addr;\r\n    var wanIpv4 = \"0.0.0.0\";\r\n    var brList = $.act(ACT_GL, L2_BRIDGING_ENTRY, null, null, [\"bridgeName\"]);\r\n    var realSysMode = $.act(ACT_GET, SYS_MODE, null, null);\r\n    var wans = $.act(ACT_GL, WAN_COMMON_INTF_CFG, null, null, [\"WANAccessType\"]);\r\n    var l3f = $.act(ACT_GET, L3_FORWARDING, null, null, [\"__ifAliasName\"]);\r\n    if (INCLUDE_VDSLWAN) {\r\n        vdsls = $.act(ACT_GL, WAN_PTM_LINK_CFG, null, null, [\"X_TP_Used\", \"X_TP_VID\"]);\r\n    }\r\n    if (INCLUDE_L2TP) {\r\n        var wanL2tpList = $.act(ACT_GL, WAN_L2TP_CONN, null, null, [\"enable\", \"name\", \"addressingType\", \"transportType\", \"externalIPAddress\"]);\r\n    }\r\n    if (INCLUDE_PPTP) {\r\n        var wanPptpList = $.act(ACT_GL, WAN_PPTP_CONN, null, null, [\"enable\", \"name\", \"addressingType\", \"transportType\", \"externalIPAddress\"]);\r\n    }\r\n\r\n\r\n    if (INCLUDE_WAN_VLAN) {\r\n        var ips = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"name\", \"connectionType\", \"addressingType\", \"externalIPAddress\", \"subnetMask\", \"defaultGateway\", \"DNSServers\", \"X_TP_8021QEnabled\", \"X_TP_VlanID\"]);\r\n        var ppps = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"name\", \"transportType\", \"username\", \"password\", \"X_TP_8021QEnabled\", \"X_TP_VlanID\", \"externalIPAddress\"]);\r\n    } else {\r\n        var ips = $.act(ACT_GL, WAN_IP_CONN, null, null, [\"name\", \"connectionType\", \"addressingType\", \"externalIPAddress\", \"subnetMask\", \"defaultGateway\", \"DNSServers\"]);\r\n        var ppps = $.act(ACT_GL, WAN_PPP_CONN, null, null, [\"name\", \"transportType\", \"username\", \"password\", \"externalIPAddress\"]);\r\n    }\r\n\r\n    if (!$.exe()) {\r\n        var systemMode = realSysMode.mode;\r\n\r\n        for (index = 0; index < brList.length; index++) {\r\n            var lanIPv4Cfg = $.act(ACT_GS, LAN_IP_INTF, null, brList[index].__stack, [\"IPInterfaceIPAddress\"]);\r\n            if (!$.exe()) {\r\n                ipv4Addr = lanIPv4Cfg[0].IPInterfaceIPAddress;\r\n            }\r\n        }\r\n\r\n        if (systemMode == \"DSL\") {\r\n            $.merge(ips, ppps);\r\n            $.each(ips, function() {\r\n                if (this.name === l3f.__ifAliasName) {\r\n                    var obj;\r\n                    wanIpv4 = this.externalIPAddress;\r\n                }\r\n            });\r\n        } else if (systemMode == \"ETH\") {\r\n            $.merge(ips, ppps);\r\n            $.each(ips, function() {\r\n                if (this.name === l3f.__ifAliasName) {\r\n                    wanIpv4 = this.externalIPAddress;\r\n                }\r\n            });\r\n\r\n            if (INCLUDE_PPTP) {\r\n                $.each(wanPptpList, function() {\r\n                    if ($.arr2obj(wans, \"__stack\")[$.stkPop(this.__stack, 1)].WANAccessType === \"Ethernet\") {\r\n                        if (this.name === l3f.__ifAliasName) {\r\n                            wanIpv4 = this.externalIPAddress;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (INCLUDE_L2TP) {\r\n                $.each(wanL2tpList, function() {\r\n                    if ($.arr2obj(wans, \"__stack\")[$.stkPop(this.__stack, 1)].WANAccessType === \"Ethernet\") {\r\n                        if (this.name === l3f.__ifAliasName) {\r\n                            wanIpv4 = this.externalIPAddress;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        } else if (systemMode == \"USB_3G\") {\r\n            $.each(ppps, function() {\r\n                if ($.arr2obj(wans, \"__stack\")[$.stkPop(this.__stack, 2)].WANAccessType === \"USB_3G\") {\r\n                    if ((this.name === l3f.__ifAliasName) && (this.transportType == \"PPP3G\")) {\r\n                        wanIpv4 = this.externalIPAddress;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        array.push([{\r\n            \"text\": '<div><input type=\"checkbox\" id=\"mediaServer\" /><label></label></div>',\r\n            \"width\": \"16%\"\r\n        }, {\r\n            \"text\": table_str.mediaServer,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": \"--\",\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": \"--\",\r\n            \"width\": \"20%\"\r\n        }], [{\r\n            \"text\": '<div><input type=\"checkbox\" id=\"samba\" /><label></label></div>',\r\n            \"width\": \"16%\"\r\n        }, {\r\n            \"text\": table_str.netNeig,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": \"\\\\\\\\\" + smbService.serverName,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": \"--\",\r\n            \"width\": \"20%\"\r\n        }], [{\r\n            \"text\": '<div><input type=\"checkbox\" id=\"innerFtp\" /><label></label></div>',\r\n            \"width\": \"16%\"\r\n        }, {\r\n            \"text\": table_str.ftp,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": table_str.ftpSign + ipv4Addr + \":\" + g_ftpPort,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": '<input type=\"text\" id=\"port\" class=\"s\" style=\"text-align:center\" maxlength=\"5\" />',\r\n            \"width\": \"20%\"\r\n        }], [{\r\n            \"text\": '<div><input type=\"checkbox\" id=\"outerFtp\" /><label></label></div>',\r\n            \"width\": \"16%\"\r\n        }, {\r\n            \"text\": table_str.ftpInternet,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": table_str.ftpSign + wanIpv4 + \":\" + g_ftpPort,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": g_ftpPort,\r\n            \"width\": \"20%\"\r\n        }]);\r\n\r\n        $.initTableBody($('#accessTab'), array);\r\n        if (ftpServer.enable == 0) {\r\n            $('#accessTab').find('tr').eq(4).addClass('nd');\r\n        }\r\n        $(\"#innerFtp\").click(function() {\r\n            if ($(this).prop(\"data-checked\") == true) {\r\n                $('#accessTab').find('tr').eq(4).removeClass('nd');\r\n            } else {\r\n                $('#accessTab').find('tr').eq(4).addClass('nd');\r\n            }\r\n\r\n        });\r\n        return array;\r\n    }\r\n}\r\n\r\nfunction initShareTab() {\r\n    var array = new Array();\r\n    var fp;\r\n    var matchVolume;\r\n    var status;\r\n    var dlnaEnable;\r\n    var ableControl;\r\n    var j;\r\n    var index;\r\n    var edit = \"\";\r\n    var del = \"\";\r\n    var i;\r\n\r\n    for (index = 0; index < accessFolderList_samba.length; index++) {\r\n        var match = false;\r\n        var volumeName = m_str.disconnected;\r\n        fp = accessFolderList_samba[index].volumeLabel + \":\" + accessFolderList_samba[index].name;\r\n\r\n        $.each(volumeList, function() {\r\n            if (this.uuid == accessFolderList_samba[index].volumeUuid) {\r\n                matchVolume = this;\r\n                match = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        dlnaEnable = table_str.off;\r\n        if (accessFolderList_dlna[index].enable == 1) {\r\n            dlnaEnable = table_str.on;\r\n        }\r\n\r\n        if ((accessFolderList_samba[index].volumeUuid != \"\") && (match == false)) {\r\n            ableControl = \"<span class='table-grid-icon inactive-disable-icon' id='sp\" + index + \"' onclick='ableShare(\" + index + \", \" + match + \", \" + matchVolume + \");'></span>\";\r\n        } else if ((accessFolderList_samba[index].volumeUuid != \"\") && (matchVolume.status != \"Online\")) {\r\n            if (\"Error\" == matchVolume.status) {\r\n                ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n            } else if ((\"Offline\" == matchVolume.status) && (matchVolume.enable == 1)) {\r\n                ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n            } else {\r\n                ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n            }\r\n        } else {\r\n            if (1 == accessFolderList_samba[index].enable) {\r\n                ableControl = \"<span class='table-grid-icon enable-icon' id='sp\" + index + \"' onclick='ableShare(\" + index + \");'></span>\";\r\n            } else {\r\n                ableControl = \"<span class='table-grid-icon disable-icon' id='sp\" + index + \"' onclick='ableShare(\" + index + \");'></span>\";\r\n            }\r\n        }\r\n\r\n        edit = \"<span class='table-grid-icon edit-modify-icon' id='edit\" + index + \"' onclick='modifyShare(\" + index + \");'></span>\"\r\n        del = \"<span class='table-grid-icon edit-trash-icon' id='del\" + index + \"' onclick='delShare(\" + index + \");'></span>\"\r\n\r\n        for (i = 0; i < volumeList.length; i++) {\r\n            if (volumeList[i].label == accessFolderList_samba[index].volumeLabel) {\r\n                volumeName = volumeList[i].name;\r\n            }\r\n        }\r\n\r\n        if (volumeName == undefined) {\r\n            volumeName = m_str.disconnected;\r\n        }\r\n\r\n        array.push([{\r\n            \"text\": '<div><input type=\"checkbox\" id=\"cb' + index + '\" onclick=\"selectJudge(' + index + ');\" /><label></label></div>',\r\n            \"width\": \"8%\"\r\n        }, {\r\n            \"text\": (index + 1),\r\n            \"width\": \"5%\"\r\n        }, {\r\n            \"text\": accessFolderList_samba[index].alias,\r\n            \"width\": \"15%\"\r\n        }, {\r\n            \"text\": escapeStr(fp),\r\n            \"width\": \"25%\"\r\n        }, {\r\n            \"text\": dlnaEnable,\r\n            \"width\": \"10%\"\r\n        }, {\r\n            \"text\": volumeName,\r\n            \"width\": \"10%\"\r\n        }, {\r\n            \"text\": ableControl,\r\n            \"width\": \"10%\"\r\n        }, {\r\n            \"text\": edit + del,\r\n            \"width\": \"17%\"\r\n        }]);\r\n    }\r\n\r\n    $.initTableBody($('#shareTab'), array);\r\n    $.tablePages($('#shareTab'), 8);\r\n    return array;\r\n}\r\n\r\nfunction ableShare(index) {\r\n    var command = {};\r\n\r\n    var matchVolume;\r\n    var match = false;\r\n    var _index;\r\n\r\n    $.each(volumeList, function() {\r\n        if (this.uuid == accessFolderList_samba[index].volumeUuid) {\r\n            matchVolume = this;\r\n            match = true;\r\n        }\r\n    });\r\n\r\n    if ((accessFolderList_samba[index].volumeUuid != \"\") && (match == false)) {\r\n\r\n    } else if ((accessFolderList_samba[index].volumeUuid != \"\") && (matchVolume.status != \"Online\")) {\r\n\r\n    } else {\r\n        if (1 == accessFolderList_samba[index].enable) {\r\n            command.enable = 0;\r\n        } else {\r\n            command.enable = 1;\r\n        }\r\n    }\r\n\r\n    $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, command);\r\n    $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, command);\r\n    $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, command);\r\n\r\n    if (!$.exe()) {\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n        if (!$.exe()) {\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"folderSharing.htm\", param);\r\n        }\r\n    }\r\n}\r\n\r\n$(\"#shareItemAdd\").click(function() {\r\n    shareTabStatus = \"add\";\r\n});\r\n\r\nfunction modifyShare(index) {\r\n    var i;\r\n    editCurIndex = index;\r\n    var str = accessFolderList_samba[index].volumeLabel + \":\";\r\n\r\n    $(\"#shareVolume option[value='\" + str + \"']\").prop(\"selected\", \"selected\");\r\n    var options = {\r\n        refresh: 1\r\n    };\r\n    $(\"#shareVolume\").tpSelect(options);\r\n\r\n    $(\"#filename\").val(accessFolderList_samba[index].volumeLabel + \":\" + accessFolderList_samba[index].name);\r\n    $(\"#shareName\").val(accessFolderList_samba[index].alias);\r\n\r\n    if (accessFolderList_samba[index].needAuth == 1) {\r\n        $(\"#ea\").prop(\"checked\", true);\r\n        $(\"#ea\").data(\"tpCheckbox\").refresh();\r\n    }\r\n\r\n    for (i = 0; i < userAccessList_samba.length; i++) {\r\n        if (parseInt(accessFolderList_samba[index].__stack, 10) != parseInt(userAccessList_samba[i].__stack, 10)) {\r\n            continue;\r\n        }\r\n\r\n        if (parseInt(userList[0].__stack, 10) == userAccessList_samba[i].userId) {\r\n            if (userAccessList_samba[i].permissions == 7) {\r\n                $(\"#wa\").prop(\"checked\", true);\r\n                $(\"#wa\").data(\"tpCheckbox\").refresh();\r\n            } else {\r\n                $(\"#wa\").prop(\"checked\", false);\r\n                $(\"#wa\").data(\"tpCheckbox\").refresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (accessFolderList_dlna[index].enable == 1) {\r\n        $(\"#ems\").prop(\"checked\", true);\r\n        $(\"#ems\").data(\"tpCheckbox\").refresh();\r\n    }\r\n\r\n    shareTabStatus = \"modify\";\r\n}\r\n\r\nfunction delShare(index) {\r\n\r\n    $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);\r\n    $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);\r\n    $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);\r\n\r\n    if (!$.exe()) {\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n        if (!$.exe()) {\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"folderSharing.htm\", param);\r\n        }\r\n    }\r\n}\r\n\r\nfunction delShareMul(index) {\r\n\r\n    $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);\r\n    $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);\r\n    $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);\r\n\r\n    $.exe();\r\n}\r\n\r\nfunction initAuthTab() {\r\n    var array = new Array();\r\n    var index;\r\n\r\n    if (volumeList.length == 0) {\r\n        array.push([{\r\n            \"text\": \"--\",\r\n            \"width\": \"10%\"\r\n        }, {\r\n            \"text\": \"--\",\r\n            \"width\": \"40%\"\r\n        }, {\r\n            \"text\": \"--\",\r\n            \"width\": \"25%\"\r\n        }, {\r\n            \"text\": \"--\",\r\n            \"width\": \"25%\"\r\n        }]);\r\n    }\r\n\r\n    usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n    volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);\r\n    if (!$.exe()) {\r\n        for (idx = 1; idx <= usbDeviceList.length; idx++) {\r\n            if (\"Online\" == usbDeviceList[idx - 1].status) {\r\n                for (index = 0; index < volumeList.length; index++) {\r\n                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[index].__stack).split(','))[0]) {\r\n                        if (volumeList[index].status == \"Online\") {\r\n                            array.push([{\r\n                                \"text\": (index + 1),\r\n                                \"width\": \"10%\"\r\n                            }, {\r\n                                \"text\": \"volume(\" + volumeList[index].name + \")\",\r\n                                \"width\": \"40%\"\r\n                            }, {\r\n                                \"text\": volumeList[index].label + \":\",\r\n                                \"width\": \"25%\"\r\n                            }, {\r\n                                \"text\": volumeList[index].name,\r\n                                \"width\": \"25%\"\r\n                            }]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $.initTableBody($('#authTab'), array);\r\n        $.tablePages($('#authTab'), 5);\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\n$(\"#refShareSet\").click(function() {\r\n    initAuthTab();\r\n});\r\n\r\nfunction selectAll() {\r\n    var index;\r\n    if ($(\"#shareTitle\").prop(\"data-checked\") == true) {\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            $(\"#cb\" + index).prop(\"checked\", true);\r\n            $(\"#cb\" + index).data(\"tpCheckbox\").refresh();\r\n        }\r\n    } else {\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            $(\"#cb\" + index).prop(\"checked\", false);\r\n            $(\"#cb\" + index).data(\"tpCheckbox\").refresh();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction init() {\r\n    userList = $.act(ACT_GL, USER_ACCOUNT, null, null);\r\n    smbService = $.act(ACT_GET, SMB_SERVICE, null, null, null);\r\n    ftpServer = $.act(ACT_GET, FTP_SERVER, null, null, null);\r\n\r\n    usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n    volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);\r\n\r\n    dlnaService = $.act(ACT_GET, DLNA_MEDIA_SERVER, null, null, null);\r\n    accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n    accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n    accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n\r\n    userAccessList_samba = $.act(ACT_GL, SMB_USER_ACCESS, null, null, null);\r\n    userCfg = $.act(ACT_GET, USER_CFG, null, null, null);\r\n\r\n    var index;\r\n\r\n    if (!$.exe()) {\r\n        userTbl[0] = {};\r\n        userTbl[0].stack = userList[0].__stack;\r\n\r\n        if (userList[0].X_TP_UseLoginAccount == 1) {\r\n            $(\"#loginAccount\").prop(\"checked\", true);\r\n            $(\"#username\").val(userCfg.adminName);\r\n            $(\"#username\").prop(\"disabled\", true);\r\n            $(\"#password\").tpPassword(\"disabled\", true);\r\n            $(\"#password\").val(userCfg.adminPwd);\r\n            $(\"#pwdCheck\").addClass(\"nd\");\r\n            $(\"#cfpwd\").addClass(\"nd\");\r\n        } else {\r\n            $(\"#followingAccount\").prop(\"checked\", true);\r\n            $(\"#username\").val(userList[0].username);\r\n            $(\"#password\").tpPassword('val', userList[0].password);\r\n            $(\"#cfPassword\").val(userList[0].password);\r\n            $(\"#t_salp\").addClass(\"nd\");\r\n        }\r\n\r\n        g_ftpPort = ftpServer.portNumber;\r\n\r\n        var headArray = [{\r\n            \"text\": table_str.enable,\r\n            \"width\": \"16%\"\r\n        }, {\r\n            \"text\": table_str.acMethod,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": table_str.link,\r\n            \"width\": \"32%\"\r\n        }, {\r\n            \"text\": table_str.port,\r\n            \"width\": \"20%\"\r\n        }];\r\n        $.initTableHead($('#accessTab'), headArray);\r\n        $('#accessTab').tpTable(initAccessTab);\r\n\r\n        if (dlnaService.serverState == 1) {\r\n            $(\"#mediaServer\").prop(\"checked\", true);\r\n            $(\"#mediaServer\").data(\"tpCheckbox\").refresh();\r\n        } else {\r\n            $(\"#mediaServer\").prop(\"checked\", false);\r\n            $(\"#mediaServer\").data(\"tpCheckbox\").refresh();\r\n        }\r\n\r\n        if (smbService.enable == 1) {\r\n            $(\"#samba\").prop(\"checked\", true);\r\n            $(\"#samba\").data(\"tpCheckbox\").refresh();\r\n        } else {\r\n            $(\"#samba\").prop(\"checked\", false);\r\n            $(\"#samba\").data(\"tpCheckbox\").refresh();\r\n        }\r\n\r\n        if (ftpServer.enable == 1) {\r\n            $(\"#innerFtp\").prop(\"checked\", true);\r\n            $(\"#innerFtp\").data(\"tpCheckbox\").refresh();\r\n        } else {\r\n            $(\"#innerFtp\").prop(\"checked\", false);\r\n            $(\"#innerFtp\").data(\"tpCheckbox\").refresh();\r\n        }\r\n\r\n        if (ftpServer.accessFromInternet == 1) {\r\n            $(\"#outerFtp\").prop(\"checked\", true);\r\n            $(\"#outerFtp\").data(\"tpCheckbox\").refresh();\r\n        } else {\r\n            $(\"#outerFtp\").prop(\"checked\", false);\r\n            $(\"#outerFtp\").data(\"tpCheckbox\").refresh();\r\n        }\r\n\r\n        $(\"#port\").val(ftpServer.portNumber);\r\n\r\n        $(\"#server_name\").val(smbService.serverName);\r\n\r\n        var headArray = [{\r\n            \"text\": '<div><input type=\"checkbox\" id=\"shareTitle\" onclick=\"selectAll();\" /><label></label></div>',\r\n            \"width\": \"8%\"\r\n        }, {\r\n            \"text\": table_str.id,\r\n            \"width\": \"5%\"\r\n        }, {\r\n            \"text\": table_str.shareName,\r\n            \"width\": \"15%\"\r\n        }, {\r\n            \"text\": table_str.folderPath,\r\n            \"width\": \"25%\"\r\n        }, {\r\n            \"text\": table_str.mediaSharing,\r\n            \"width\": \"10%\"\r\n        }, {\r\n            \"text\": table_str.volume,\r\n            \"width\": \"10%\"\r\n        }, {\r\n            \"text\": table_str.status,\r\n            \"width\": \"10%\"\r\n        }, {\r\n            \"text\": table_str.modify,\r\n            \"width\": \"17%\"\r\n        }];\r\n        $.initTableHead($('#shareTab'), headArray);\r\n        $('#shareTab').tpTable(initShareTab);\r\n\r\n        var authHeadArray = [{\r\n            \"text\": table_str.id,\r\n            width: \"10%\"\r\n        }, {\r\n            \"text\": table_str.shareName,\r\n            width: \"40%\"\r\n        }, {\r\n            \"text\": table_str.folderPath,\r\n            width: \"25%\"\r\n        }, {\r\n            \"text\": table_str.volume,\r\n            width: \"25%\"\r\n        }];\r\n        $.initTableHead($('#authTab'), authHeadArray);\r\n        $('#authTab').tpTable(initAuthTab);\r\n\r\n        if (smbService.anonymous == 0) {\r\n            $(\"#authOn\").addClass(\"selected\");\r\n        } else {\r\n            $(\"#authOff\").addClass(\"selected\");\r\n        }\r\n\r\n        if (smbService.shareAll == false) {\r\n            $(\"#shareOff\").addClass(\"selected\");\r\n            $(\"#authentication\").addClass(\"nd\");\r\n            $(\"#authDrawing\").addClass(\"nd\");\r\n            $(\"#shareDrawing\").removeClass(\"nd\");\r\n        } else {\r\n            $(\"#shareOn\").addClass(\"selected\");\r\n            $(\"#shareDrawing\").addClass(\"nd\");\r\n            $(\"#authentication\").removeClass(\"nd\");\r\n\r\n            $(\"#authDrawing\").removeClass(\"nd\");\r\n        }\r\n\r\n        $(\"#server_name\").val(smbService.serverName);\r\n\r\n        var $volNameSelect = $(\"#shareVolume\");\r\n\r\n        while ((i = $(\"#shareVolume option\").length) > 0) {\r\n            $(\"#shareVolume option[index='0']\").remove();\r\n        }\r\n\r\n        var $ispOption = $(\"<option></option>\");\r\n        $ispOption.val(table_str.selectopt);\r\n        $ispOption.text(table_str.selectopt);\r\n\r\n        $volNameSelect.append($ispOption);\r\n\r\n        for (index = 0; index < volumeList.length; index++) {\r\n            if (\"Online\" == volumeList[index].status) {\r\n                $ispOption = $(\"<option></option>\");\r\n                $ispOption.val(volumeList[index].label + \":\");\r\n                $ispOption.text(volumeList[index].label + \":\");\r\n\r\n                $volNameSelect.append($ispOption);\r\n            }\r\n        }\r\n\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            if (parseInt(accessFolderList_samba[index].__stack, 10) != parseInt(userAccessList_samba[0].__stack, 10)) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        folderIdx = accessFolderList_samba.length;\r\n    }\r\n\r\n    if ($.mainParam !== undefined) {\r\n        var param = new Object();\r\n        param = $.mainParam;\r\n        $('#scroll').scrollTop(param.scrollTop);\r\n    }\r\n}\r\n\r\n$(\"#shareOn\").click(function() {\r\n    $.addLoading($(this));\r\n    $.act(ACT_SET, SMB_SERVICE, null, null, [\"shareAll=1\"]);\r\n    $.act(ACT_SET, FTP_SERVER, null, null, [\"shareAll=1\"]);\r\n    $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"shareAll=1\"]);\r\n\r\n    if (!$.exe()) {\r\n        $(\"#authentication\").removeClass(\"nd\");\r\n        $(\"#shareDrawing\").addClass(\"nd\");\r\n        $(\"#authDrawing\").removeClass(\"nd\");\r\n        $.removeLoading();\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"folderSharing.htm\", param);\r\n    }\r\n});\r\n\r\n$(\"#shareOff\").click(function() {\r\n    $.addLoading($(this));\r\n    $.act(ACT_SET, SMB_SERVICE, null, null, [\"shareAll=0\"]);\r\n    $.act(ACT_SET, FTP_SERVER, null, null, [\"shareAll=0\"]);\r\n    $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"shareAll=0\"]);\r\n\r\n    if (!$.exe()) {\r\n        $(\"#authentication\").addClass(\"nd\");\r\n        $(\"#authDrawing\").addClass(\"nd\");\r\n        $(\"#shareDrawing\").removeClass(\"nd\");\r\n        $.removeLoading();\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"folderSharing.htm\", param);\r\n    }\r\n});\r\n\r\n$(\"#authOn\").click(function() {\r\n    $.addLoading($(this));\r\n    $.act(ACT_SET, SMB_SERVICE, null, null, [\"anonymous=0\"]);\r\n    $.act(ACT_SET, FTP_SERVER, null, null, [\"anonymous=0\"]);\r\n\r\n    if (!$.exe()) {\r\n        $.removeLoading();\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"folderSharing.htm\", param);\r\n    };\r\n});\r\n\r\n$(\"#authOff\").click(function() {\r\n    $.addLoading($(this));\r\n    $.act(ACT_SET, SMB_SERVICE, null, null, [\"anonymous=1\"]);\r\n    $.act(ACT_SET, FTP_SERVER, null, null, [\"anonymous=1\"]);\r\n\r\n    if (!$.exe()) {\r\n        $.removeLoading();\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"folderSharing.htm\", param);\r\n    };\r\n});\r\n\r\nfunction getParentObj(obj) {\r\n    if (!obj.hasClass('cc')) {\r\n        currentFolder = obj.siblings().text();\r\n        if (fPath != \"\") {\r\n            currentFolder += (\"/\" + fPath);\r\n        }\r\n        fPath = currentFolder;\r\n        getParentObj(obj.parent());\r\n    } else {\r\n        fPath = \"/\" + fPath;\r\n    }\r\n}\r\n\r\nfunction clickFunc(obj) {\r\n    fPath = \"\";\r\n    currPath = \"\";\r\n\r\n    var id = obj.id;\r\n    var $ob = $(\"#\" + id).parent();\r\n\r\n    getParentObj($ob);\r\n}\r\n\r\n$(\"#shareVolume\").click(function() {\r\n    currentVol = $(\"#shareVolume\").data(\"value\");\r\n});\r\n\r\nfunction escapeStr(str) {\r\n    return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/ /g, '&nbsp;');\r\n}\r\n\r\nfunction transStr(str) {\r\n    return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/\\s/g, ' ');\r\n}\r\n\r\nfunction getFolderPath(obj) {\r\n    var label;\r\n    var index;\r\n\r\n    if (firstNode == 1) {\r\n        if (!$(obj).parent().hasClass('root')) {\r\n            folderPath = (\"/\" + $(obj).text());\r\n            o = obj;\r\n            firstNode = 0;\r\n            getFolderPath($(obj).parent());\r\n        } else {\r\n            folderPath = $(obj).text();\r\n\r\n            for (index = 0; index < volumeList.length; index++) {\r\n                if ($(obj).text() == (volumeList[index].label + \":\")) {\r\n                    currVolume = volumeList[index].name;\r\n                }\r\n            }\r\n\r\n            var color = $(obj).css(\"color\");\r\n            $(obj).css(\"color\", \"#4acbd6\");\r\n            if (prevObj) {\r\n                $(prevObj).css(\"color\", color);\r\n\r\n                var $prefol = $(prevObj).siblings(\".folderSel\");\r\n                if (prevObj != obj) {\r\n                    $prefol.removeClass(\"folderSel\");\r\n                    $prefol.addClass(\"folderImg\");\r\n                }\r\n            }\r\n            prevObj = obj;\r\n        }\r\n    } else {\r\n        if (!$(obj).parent().hasClass('root')) {\r\n            folderPath = (\"/\" + $(obj).siblings('span').text()) + folderPath;\r\n            getFolderPath($(obj).parent());\r\n        } else {\r\n            label = $(obj).siblings('.span').text();\r\n\r\n            for (index = 0; index < volumeList.length; index++) {\r\n                if ($(obj).siblings('.span').text() == (volumeList[index].label + \":\")) {\r\n                    currVolume = volumeList[index].name;\r\n                }\r\n            }\r\n\r\n            folderPath = label + folderPath;\r\n            firstNode = 1;\r\n\r\n            var color = $(o).css(\"color\");\r\n            $(o).css(\"color\", \"#4acbd6\");\r\n\r\n            var $ofol = $(o).siblings(\".folderImg\");\r\n            $ofol.removeClass(\"folderImg\");\r\n            $ofol.addClass(\"folderSel\");\r\n\r\n            if (prevObj) {\r\n                $(prevObj).css(\"color\", color);\r\n\r\n                var $prefol = $(prevObj).siblings(\".folderSel\");\r\n                if (prevObj != o) {\r\n                    $prefol.removeClass(\"folderSel\");\r\n                    $prefol.addClass(\"folderImg\");\r\n                }\r\n\r\n            }\r\n            prevObj = o;\r\n        }\r\n    }\r\n}\r\n\r\nfunction createChildFolder(obj) {\r\n    var index;\r\n\r\n    if (firstClick == 1) {\r\n        firstClick = 0;\r\n        o = obj;\r\n    }\r\n\r\n    if (!$(obj).parent().hasClass('root')) {\r\n        currentFolder = $(obj).siblings('.fName').text();\r\n\r\n        if (currPath != \"\") {\r\n            currentFolder += (\"/\" + currPath);\r\n        }\r\n        currPath = currentFolder;\r\n\r\n        createChildFolder($(obj).parent());\r\n    } else {\r\n        for (index = 0; index < volumeList.length; index++) {\r\n            if ($(obj).siblings('.span').text() == (volumeList[index].label + \":\")) {\r\n                currVolume = volumeList[index].name;\r\n            }\r\n        }\r\n\r\n        var fullPath = currVolume + \"/\" + transStr(currPath);\r\n\r\n        var command = {};\r\n        command.targetPath = fullPath;\r\n        var ide;\r\n\r\n        $.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n        folderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\r\n        if (!$.exe()) {\r\n            for (ide = 0; ide < folderList.length; ide++) {\r\n                var folderNameStr = escapeStr(folderList[ide].folderName);\r\n                text = (\"<div style='padding-left:\" + 23 + \"px;' class='div'><div class='addFolder inline' onclick=loadClick(this);></div><div class='folderImg inline' onclick=foldSelect(this); style='cursor:pointer;'></div>&nbsp;<span class='fName inline' style='line-height:24px;vertical-align:top;cursor:pointer;' onClick='getFolderPath(this);'>\" + folderNameStr + \"</span></div>\");\r\n                $(o).parent().append(text);\r\n            }\r\n        }\r\n        firstClick = 1;\r\n        currPath = \"\";\r\n        if (!($(o).parent().hasClass(\"root\"))) {\r\n            $(o).parent().addClass(\"loaded\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction foldSelect(obj) {\r\n    $(obj).siblings(\".fName\").click();\r\n}\r\n\r\nfunction loadClick(obj) {\r\n    if ($(obj).hasClass(\"addFolder\")) {\r\n        if ($(obj).parent().hasClass(\"vol\")) {\r\n            $(obj).siblings('div').removeClass(\"nd\");\r\n            $(o).parent().removeClass(\"vol\");\r\n        } else if ($(obj).parent().hasClass(\"loaded\")) {\r\n            $(obj).siblings('div').removeClass(\"nd\");\r\n        } else {\r\n            createChildFolder(obj);\r\n        }\r\n\r\n        $(obj).removeClass(\"addFolder\");\r\n        $(obj).addClass(\"hideFolder\");\r\n    } else if ($(obj).hasClass(\"hideFolder\")) {\r\n        $(obj).removeClass(\"hideFolder\");\r\n        $(obj).addClass(\"addFolder\");\r\n\r\n        if ($(obj).parent().hasClass(\"root\")) {\r\n            $(obj).parent().addClass(\"vol\");\r\n        }\r\n\r\n        $(obj).siblings('div').addClass(\"nd\");\r\n    }\r\n}\r\n\r\nfunction showBrowse() {\r\n    $.setFixedCentral($(\"#folderSel\"));\r\n    $.showCover();\r\n    $(\"#folderSel\").removeClass(\"nd\");\r\n    var index;\r\n    var i;\r\n\r\n    for (index = 0; index < volumeList.length; index++) {\r\n        if (\"Online\" == volumeList[index].status && currentVol == (volumeList[index].label + \":\")) {\r\n            var text;\r\n            text = (\"<div style='padding-left:10px;' class='root'><div class='addFolder inline' onclick=loadClick(this);></div>&nbsp;<span class='span inline' style='line-height:24px;vertical-align:top;cursor:pointer;' onClick='getFolderPath(this);'>\" + volumeList[index].label + \":\" + \"</span></div>\");\r\n\r\n            $(\"#folderSelContent\").append(text);\r\n        }\r\n    }\r\n}\r\n\r\n$(\"#cancelPathSel\").click(function() {\r\n    $.hideCover();\r\n    $(\"#folderSelContent\").empty();\r\n    $(\"#folderSel\").addClass(\"nd\");\r\n});\r\n\r\n$(\"#confirmPathSel\").click(function() {\r\n    $.hideCover();\r\n    $(\"#folderSelContent\").empty();\r\n    $(\"#folderSel\").addClass(\"nd\");\r\n    $(\"#filename\").val(transStr(folderPath));\r\n});\r\n\r\nfunction showFilename(o) {\r\n    var filename = $.id(\"filename\");\r\n    if (filename) {\r\n        filename.value = o.value;\r\n    }\r\n}\r\n\r\nfunction deleteItem() {\r\n    var index;\r\n\r\n    if ($(\"#shareTitle\").prop(\"data-checked\") == true) {\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            delShareMul(index);\r\n        }\r\n    } else {\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            if ($(\"#cb\" + index).prop(\"data-checked\") == true) {\r\n                delShareMul(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n    $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n    $.exe();\r\n    var param = {};\r\n    param.scrollTop = $(\"#scroll\").scrollTop();\r\n    $.loadMain(\"folderSharing.htm\", param);\r\n}\r\n\r\n$(\"#edit-ok\").click(function() {\r\n    var newStr;\r\n    var selectVolumeUuid;\r\n    var selectVolumeLabel;\r\n    var index;\r\n    var command = {};\r\n    var command_ftp = {};\r\n    var command_dlna = {};\r\n    var stack_samba;\r\n    var enableDlna = 0;\r\n    var str;\r\n    var stack_ftp;\r\n    var curFolderPath;\r\n\r\n    $.addLoading($(this));\r\n\r\n    newStr = $(\"#shareName\").val();\r\n\r\n    if (newStr === \"\") {\r\n        $.alert(ERR_USB_SHARE_NAME_EMPTY);\r\n        return;\r\n    }\r\n\r\n    if ((/[\\\\\\/:\\*\\?\"<>|\\]\\ ]+/).test(newStr)) {\r\n        $.alert(ERR_USB_INVALID_CHAR_IN_FOLDER_NAME);\r\n        return;\r\n    }\r\n    if ($.asc(newStr)) {\r\n        $.alert(ERR_USB_SHARE_NAME_NOT_ASCII);\r\n        return;\r\n    }\r\n\r\n    selectVolumeUuid = \"\";\r\n    selectVolumeLabel = \"\";\r\n\r\n    $.each(volumeList, function() {\r\n        if (this.name == currVolume) {\r\n            selectVolumeUuid = this.uuid;\r\n            selectVolumeLabel = this.label;\r\n        }\r\n    });\r\n\r\n    str = $(\"#filename\").val();\r\n    if (str == \"\") {\r\n        $.alert(CMM_USB_BROWSE_FOLDER_PATH);\r\n        return;\r\n    }\r\n\r\n    if (str.length == 2 || str == \"ALL:\") {\r\n        curFolderPath = \"/\";\r\n    } else {\r\n        curFolderPath = str.substring(str.indexOf(\":\") + 1, str.length);\r\n    }\r\n\r\n    if (currentVol == table_str.selectopt) {\r\n        $.alert(CMM_USB_SELECT_VOLUME);\r\n        return;\r\n    }\r\n\r\n    if (\"add\" == shareTabStatus) {\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid)) {\r\n                $.alert(ERR_USB_DIR_EXIST);\r\n                return;\r\n            }\r\n\r\n            if ($(\"#shareName\").val() == accessFolderList_samba[index].alias) {\r\n                $.alert(ERR_USB_SHARE_NAME_EXIST);\r\n                return;\r\n            }\r\n        }\r\n\r\n        command.name = curFolderPath;\r\n        command.alias = $(\"#shareName\").val();\r\n        command.enable = 1;\r\n        command.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n        command_ftp.name = curFolderPath;\r\n        command_ftp.alias = $(\"#shareName\").val();\r\n        command_ftp.enable = 1;\r\n        command_ftp.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n        command_ftp.writePermission = ($(\"#wa\").prop(\"data-checked\") == true) ? 7 : 3;\r\n\r\n        command_dlna.name = curFolderPath;\r\n        command_dlna.alias = $(\"#shareName\").val();\r\n        command_dlna.enable = ($(\"#ems\").prop(\"data-checked\") == true) ? 1 : 0;\r\n        command_dlna.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n        if (selectVolumeUuid != \"\") {\r\n            command.volumeUuid = selectVolumeUuid;\r\n            command_ftp.volumeUuid = selectVolumeUuid;\r\n            command_dlna.volumeUuid = selectVolumeUuid;\r\n        }\r\n        if (selectVolumeLabel != \"\") {\r\n            command.volumeLabel = selectVolumeLabel;\r\n            command_ftp.volumeLabel = selectVolumeLabel;\r\n            command_dlna.volumeLabel = selectVolumeLabel;\r\n        }\r\n\r\n        $.act(ACT_ADD, SMB_SERVICE_FOLDER, null, null, command);\r\n        accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n\r\n        $.act(ACT_ADD, FTP_SERVER_FOLDER, null, null, command_ftp);\r\n        accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n\r\n        $.act(ACT_ADD, DLNA_MEDIA_SERVER_FOLDER, null, null, command_dlna);\r\n        accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n    } else {\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            if (($(\"#shareName\").val() == accessFolderList_samba[index].alias) && (index != editCurIndex)) {\r\n                $.alert(ERR_USB_SHARE_NAME_EXIST);\r\n                return;\r\n            }\r\n            if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid) && (index != editCurIndex)) {\r\n                $.alert(ERR_USB_DIR_EXIST);\r\n                return;\r\n            }\r\n        }\r\n\r\n        command.name = curFolderPath;\r\n        command.alias = $(\"#shareName\").val();\r\n        command.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n        command_ftp.name = curFolderPath;\r\n        command_ftp.alias = $(\"#shareName\").val();\r\n        command_ftp.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n        command_ftp.writePermission = ($(\"#wa\").prop(\"data-checked\") == true) ? 7 : 3;\r\n\r\n        command_dlna.name = curFolderPath;\r\n        command_dlna.alias = $(\"#shareName\").val();\r\n        command_dlna.enable = ($(\"#ems\").prop(\"data-checked\") == true) ? 1 : 0;\r\n        command_dlna.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n        if (selectVolumeUuid != \"\") {\r\n            command.volumeUuid = selectVolumeUuid;\r\n            command_ftp.volumeUuid = selectVolumeUuid;\r\n            command_dlna.volumeUuid = selectVolumeUuid;\r\n        }\r\n        if (selectVolumeLabel != \"\") {\r\n            command.volumeLabel = selectVolumeLabel;\r\n            command_ftp.volumeLabel = selectVolumeLabel;\r\n            command_dlna.volumeLabel = selectVolumeLabel;\r\n        }\r\n\r\n        $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[editCurIndex].__stack, null, command);\r\n        accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n\r\n        $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[editCurIndex].__stack, null, command_ftp);\r\n        accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[editCurIndex].__stack, null, command_dlna);\r\n        accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n    }\r\n\r\n    $.exe(function(ret) {\r\n        if (!ret) {\r\n            if (\"add\" == shareTabStatus) {\r\n                stack_samba = accessFolderList_samba[folderIdx].__stack;\r\n                stack_ftp = accessFolderList_ftp[folderIdx].__stack;\r\n            } else {\r\n                stack_samba = accessFolderList_samba[editCurIndex].__stack;\r\n                stack_ftp = accessFolderList_ftp[editCurIndex].__stack;\r\n            }\r\n\r\n            var newFlag = 1;\r\n            var userCommand = {};\r\n\r\n            for (index = 0; index < userAccessList_samba.length; index++) {\r\n                if (parseInt(stack_samba, 10) != parseInt(userAccessList_samba[index].__stack, 10)) {\r\n                    continue;\r\n                }\r\n\r\n                if (parseInt(userList[0].__stack, 10) == userAccessList_samba[index].userId) {\r\n                    userCommand.userId = 1;\r\n                    if ($(\"#wa\").prop(\"data-checked\") == true) {\r\n                        userCommand.permissions = 7;\r\n                    } else {\r\n                        userCommand.permissions = 3;\r\n                    }\r\n                }\r\n\r\n                $.act(ACT_SET, SMB_USER_ACCESS, userAccessList_samba[index].__stack, null, userCommand);\r\n                newFlag = 0;\r\n            }\r\n            if (1 == newFlag) {\r\n                userCommand.userId = 1;\r\n                if ($(\"#wa\").prop(\"data-checked\") == true) {\r\n                    userCommand.permissions = 7;\r\n                } else {\r\n                    userCommand.permissions = 3;\r\n                }\r\n\r\n                $.act(ACT_ADD, SMB_USER_ACCESS, null, stack_samba, userCommand);\r\n            }\r\n\r\n            $.exe(function(ret) {\r\n                if (!ret) {\r\n                    $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n                    $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n\r\n                    if (!$.exe()) {\r\n                        $.removeLoading();\r\n                        var param = {};\r\n                        param.scrollTop = $(\"#scroll\").scrollTop();\r\n                        $.loadMain(\"folderSharing.htm\", param);\r\n                    }\r\n                } else {\r\n                    $.removeLoading();\r\n                }\r\n            });\r\n        } else {\r\n            $.removeLoading();\r\n        }\r\n    });\r\n});\r\n\r\n$(\"#edit-cancel\").click(function() {\r\n    var param = {};\r\n    param.scrollTop = $(\"#scroll\").scrollTop();\r\n    $.loadMain(\"folderSharing.htm\", param);\r\n});\r\n\r\nfunction doSet() {\r\n    var newName;\r\n    var newPwd;\r\n\r\n    newName = $(\"#username\").val();\r\n    if (newName === \"\") {\r\n        return $.alert(ERR_USER_NAME_EMPTY);\r\n    }\r\n\r\n    if ($.asc(newName, true)) {\r\n        return $.alert(ERR_USER_NAME_ASCII);\r\n    }\r\n\r\n    if ((/[\\\\\\/:\\*\\?\"<>|[\\]@\\+=;,\\.\\ ()$]+/).test(newName)) {\r\n        $.alert(ERR_USB_INVALID_CHAR_IN_USER_NAME);\r\n        return;\r\n    }\r\n\r\n    newPwd = $(\"#password\").val();\r\n    if (newPwd === \"\") {\r\n        return $.alert(ERR_USER_PWD_EMPTY);\r\n    }\r\n\r\n    if ($.asc(newPwd, true)) {\r\n        return $.alert(ERR_USER_PWD_ASCII);\r\n    }\r\n\r\n    if (newPwd !== $(\"#cfPassword\").val()) {\r\n        return $.alert(ERR_USER_NAME_PWD_CONFLICT);\r\n    }\r\n\r\n    userTbl[0].name = newName;\r\n    userTbl[0].pwd = newPwd;\r\n}\r\n\r\n$(\"#saveAccount\").click(function() {\r\n    var command = {};\r\n    if ((/[\\\\\\/:\\*\\?\"<>|[\\]@\\+=;,\\.\\ ()$]+/).test($(\"#username\").val())) {\r\n        $.alert(ERR_USB_INVALID_CHAR_IN_USER_NAME);\r\n        return;\r\n    }\r\n    $.addLoading($(this));\r\n\r\n    if ($(\"#loginAccount\").prop(\"checked\") == true) {\r\n        command.X_TP_UseLoginAccount = 1;\r\n    } else {\r\n        command.X_TP_UseLoginAccount = 0;\r\n        doSet();\r\n        command.username = userTbl[0].name;\r\n        command.password = userTbl[0].pwd;\r\n    }\r\n\r\n    $.act(ACT_SET, USER_ACCOUNT, userTbl[0].stack, null, command);\r\n\r\n    if (!$.exe()) {\r\n        $.removeLoading();\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"folderSharing.htm\", param);\r\n    }\r\n\r\n});\r\n\r\n$(\"#loginAccount\").click(function() {\r\n    $(\"#username\").prop(\"disabled\", true);\r\n    $(\"#password\").tpPassword(\"disabled\", true);\r\n    $(\"#username\").val(userCfg.adminName);\r\n    $(\"#password\").tpPassword('val', userCfg.adminPwd);\r\n    $(\"#pwdCheck\").addClass(\"nd\");\r\n    $(\"#cfpwd\").addClass(\"nd\");\r\n    $(\"#t_salp\").removeClass(\"nd\");\r\n});\r\n\r\n$(\"#followingAccount\").click(function() {\r\n    $(\"#username\").prop(\"disabled\", false);\r\n    $(\"#password\").tpPassword(\"disabled\", false);\r\n    $(\"#pwdCheck\").removeClass(\"nd\");\r\n    $(\"#cfpwd\").removeClass(\"nd\");\r\n    $(\"#t_salp\").addClass(\"nd\");\r\n\r\n    $(\"#username\").val(userList[0].username);\r\n    $(\"#password\").tpPassword('val', userList[0].password);\r\n    $(\"#cfPassword\").val(userList[0].password);\r\n});\r\n\r\nfunction vtlServList_IP_ConfiltPort(port) {\r\n    var vtlServList_IP = $.act(ACT_GL, WAN_IP_CONN_PORTMAPPING, null, null);\r\n    var stacks = [];\r\n    var confilt = 0;\r\n    var index = 0;\r\n    var i;\r\n    var cancel = 0;\r\n\r\n    if (!$.exe()) {\r\n        $.each(vtlServList_IP, function() {\r\n            if ((this.portMappingEnabled == 1) &&\r\n                (((port == this.externalPort) || (port == this.X_TP_ExternalPortEnd)) ||\r\n                    ((this.externalPort > 0) && (this.externalPort < port) && (port < this.X_TP_ExternalPortEnd)))) {\r\n                stacks[index] = this.__stack;\r\n                index++;\r\n                confilt = 1;\r\n            }\r\n        });\r\n        if (1 == confilt) {\r\n            $.confirm(c_str.ftp_vs_conflict, function() {\r\n                for (i = 0; i < index; i++) {\r\n                    $.act(ACT_SET, WAN_IP_CONN_PORTMAPPING, stacks[i], null, [\"portMappingEnabled=0\"]);\r\n                }\r\n                if (!$.exe()) {\r\n                    return (vtlServList_PPP_ConfiltPort(port));\r\n                }\r\n            }, function() {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"folderSharing.htm\", param);\r\n            });\r\n        } else {\r\n            return (vtlServList_PPP_ConfiltPort(port));\r\n        }\r\n    }\r\n}\r\n\r\nfunction vtlServList_PPP_ConfiltPort(port) {\r\n    var vtlServList_PPP = $.act(ACT_GL, WAN_PPP_CONN_PORTMAPPING, null, null);\r\n    var stacks = [];\r\n    var confilt = 0;\r\n    var index = 0;\r\n    var i;\r\n    var cancel = 0;\r\n\r\n    if (!$.exe()) {\r\n        $.each(vtlServList_PPP, function() {\r\n            if ((this.portMappingEnabled == 1) &&\r\n                (((port == this.externalPort) || (port == this.X_TP_ExternalPortEnd)) ||\r\n                    ((this.externalPort < port) && (port < this.X_TP_ExternalPortEnd)))) {\r\n                stacks[index] = this.__stack;\r\n                index++;\r\n                confilt = 1;\r\n            }\r\n        });\r\n        if (1 == confilt) {\r\n            $.confirm(c_str.ftp_vs_conflict, function() {\r\n                for (i = 0; i < index; i++) {\r\n                    $.act(ACT_SET, WAN_PPP_CONN_PORTMAPPING, stacks[i], null, [\"portMappingEnabled=0\"]);\r\n                }\r\n\r\n                if (!$.exe()) {\r\n                    return (portTrigList_IP_ConfiltPort(port));\r\n                }\r\n            }, function() {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"folderSharing.htm\", param);\r\n            });\r\n        } else {\r\n            return (portTrigList_IP_ConfiltPort(port));\r\n        }\r\n    }\r\n}\r\n\r\nfunction portTrigList_IP_ConfiltPort(port) {\r\n    var portTrigList_IP = $.act(ACT_GL, IP_CONN_PORTTRIGGERING, null, null);\r\n    var stacks = [];\r\n    var confilt = 0;\r\n    var index = 0;\r\n    var i;\r\n    var cancel = 0;\r\n\r\n    if (!$.exe()) {\r\n        $.each(portTrigList_IP, function() {\r\n            if ((this.enable == 1) && ((port == this.triggerPort) || checkPort(port, this.openPort))) {\r\n                stacks[index] = this.__stack;\r\n                index++;\r\n                confilt = 1;\r\n            }\r\n        });\r\n\r\n        if (1 == confilt) {\r\n            $.confirm(c_str.ftp_pt_conflict, function() {\r\n                for (i = 0; i < index; i++) {\r\n                    $.act(ACT_SET, IP_CONN_PORTTRIGGERING, stacks[i], null, [\"enable=0\"]);\r\n                }\r\n\r\n                if (!$.exe()) {\r\n                    return (portTrigList_PPP_ConfiltPort(port));\r\n                }\r\n            }, function() {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"folderSharing.htm\", param);\r\n            });\r\n        } else {\r\n            return (portTrigList_PPP_ConfiltPort(port));\r\n        }\r\n    }\r\n}\r\n\r\nfunction portTrigList_PPP_ConfiltPort(port) {\r\n    var portTrigList_PPP = $.act(ACT_GL, PPP_CONN_PORTTRIGGERING, null, null);\r\n    var stacks = [];\r\n    var confilt = 0;\r\n    var index = 0;\r\n    var i;\r\n    var cancel = 0;\r\n\r\n    if (!$.exe()) {\r\n        $.each(portTrigList_PPP, function() {\r\n            if ((this.enable == 1) && ((port == this.triggerPort) || checkPort(port, this.openPort))) {\r\n                stacks[index] = this.__stack;\r\n                index++;\r\n                confilt = 1;\r\n            }\r\n        });\r\n\r\n        if (1 == confilt) {\r\n            $.confirm(c_str.ftp_pt_conflict, function() {\r\n                for (i = 0; i < index; i++) {\r\n                    $.act(ACT_SET, PPP_CONN_PORTTRIGGERING, stacks[i], null, [\"enable=0\"]);\r\n                }\r\n                if (!$.exe()) {\r\n                    return (dmzCfg_ConfiltPort(port));\r\n                }\r\n            }, function() {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"folderSharing.htm\", param);\r\n            });\r\n        } else {\r\n            return (dmzCfg_ConfiltPort(port));\r\n        }\r\n    }\r\n}\r\n\r\nfunction dmzCfg_ConfiltPort(port) {\r\n    var dmzCfg = $.act(ACT_GET, DMZ_HOST_CFG, null, null);\r\n    var cancel = 0;\r\n\r\n    if (!$.exe()) {\r\n        if (dmzCfg.enable == 1) {\r\n            $.confirm(c_str.ftp_dmz_conflict, function() {\r\n                $.act(ACT_SET, DMZ_HOST_CFG, null, null, [\"enable=0\", \"IPAddress=\" + dmzCfg.IPAddress]);\r\n                if (!$.exe()) {\r\n                    return (upnpCfgObj_ConfiltPort(port));\r\n                }\r\n            }, function() {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"folderSharing.htm\", param);\r\n            });\r\n        } else {\r\n            return (upnpCfgObj_ConfiltPort(port));\r\n        }\r\n    }\r\n}\r\n\r\nfunction upnpCfgObj_ConfiltPort(port) {\r\n    var upnpCfgObj = $.act(ACT_GET, UPNP_CFG);\r\n    var stacks = [];\r\n    var confilt = 0;\r\n    var index = 0;\r\n    var i;\r\n    var cancel = 0;\r\n\r\n    if (!$.exe()) {\r\n        if (upnpCfgObj.enable == 1) {\r\n            var portMappingList = $.act(ACT_GL, UPNP_PORTMAPPING, null, null);\r\n            if ($.exe()) {\r\n                return 0;\r\n            }\r\n            $.each(portMappingList, function() {\r\n                if ((this.portMappingEnabled == 1) && ((port == this.externalPort) || (port == this.internalPort))) {\r\n                    stacks[index] = this.__stack;\r\n                    index++;\r\n                    confilt = 1;\r\n                }\r\n            });\r\n\r\n            if (1 == confilt) {\r\n                $.confirm(c_str.ftp_upnp_conflict, function() {\r\n                    for (i = 0; i < index; i++) {\r\n                        $.act(ACT_DEL, UPNP_PORTMAPPING, stacks[i], null, null);\r\n                    }\r\n                    if (!$.exe()) {\r\n                        if ($(\"#innerFtp\").prop(\"data-checked\") == true) {\r\n                            $.act(ACT_SET, FTP_SERVER, null, null, [\"accessFromInternet=1\"]);\r\n                        } else {\r\n                            $.act(ACT_SET, FTP_SERVER, null, null, [\"accessFromInternet=0\"]);\r\n                        }\r\n\r\n                        $.act(ACT_SET, FTP_SERVER, null, null, [\"portNumber=\" + port]);\r\n                        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n\r\n                        if (!$.exe()) {\r\n                            $.removeLoading();\r\n                            var param = {};\r\n                            param.scrollTop = $(\"#scroll\").scrollTop();\r\n                            $.loadMain(\"folderSharing.htm\", param);\r\n                        }\r\n                    }\r\n                }, function() {\r\n                    $.removeLoading();\r\n                    var param = {};\r\n                    param.scrollTop = $(\"#scroll\").scrollTop();\r\n                    $.loadMain(\"folderSharing.htm\", param);\r\n                });\r\n            } else {\r\n                if ($(\"#innerFtp\").prop(\"data-checked\") == true) {\r\n                    $.act(ACT_SET, FTP_SERVER, null, null, [\"accessFromInternet=1\"]);\r\n                } else {\r\n                    $.act(ACT_SET, FTP_SERVER, null, null, [\"accessFromInternet=0\"]);\r\n                }\r\n                $.act(ACT_SET, FTP_SERVER, null, null, [\"portNumber=\" + port]);\r\n                $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n\r\n                if (!$.exe()) {\r\n                    $.removeLoading();\r\n                    var param = {};\r\n                    param.scrollTop = $(\"#scroll\").scrollTop();\r\n                    $.loadMain(\"folderSharing.htm\", param);\r\n                }\r\n            }\r\n        } else {\r\n            if ($(\"#innerFtp\").prop(\"data-checked\") == true) {\r\n                $.act(ACT_SET, FTP_SERVER, null, null, [\"accessFromInternet=1\"]);\r\n            } else {\r\n                $.act(ACT_SET, FTP_SERVER, null, null, [\"accessFromInternet=0\"]);\r\n            }\r\n            $.act(ACT_SET, FTP_SERVER, null, null, [\"portNumber=\" + port]);\r\n            $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n\r\n            if (!$.exe()) {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"folderSharing.htm\", param);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkPort(ftpPort, port) {\r\n    port = port.toString();\r\n    var ports = port.split(\",\");\r\n    var conflict = false;\r\n    var index;\r\n\r\n    for (index = 0; index < ports.length; index++) {\r\n        var c = ports[index].split(\"-\");\r\n        if (c.length == 1) {\r\n            if (parseInt(c[0]) == parseInt(ftpPort)) {\r\n                conflict = true;\r\n                break;\r\n            }\r\n        } else if (c.length == 2) {\r\n            if (parseInt(c[0]) <= parseInt(ftpPort) && parseInt(c[1]) >= parseInt(ftpPort)) {\r\n                conflict = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return conflict;\r\n}\r\n\r\n$(\"input#password\").keyup(function(e) {\r\n    $.pwdIntensityCheck($(\"#pwdCheck\"), $(this).tpPassword('val'));\r\n});\r\n\r\n$(\"#saveSett\").click(function() {\r\n    var portValue;\r\n    var port;\r\n\r\n\r\n    if ($(\"#server_name\").val().length >= 16) {\r\n        $.alert(CMM_USB_SERVER_NAME_LENGTH);\r\n        return;\r\n    }\r\n\r\n    var newDlnaObj = {};\r\n    $.addLoading($(this));\r\n    newDlnaObj.serverName = $(\"#server_name\").val();\r\n\r\n    if (newDlnaObj.serverName == \"\") {\r\n        $.alert(ERR_USB_DLNA_SERVER_NAME_EMPTY);\r\n        return;\r\n    }\r\n    if ($.asc(newDlnaObj.serverName, true)) {\r\n        $.alert(ERR_USB_DLNA_SERVER_NAME_NOT_ASCII);\r\n        return;\r\n    }\r\n    if ((/[\\\\\\/\\*\\?=+:;,.\"<>|@\\[\\]\\(\\)\\ ]+/).test(newDlnaObj.serverName)) {\r\n        $.alert(ERR_USB_DLNA_INVALID_SERVER_NAME);\r\n        return;\r\n    }\r\n\r\n    var command = {};\r\n    command.serverName = $(\"#server_name\").val();\r\n\r\n    $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, newDlnaObj);\r\n    $.act(ACT_SET, SMB_SERVICE, null, null, command);\r\n\r\n    if ($(\"#mediaServer\").prop(\"data-checked\") == true) {\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"serverState=1\"]);\r\n    } else {\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"serverState=0\"]);\r\n    }\r\n\r\n    if ($(\"#samba\").prop(\"data-checked\") == true) {\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"enable=1\"]);\r\n    } else {\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"enable=0\"]);\r\n    }\r\n\r\n    if ($(\"#innerFtp\").prop(\"data-checked\") == true) {\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"enable=1\"]);\r\n    } else {\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"enable=0\"]);\r\n    }\r\n\r\n    portValue = $(\"#port\").val();\r\n\r\n    if (portValue == \"\") {\r\n        $.alert(ERR_USB_FTP_PORT_EMPTY);\r\n        return;\r\n    }\r\n\r\n    if (!$.isnum(portValue)) {\r\n        $.alert(ERR_USB_FTP_PORT_NOT_NUM);\r\n        var element = $(\"#port\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return;\r\n    }\r\n\r\n    if ((portValue < 1) || (portValue > 65535)) {\r\n        $.alert(ERR_USB_FTP_PORT_RANGE);\r\n        var element = $(\"#port\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return;\r\n    }\r\n\r\n    if ((portValue == 53) || (portValue == 70) || (portValue == 80) ||\r\n        (portValue == 119) || (portValue == 110) || (portValue == 1723) ||\r\n        (portValue == 25) || (portValue == 1080) || (portValue == 23) ||\r\n        (portValue == 33344) || (portValue == 20005) || (portValue == 1900) ||\r\n        (portValue == 7547) || (portValue == 139) || (portValue == 445)) {\r\n        $.alert(ERR_USB_FTP_PORT_CONFLICT);\r\n        var element = $(\"#port\");\r\n        if (element) {\r\n            element.focus();\r\n            element.select();\r\n        }\r\n        return;\r\n    }\r\n\r\n    port = parseInt(portValue, 10);\r\n\r\n    if ($(\"#outerFtp\").prop(\"data-checked\") == true) {\r\n        return (vtlServList_IP_ConfiltPort(port));\r\n    } else {\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"portNumber=\" + port]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"accessFromInternet=0\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"folderSharing.htm\", param);\r\n        }\r\n    }\r\n});\r\n</script>\r\n<div id=\"disks\"></div>\r\n<div id=\"folderSharingPart\" class=\"nd\">\r\n    <h3 id=\"t_shareAcc\">Sharing Account</h3>\r\n    <div class=\"content-container\">\r\n        <form class=\"pure-form pure-form-aligned\">\r\n            <p class=\"cfg-line\" id=\"t_info1\">Prepare an account for sharing contents. You can use the login account or create a new one.</p>\r\n            <div>\r\n                <b id=\"t_account\" class=\"l\">Account:</b>\r\n                <input type=\"radio\" name=\"radio_name_account\" id=\"loginAccount\" />\r\n                <label id=\"t_ula\">Use Default Account</label>\r\n            </div>\r\n            <div>\r\n                <b class=\"l\"></b>\r\n                <input type=\"radio\" name=\"radio_name_account\" id=\"followingAccount\" />\r\n                <label id=\"t_ufa\">Use New Account</label>\r\n            </div>\r\n\r\n            <div id=\"user\" class=\"pure-control-group\">\r\n                <b class=\"T_username l\">Username:</b>\r\n                <input type=\"text\" maxlength=\"15\" class=\"tp-input-text secLevel\" id=\"username\" />\r\n            </div>\r\n\r\n            <div id=\"pwd\" class=\"pure-control-group\">\r\n                <b class=\"T_passwd l\">Password:</b>\r\n                <input type=\"password\" maxlength=\"15\" id=\"password\" class=\"secLevel\" />\r\n                <span id=\"t_salp\">(Same as Login Password)</span>\r\n            </div>\r\n\r\n            <div class=\"secLevel\" id=\"pwdCheck\">\r\n                <span class=\"level1 T_low\">Low</span>\r\n                <span class=\"level2 T_middle\">Middle</span>\r\n                <span class=\"level3 T_high\">High</span>\r\n            </div>\r\n\r\n            <div id=\"cfpwd\" class=\"pure-control-group\">\r\n                <b class=\"T_cfmpwd l\">Confirm Password:</b>\r\n                <input type=\"password\" maxlength=\"15\" id=\"cfPassword\" class=\"secLevel\" />\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"green T_save\" id=\"saveAccount\">Save</button>\r\n        </form>\r\n    </div>\r\n\r\n    <h3 id=\"t_shareSett\">Sharing Setting</h3>\r\n\r\n    <div class=\"content-container\">\r\n        <form class=\"pure-form pure-form-aligned\">\r\n            <div class=\"pure-control-group\">\r\n                <b id=\"t_nsn\" class=\"l\">Network/Media Server Name:</b>\r\n                <input type=\"text\" id=\"server_name\" maxlength=\"15\" />\r\n            </div>\r\n\r\n            <div id=\"accessDrawing\" class=\"part-separate\">\r\n                <table id='accessTab'>\r\n                    <thead></thead>\r\n                    <tbody>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div class=\"part-separate\">\r\n                <button type=\"submit\" class=\"green T_save\" id=\"saveSett\">Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n    <h3 id=\"t_sf\">Folder Sharing</h3>\r\n    <div class=\"content-container\">\r\n        <form class=\"pure-form pure-form-aligned\">\r\n            <div class=\"button-group-container\">\r\n                <b id=\"t_esa\">Share All:</b>\r\n                <ul>\r\n                    <li>\r\n                        <button id=\"shareOn\" class=\"fst\" value=\"on\">On</button>\r\n                    </li>\r\n                    <li>\r\n                        <button id=\"shareOff\" class=\"lst\" value=\"off\">Off</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"browse-content-container nd\" id=\"folderSel\">\r\n                <div class=\"browse-content-container-wrap\">\r\n                    <span><b id=\"t_brw\">My Router</b>\r\n                    </span>\r\n                    <br>\r\n                    <br>\r\n                    <div id=\"folderSelContent\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"inline-btn-right\">\r\n                    <button type=\"submit\" class=\"green inline T_cancel\" id=\"cancelPathSel\">Cancel</button>\r\n                    <button type=\"submit\" class=\"green inline T_save\" id=\"confirmPathSel\">Save</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"shareDrawing\" class=\"nd\">\r\n                <div class='table-op'>\r\n                    <div class='table-btn'>\r\n                        <span class='add-icon' id=\"shareItemAdd\"></span>\r\n                        <label class=\"T_add\">Add</label>\r\n                        <span class='delete-icon' onclick=\"deleteItem()\"></span>\r\n                        <label class=\"T_del\">Delete</label>\r\n                    </div>\r\n                </div>\r\n                <table id='shareTab'>\r\n                    <thead></thead>\r\n                    <tbody>\r\n                        <tr id=\"editShareFolder\" class=\"nd\">\r\n                            <td colspan=\"8\">\r\n                                <div>\r\n                                    <b id=\"t_vol\">Volume Name:</b>\r\n                                    <select id=\"shareVolume\">\r\n                                    </select>\r\n                                </div>\r\n                                <div>\r\n                                    <b id=\"t_folP\">Folder Path:</b>\r\n                                    <input type=\"text\" id=\"filename\" class=\"xl\" disabled required>\r\n                                    <button type=\"submit\" class=\"blue\" id=\"t_browse\" onclick=\"showBrowse()\">Browse</button>\r\n                                </div>\r\n                                <div>\r\n                                    <b id=\"t_shareN\">Folder Name:</b>\r\n                                    <input type=\"text\" id=\"shareName\" maxlength=\"31\" class=\"xl\" required>\r\n                                </div>\r\n                                <div>\r\n                                    <b></b>\r\n                                    <input type=\"checkbox\" id=\"ea\" />\r\n                                    <label id=\"t_ea\">Enable Authentication</label>\r\n                                </div>\r\n                                <div>\r\n                                    <b></b>\r\n                                    <input type=\"checkbox\" id=\"wa\" />\r\n                                    <label id=\"t_wa\">Enable Write Access</label>\r\n                                </div>\r\n                                <div>\r\n                                    <b></b>\r\n                                    <input type=\"checkbox\" id=\"ems\" />\r\n                                    <label id=\"t_ems\">Enable Media Sharing</label>\r\n                                </div>\r\n                                <div class=\"inline-btn-right\">\r\n                                    <button type=\"submit\" class=\"green T_cancel\" id=\"edit-cancel\">Cancel</button>\r\n                                    <button type=\"submit\" class=\"green T_save\" id=\"edit-ok\">Save</button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div class=\"button-group-container\" id=\"authentication\">\r\n                <b id=\"t_ea_a\">Enable Authentication:</b>\r\n                <ul>\r\n                    <li>\r\n                        <button id=\"authOn\" class=\"fst\" value=\"on\">On</button>\r\n                    </li>\r\n                    <li>\r\n                        <button id=\"authOff\" class=\"lst\" value=\"off\">Off</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div id=\"authDrawing\" class=\"nd\">\r\n                <div class='table-op'>\r\n                    <div class='table-btn'>\r\n                        <span class='refresh-icon' id=\"refShareSet\"></span>\r\n                        <label class=\"T_refresh\">Refresh</label>\r\n                    </div>\r\n                </div>\r\n                <table id='authTab'>\r\n                    <thead></thead>\r\n                    <tbody></tbody>\r\n                </table>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n$.loadPage('disks', 'diskSettings.htm', function() {\r\n    $('#folderSharingPart').removeClass('nd');\r\n    $.tpInit(init);\r\n});\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "usb3g.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 51
      },
      "contents" : {
        "text" : "<h3 id=\"t_dSett\">Device Settings</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <button type=\"submit\" id=\"refresh\" class=\"blue left T_scan\">Scan</button>\r\n        <div id=\"usb_drawing\" class=\"part-separate\">\r\n        </div>\r\n        <div id=\"chart_cnt\" class=\"part-separate\">\r\n        </div>\r\n        <div id=\"chart_tip\" class=\"nd\">\r\n            <div id=\"chart_tips_point\"></div>\r\n            <p></p>\r\n            <div id=\"chart_tips_button\"></div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<h3 id=\"t_sSett\">Sharing Settings</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <label id=\"t_nsn\" for=\"server_name\">Network/Media Server Name:</label>\r\n        <input type=\"text\" id=\"server_name\" maxlength=\"15\" />\r\n        <button type=\"submit\" class=\"green T_save\" id='shareSettings'>Save</button>\r\n    </form>\r\n</div>\r\n\r\n<h3 id=\"t_info\">Folder Sharing</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <div class=\"button-group-container\">\r\n            <b id=\"t_esa\">Share All:</b>\r\n            <ul>\r\n                <li>\r\n                    <button id=\"shareOn\" class=\"fst\" value=\"on\">On</button>\r\n                </li>\r\n                <li>\r\n                    <button id=\"shareOff\" class=\"lst\" value=\"off\">Off</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div class=\"browse-content-container nd\" id=\"folderSel\">\r\n            <div class=\"browse-content-container-wrap\">\r\n                <span><b id=\"t_brw\">Browse for folder path</b>\r\n                </span>\r\n                <br>\r\n                <br>\r\n                <div id=\"folderSelContent\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"inline-btn-right\">\r\n                <button type=\"submit\" class=\"green inline T_cancel\" id=\"cancelPathSel\">Cancel</button>\r\n                <button type=\"submit\" class=\"green inline T_save\" id=\"confirmPathSel\">Save</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"shareDrawing\" class=\"nd\">\r\n            <div class='table-op'>\r\n                <div class='table-btn'>\r\n                    <span class='add-icon' id=\"shareItemAdd\"></span>\r\n                    <label class=\"T_add\">Add</label>\r\n                    <span class='delete-icon'></span>\r\n                    <label class=\"T_del\">Delete</label>\r\n                </div>\r\n            </div>\r\n            <table id='shareTab'>\r\n                <thead></thead>\r\n                <tbody>\r\n                    <tr id=\"editShareFolder\" class=\"nd\">\r\n                        <td colspan=\"8\">\r\n                            <div>\r\n                                <b id=\"t_vol\">Volume Name:</b>\r\n                                <select id=\"shareVolume\">\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <b id=\"t_folP\">Folder Path:</b>\r\n                                <input type=\"text\" id=\"filename\" class=\"xl\" disabled required>\r\n                                <button type=\"submit\" class=\"blue\" id=\"t_browse\">Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <b id=\"t_shareN\">Folder Name:</b>\r\n                                <input type=\"text\" id=\"shareName\" class=\"xl\" maxlength=\"31\" required>\r\n                            </div>\r\n                            <div>\r\n                                <b></b>\r\n                                <input type=\"checkbox\" id=\"ea\" />\r\n                                <label id=\"t_ea\">Enable Authentication</label>\r\n                            </div>\r\n                            <div>\r\n                                <b></b>\r\n                                <input type=\"checkbox\" id=\"wa\" />\r\n                                <label id=\"t_wa\">Enable Write Access</label>\r\n                            </div>\r\n                            <div>\r\n                                <b></b>\r\n                                <input type=\"checkbox\" id=\"ems\" />\r\n                                <label id=\"t_ems\">Enable Media Sharing</label>\r\n                            </div>\r\n                            <div class=\"inline-btn-right\">\r\n                                <button type=\"submit\" class=\"green T_cancel\" id=\"edit-cancel\">Cancel</button>\r\n                                <button type=\"submit\" class=\"green T_save\" id=\"edit-ok\">Save</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"button-group-container\" id=\"authentication\">\r\n            <b id=\"t_ea_a\">Enable Authentication:</b>\r\n            <ul>\r\n                <li>\r\n                    <button id=\"authOn\" class=\"fst\" value=\"on\">On</button>\r\n                </li>\r\n                <li>\r\n                    <button id=\"authOff\" class=\"lst\" value=\"off\">Off</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div id=\"authDrawing\" class=\"nd\">\r\n            <div class='table-op'>\r\n                <div class='table-btn'>\r\n                    <span class='refresh-icon' id=\"refShareSet\"></span>\r\n                    <label class=\"T_refresh\">Refresh</label>\r\n                </div>\r\n            </div>\r\n            <table id='authTab'>\r\n                <thead></thead>\r\n                <tbody></tbody>\r\n            </table>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\n(function() {\r\n    var usbDeviceList;\r\n    var volumeList;\r\n    var smbService;\r\n    var dlnaService;\r\n    var ftpServer;\r\n\r\n    var accessFolderList_samba;\r\n    var accessFolderList_ftp;\r\n    var accessFolderList_dlna;\r\n\r\n    var numAliveDev = 0;\r\n    var numAliveLog = 0;\r\n    var idx;\r\n\r\n    var currVolume = \"\";\r\n    var currPath = \"\";\r\n\r\n    var currentFolder = \"\";\r\n    var fPath = \"\";\r\n\r\n    var firstClick = 1;\r\n    var firstNode = 1;\r\n    var o;\r\n    var prevObj;\r\n\r\n    var folderPath = \"\";\r\n    var currentVol = \"\";\r\n\r\n    var folderIdx;\r\n    var shareTabStatus = \"\";\r\n    var editCurIndex;\r\n\r\n\r\n    $.tpInit(init);\r\n\r\n    $(\"#refresh\").click(function() {\r\n        $.addLoading($(this));\r\n        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n\r\n        if (!$.exe()) {\r\n            if (0 == usbDeviceList.length) {\r\n                $.removeLoading();\r\n                $.reload();\r\n                return;\r\n            }\r\n\r\n            var idx;\r\n\r\n            for (idx = 0; idx < usbDeviceList.length; idx++) {\r\n                usbDeviceList[idx].enable = 1;\r\n                mountUsb(idx);\r\n            }\r\n            $.removeLoading();\r\n            $.reload();\r\n        }\r\n    });\r\n\r\n    $(\"#chart_tips_button\").click(function(){\r\n        $.hideCover();\r\n        $('#mask').css({background: '#36444b', opacity: '0.2'});\r\n        $(\"#chart_tip\").addClass('nd');\r\n    });\r\n\r\n    $('#t_browse').click(function() {\r\n        showBrowse();\r\n    });\r\n\r\n    $('#folderSelContent').on('click', '.addFolder,.hideFolder', function() {\r\n        loadClick(this);\r\n    }).on('click', '.folderImg', function() {\r\n        foldSelect(this);\r\n    }).on('click', '.fName, span.span', function() {\r\n        getFolderPath(this);\r\n    });\r\n\r\n    $('#usb_drawing').on('click', 'span.safely-remove-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        $.addLoading();\r\n        handleUsb(index);\r\n    }).on('click', 'span.disable-icon, span.enable-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        ableFunc(index);\r\n    });\r\n\r\n    $('#shareTab').on('click', 'span.enable-icon, span.disable-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        ableShare(index);\r\n    }).on('click', 'span.edit-modify-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        modifyShare(index);\r\n    }).on('click', 'span.edit-trash-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        delShare(index);\r\n    }).on('click', '.share-table-checkbox', function() {\r\n        var index = $(this).attr('data-index');\r\n        selectJudge(index);\r\n    });\r\n\r\n    $('#shareDrawing').on('click', '.delete-icon', function() {\r\n        deleteItem();\r\n    });\r\n\r\n    $(\"#shareVolume\").click(function () {\r\n        currentVol = $(\"#shareVolume\").data(\"value\");\r\n    });\r\n\r\n    $(\"#shareItemAdd\").click(function () {\r\n        shareTabStatus = \"add\";\r\n    });\r\n\r\n    $(\"#cancelPathSel\").click(function () {\r\n        $.hideCover();\r\n        $(\"#folderSelContent\").empty();\r\n        $(\"#folderSel\").addClass(\"nd\");\r\n    });\r\n\r\n    $(\"#confirmPathSel\").click(function () {\r\n        $.hideCover();\r\n        $(\"#folderSelContent\").empty();\r\n        $(\"#folderSel\").addClass(\"nd\");\r\n        $(\"#filename\").val(transStr(folderPath));\r\n    });\r\n\r\n    $(\"#refShareSet\").click(function () {\r\n        initAuthTab();\r\n    });\r\n\r\n    $(\"#shareOn\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"shareAll=1\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"shareAll=1\"]);\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"shareAll=1\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            $(\"#authentication\").removeClass(\"nd\");\r\n            $(\"#shareDrawing\").addClass(\"nd\");\r\n            $(\"#authDrawing\").removeClass(\"nd\");\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    $(\"#shareOff\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"shareAll=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"shareAll=0\"]);\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"shareAll=0\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            $(\"#authentication\").addClass(\"nd\");\r\n            $(\"#authDrawing\").addClass(\"nd\");\r\n            $(\"#shareDrawing\").removeClass(\"nd\");\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    $(\"#authOn\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"anonymous=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"anonymous=0\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    $(\"#authOff\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"anonymous=1\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"anonymous=1\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    function handleUsb(idx) {\r\n        var command = {};\r\n\r\n        if (\"Online\" == usbDeviceList[idx].status) {\r\n            command.enable = 0;\r\n            usbDeviceList[idx].enable = 0;\r\n        } else if ((\"Standby\" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {\r\n            usbDeviceList[idx].enable = 0;\r\n            command.enable = 0;\r\n        } else {\r\n            usbDeviceList[idx].enable = 1;\r\n            command.enable = 1;\r\n        }\r\n\r\n        $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);\r\n\r\n        $.exe(function() {\r\n            $.removeLoading();\r\n            $.reload();\r\n        });\r\n    }\r\n\r\n    function mountUsb(idx) {\r\n        var command = {};\r\n        if ((\"Standby\" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {\r\n            command.enable = 1;\r\n            $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);\r\n\r\n            if (!$.exe()) {\r\n                $.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    function ableFunc(num) {\r\n        var command = {};\r\n\r\n        if (\"Online\" == volumeList[num].status) {\r\n            command.enable = 0;\r\n        } else if (\"Error\" == volumeList[num].status) {\r\n            return;\r\n        } else if ((\"Offline\" == volumeList[num].status) && (\"1\" == volumeList[num].enable)) {\r\n            handleVolumeForce(num);\r\n            return;\r\n        } else if ((\"Offline\" == volumeList[num].status)) {\r\n            command.enable = 1;\r\n        } else {\r\n            $.reload();\r\n        }\r\n\r\n        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);\r\n\r\n        $.exe(function() {\r\n            $.removeLoading();\r\n            $.reload();\r\n        });\r\n    }\r\n\r\n    function handleVolumeForce(num) {\r\n        var command = {};\r\n\r\n        command.enable = 1;\r\n        command.force = 1;\r\n        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);\r\n\r\n        if (!$.exe()) {\r\n            $.reload();\r\n        }\r\n    }\r\n\r\n    function initTable() {\r\n        var array = [];\r\n        var i, rowspan;\r\n\r\n        for (idx = 1; idx <= usbDeviceList.length; idx++) {\r\n            if (\"Online\" == usbDeviceList[idx - 1].status) {\r\n                rowspan = 0;\r\n                for (i = 0; i < volumeList.length; i++) {\r\n                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {\r\n                        rowspan++;\r\n                    }\r\n                }\r\n                for (i = 0; i < volumeList.length; i++) {\r\n                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {\r\n                        var ableControl;\r\n\r\n                        if (volumeList[i].status == \"Online\") {\r\n                            ableControl = true;\r\n                        } else if (\"Error\" == volumeList[i].status) {\r\n                            ableControl = false;\r\n                        } else if ((\"Offline\" == volumeList[i].status) && (1 == volumeList[i].enable)) {\r\n                            ableControl = false;\r\n                        } else {\r\n                            ableControl = false;\r\n                        }\r\n\r\n                        if ((0 == usbDeviceList[idx - 1].enable) || (\"Online\" != usbDeviceList[idx - 1].status)) {\r\n                            ableControl = false;\r\n                        }\r\n\r\n                        var removeTD = {\r\n                            \"text\": \"<span class='safely-remove-icon table-icon' data-index='\" + (idx-1)\r\n                            +\"'></span>\",\r\n                            \"width\": \"15%\",\r\n                            \"rowspan\": rowspan\r\n                        };\r\n\r\n                        array.push([{\r\n                            \"text\": volumeList[i].label + ':(' + volumeList[i].name + ')',\r\n                            \"width\": \"15%\"\r\n                        }, {\r\n                            \"text\": volumeList[i].capacity,\r\n                            \"width\": \"20%\"\r\n                        }, {\r\n                            \"text\": renderFreeSpace(getVolumeGB(volumeList[i].freeSpace), getVolumeGB(volumeList[i].capacity)),\r\n                            \"width\": \"38%\"\r\n                        }, {\r\n                            \"text\": '<span class=\"table-grid-icon'+(ableControl?' enable-icon':' disable-icon')+'\" data-index=\"'+\r\n                            i +'\"></span>',\r\n                            \"width\": \"12%\"\r\n                        }, removeTD]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $.initTableBody($('#volumeTbl'), array);\r\n        // $.tablePages($('#volumeTbl'), 5);\r\n        return array;\r\n    }\r\n\r\n    function init() {\r\n        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);\r\n        smbService = $.act(ACT_GET, SMB_SERVICE, null, null, null);\r\n        ftpServer = $.act(ACT_GET, FTP_SERVER, null, null, null);\r\n        dlnaService = $.act(ACT_GET, DLNA_MEDIA_SERVER, null, null, null);\r\n        accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n        accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n        accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n\r\n        userAccessList_samba = $.act(ACT_GL, SMB_USER_ACCESS, null, null, null);\r\n\r\n        userList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\r\n        var index, headArray;\r\n\r\n        $(\"#chart_tip p\").text(c_str.usbChartInfo);\r\n        $(\"#chart_tips_button\").text(m_str.ok);\r\n\r\n        if (!$.exe()) {\r\n            // USB Storage Device\r\n            if (0 < usbDeviceList.length) {\r\n                if (usbDeviceList.length <= 2 && checkVolumeNum(usbDeviceList, volumeList)) {\r\n                    drawChart(usbDeviceList, volumeList);\r\n                } else {\r\n                    for (idx = 0; idx < usbDeviceList.length; idx++) {\r\n                        if (\"Online\" == usbDeviceList[idx].status) {\r\n                            numAliveDev++;\r\n                        }\r\n                    }\r\n\r\n                    for (idx = 0; idx < volumeList.length; idx++) {\r\n                        if (\"Online\" == volumeList[idx].status) {\r\n                            numAliveLog++;\r\n                        }\r\n                    }\r\n\r\n                    var usbDrawing;\r\n                    usbDrawing = \"<table id='volumeTbl'><thead></thead><tbody></tbody></table>\";\r\n                    $(\"#usb_drawing\").append(usbDrawing).append(\"<br>\");\r\n\r\n                    headArray = [{\r\n                        \"text\": table_str.name,\r\n                        \"width\": \"15%\"\r\n                    }, {\r\n                        \"text\": table_str.total,\r\n                        \"width\": \"20%\"\r\n                    }, {\r\n                        \"text\": table_str.capacity,\r\n                        \"width\": \"38%\"\r\n                    }, {\r\n                        \"text\": table_str.enable,\r\n                        \"width\": \"12%\"\r\n                    }, {\r\n                        \"text\": m_str.remove,\r\n                        \"width\": \"15%\"\r\n                    }];\r\n\r\n                    $.initTableHead($('#volumeTbl'), headArray);\r\n                    $('#volumeTbl').tpTable(initTable);\r\n                }\r\n            }\r\n\r\n            // Sharing Settings\r\n            $(\"#server_name\").val(smbService.serverName);\r\n\r\n            // Folder Sharing\r\n            var authHeadArray = [{\r\n                \"text\": table_str.id,\r\n                width: \"10%\"\r\n            }, {\r\n                \"text\": table_str.shareName,\r\n                width: \"40%\"\r\n            }, {\r\n                \"text\": table_str.folderPath,\r\n                width: \"25%\"\r\n            }, {\r\n                \"text\": table_str.volume,\r\n                width: \"25%\"\r\n            }];\r\n\r\n            $.initTableHead($('#authTab'), authHeadArray);\r\n            $('#authTab').tpTable(initAuthTab);\r\n\r\n            headArray = [{\r\n                \"text\": '<div><input type=\"checkbox\" id=\"shareTitle\" class=\"table-select-all\"/><label></label></div>',\r\n                \"width\": \"8%\"\r\n            }, {\r\n                \"text\": table_str.id,\r\n                \"width\": \"5%\"\r\n            }, {\r\n                \"text\": table_str.shareName,\r\n                \"width\": \"15%\"\r\n            }, {\r\n                \"text\": table_str.folderPath,\r\n                \"width\": \"25%\"\r\n            }, {\r\n                \"text\": table_str.mediaSharing,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": table_str.volume,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": table_str.status,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": table_str.modify,\r\n                \"width\": \"17%\"\r\n            }];\r\n            $.initTableHead($('#shareTab'), headArray);\r\n            $('#shareTab').tpTable(initShareTab);\r\n\r\n            if (smbService.anonymous == 0) {\r\n                $(\"#authOn\").addClass(\"selected\");\r\n            } else {\r\n                $(\"#authOff\").addClass(\"selected\");\r\n            }\r\n\r\n            if (smbService.shareAll == false) {\r\n                $(\"#shareOff\").addClass(\"selected\");\r\n                $(\"#authentication\").addClass(\"nd\");\r\n                $(\"#authDrawing\").addClass(\"nd\");\r\n                $(\"#shareDrawing\").removeClass(\"nd\");\r\n            } else {\r\n                $(\"#shareOn\").addClass(\"selected\");\r\n                $(\"#shareDrawing\").addClass(\"nd\");\r\n                $(\"#authentication\").removeClass(\"nd\");\r\n\r\n                $(\"#authDrawing\").removeClass(\"nd\");\r\n            }\r\n\r\n            var i;\r\n            var $volNameSelect = $(\"#shareVolume\");\r\n\r\n            while ((i = $(\"#shareVolume option\").length) > 0) {\r\n                $(\"#shareVolume option[index='0']\").remove();\r\n            }\r\n\r\n            var $ispOption = $(\"<option>\" + table_str.selectopt + \"</option>\");\r\n            $ispOption.val(table_str.selectopt);\r\n\r\n            $volNameSelect.append($ispOption);\r\n\r\n            for (index = 0; index < volumeList.length; index++) {\r\n                if (\"Online\" == volumeList[index].status) {\r\n                    $ispOption = $(\"<option></option>\");\r\n                    $ispOption.val(volumeList[index].label + \":\");\r\n                    $ispOption.text(volumeList[index].label + \":\");\r\n\r\n                    $volNameSelect.append($ispOption);\r\n                }\r\n            }\r\n\r\n            folderIdx = accessFolderList_samba.length;\r\n\r\n            if ($.mainParam !== undefined) {\r\n                var param = $.mainParam || {};\r\n                $('#scroll').scrollTop(param.scrollTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkVolumeNum(usbDeviceList, volumeList) {\r\n        var maxVolumeNum = 0;\r\n        for (var i = 0; i < usbDeviceList.length; i++) {\r\n            var tempNum = 0;\r\n            for (var j = 0; j < volumeList.length; j++) {\r\n                if ($.stkPop(volumeList[j].__stack) == usbDeviceList[i].__stack) {\r\n                    tempNum += 1;\r\n                }\r\n            }\r\n            if (tempNum > maxVolumeNum) {\r\n                maxVolumeNum = tempNum;\r\n            }\r\n            if (maxVolumeNum > 5) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function renderFreeSpace(free, total) {\r\n        var percent = 1-free/total,\r\n                len = percent*230;\r\n        var isAlert = (percent >= 0.9);\r\n        var inHTML='<div class=\"inline-block\">';\r\n        inHTML +=   '<div class=\"\" style=\"position: relative; display: inline-block;\">';\r\n        inHTML +=       '<div class=\"\" style=\"margin-bottom:10px;top:7px;position:relative;\">';\r\n        inHTML +=           '<div class=\"\" style=\"border: 0 none;background-color: #a7a9ac;width: 230px; height: 6px;\">';\r\n        inHTML +=               '<div class=\"progressbar-value'+(isAlert?' grid_alert':'')+'\" style=\"width:'+\r\n                len+'px;height:100%;overflow: hidden;\"></div>';\r\n        inHTML +=           '</div>';\r\n        inHTML +=       '</div>';\r\n        inHTML +=   '</div>';\r\n        inHTML +=   '<div class=\"volume-progress-text\">';\r\n        inHTML +=       '<span class=\"'+(isAlert?'grid_alert':'')+'\">'+s_str.used+':'+(total-free).toFixed(1)+'G</span>';\r\n        inHTML +=       '<span>'+s_str.free+':'+free+'G</span>';\r\n        inHTML +=   '</div>';\r\n        inHTML +='</div>';\r\n        return inHTML;\r\n    }\r\n\r\n    function getVolumeGB(data) {\r\n        var kb = /K/;\r\n        var mb = /M/;\r\n        var gb = /G/;\r\n        var cap;\r\n        if (kb.test(data)) {\r\n            cap = data.split(\" K\")[0]*1/1024/1024;\r\n            return cap.toFixed(1)*1;\r\n        } else if (mb.test(data)) {\r\n            cap = data.split(\" M\")[0]*1/1024;\r\n            return cap.toFixed(1)*1;\r\n        } else if (gb.test(data)) {\r\n            cap = data.split(\" G\")[0]*1;\r\n            return cap.toFixed(1)*1;\r\n        } else {\r\n            return (data*1).toFixed(1)*1;\r\n        }\r\n    }\r\n\r\n    function drawChart(deviceList, volumeList) {\r\n        var formatData,\r\n                colorArray=[\"#4ACBD6\",\"#11BBBF\",\"#0D9999\",\"#86E2E2\",\"#59E6EA\"],\r\n                div = [];\r\n\r\n        $(\"#chart_cnt\").empty().show();\r\n\r\n        $(\"#usb_drawing\").hide();\r\n\r\n        if(deviceList.length > 0 && (document.cookie.search('usbInfo=1') === -1)){\r\n            document.cookie = 'usbInfo=1';\r\n            $.showCover();\r\n            $('#mask').css({background: '#000', opacity: '0.3'});\r\n            $(\"#chart_tip\").removeClass('nd');\r\n            $(\"#main\").scrollTop(0);\r\n        }\r\n\r\n        for(var k = 0; k < deviceList.length; k++) {\r\n            if (\"Online\" != deviceList[k].status) {\r\n                continue;\r\n            }\r\n\r\n            var totalCapacity = 0, volumeIndex = 0;\r\n            div[k]=document.createElement(\"div\");\r\n            $(div[k]).attr(\"class\",\"device_chart\");\r\n            $(\"#chart_cnt\").append(div[k]);\r\n\r\n            $.each(volumeList, function(index) {\r\n                var that = this;\r\n                if ($.stkPop(that.__stack) == deviceList[k].__stack) {\r\n                    totalCapacity += getVolumeGB(that.capacity);\r\n                }\r\n            });\r\n\r\n            formatData = [];\r\n            var bgLine=document.createElement(\"canvas\");\r\n            bgLine.className=\"bg-line\";\r\n            bgLine.width=350;\r\n            bgLine.height=350;\r\n            var infoUl=document.createElement(\"ul\");\r\n            infoUl.className=\"device_info_ul\";\r\n            $.each(volumeList, function(index) {\r\n                var that = this;\r\n                if ($.stkPop(that.__stack) == deviceList[k].__stack) {\r\n                    (function(k, volumeIndex, bgLine, totalCapacity){\r\n                        formatData.push({\r\n                            value: getVolumeGB(that.capacity),\r\n                            color: that.enable == \"1\" ? colorArray[volumeIndex%5] : \"#A7A9AC\",\r\n                            label: that.label+':('+that.name+')',\r\n                            free: getVolumeGB(that.freeSpace),\r\n                            clickCallback:function(){\r\n                                $.addLoading();\r\n                                ableFunc(index);\r\n                            },\r\n                            showInfo:function(){\r\n                                var angle,\r\n                                        angleSum = 0,\r\n                                        total = 0,\r\n                                        index = 0;\r\n                                var r = this.outerRadius;\r\n                                var ctx = bgLine.getContext('2d');\r\n                                $(\"#chart_cnt .device_chart:eq(\"+k+\")\").find(\"div.device_info\").hide();\r\n                                ctx.clearRect(0,0,350,350);\r\n                                ctx.beginPath();\r\n                                ctx.strokeStyle = this.fillColor;\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(170,170);\r\n\r\n                                $.each(volumeList, function() {\r\n                                    var that = this;\r\n                                    if ($.stkPop(that.__stack) == deviceList[k].__stack) {\r\n                                        if(index<volumeIndex) {\r\n                                            angleSum += getVolumeGB(that.capacity);\r\n                                        }\r\n                                        index++;\r\n                                    }\r\n                                });\r\n\r\n                                angleSum = angleSum/totalCapacity*2*Math.PI;\r\n                                angle = this.value/totalCapacity*2*Math.PI;\r\n                                if(this.value==totalCapacity) angle=2.3;\r\n                                var changeX = ((angleSum + angle/2)>Math.PI)?-1:0;\r\n\r\n                                var div = $(\"#chart_cnt .device_chart:eq(\"+k+\")\").find(\"div.device_info:eq(\"+volumeIndex+\")\");\r\n                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2),170-1.4*r*Math.cos(angleSum + angle/2));\r\n                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2)+ (changeX==0?1:-1)*div.width(),170-1.4*r*Math.cos(angleSum + angle/2));\r\n\r\n                                ctx.stroke();\r\n                                if ( isIE8 ){\r\n                                    ctx.beginPath();\r\n                                    ctx.fillStyle=\"#ffffff\";\r\n                                    ctx.arc(170, 170, 36, 0, Math.PI*2, false);\r\n                                    ctx.fill();\r\n                                }\r\n                                div.show();\r\n                            },\r\n                            hideInfo:function(){\r\n                                var ctx = bgLine.getContext('2d');\r\n                                $(\"#chart_cnt .device_chart:eq(\"+k+\")\").find(\"div.device_info\").hide();\r\n                                ctx.clearRect(0,0,350,350);\r\n                            }\r\n                        });\r\n                    })(k, volumeIndex, bgLine, totalCapacity);\r\n                    volumeIndex++;\r\n                }\r\n            });\r\n            if (formatData.length === 1) {\r\n                formatData.push({\r\n                    value: 0.01,\r\n                    color: \"#fff\",\r\n                    label: '',\r\n                    free: 0.01,\r\n                    clickCallback: function () {\r\n                    },\r\n                    showInfo: function () {\r\n                    },\r\n                    hideInfo: function () {\r\n                    }\r\n                });\r\n            }\r\n\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append(bgLine);\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append(infoUl);\r\n            var canvas=document.createElement(\"canvas\");\r\n            canvas.width=140;\r\n            canvas.height=140;\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append(canvas);\r\n            // newfour\r\n            var isIE8 =( navigator.appName == \"Microsoft Internet Explorer\" && navigator.appVersion.split(\";\")[1].replace(/[ ]/g,\"\")==\"MSIE8.0\" );\r\n\r\n            if( isIE8 ){\r\n                canvas=window.G_vmlCanvasManager.initElement(canvas);\r\n                bgLine=window.G_vmlCanvasManager.initElement(bgLine);\r\n            }\r\n\r\n            (function(canvas,totalCapacity,bgLine){\r\n                new Chart(canvas.getContext(\"2d\")).Doughnut(formatData, {\r\n                    showTooltips: true,\r\n                    segmentStrokeWidth : 1,\r\n                    percentageInnerCutout : 45,\r\n                    animationSteps : 30,\r\n                    animationEasing: \"easeOutQuad\",\r\n                    //animation : false,\r\n                    onAnimationComplete:function(){\r\n                        var ctx=bgLine.getContext('2d');\r\n                        var div, li;\r\n                        var angle, angleSum=0;\r\n                        var changeX=0, changeY=0;\r\n                        var r = this.outerRadius;\r\n                        var usedValue, freeValue;\r\n                        var total;\r\n\r\n                        for(var i=0;i<this.segments.length;i++){\r\n                            angle = this.segments[i].value/this.total*2*Math.PI;\r\n                            if(this.segments.length==2)angle=2.3;\r\n                            div=document.createElement(\"div\");\r\n                            li=document.createElement(\"li\");\r\n                            div.className=\"device_info\";\r\n                            li.className=\"device_info_li\";\r\n                            $(canvas).closest(\".device_chart\").append(div);\r\n                            $(canvas).closest(\".device_chart\").find(\".device_info_ul\").append(li);\r\n\r\n                            changeX = ((angleSum + angle/2)>Math.PI)?-1:0;\r\n                            changeY = -1;\r\n\r\n                            $(div).css(\"top\",parseInt(r - 1.4*r*Math.cos(angleSum + angle/2) + changeY*div.offsetHeight - 1)+\"px\");\r\n                            $(div).css(\"left\",parseInt(r + 1.4*r*Math.sin(angleSum + angle/2) + changeX*div.offsetWidth + 20)+\"px\");\r\n\r\n                            usedValue = ((this.segments[i].value*1-this.segments[i].free*1+\"\").indexOf(\".\")>-1)?\r\n                                    (this.segments[i].value*1-this.segments[i].free*1).toFixed(1):\r\n                                    (this.segments[i].value*1-this.segments[i].free*1);\r\n                            freeValue = ((this.segments[i].free*1+\"\").indexOf(\".\")>-1)?\r\n                                    (this.segments[i].free*1).toFixed(1):(this.segments[i].free*1);\r\n\r\n                            div.innerHTML=\"<h4>\"+this.segments[i].label+\"</h4>\"+\"<ul><li class=\\\"\"+\r\n                                    ((usedValue/freeValue)>=9?\"alert\":\"\")+\"\\\">\"+s_str.used+\": \"+usedValue+\"G</li>\"+\"<li>\"+\r\n                                    s_str.free+\": \"+freeValue+\"G</li></ul>\";\r\n                            li.innerHTML=\"<div style=\\\"background:\"+this.segments[i].fillColor+\"\\\"></div>\"+this.segments[i].label.split('(')[0];\r\n                            angleSum+=angle;\r\n                            div.style.display=\"none\";\r\n                        }\r\n                        ctx.beginPath();\r\n                        ctx.fillStyle=\"#ffffff\";\r\n                        ctx.arc(170, 170, 36, 0, Math.PI*2, false);\r\n                        ctx.fill();\r\n                        totalCapacity = ((totalCapacity+\"\").indexOf(\".\")>-1)?(totalCapacity*1).toFixed(1):(totalCapacity*1);\r\n                        if ( isIE8 ) {\r\n                            total=\"<div class=\\\"device_total\\\" style=\\\"background:transparent;\\\">\"+totalCapacity+\"G</div>\";\r\n                        }else{\r\n                            total=\"<div class=\\\"device_total\\\">\"+totalCapacity+\"G</div>\";\r\n                        }\r\n                        $(canvas).closest(\".device_chart\").append($(total));\r\n                    }\r\n                });\r\n            })(canvas,totalCapacity,bgLine);\r\n\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append($('<button data-index=\"'+k+'\"'+\r\n                    ' type=\"submit\" class=\"bottom_button blue\">'+m_str.remove+'</button>'));\r\n        }\r\n\r\n\r\n        $('.bottom_button').click(function() {\r\n            var idx = $(this).attr('data-index');\r\n            $.addLoading();\r\n            handleUsb(idx);\r\n        });\r\n    }\r\n\r\n    function selectJudge(index) {\r\n        var i;\r\n        var selectAll = 1;\r\n\r\n        if ($(\"#cb\" + index).prop(\"data-checked\") == true) {\r\n            for (i = 0; i < accessFolderList_samba.length; i++) {\r\n                if ($(\"#cb\" + i).prop(\"data-checked\") == false) {\r\n                    selectAll = 0;\r\n                }\r\n            }\r\n\r\n            if (selectAll == 1) {\r\n                $(\"#shareTitle\").prop(\"checked\", true).tpCheckbox();\r\n            }\r\n        } else {\r\n            $(\"#shareTitle\").prop(\"checked\", false).tpCheckbox();\r\n        }\r\n    }\r\n\r\n    function initShareTab() {\r\n        var array = [];\r\n        var fp;\r\n        var matchVolume;\r\n        var status;\r\n        var dlnaEnable;\r\n        var ableControl;\r\n        var j;\r\n        var index;\r\n        var edit = \"\";\r\n        var del = \"\";\r\n        var i;\r\n\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            var match = false;\r\n            var volumeName = m_str.disconnected;\r\n            fp = accessFolderList_samba[index].volumeLabel + \":\" + accessFolderList_samba[index].name;\r\n\r\n            $.each(volumeList, function() {\r\n                if (this.uuid == accessFolderList_samba[index].volumeUuid) {\r\n                    matchVolume = this;\r\n                    match = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            dlnaEnable = table_str.off;\r\n            if (accessFolderList_dlna[index].enable == 1) {\r\n                dlnaEnable = table_str.on;\r\n            }\r\n\r\n            if ((accessFolderList_samba[index].volumeUuid != \"\") && (match == false)) {\r\n                ableControl = \"<span class='table-grid-icon inactive-disable-icon' id='sp\" + index + \"'></span>\";\r\n            } else if ((accessFolderList_samba[index].volumeUuid != \"\") && (matchVolume.status != \"Online\")) {\r\n                if (\"Error\" == matchVolume.status) {\r\n                    ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n                } else if ((\"Offline\" == matchVolume.status) && (matchVolume.enable == 1)) {\r\n                    ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n                } else {\r\n                    ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n                }\r\n            } else {\r\n                if (1 == accessFolderList_samba[index].enable) {\r\n                    ableControl = \"<span class='table-grid-icon enable-icon' id='sp\" + index + \"' data-index='\"+index+\"'></span>\";\r\n                } else {\r\n                    ableControl = \"<span class='table-grid-icon disable-icon' id='sp\" + index + \"' data-index='\"+index+\"'></span>\";\r\n                }\r\n            }\r\n\r\n            edit = \"<span class='table-grid-icon edit-modify-icon' id='edit\" + index + \"' data-index='\"+index+\"'></span>\";\r\n            del = \"<span class='table-grid-icon edit-trash-icon' id='del\" + index + \"' data-index='\"+index+\"'></span>\";\r\n\r\n            for (i = 0; i < volumeList.length; i++) {\r\n                if (volumeList[i].label == accessFolderList_samba[index].volumeLabel) {\r\n                    volumeName = volumeList[i].name;\r\n                }\r\n            }\r\n\r\n            if (volumeName == undefined) {\r\n                volumeName = m_str.disconnected;\r\n            }\r\n\r\n            array.push([{\r\n                \"text\": '<div><input type=\"checkbox\" id=\"cb'+index+'\" class=\"table-select-one\" data-index=\"'\r\n                + index + '\"/><label></label></div>',\r\n                \"width\": \"8%\"\r\n            }, {\r\n                \"text\": (index + 1),\r\n                \"width\": \"5%\"\r\n            }, {\r\n                \"text\": accessFolderList_samba[index].alias,\r\n                \"width\": \"15%\"\r\n            }, {\r\n                \"text\": escapeStr(fp),\r\n                \"width\": \"25%\"\r\n            }, {\r\n                \"text\": dlnaEnable,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": volumeName,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": ableControl,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": edit + del,\r\n                \"width\": \"17%\"\r\n            }]);\r\n        }\r\n\r\n        $.initTableBody($('#shareTab'), array);\r\n        $.tablePages($('#shareTab'), 8);\r\n        return array;\r\n    }\r\n\r\n    function ableShare(index) {\r\n        var command = {};\r\n\r\n        var matchVolume;\r\n        var match = false;\r\n        var _index;\r\n\r\n        $.each(volumeList, function () {\r\n            if (this.uuid == accessFolderList_samba[index].volumeUuid) {\r\n                matchVolume = this;\r\n                match = true;\r\n            }\r\n        });\r\n\r\n        if ((accessFolderList_samba[index].volumeUuid != \"\") && (match == false)) {\r\n\r\n        } else if ((accessFolderList_samba[index].volumeUuid != \"\") && (matchVolume.status != \"Online\")) {\r\n\r\n        } else {\r\n            if (1 == accessFolderList_samba[index].enable) {\r\n                command.enable = 0;\r\n            } else {\r\n                command.enable = 1;\r\n            }\r\n        }\r\n\r\n        $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, command);\r\n        $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, command);\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, command);\r\n\r\n        if (!$.exe()) {\r\n            $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n            $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n            if (!$.exe()) {\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"usbManage.htm\", param);\r\n            }\r\n        }\r\n    }\r\n\r\n    function modifyShare(index) {\r\n        var i;\r\n        editCurIndex = index;\r\n        var str = accessFolderList_samba[index].volumeLabel + \":\";\r\n\r\n        $(\"#shareVolume\").find(\"option[value='\" + str + \"']\").prop(\"selected\", \"selected\");\r\n        $(\"#shareVolume\").tpSelect({refresh: 1});\r\n\r\n        $(\"#filename\").val(accessFolderList_samba[index].volumeLabel + \":\" + accessFolderList_samba[index].name);\r\n        $(\"#shareName\").val(accessFolderList_samba[index].alias);\r\n\r\n        if (accessFolderList_samba[index].needAuth == 1) {\r\n            $(\"#ea\").prop(\"checked\", true).tpCheckbox();\r\n        }\r\n\r\n        for (i = 0; i < userAccessList_samba.length; i++) {\r\n            if (parseInt(accessFolderList_samba[index].__stack, 10) != parseInt(userAccessList_samba[i].__stack, 10)) {\r\n                continue;\r\n            }\r\n\r\n            if (parseInt(userList[0].__stack, 10) == userAccessList_samba[i].userId) {\r\n                if (userAccessList_samba[i].permissions == 7) {\r\n                    $(\"#wa\").prop(\"checked\", true).tpCheckbox();\r\n                } else {\r\n                    $(\"#wa\").prop(\"checked\", false).tpCheckbox();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (accessFolderList_dlna[index].enable == 1) {\r\n            $(\"#ems\").prop(\"checked\", true).tpCheckbox();\r\n        }\r\n\r\n        shareTabStatus = \"modify\";\r\n    }\r\n\r\n    function delShare(index) {\r\n\r\n        $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);\r\n        $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);\r\n        $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);\r\n\r\n\r\n        if (!$.exe()) {\r\n            $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n            $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n            if (!$.exe()) {\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"usbManage.htm\", param);\r\n            }\r\n        }\r\n    }\r\n\r\n    function delShareMul(index) {\r\n        var i;\r\n\r\n        $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);\r\n        $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);\r\n        $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);\r\n\r\n        $.exe();\r\n    }\r\n\r\n    function initAuthTab() {\r\n        var array = [];\r\n        var index;\r\n\r\n        if (volumeList.length == 0) {\r\n            array.push([{\r\n                \"text\": \"--\",\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": \"--\",\r\n                \"width\": \"40%\"\r\n            }, {\r\n                \"text\": \"--\",\r\n                \"width\": \"25%\"\r\n            }, {\r\n                \"text\": \"--\",\r\n                \"width\": \"25%\"\r\n            }]);\r\n        }\r\n\r\n        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);\r\n\r\n        if (!$.exe()) {\r\n            for (idx = 1; idx <= usbDeviceList.length; idx++) {\r\n                if (\"Online\" == usbDeviceList[idx - 1].status) {\r\n                    for (index = 0; index < volumeList.length; index++) {\r\n                        if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[index].__stack).split(','))[0]) {\r\n                            if (volumeList[index].status == \"Online\") {\r\n                                array.push([{\r\n                                    \"text\": (index + 1),\r\n                                    \"width\": \"10%\"\r\n                                }, {\r\n                                    \"text\": \"volume(\" + volumeList[index].name + \")\",\r\n                                    \"width\": \"40%\"\r\n                                }, {\r\n                                    \"text\": volumeList[index].label + \":\",\r\n                                    \"width\": \"25%\"\r\n                                }, {\r\n                                    \"text\": volumeList[index].name,\r\n                                    \"width\": \"25%\"\r\n                                }]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            $.initTableBody($('#authTab'), array);\r\n            $.tablePages($('#authTab'), 5);\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    function getParentObj(obj) {\r\n        if (!obj.hasClass('cc')) {\r\n            currentFolder = obj.siblings().text();\r\n            if (fPath != \"\") {\r\n                currentFolder += (\"/\" + fPath);\r\n            }\r\n            fPath = currentFolder;\r\n            getParentObj(obj.parent());\r\n        } else {\r\n            fPath = \"/\" + fPath;\r\n        }\r\n    }\r\n\r\n    function escapeStr(str) {\r\n        return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/ /g, '&nbsp;');\r\n    }\r\n\r\n    function transStr(str) {\r\n        return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/\\s/g, ' ');\r\n    }\r\n\r\n    function getFolderPath(obj) {\r\n        var label;\r\n        var index;\r\n        var color, $prefol;\r\n\r\n        if (firstNode == 1) {\r\n            if (!$(obj).parent().hasClass('root')) {\r\n                folderPath = (\"/\" + $(obj).text());\r\n                o = obj;\r\n                firstNode = 0;\r\n                getFolderPath($(obj).parent());\r\n            } else {\r\n                folderPath = $(obj).text();\r\n\r\n                for (index = 0; index < volumeList.length; index++) {\r\n                    if ($(obj).text() == (volumeList[index].label + \":\")) {\r\n                        currVolume = volumeList[index].name;\r\n                    }\r\n                }\r\n\r\n                color = $(obj).css(\"color\");\r\n                $(obj).css(\"color\", \"#0CF\");\r\n                if (prevObj) {\r\n                    $(prevObj).css(\"color\", color);\r\n\r\n                    $prefol = $(prevObj).siblings(\".folderSel\");\r\n                    if (prevObj != obj) {\r\n                        $prefol.removeClass(\"folderSel\");\r\n                        $prefol.addClass(\"folderImg\");\r\n                    }\r\n                }\r\n                prevObj = obj;\r\n            }\r\n        } else {\r\n            if (!$(obj).parent().hasClass('root')) {\r\n                folderPath = (\"/\" + $(obj).siblings('span').text()) + folderPath;\r\n                getFolderPath($(obj).parent());\r\n            } else {\r\n                label = $(obj).siblings('.span').text();\r\n\r\n                for (index = 0; index < volumeList.length; index++) {\r\n                    if ($(obj).siblings('.span').text() == (volumeList[index].label + \":\")) {\r\n                        currVolume = volumeList[index].name;\r\n                    }\r\n                }\r\n\r\n                folderPath = label + folderPath;\r\n                firstNode = 1;\r\n\r\n                color = $(o).css(\"color\");\r\n                $(o).css(\"color\", \"#0CF\");\r\n\r\n                var $ofol = $(o).siblings(\".folderImg\");\r\n                $ofol.removeClass(\"folderImg\");\r\n                $ofol.addClass(\"folderSel\");\r\n\r\n                if (prevObj) {\r\n                    $(prevObj).css(\"color\", color);\r\n\r\n                    $prefol = $(prevObj).siblings(\".folderSel\");\r\n                    if (prevObj != o) {\r\n                        $prefol.removeClass(\"folderSel\");\r\n                        $prefol.addClass(\"folderImg\");\r\n                    }\r\n\r\n                }\r\n                prevObj = o;\r\n            }\r\n        }\r\n    }\r\n\r\n    function createChildFolder(obj) {\r\n        var index;\r\n\r\n        if (firstClick == 1) {\r\n            firstClick = 0;\r\n            o = obj;\r\n        }\r\n\r\n        if (!$(obj).parent().hasClass('root')) {\r\n            currentFolder = $(obj).siblings('.fName').text();\r\n\r\n            if (currPath != \"\") {\r\n                currentFolder += (\"/\" + currPath);\r\n            }\r\n            currPath = currentFolder;\r\n\r\n            createChildFolder($(obj).parent());\r\n        } else {\r\n            for (index = 0; index < volumeList.length; index++) {\r\n                if ($(obj).siblings('.span').text() == (volumeList[index].label + \":\")) {\r\n                    currVolume = volumeList[index].name;\r\n                }\r\n            }\r\n\r\n            var fullPath = currVolume + \"/\" + transStr(currPath);\r\n\r\n            var command = {};\r\n            command.targetPath = fullPath;\r\n            var ide;\r\n\r\n            $.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n            folderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\r\n            if (!$.exe()) {\r\n                for (ide = 0; ide < folderList.length; ide++) {\r\n                    var folderNameStr = escapeStr(folderList[ide].folderName);\r\n                    text = '<div style=\"padding-left:23px;\" class=\"div\">'+\r\n                            '<div class=\"addFolder inline\"></div>'+\r\n                            '<div class=\"folderImg inline\" style=\"cursor:pointer;\"></div>&nbsp;'+\r\n                            '<span class=\"fName inline\" style=\"line-height:24px;vertical-align:top;cursor:pointer;\">'+\r\n                            folderNameStr + '</span></div>';\r\n                    $(o).parent().append(text);\r\n                }\r\n            }\r\n            firstClick = 1;\r\n            currPath = \"\";\r\n            if (!($(o).parent().hasClass(\"root\"))) {\r\n                $(o).parent().addClass(\"loaded\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function foldSelect(obj) {\r\n        $(obj).siblings(\".fName\").click();\r\n    }\r\n\r\n    function loadClick(obj) {\r\n        if ($(obj).hasClass(\"addFolder\")) {\r\n            if ($(obj).parent().hasClass(\"vol\")) {\r\n                $(obj).siblings('div').removeClass(\"nd\");\r\n                $(o).parent().removeClass(\"vol\");\r\n            } else if ($(obj).parent().hasClass(\"loaded\")) {\r\n                $(obj).siblings('div').removeClass(\"nd\");\r\n            } else {\r\n                createChildFolder(obj);\r\n            }\r\n\r\n            $(obj).removeClass(\"addFolder\");\r\n            $(obj).addClass(\"hideFolder\");\r\n        } else if ($(obj).hasClass(\"hideFolder\")) {\r\n            $(obj).removeClass(\"hideFolder\");\r\n            $(obj).addClass(\"addFolder\");\r\n\r\n            if ($(obj).parent().hasClass(\"root\")) {\r\n                $(obj).parent().addClass(\"vol\");\r\n            }\r\n\r\n            $(obj).siblings('div').addClass(\"nd\");\r\n        }\r\n    }\r\n\r\n    function showBrowse() {\r\n        $.setFixedCentral($(\"#folderSel\"));\r\n        $.showCover();\r\n        $(\"#folderSel\").removeClass(\"nd\");\r\n        var index;\r\n\r\n        for (index = 0; index < volumeList.length; index++) {\r\n            if (\"Online\" == volumeList[index].status && currentVol == (volumeList[index].label + \":\")) {\r\n                var text;\r\n                text = (\"<div style='padding-left:10px;' class='root'><div class='addFolder inline'></div>&nbsp;\"+\r\n                \"<span class='span inline' style='line-height:24px;vertical-align:top;cursor:pointer;'>\" +\r\n                volumeList[index].label + \":\" + \"</span></div>\");\r\n\r\n                $(\"#folderSelContent\").append(text);\r\n            }\r\n        }\r\n    }\r\n\r\n    function deleteItem() {\r\n        var index;\r\n\r\n        if ($(\"#shareTitle\").prop(\"data-checked\") == true) {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                delShareMul(index);\r\n            }\r\n        } else {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                if ($(\"#cb\" + index).prop(\"data-checked\") == true) {\r\n                    delShareMul(index);\r\n                }\r\n            }\r\n        }\r\n\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n        $.exe();\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"usbManage.htm\", param);\r\n    }\r\n\r\n    $(\"#shareSettings\").click(function () {\r\n        $.addLoading($(this));\r\n\r\n        if ($(\"#server_name\").val().length >= 16) {\r\n            $.alert(CMM_USB_SERVER_NAME_LENGTH);\r\n            return;\r\n        }\r\n\r\n        var newDlnaObj = {};\r\n        newDlnaObj.serverName = $(\"#server_name\").val();\r\n\r\n        if (newDlnaObj.serverName == \"\") {\r\n            $.alert(ERR_USB_DLNA_SERVER_NAME_EMPTY);\r\n            return;\r\n        }\r\n        if ($.asc(newDlnaObj.serverName, true)) {\r\n            $.alert(ERR_USB_DLNA_SERVER_NAME_NOT_ASCII);\r\n            return;\r\n        }\r\n        if ((/[\\\\\\/\\*\\?=+:;,.\"<>|@\\[\\]\\(\\)\\ ]+/).test(newDlnaObj.serverName)) {\r\n            $.alert(ERR_USB_DLNA_INVALID_SERVER_NAME);\r\n            return;\r\n        }\r\n\r\n        var command = {};\r\n        command.serverName = $(\"#server_name\").val();\r\n\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, newDlnaObj);\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, command);\r\n\r\n        $.exe(function (ret) {\r\n            if (!ret) {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"usbManage.htm\", param);\r\n            }\r\n        });\r\n    });\r\n\r\n    $(\"#edit-ok\").click(function () {\r\n        var newStr;\r\n        var selectVolumeUuid;\r\n        var selectVolumeLabel;\r\n        var index;\r\n        var command = {};\r\n        var command_ftp = {};\r\n        var command_dlna = {};\r\n        var stack_samba;\r\n        var enableDlna = 0;\r\n        var str;\r\n        var stack_ftp;\r\n        var curFolderPath;\r\n\r\n        $.addLoading($(this));\r\n\r\n        newStr = $(\"#shareName\").val();\r\n\r\n        if (newStr === \"\") {\r\n            $.alert(ERR_USB_SHARE_NAME_EMPTY);\r\n            return;\r\n        }\r\n\r\n        if ((/[\\\\\\/:\\*\\?\"<>|\\]\\ ]+/).test(newStr)) {\r\n            $.alert(ERR_USB_INVALID_CHAR_IN_FOLDER_NAME);\r\n            return;\r\n        }\r\n\r\n        if ($.asc(newStr)) {\r\n            $.alert(ERR_USB_SHARE_NAME_NOT_ASCII);\r\n            return;\r\n        }\r\n\r\n        selectVolumeUuid = \"\";\r\n        selectVolumeLabel = \"\";\r\n\r\n        $.each(volumeList, function () {\r\n            if (this.name == currVolume) {\r\n                selectVolumeUuid = this.uuid;\r\n                selectVolumeLabel = this.label;\r\n            }\r\n        });\r\n\r\n        str = $(\"#filename\").val();\r\n        if (str == \"\") {\r\n            $.alert(CMM_USB_BROWSE_FOLDER_PATH);\r\n            return;\r\n        }\r\n\r\n        if (str.length == 2 || str == \"ALL:\") {\r\n            curFolderPath = \"/\";\r\n        } else {\r\n            curFolderPath = str.substring(str.indexOf(\":\") + 1, str.length);\r\n        }\r\n\r\n        if (\"add\" == shareTabStatus) {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid)) {\r\n                    $.alert(ERR_USB_DIR_EXIST);\r\n                    return;\r\n                }\r\n\r\n                if ($(\"#shareName\").val() == accessFolderList_samba[index].alias) {\r\n                    $.alert(ERR_USB_SHARE_NAME_EXIST);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            command.name = curFolderPath;\r\n            command.alias = $(\"#shareName\").val();\r\n            command.enable = 1;\r\n            command.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n            command_ftp.name = curFolderPath;\r\n            command_ftp.alias = $(\"#shareName\").val();\r\n            command_ftp.enable = 1;\r\n            command_ftp.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_ftp.writePermission = ($(\"#wa\").prop(\"data-checked\") == true) ? 7 : 3;\r\n\r\n            command_dlna.name = curFolderPath;\r\n            command_dlna.alias = $(\"#shareName\").val();\r\n            command_dlna.enable = ($(\"#ems\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_dlna.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            if (selectVolumeUuid != \"\") {\r\n                command.volumeUuid = selectVolumeUuid;\r\n                command_ftp.volumeUuid = selectVolumeUuid;\r\n                command_dlna.volumeUuid = selectVolumeUuid;\r\n            }\r\n            if (selectVolumeLabel != \"\") {\r\n                command.volumeLabel = selectVolumeLabel;\r\n                command_ftp.volumeLabel = selectVolumeLabel;\r\n                command_dlna.volumeLabel = selectVolumeLabel;\r\n            }\r\n\r\n            $.act(ACT_ADD, SMB_SERVICE_FOLDER, null, null, command);\r\n            accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_ADD, FTP_SERVER_FOLDER, null, null, command_ftp);\r\n            accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_ADD, DLNA_MEDIA_SERVER_FOLDER, null, null, command_dlna);\r\n            accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n        } else {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                if (($(\"#shareName\").val() == accessFolderList_samba[index].alias) && (index != editCurIndex)) {\r\n                    $.alert(ERR_USB_SHARE_NAME_EXIST);\r\n                    return;\r\n                }\r\n                if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid) && (index != editCurIndex)) {\r\n                    $.alert(ERR_USB_DIR_EXIST);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            command.name = curFolderPath;\r\n            command.alias = $(\"#shareName\").val();\r\n            command.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n            command_ftp.name = curFolderPath;\r\n            command_ftp.alias = $(\"#shareName\").val();\r\n            command_ftp.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_ftp.writePermission = ($(\"#wa\").prop(\"data-checked\") == true) ? 7 : 3;\r\n\r\n            command_dlna.name = curFolderPath;\r\n            command_dlna.alias = $(\"#shareName\").val();\r\n            command_dlna.enable = ($(\"#ems\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_dlna.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n            if (selectVolumeUuid != \"\") {\r\n                command.volumeUuid = selectVolumeUuid;\r\n                command_ftp.volumeUuid = selectVolumeUuid;\r\n                command_dlna.volumeUuid = selectVolumeUuid;\r\n            }\r\n            if (selectVolumeLabel != \"\") {\r\n                command.volumeLabel = selectVolumeLabel;\r\n                command_ftp.volumeLabel = selectVolumeLabel;\r\n                command_dlna.volumeLabel = selectVolumeLabel;\r\n            }\r\n\r\n            $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[editCurIndex].__stack, null, command);\r\n            accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[editCurIndex].__stack, null, command_ftp);\r\n            accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[editCurIndex].__stack, null, command_dlna);\r\n            accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n        }\r\n\r\n        $.exe(function (ret) {\r\n            if (!ret) {\r\n                if (\"add\" == shareTabStatus) {\r\n                    stack_samba = accessFolderList_samba[folderIdx].__stack;\r\n                    stack_ftp = accessFolderList_ftp[folderIdx].__stack;\r\n                } else {\r\n                    stack_samba = accessFolderList_samba[editCurIndex].__stack;\r\n                    stack_ftp = accessFolderList_ftp[editCurIndex].__stack;\r\n                }\r\n\r\n                var newFlag = 1;\r\n                var userCommand = {};\r\n\r\n                for (index = 0; index < userAccessList_samba.length; index++) {\r\n                    if (parseInt(stack_samba, 10) != parseInt(userAccessList_samba[index].__stack, 10)) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (parseInt(userList[0].__stack, 10) == userAccessList_samba[index].userId) {\r\n                        userCommand.userId = 1;\r\n                        if ($(\"#wa\").prop(\"data-checked\") == true) {\r\n                            userCommand.permissions = 7;\r\n                        } else {\r\n                            userCommand.permissions = 3;\r\n                        }\r\n                    }\r\n\r\n                    $.act(ACT_SET, SMB_USER_ACCESS, userAccessList_samba[index].__stack, null, userCommand);\r\n                    newFlag = 0;\r\n                }\r\n                if (1 == newFlag) {\r\n                    userCommand.userId = 1;\r\n                    if ($(\"#wa\").prop(\"data-checked\") == true) {\r\n                        userCommand.permissions = 7;\r\n                    } else {\r\n                        userCommand.permissions = 3;\r\n                    }\r\n\r\n                    $.act(ACT_ADD, SMB_USER_ACCESS, null, stack_samba, userCommand);\r\n                }\r\n\r\n                $.exe(function (ret) {\r\n                    if (!ret) {\r\n                        $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n                        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n                        if (!$.exe()) {\r\n                            $.removeLoading();\r\n                            var param = {};\r\n                            param.scrollTop = $(\"#scroll\").scrollTop();\r\n                            $.loadMain(\"usbManage.htm\", param);\r\n                        }\r\n                    } else {\r\n                        $.removeLoading();\r\n                    }\r\n                });\r\n            } else {\r\n                $.removeLoading();\r\n            }\r\n        });\r\n    });\r\n\r\n    $(\"#edit-cancel\").click(function () {\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"usbManage.htm\", param);\r\n    });\r\n})();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "usbFolderBrowse.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 52
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar blank = \"&nbsp;&nbsp;\";\r\nvar usbDeviceList;\r\nvar volumeList;\r\nvar folderList;\r\nvar currVolume = \"\";\r\nvar currPath = \"\";\r\nvar userList;\r\nvar userAccessList;\r\nvar accessFolderList;\r\nvar folderObj = \"\";\r\nvar userObj = \"\";\r\nvar idx,i;\r\nvar folderIdx;\r\nvar firstClick = 1;\r\n\r\nfunction escapeStr(str) \r\n{\r\n\treturn str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/ /g, '&nbsp;');\r\n}\r\nfunction transStr(str)\r\n{\r\n\treturn str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/\\s/g, ' ');\r\n}\r\n\r\nfunction doSet()\r\n{\r\n\tvar command = {};\r\n\tvar stack;\r\n\tvar selectPath;\r\n\t\r\n\tnewStr = $.id(\"shareName\").value;\r\n\tif (newStr === \"\")\r\n\t{\r\n\t\t$.alert(ERR_USB_SHARE_NAME_EMPTY);\r\n\t\treturn;\r\n\t}\r\n\tif ($.asc(newStr, true))\r\n\t{\r\n\t\t$.alert(ERR_USB_SHARE_NAME_NOT_ASCII);\r\n\t\treturn;\r\n\t}\r\n\tif ((/[\\\\\\/:\\*\\?\"<>|\\]\\ ]+/).test(newStr))\r\n\t{\r\n\t\t$.alert(ERR_USB_INVALID_CHAR_IN_FOLDER_NAME);\r\n\t\treturn;\r\n\t}\r\n\t\t\r\n\tnewStr = $.id(\"currPath\").value;\r\n\tif (newStr === \"\")\r\n\t{\r\n\t\t$.alert(ERR_USB_DIR_NAME_EMPTY);\r\n\t\treturn;\r\n\t}\r\n\tif ($.asc(newStr, true))\r\n\t{\r\n\t\t$.alert(ERR_USB_DIR_NAME_NOT_ASCII);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tselectPath = $.id(\"currPath\").value;\r\n\tif (\"/\" != selectPath)\r\n\t{\r\n\t\tif (\"/\" == selectPath.charAt(selectPath.length - 1))\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = selectPath.substring(0, selectPath.length - 1);\r\n\t\t\tselectPath = $.id(\"currPath\").value;\r\n\t\t}\r\n\t}\r\n\tif (\"ADD\" == pageStatus)\r\n\t{\r\n\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t{\r\n\t\t\tif (selectPath == accessFolderList[idx].name)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_DIR_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ($.id(\"shareName\").value == accessFolderList[idx].alias)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_SHARE_NAME_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommand.name = selectPath;\r\n\t\tcommand.alias = $.id(\"shareName\").value;\r\n\t\tcommand.enable = 1;\r\n\t\t$.act(ACT_ADD, folderObj, null, null, command);\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tstack = accessFolderList[folderIdx].__stack;\r\n\r\n\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t{\r\n\t\t\tif (($.id(\"shareName\").value == accessFolderList[idx].alias)\r\n\t\t\t\t&& (idx != folderIdx))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_SHARE_NAME_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ((selectPath == accessFolderList[idx].name)\r\n\t\t\t\t&& (idx != folderIdx))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_DIR_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommand.name = selectPath;\r\n\t\tcommand.alias = $.id(\"shareName\").value;\r\n\t\t$.act(ACT_SET, folderObj, stack, null, command);\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\t\r\n\t$.addLoading($.id(\"applyButton\"));\r\n\t$.exe(function(ret)\r\n\t{\r\n\t\tif (!ret) \r\n\t\t{\t\r\n\t\t\tif (\"DLNA\" == pageType)\r\n\t\t\t{\r\n\t\t\t\t$.loadMain(\"dlnaManage.htm\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstack = accessFolderList[folderIdx].__stack;\r\n\r\n\t\t\tfor (idx = 0; idx < userList.length; idx++ )\r\n\t\t\t{\r\n\t\t\t\tvar newFlag = 1;\r\n\t\t\t\tvar userCommand = {};\r\n\t\t\t\tif ((1 == userList[idx].X_TP_SupperUser)\r\n\t\t\t\t\t|| (\"\" == userList[idx].username))\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < userAccessList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (parseInt(stack, 10) != parseInt(userAccessList[i].__stack, 10))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (parseInt(userList[idx].__stack, 10) == userAccessList[i].userId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar permissions = \"\";\r\n\t\t\t\t\t\tif (true == $.id(\"access_n_\" + userAccessList[i].userId).checked)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (true == $.id(\"access_r_\" + userAccessList[i].userId).checked)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 7;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (0 == permissions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.act(ACT_DEL, userObj, userAccessList[i].__stack, null, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (permissions != userAccessList[i].permissions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuserCommand.permissions = permissions;\r\n\t\t\t\t\t\t\t$.act(ACT_SET, userObj, userAccessList[i].__stack, null, userCommand);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewFlag = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == newFlag)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar id = parseInt(userList[idx].__stack, 10);\r\n\t\t\t\t\tif (true != $.id(\"access_n_\" + id).checked)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserCommand.userId = id;\r\n\t\t\t\t\t\tuserCommand.permissions = ($.id(\"access_r_\" + id).checked == true)?3:7;\r\n\t\t\t\t\t\t$.act(ACT_ADD, userObj, null, stack, userCommand);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.exe(function(ret)\r\n\t\t\t{\r\n\t\t\t\tif (!ret) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (\"SMB\" == pageType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.act(ACT_SET,SMB_SERVICE,null,null,[\"modified=0\"]);\r\n\t\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t\t$.loadMain(\"usbSmbSrv.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\"FTP\" == pageType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.act(ACT_SET,FTP_SERVER,null,null,[\"modified=0\"]);\r\n\t\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t\t$.loadMain(\"ftpSrv.htm\");\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\nfunction openFolder()\r\n{\r\n\tvar fullPath = currVolume + \"/\" + currPath;\r\n\tvar command = {};\r\n\t\r\n\tcommand.targetPath = fullPath;\r\n\t$.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n\tfolderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\t\r\n\t$.exe();\r\n}\r\nfunction findFolder()\r\n{\r\n\tvar dirTmp;\r\n\tvar j;\r\n\tvar match = false;\r\n\t\r\n\tif ($.id(\"currPath\").value == \"/\")\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tdirTmp = $.id(\"currPath\").value.split('/');\r\n\t\r\n\tfor (idx = 0; idx < volumeList.length; idx++)\r\n\t{\r\n\t\tcurrVolume = volumeList[idx].name;\r\n\t\tcurrPath = \"\";\r\n\t\t\r\n\t\tfor (i=0; i < dirTmp.length; i++)\r\n\t\t{\r\n\t\t\tif (i == 1)\r\n\t\t\t{\r\n\t\t\t\tcurrPath = dirTmp[i];\r\n\t\t\t}\r\n\t\t\telse if (i > 1)\r\n\t\t\t{\r\n\t\t\t\tcurrPath = currPath + \"/\" + dirTmp[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\topenFolder();\r\n\t\t\t\r\n\t\t\tfor (j=0; j < folderList.length; j++)\r\n\t\t\t{\r\n\t\t\t\tif (folderList[j].folderName == dirTmp[i+1])\r\n\t\t\t\t{\r\n\t\t\t\t\tif ((i + 1) == (dirTmp.length - 1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t$.id(\"volumeList\").selectedIndex = idx + 1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (i == 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrPath = dirTmp[i+1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrPath = currPath + \"/\" + dirTmp[i+1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetupFolderTbl();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (j == folderList.length || match == true)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (match == true)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (match == true)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcurrVolume = \"\";\r\n\t\tcurrPath = \"\";\r\n\t\tcleanTbl();\r\n\t\t$.alert(ERR_USB_DIR_NOT_EXIST);\r\n\t}\r\n}\r\n\r\nfunction doBrowse()\r\n{\r\n\tif (firstClick == 1)\r\n\t{\r\n\t\tfindFolder();\r\n\t\tfirstClick = 0;\r\n\t}\r\n\r\n\tif ($.hasClass($.id(\"Folder_Browse\"), \"nd\")) {\r\n\t\t$.removeClass($.id(\"Folder_Browse\"), \"nd\");\r\n\t\t$.removeClass($.id(\"bl_line\"), \"nd\");\r\n\t\t$.id(\"Browse\").value = s_str.hide;\r\n\t}\r\n\telse {\r\n\t\t$.addClass($.id(\"Folder_Browse\"), \"nd\");\r\n\t\t$.addClass($.id(\"bl_line\"), \"nd\");\r\n\t\t$.id(\"Browse\").value = s_str.browse;\r\n\t}\r\n\t\r\n\tif (\"DLNA\" == pageType)\r\n\t{\r\n\t\t$.addClass($.id(\"User_Account\"), \"nd\");\r\n\t\t$.addClass($.id(\"bl_line\"), \"nd\");\r\n\t}\r\n}\r\nfunction cleanTbl()\r\n{\r\n\twhile ($.id(\"Folder_tbl\").rows.length > 1)\r\n\t\t$.id(\"Folder_tbl\").deleteRow(-1);\r\n}\r\n\r\nfunction upper()\r\n{\r\n\tvar temp = currPath.split('/');\r\n\tvar upperPath = \"\";\r\n\tif (1 == temp.length)\r\n\t{\r\n\t\tupperPath = \"\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (idx = 0; idx < (temp.length - 1); idx++)\r\n\t\t{\r\n\t\t\tif (0 == idx)\r\n\t\t\t{\r\n\t\t\t\tupperPath += temp[idx];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tupperPath += (\"/\" + temp[idx]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcurrPath = upperPath;\r\n\tsetupFolderTbl();\r\n}\r\nfunction browsePath(thisCtrl)\r\n{\r\n\tvar folder = $.h(thisCtrl);\r\n\tvar folderStr = transStr(folder);\r\n\tif (\"\" != currPath)\r\n\t{\r\n\t\tcurrPath += '/';\r\n\t}\r\n\tcurrPath += folderStr;\r\n\tsetupFolderTbl();\r\n}\r\nfunction setupFolderTbl()\r\n{\r\n\tvar fullPath = currVolume + \"/\" + currPath;\r\n\tcleanTbl();\r\n\tcurrSelect = \"\";\r\n\t\r\n\tvar command = {};\r\n\tcommand. targetPath = fullPath;\r\n\t\r\n\t$.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n\tfolderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\tvar folderTbl = $.id(\"Folder_tbl\");\r\n\t\t\tvar row = folderTbl.insertRow(-1);\r\n\t\t\tvar cell = row.insertCell(-1);\t\r\n\t\t\tcell.innerHTML = \"<span class='a' onClick='upper();'>\"+m_str.upperFolder+\"</span>\";\r\n\t\t}\r\n\t\t\r\n\t\tfor (idx = 0; idx < folderList.length; idx++)\r\n\t\t{\r\n\t\t\tvar folderTbl = $.id(\"Folder_tbl\");\r\n\t\t\tvar row = folderTbl.insertRow(-1);\r\n\t\t\tvar cell = row.insertCell(-1);\t\r\n\t\t\tvar folderNameStr = escapeStr(folderList[idx].folderName);\t\r\n\r\n\t\t\tcell.innerHTML = \"<span class='a' onClick='browsePath(this);'>\" + folderNameStr + \"</span>\";\r\n\t\t}\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = \"/\" + currPath + \"/\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = currPath + \"/\";\r\n\t\t}\r\n\t\t\r\n\t\tvar currPathStr = escapeStr(currPath);\r\n\t\t$.id(\"volumeInfo\").innerHTML = \"/\" + currVolume + \"/\" + currPathStr;\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\t$.id(\"volumeInfo\").innerHTML += \"/\";\r\n\t\t}\r\n\t}\r\n\r\n}\r\nfunction loadVolume()\r\n{\r\n\tcurrVolume = $.id(\"volumeList\").value;\r\n\tcurrPath = \"\";\r\n\tif (\"\" == currVolume)\r\n\t{\r\n\t\tcleanTbl();\r\n\t\t$.id(\"currPath\").value = \"/\";\r\n\t\t$.id(\"volumeInfo\").innerHTML = \"\";\r\n\t\treturn;\r\n\t}\r\n\tsetupFolderTbl();\r\n}\r\nfunction changeVolume()\r\n{\r\n\tloadVolume();\r\n}\r\nfunction init()\r\n{\r\n\tusbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null, null);\r\n\tvolumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null, null);\r\n\tif (\"SMB\" == pageType)\r\n\t{\r\n\t\tfolderObj = SMB_SERVICE_FOLDER;\r\n\t\tuserObj = SMB_USER_ACCESS;\r\n\t\tuserList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\t\t$.removeClass($.id(\"t_info1\"), \"nd\");\r\n\t}\r\n\tif (\"FTP\" == pageType)\r\n\t{\r\n\t\tfolderObj = FTP_SERVER_FOLDER;\r\n\t\tuserObj = FTP_USER_ACCESS;\r\n\t\tuserList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\t\t$.removeClass($.id(\"t_info2\"), \"nd\");\r\n\t}\r\n\tif (\"DLNA\" == pageType)\r\n\t{\r\n\t\tfolderObj = DLNA_MEDIA_SERVER_FOLDER;\r\n\t\t$.removeClass($.id(\"t_info3\"), \"nd\");\r\n\t}\r\n\t\r\n\tif (\"\" != folderObj)\r\n\t{\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\tif (\"\" != userObj)\r\n\t{\r\n\t\tuserAccessList = $.act(ACT_GL, userObj, null, null, null);\r\n\t}\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t/* init folder browse info */\r\n\t\tvar option;\r\n\t\tvar sel = $.id(\"volumeList\");\r\n\t\tfor (idx = 0; idx < volumeList.length; idx++)\r\n\t\t{\r\n\t\t\tif (\"Online\" == volumeList[idx].status)\r\n\t\t\t{\r\n\t\t\t\tvar text;\r\n\t\t\t\tfor (i = 0; i < usbDeviceList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (parseInt(usbDeviceList[i].__stack, 10) == parseInt(volumeList[idx].__stack, 10))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext = usbDeviceList[i].vendor + \" ( \" + usbDeviceList[i].model + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttext += (\", \" + volumeList[idx].name + \"(\" + volumeList[idx].capacity + \",\" + volumeList[idx].fileSystem +\")\")\r\n\t\t\t\tvar option = $.c(\"option\");\r\n\t\t\t\toption.value = volumeList[idx].name;\r\n\t\t\t\toption.text = text;\r\n\t\t\t\tvar sel = $.id(\"volumeList\");\r\n\t\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* init user info */\r\n\t\tif (\"DLNA\" == pageType)\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"User_Account\"), \"nd\");\r\n\t\t}\r\n\t\telse if ((\"SMB\" == pageType) || (\"FTP\" == pageType))\r\n\t\t{\r\n\t\t\t/* SMB or FTP, Setup User_Account table */\r\n\t\t\tfor (idx = 1; idx <= userList.length; idx++)\r\n\t\t\t{\r\n\t\t\t\tvar user_tbl = $.id(\"user_tbl\");\r\n\t\t\t\tvar newrow = user_tbl.insertRow(-1);\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tcell.innerHTML = idx;\r\n\t\t\t\tif (0 == userList[idx-1].enable)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.style[\"color\"] = \"#999\";\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == userList[idx-1].X_TP_SupperUser)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML += \"*\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML += \"&nbsp;\";\r\n\t\t\t\t}\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tcell.innerHTML = escapeStr(userList[idx-1].username);\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tif (\"\" != userList[idx-1].username)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML = \"<input name=\\\"access\" + idx + \"\\\" id=\\\"access_rw_\" + idx + \"\\\" type=\\\"radio\\\" /><span class=\\\"T T_faccess\\\">Full-Access\" + blank + \"</span><input name=\\\"access\" + idx + \"\\\" id=\\\"access_r_\" + idx + \"\\\" type=\\\"radio\\\" /><span class=\\\"T T_ronly\\\">Read-Only\" + blank + \"</span><input name=\\\"access\" + idx + \"\\\" id=\\\"access_n_\" + idx + \"\\\" type=\\\"radio\\\" checked /><span class=\\\"T T_naccess\\\">No-Access\" + blank + \"</span>\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML = \"&nbsp;\";\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == userList[idx-1].X_TP_SupperUser)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_rw_\" + idx).checked = true;\r\n\t\t\t\t\t$.id(\"access_rw_\" + idx).disabled = true;\r\n\t\t\t\t\t$.id(\"access_r_\" + idx).disabled = true;\r\n\t\t\t\t\t$.id(\"access_n_\" + idx).disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t/* init path info */\r\n\t\tif (\"ADD\" == pageStatus)\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = \"/\";\r\n\t\t\tfolderIdx = accessFolderList.length;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = pageInfo;\r\n\t\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t\t{\r\n\t\t\t\tif (pageInfo == accessFolderList[idx].name)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"shareName\").value = accessFolderList[idx].alias;\r\n\t\t\t\t\tfolderIdx = idx;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tfor (i = 0; i < userAccessList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(accessFolderList[idx].__stack, 10) != parseInt(userAccessList[i].__stack, 10))\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (7 == userAccessList[i].permissions)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_rw_\" + userAccessList[i].userId).checked = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (3 == userAccessList[i].permissions)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_r_\" + userAccessList[i].userId).checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n}\r\n</script>\r\n<p class=\"et T\" id=\"et\">Folder Browse</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"L1 T\" >\r\n<span class=\"nd T\" id=\"t_info1\">This page allows you to set a shared folder and access authorization for Storage Sharing service! It will not take effect when Anonymous access been enabled.</span>\r\n<span class=\"nd T\" id=\"t_info2\">This page allows you to set a shared folder and access authorization for FTP service!</span>\r\n<span class=\"nd T\" id=\"t_info3\">This page allows you to set a scan folder for DLNA media service!</span>\r\n</p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T\" id=\"t_shname\">Share Name:</b><input id=\"shareName\" class=\"text\" size=\"31\" maxlength=\"31\" type=\"text\" /></p>\r\n<p><b class=\"item L T\" id=\"t_dir\">Directory:</b><input id=\"currPath\" class=\"text\" size=\"31\" maxlength=\"127\" type=\"text\" disabled /></p>\r\n<p><b class=\"item L T\">&nbsp;</b><input type=\"button\" id=\"Browse\" class=\"button M T T_browse\" value=\"Browse\" onclick=\"doBrowse()\"/></p>\r\n<p class=\"br\"></p>\r\n\t<div id=\"Folder_Browse\" style=\"width:800px;\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"L T\" id=\"t_vol\">Select Volume:</b><select id=\"volumeList\" onchange=\"changeVolume();\" ><option class=\"T\" id=\"t_selvol\" value=\"\">--please choose volume--</option></select></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<table class='tbody' id='Folder_tbl' width='90%' >\r\n\t\t\t<tr>\r\n\t\t\t\t<th width=\"450px\" style=\"text-align:left;\"><span id=\"volumeInfo\"></span></th>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<div id=\"bl_line\" class=\"nd\">\r\n\t\t<p class=\"bl\"></p>\r\n\t</div>\r\n\t<div id=\"User_Account\" width=\"100%\" >\r\n\t<p><b class=\"L T\" id=\"t_tbl\">User Access Control Table:</b></p>\r\n\t<table class='bdr tc' id='user_tbl' width='90%' >\r\n\t\t<tr>\r\n\t\t\t<th width=\"40px\" class=\"T T_index\">Index</th>\r\n\t\t\t<th width=\"300px\" class=\"T T_username\">Username</th>\r\n\t\t\t<th width=\"300px\" class=\"T\" id=\"t_author\">Access Authorization</th>\r\n\t\t</tr>\r\n\t</table>\r\n\t<p>* : <span class=\"T\" id=\"t_note\">\"Super User\". It has full-access permission (Read & Write) to all active volume(s) and share folder(s).</span></p>\r\n\t</div>\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\">\r\n<input type=\"button\" class=\"button M T T_apply\" id=\"applyButton\" value=\"Apply\" onclick=\"doSet()\"/>\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar pageType;\r\nvar pageStatus;\r\nvar pageInfo;\r\n\r\nif ($.local)\r\n{\r\n\tpageType = \"SMB\";\r\n\tpageStatus = \"ADD\";\r\n\tpageInfo = \"/\";\r\n}\r\nelse\r\n{\r\n\tpageType = $.mainParam[0];\r\n\tpageStatus = $.mainParam[1];\r\n\tpageInfo = $.mainParam[2];\r\n}\r\n\r\ninit();\r\n</script>"
      }
    }, {
      "location" : {
        "uri" : "usbFolderBrowse_1.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 53
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar blank = \"&nbsp;&nbsp;\";\r\nvar usbDeviceList;\r\nvar volumeList;\r\nvar folderList;\r\nvar currVolume = \"\";\r\nvar currPath = \"\";\r\nvar userList;\r\nvar userAccessList;\r\nvar accessFolderList;\r\nvar folderObj = \"\";\r\nvar userObj = \"\";\r\nvar idx,i;\r\nvar folderIdx;\r\nvar firstClick = 1;\r\n\r\nfunction escapeStr(str) \r\n{\r\n\treturn str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/ /g, '&nbsp;');\r\n}\r\nfunction transStr(str)\r\n{\r\n\treturn str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/\\s/g, ' ');\r\n}\r\n\r\nfunction doSet()\r\n{\r\n\tvar command = {};\r\n\tvar stack;\r\n\tvar selectPath;\r\n\t\r\n\tnewStr = $.id(\"shareName\").value;\r\n\tif (newStr === \"\")\r\n\t{\r\n\t\t$.alert(ERR_USB_SHARE_NAME_EMPTY);\r\n\t\treturn;\r\n\t}\r\n\tif ($.asc(newStr, true))\r\n\t{\r\n\t\t$.alert(ERR_USB_SHARE_NAME_NOT_ASCII);\r\n\t\treturn;\r\n\t}\r\n\tif ((/[\\\\\\/:\\*\\?\"<>|\\]\\ ]+/).test(newStr))\r\n\t{\r\n\t\t$.alert(ERR_USB_INVALID_CHAR_IN_FOLDER_NAME);\r\n\t\treturn;\r\n\t}\r\n\t\t\r\n\tnewStr = $.id(\"currPath\").value;\r\n\tif (newStr === \"\")\r\n\t{\r\n\t\t$.alert(ERR_USB_DIR_NAME_EMPTY);\r\n\t\treturn;\r\n\t}\r\n\tif ($.asc(newStr, true))\r\n\t{\r\n\t\t$.alert(ERR_USB_DIR_NAME_NOT_ASCII);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tselectPath = $.id(\"currPath\").value;\r\n\tif (\"/\" != selectPath)\r\n\t{\r\n\t\tif (\"/\" == selectPath.charAt(selectPath.length - 1))\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = selectPath.substring(0, selectPath.length - 1);\r\n\t\t\tselectPath = $.id(\"currPath\").value;\r\n\t\t}\r\n\t}\r\n\tif (\"ADD\" == pageStatus)\r\n\t{\r\n\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t{\r\n\t\t\tif (selectPath == accessFolderList[idx].name)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_DIR_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ($.id(\"shareName\").value == accessFolderList[idx].alias)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_SHARE_NAME_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommand.name = selectPath;\r\n\t\tcommand.alias = $.id(\"shareName\").value;\r\n\t\tcommand.enable = 1;\r\n\t\t$.act(ACT_ADD, folderObj, null, null, command);\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tstack = accessFolderList[folderIdx].__stack;\r\n\r\n\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t{\r\n\t\t\tif (($.id(\"shareName\").value == accessFolderList[idx].alias)\r\n\t\t\t\t&& (idx != folderIdx))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_SHARE_NAME_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ((selectPath == accessFolderList[idx].name)\r\n\t\t\t\t&& (idx != folderIdx))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_DIR_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommand.name = selectPath;\r\n\t\tcommand.alias = $.id(\"shareName\").value;\r\n\t\t$.act(ACT_SET, folderObj, stack, null, command);\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\t\r\n\t$.addLoading($.id(\"applyButton\"));\r\n\t$.exe(function(ret)\r\n\t{\r\n\t\tif (!ret) \r\n\t\t{\t\r\n\t\t\tif (\"DLNA\" == pageType)\r\n\t\t\t{\r\n\t\t\t\t$.loadMain(\"dlnaManage.htm\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstack = accessFolderList[folderIdx].__stack;\r\n\r\n\t\t\tfor (idx = 0; idx < userList.length; idx++ )\r\n\t\t\t{\r\n\t\t\t\tvar newFlag = 1;\r\n\t\t\t\tvar userCommand = {};\r\n\t\t\t\tif ((1 == userList[idx].X_TP_SupperUser)\r\n\t\t\t\t\t|| (\"\" == userList[idx].username))\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < userAccessList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (parseInt(stack, 10) != parseInt(userAccessList[i].__stack, 10))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (parseInt(userList[idx].__stack, 10) == userAccessList[i].userId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar permissions = \"\";\r\n\t\t\t\t\t\tif (true == $.id(\"access_n_\" + userAccessList[i].userId).checked)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (true == $.id(\"access_r_\" + userAccessList[i].userId).checked)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 7;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (0 == permissions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.act(ACT_DEL, userObj, userAccessList[i].__stack, null, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (permissions != userAccessList[i].permissions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuserCommand.permissions = permissions;\r\n\t\t\t\t\t\t\t$.act(ACT_SET, userObj, userAccessList[i].__stack, null, userCommand);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewFlag = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == newFlag)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar id = parseInt(userList[idx].__stack, 10);\r\n\t\t\t\t\tif (true != $.id(\"access_n_\" + id).checked)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserCommand.userId = id;\r\n\t\t\t\t\t\tuserCommand.permissions = ($.id(\"access_r_\" + id).checked == true)?3:7;\r\n\t\t\t\t\t\t$.act(ACT_ADD, userObj, null, stack, userCommand);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.exe(function(ret)\r\n\t\t\t{\r\n\t\t\t\tif (!ret) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (\"SMB\" == pageType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.act(ACT_SET,SMB_SERVICE,null,null,[\"modified=0\"]);\r\n\t\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t\t$.loadMain(\"usbSmbSrv.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\"FTP\" == pageType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.act(ACT_SET,FTP_SERVER,null,null,[\"modified=0\"]);\r\n\t\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t\t$.loadMain(\"ftpSrv.htm\");\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\nfunction openFolder()\r\n{\r\n\tvar fullPath = currVolume + \"/\" + currPath;\r\n\tvar command = {};\r\n\t\r\n\tcommand.targetPath = fullPath;\r\n\t$.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n\tfolderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\t\r\n\t$.exe();\r\n}\r\nfunction findFolder()\r\n{\r\n\tvar dirTmp;\r\n\tvar j;\r\n\tvar match = false;\r\n\t\r\n\tif ($.id(\"currPath\").value == \"/\")\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tdirTmp = $.id(\"currPath\").value.split('/');\r\n\t\r\n\tfor (idx = 0; idx < volumeList.length; idx++)\r\n\t{\r\n\t\tcurrVolume = volumeList[idx].name;\r\n\t\tcurrPath = \"\";\r\n\t\t\r\n\t\tfor (i=0; i < dirTmp.length; i++)\r\n\t\t{\r\n\t\t\tif (i == 1)\r\n\t\t\t{\r\n\t\t\t\tcurrPath = dirTmp[i];\r\n\t\t\t}\r\n\t\t\telse if (i > 1)\r\n\t\t\t{\r\n\t\t\t\tcurrPath = currPath + \"/\" + dirTmp[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\topenFolder();\r\n\t\t\t\r\n\t\t\tfor (j=0; j < folderList.length; j++)\r\n\t\t\t{\r\n\t\t\t\tif (folderList[j].folderName == dirTmp[i+1])\r\n\t\t\t\t{\r\n\t\t\t\t\tif ((i + 1) == (dirTmp.length - 1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t$.id(\"volumeList\").selectedIndex = idx + 1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (i == 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrPath = dirTmp[i+1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrPath = currPath + \"/\" + dirTmp[i+1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetupFolderTbl();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (j == folderList.length || match == true)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (match == true)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (match == true)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcurrVolume = \"\";\r\n\t\tcurrPath = \"\";\r\n\t\tcleanTbl();\r\n\t\t$.alert(ERR_USB_DIR_NOT_EXIST);\r\n\t}\r\n}\r\n\r\nfunction doBrowse()\r\n{\r\n\tif (firstClick == 1)\r\n\t{\r\n\t\tfindFolder();\r\n\t\tfirstClick = 0;\r\n\t}\r\n\r\n\tif ($.hasClass($.id(\"Folder_Browse\"), \"nd\")) {\r\n\t\t$.removeClass($.id(\"Folder_Browse\"), \"nd\");\r\n\t\t$.removeClass($.id(\"bl_line\"), \"nd\");\r\n\t\t$.id(\"Browse\").value = s_str.hide;\r\n\t}\r\n\telse {\r\n\t\t$.addClass($.id(\"Folder_Browse\"), \"nd\");\r\n\t\t$.addClass($.id(\"bl_line\"), \"nd\");\r\n\t\t$.id(\"Browse\").value = s_str.browse;\r\n\t}\r\n\t\r\n\tif (\"DLNA\" == pageType)\r\n\t{\r\n\t\t$.addClass($.id(\"User_Account\"), \"nd\");\r\n\t\t$.addClass($.id(\"bl_line\"), \"nd\");\r\n\t}\r\n}\r\nfunction cleanTbl()\r\n{\r\n\twhile ($.id(\"Folder_tbl\").rows.length > 1)\r\n\t\t$.id(\"Folder_tbl\").deleteRow(-1);\r\n}\r\n\r\nfunction upper()\r\n{\r\n\tvar temp = currPath.split('/');\r\n\tvar upperPath = \"\";\r\n\tif (1 == temp.length)\r\n\t{\r\n\t\tupperPath = \"\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (idx = 0; idx < (temp.length - 1); idx++)\r\n\t\t{\r\n\t\t\tif (0 == idx)\r\n\t\t\t{\r\n\t\t\t\tupperPath += temp[idx];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tupperPath += (\"/\" + temp[idx]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcurrPath = upperPath;\r\n\tsetupFolderTbl();\r\n}\r\nfunction browsePath(thisCtrl)\r\n{\r\n\tvar folder = $.h(thisCtrl);\r\n\tvar folderStr = transStr(folder);\r\n\tif (\"\" != currPath)\r\n\t{\r\n\t\tcurrPath += '/';\r\n\t}\r\n\tcurrPath += folderStr;\r\n\tsetupFolderTbl();\r\n}\r\nfunction setupFolderTbl()\r\n{\r\n\tvar fullPath = currVolume + \"/\" + currPath;\r\n\tcleanTbl();\r\n\tcurrSelect = \"\";\r\n\t\r\n\tvar command = {};\r\n\tcommand. targetPath = fullPath;\r\n\t\r\n\t$.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n\tfolderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\tvar folderTbl = $.id(\"Folder_tbl\");\r\n\t\t\tvar row = folderTbl.insertRow(-1);\r\n\t\t\tvar cell = row.insertCell(-1);\t\r\n\t\t\tcell.innerHTML = \"<span class='a' onClick='upper();'>\"+m_str.upperFolder+\"</span>\";\r\n\t\t}\r\n\t\t\r\n\t\tfor (idx = 0; idx < folderList.length; idx++)\r\n\t\t{\r\n\t\t\tvar folderTbl = $.id(\"Folder_tbl\");\r\n\t\t\tvar row = folderTbl.insertRow(-1);\r\n\t\t\tvar cell = row.insertCell(-1);\t\r\n\t\t\tvar folderNameStr = escapeStr(folderList[idx].folderName);\t\r\n\r\n\t\t\tcell.innerHTML = \"<span class='a' onClick='browsePath(this);'>\" + folderNameStr + \"</span>\";\r\n\t\t}\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = \"/\" + currPath + \"/\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = currPath + \"/\";\r\n\t\t}\r\n\t\t\r\n\t\tvar currPathStr = escapeStr(currPath);\r\n\t\t$.id(\"volumeInfo\").innerHTML = \"/\" + currVolume + \"/\" + currPathStr;\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\t$.id(\"volumeInfo\").innerHTML += \"/\";\r\n\t\t}\r\n\t}\r\n\r\n}\r\nfunction loadVolume()\r\n{\r\n\tcurrVolume = $.id(\"volumeList\").value;\r\n\tcurrPath = \"\";\r\n\tif (\"\" == currVolume)\r\n\t{\r\n\t\tcleanTbl();\r\n\t\t$.id(\"currPath\").value = \"/\";\r\n\t\t$.id(\"volumeInfo\").innerHTML = \"\";\r\n\t\treturn;\r\n\t}\r\n\tsetupFolderTbl();\r\n}\r\nfunction changeVolume()\r\n{\r\n\tloadVolume();\r\n}\r\nfunction init()\r\n{\r\n\tusbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null, null);\r\n\tvolumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null, null);\r\n\tif (\"SMB\" == pageType)\r\n\t{\r\n\t\tfolderObj = SMB_SERVICE_FOLDER;\r\n\t\tuserObj = SMB_USER_ACCESS;\r\n\t\tuserList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\t\t$.removeClass($.id(\"t_info1\"), \"nd\");\r\n\t}\r\n\tif (\"FTP\" == pageType)\r\n\t{\r\n\t\tfolderObj = FTP_SERVER_FOLDER;\r\n\t\tuserObj = FTP_USER_ACCESS;\r\n\t\tuserList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\t\t$.removeClass($.id(\"t_info2\"), \"nd\");\r\n\t}\r\n\tif (\"DLNA\" == pageType)\r\n\t{\r\n\t\tfolderObj = DLNA_MEDIA_SERVER_FOLDER;\r\n\t\t$.removeClass($.id(\"t_info3\"), \"nd\");\r\n\t}\r\n\t\r\n\tif (\"\" != folderObj)\r\n\t{\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\tif (\"\" != userObj)\r\n\t{\r\n\t\tuserAccessList = $.act(ACT_GL, userObj, null, null, null);\r\n\t}\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t/* init folder browse info */\r\n\t\tvar option;\r\n\t\tvar sel = $.id(\"volumeList\");\r\n\t\tfor (idx = 0; idx < volumeList.length; idx++)\r\n\t\t{\r\n\t\t\tif (\"Online\" == volumeList[idx].status)\r\n\t\t\t{\r\n\t\t\t\tvar text;\r\n\t\t\t\tfor (i = 0; i < usbDeviceList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (parseInt(usbDeviceList[i].__stack, 10) == parseInt(volumeList[idx].__stack, 10))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext = usbDeviceList[i].vendor + \" ( \" + usbDeviceList[i].model + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttext += (\", \" + volumeList[idx].name + \"(\" + volumeList[idx].capacity + \",\" + volumeList[idx].fileSystem +\")\")\r\n\t\t\t\tvar option = $.c(\"option\");\r\n\t\t\t\toption.value = volumeList[idx].name;\r\n\t\t\t\toption.text = text;\r\n\t\t\t\tvar sel = $.id(\"volumeList\");\r\n\t\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* init user info */\r\n\t\tif (\"DLNA\" == pageType)\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"User_Account\"), \"nd\");\r\n\t\t}\r\n\t\telse if ((\"SMB\" == pageType) || (\"FTP\" == pageType))\r\n\t\t{\r\n\t\t\t/* SMB or FTP, Setup User_Account table */\r\n\t\t\tfor (idx = 1; idx <= userList.length; idx++)\r\n\t\t\t{\r\n\t\t\t\tvar user_tbl = $.id(\"user_tbl\");\r\n\t\t\t\tvar newrow = user_tbl.insertRow(-1);\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tcell.innerHTML = idx;\r\n\t\t\t\tif (0 == userList[idx-1].enable)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.style[\"color\"] = \"#999\";\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == userList[idx-1].X_TP_SupperUser)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML += \"*\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML += \"&nbsp;\";\r\n\t\t\t\t}\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tcell.innerHTML = escapeStr(userList[idx-1].username);\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tif (\"\" != userList[idx-1].username)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML = \"<input name=\\\"access\" + idx + \"\\\" id=\\\"access_rw_\" + idx + \"\\\" type=\\\"radio\\\" /><span class=\\\"T T_faccess\\\">Full-Access\" + blank + \"</span><input name=\\\"access\" + idx + \"\\\" id=\\\"access_r_\" + idx + \"\\\" type=\\\"radio\\\" /><span class=\\\"T T_ronly\\\">Read-Only\" + blank + \"</span><input name=\\\"access\" + idx + \"\\\" id=\\\"access_n_\" + idx + \"\\\" type=\\\"radio\\\" checked /><span class=\\\"T T_naccess\\\">No-Access\" + blank + \"</span>\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML = \"&nbsp;\";\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == userList[idx-1].X_TP_SupperUser)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_rw_\" + idx).checked = true;\r\n\t\t\t\t\t$.id(\"access_rw_\" + idx).disabled = true;\r\n\t\t\t\t\t$.id(\"access_r_\" + idx).disabled = true;\r\n\t\t\t\t\t$.id(\"access_n_\" + idx).disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t/* init path info */\r\n\t\tif (\"ADD\" == pageStatus)\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = \"/\";\r\n\t\t\tfolderIdx = accessFolderList.length;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = pageInfo;\r\n\t\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t\t{\r\n\t\t\t\tif (pageInfo == accessFolderList[idx].name)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"shareName\").value = accessFolderList[idx].alias;\r\n\t\t\t\t\tfolderIdx = idx;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tfor (i = 0; i < userAccessList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(accessFolderList[idx].__stack, 10) != parseInt(userAccessList[i].__stack, 10))\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (7 == userAccessList[i].permissions)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_rw_\" + userAccessList[i].userId).checked = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (3 == userAccessList[i].permissions)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_r_\" + userAccessList[i].userId).checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n}\r\n</script>\r\n<p class=\"et T\" id=\"et\">Folder Browse</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"L1 T\" >\r\n<span class=\"nd T\" id=\"t_info1\">This page allows you to set a shared folder and access authorization for Storage Sharing service! It will not take effect when Anonymous access been enabled.</span>\r\n<span class=\"nd T\" id=\"t_info2\">This page allows you to set a shared folder and access authorization for FTP service!</span>\r\n<span class=\"nd T\" id=\"t_info3\">This page allows you to set a scan folder for DLNA media service!</span>\r\n</p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T\" id=\"t_shname\">Share Name:</b><input id=\"shareName\" class=\"text\" size=\"31\" maxlength=\"31\" type=\"text\" /></p>\r\n<p><b class=\"item L T\" id=\"t_dir\">Directory:</b><input id=\"currPath\" class=\"text\" size=\"31\" maxlength=\"127\" type=\"text\" disabled /></p>\r\n<p><b class=\"item L T\">&nbsp;</b><input type=\"button\" id=\"Browse\" class=\"button M T T_browse\" value=\"Browse\" onclick=\"doBrowse()\"/></p>\r\n<p class=\"br\"></p>\r\n\t<div id=\"Folder_Browse\" style=\"width:800px;\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"L T\" id=\"t_vol\">Select Volume:</b><select id=\"volumeList\" onchange=\"changeVolume();\" ><option class=\"T\" id=\"t_selvol\" value=\"\">--please choose volume--</option></select></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<table class='tbody' id='Folder_tbl' width='90%' >\r\n\t\t\t<tr>\r\n\t\t\t\t<th width=\"450px\" style=\"text-align:left;\"><span id=\"volumeInfo\"></span></th>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<div id=\"bl_line\" class=\"nd\">\r\n\t\t<p class=\"bl\"></p>\r\n\t</div>\r\n\t<div id=\"User_Account\" width=\"100%\" >\r\n\t<p><b class=\"L T\" id=\"t_tbl\">User Access Control Table:</b></p>\r\n\t<table class='bdr tc' id='user_tbl' width='90%' >\r\n\t\t<tr>\r\n\t\t\t<th width=\"40px\" class=\"T T_index\">Index</th>\r\n\t\t\t<th width=\"300px\" class=\"T T_usrname\">Username</th>\r\n\t\t\t<th width=\"300px\" class=\"T\" id=\"t_author\">Access Authorization</th>\r\n\t\t</tr>\r\n\t</table>\r\n\t<p>* : <span class=\"T\" id=\"t_note\">\"Super User\". It has full-access permission (Read & Write) to all active volume(s) and share folder(s).</span></p>\r\n\t</div>\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\">\r\n<input type=\"button\" class=\"button M T T_apply\" id=\"applyButton\" value=\"Apply\" onclick=\"doSet()\"/>\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar pageType;\r\nvar pageStatus;\r\nvar pageInfo;\r\n\r\nif ($.local)\r\n{\r\n\tpageType = \"SMB\";\r\n\tpageStatus = \"ADD\";\r\n\tpageInfo = \"/\";\r\n}\r\nelse\r\n{\r\n\tpageType = $.mainParam[0];\r\n\tpageStatus = $.mainParam[1];\r\n\tpageInfo = $.mainParam[2];\r\n}\r\n\r\ninit();\r\n</script>"
      }
    }, {
      "location" : {
        "uri" : "usbFolderBrowse_2.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 54
      },
      "contents" : {
        "text" : "<script language=\"javascript\" type=\"text/javascript\">\r\nvar blank = \"&nbsp;&nbsp;\";\r\nvar usbDeviceList;\r\nvar volumeList;\r\nvar folderList;\r\nvar currVolume = \"\";\r\nvar currPath = \"\";\r\nvar userList;\r\nvar userAccessList;\r\nvar accessFolderList;\r\nvar folderObj = \"\";\r\nvar userObj = \"\";\r\nvar idx,i;\r\nvar folderIdx;\r\nvar firstClick = 1;\r\n\r\nfunction escapeStr(str) \r\n{\r\n\treturn str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/ /g, '&nbsp;');\r\n}\r\nfunction transStr(str)\r\n{\r\n\treturn str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/\\s/g, ' ');\r\n}\r\n\r\nfunction doSet()\r\n{\r\n\tvar command = {};\r\n\tvar stack;\r\n\tvar selectPath;\r\n\t\r\n\tnewStr = $.id(\"shareName\").value;\r\n\tif (newStr === \"\")\r\n\t{\r\n\t\t$.alert(ERR_USB_SHARE_NAME_EMPTY);\r\n\t\treturn;\r\n\t}\r\n\tif ($.asc(newStr, true))\r\n\t{\r\n\t\t$.alert(ERR_USB_SHARE_NAME_NOT_ASCII);\r\n\t\treturn;\r\n\t}\r\n\tif ((/[\\\\\\/:\\*\\?\"<>|\\]\\ ]+/).test(newStr))\r\n\t{\r\n\t\t$.alert(ERR_USB_INVALID_CHAR_IN_FOLDER_NAME);\r\n\t\treturn;\r\n\t}\r\n\t\t\r\n\tnewStr = $.id(\"currPath\").value;\r\n\tif (newStr === \"\")\r\n\t{\r\n\t\t$.alert(ERR_USB_DIR_NAME_EMPTY);\r\n\t\treturn;\r\n\t}\r\n\tif ($.asc(newStr, true))\r\n\t{\r\n\t\t$.alert(ERR_USB_DIR_NAME_NOT_ASCII);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tselectPath = $.id(\"currPath\").value;\r\n\tif (\"/\" != selectPath)\r\n\t{\r\n\t\tif (\"/\" == selectPath.charAt(selectPath.length - 1))\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = selectPath.substring(0, selectPath.length - 1);\r\n\t\t\tselectPath = $.id(\"currPath\").value;\r\n\t\t}\r\n\t}\r\n\tif (\"ADD\" == pageStatus)\r\n\t{\r\n\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t{\r\n\t\t\tif (selectPath == accessFolderList[idx].name)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_DIR_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ($.id(\"shareName\").value == accessFolderList[idx].alias)\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_SHARE_NAME_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommand.name = selectPath;\r\n\t\tcommand.alias = $.id(\"shareName\").value;\r\n\t\tcommand.enable = 1;\r\n\t\t$.act(ACT_ADD, folderObj, null, null, command);\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tstack = accessFolderList[folderIdx].__stack;\r\n\r\n\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t{\r\n\t\t\tif (($.id(\"shareName\").value == accessFolderList[idx].alias)\r\n\t\t\t\t&& (idx != folderIdx))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_SHARE_NAME_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ((selectPath == accessFolderList[idx].name)\r\n\t\t\t\t&& (idx != folderIdx))\r\n\t\t\t{\r\n\t\t\t\t$.alert(ERR_USB_DIR_EXIST);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcommand.name = selectPath;\r\n\t\tcommand.alias = $.id(\"shareName\").value;\r\n\t\t$.act(ACT_SET, folderObj, stack, null, command);\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\t\r\n\t$.addLoading($.id(\"applyButton\"));\r\n\t$.exe(function(ret)\r\n\t{\r\n\t\tif (!ret) \r\n\t\t{\t\r\n\t\t\tif (\"DLNA\" == pageType)\r\n\t\t\t{\r\n\t\t\t\t$.loadMain(\"dlnaManage.htm\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstack = accessFolderList[folderIdx].__stack;\r\n\r\n\t\t\tfor (idx = 0; idx < userList.length; idx++ )\r\n\t\t\t{\r\n\t\t\t\tvar newFlag = 1;\r\n\t\t\t\tvar userCommand = {};\r\n\t\t\t\tif ((1 == userList[idx].X_TP_SupperUser)\r\n\t\t\t\t\t|| (\"\" == userList[idx].username))\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < userAccessList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (parseInt(stack, 10) != parseInt(userAccessList[i].__stack, 10))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (parseInt(userList[idx].__stack, 10) == userAccessList[i].userId)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar permissions = \"\";\r\n\t\t\t\t\t\tif (true == $.id(\"access_n_\" + userAccessList[i].userId).checked)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (true == $.id(\"access_r_\" + userAccessList[i].userId).checked)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpermissions = 7;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (0 == permissions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$.act(ACT_DEL, userObj, userAccessList[i].__stack, null, null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (permissions != userAccessList[i].permissions)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tuserCommand.permissions = permissions;\r\n\t\t\t\t\t\t\t$.act(ACT_SET, userObj, userAccessList[i].__stack, null, userCommand);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnewFlag = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == newFlag)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar id = parseInt(userList[idx].__stack, 10);\r\n\t\t\t\t\tif (true != $.id(\"access_n_\" + id).checked)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserCommand.userId = id;\r\n\t\t\t\t\t\tuserCommand.permissions = ($.id(\"access_r_\" + id).checked == true)?3:7;\r\n\t\t\t\t\t\t$.act(ACT_ADD, userObj, null, stack, userCommand);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$.exe(function(ret)\r\n\t\t\t{\r\n\t\t\t\tif (!ret) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (\"SMB\" == pageType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.act(ACT_SET,SMB_SERVICE,null,null,[\"modified=0\"]);\r\n\t\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t\t$.loadMain(\"usbSmbSrv.htm\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\"FTP\" == pageType)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.act(ACT_SET,FTP_SERVER,null,null,[\"modified=0\"]);\r\n\t\t\t\t\t\tif(!$.exe())\r\n\t\t\t\t\t\t$.loadMain(\"ftpSrv.htm\");\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n}\r\nfunction openFolder()\r\n{\r\n\tvar fullPath = currVolume + \"/\" + currPath;\r\n\tvar command = {};\r\n\t\r\n\tcommand.targetPath = fullPath;\r\n\t$.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n\tfolderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\t\r\n\t$.exe();\r\n}\r\nfunction findFolder()\r\n{\r\n\tvar dirTmp;\r\n\tvar j;\r\n\tvar match = false;\r\n\t\r\n\tif ($.id(\"currPath\").value == \"/\")\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tdirTmp = $.id(\"currPath\").value.split('/');\r\n\t\r\n\tfor (idx = 0; idx < volumeList.length; idx++)\r\n\t{\r\n\t\tcurrVolume = volumeList[idx].name;\r\n\t\tcurrPath = \"\";\r\n\t\t\r\n\t\tfor (i=0; i < dirTmp.length; i++)\r\n\t\t{\r\n\t\t\tif (i == 1)\r\n\t\t\t{\r\n\t\t\t\tcurrPath = dirTmp[i];\r\n\t\t\t}\r\n\t\t\telse if (i > 1)\r\n\t\t\t{\r\n\t\t\t\tcurrPath = currPath + \"/\" + dirTmp[i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\topenFolder();\r\n\t\t\t\r\n\t\t\tfor (j=0; j < folderList.length; j++)\r\n\t\t\t{\r\n\t\t\t\tif (folderList[j].folderName == dirTmp[i+1])\r\n\t\t\t\t{\r\n\t\t\t\t\tif ((i + 1) == (dirTmp.length - 1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t$.id(\"volumeList\").selectedIndex = idx + 1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (i == 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrPath = dirTmp[i+1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrPath = currPath + \"/\" + dirTmp[i+1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetupFolderTbl();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (j == folderList.length || match == true)\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (match == true)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (match == true)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcurrVolume = \"\";\r\n\t\tcurrPath = \"\";\r\n\t\tcleanTbl();\r\n\t\t$.alert(ERR_USB_DIR_NOT_EXIST);\r\n\t}\r\n}\r\n\r\nfunction doBrowse()\r\n{\r\n\tif (firstClick == 1)\r\n\t{\r\n\t\tfindFolder();\r\n\t\tfirstClick = 0;\r\n\t}\r\n\r\n\tif ($.hasClass($.id(\"Folder_Browse\"), \"nd\")) {\r\n\t\t$.removeClass($.id(\"Folder_Browse\"), \"nd\");\r\n\t\t$.removeClass($.id(\"bl_line\"), \"nd\");\r\n\t\t$.id(\"Browse\").value = s_str.hide;\r\n\t}\r\n\telse {\r\n\t\t$.addClass($.id(\"Folder_Browse\"), \"nd\");\r\n\t\t$.addClass($.id(\"bl_line\"), \"nd\");\r\n\t\t$.id(\"Browse\").value = s_str.browse;\r\n\t}\r\n\t\r\n\tif (\"DLNA\" == pageType)\r\n\t{\r\n\t\t$.addClass($.id(\"User_Account\"), \"nd\");\r\n\t\t$.addClass($.id(\"bl_line\"), \"nd\");\r\n\t}\r\n}\r\nfunction cleanTbl()\r\n{\r\n\twhile ($.id(\"Folder_tbl\").rows.length > 1)\r\n\t\t$.id(\"Folder_tbl\").deleteRow(-1);\r\n}\r\n\r\nfunction upper()\r\n{\r\n\tvar temp = currPath.split('/');\r\n\tvar upperPath = \"\";\r\n\tif (1 == temp.length)\r\n\t{\r\n\t\tupperPath = \"\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tfor (idx = 0; idx < (temp.length - 1); idx++)\r\n\t\t{\r\n\t\t\tif (0 == idx)\r\n\t\t\t{\r\n\t\t\t\tupperPath += temp[idx];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tupperPath += (\"/\" + temp[idx]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcurrPath = upperPath;\r\n\tsetupFolderTbl();\r\n}\r\nfunction browsePath(thisCtrl)\r\n{\r\n\tvar folder = $.h(thisCtrl);\r\n\tvar folderStr = transStr(folder);\r\n\tif (\"\" != currPath)\r\n\t{\r\n\t\tcurrPath += '/';\r\n\t}\r\n\tcurrPath += folderStr;\r\n\tsetupFolderTbl();\r\n}\r\nfunction setupFolderTbl()\r\n{\r\n\tvar fullPath = currVolume + \"/\" + currPath;\r\n\tcleanTbl();\r\n\tcurrSelect = \"\";\r\n\t\r\n\tvar command = {};\r\n\tcommand. targetPath = fullPath;\r\n\t\r\n\t$.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n\tfolderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\tvar folderTbl = $.id(\"Folder_tbl\");\r\n\t\t\tvar row = folderTbl.insertRow(-1);\r\n\t\t\tvar cell = row.insertCell(-1);\t\r\n\t\t\tcell.innerHTML = \"<span class='a' onClick='upper();'>..\" + s_str.upper + \"</span>\";\r\n\t\t}\r\n\t\t\r\n\t\tfor (idx = 0; idx < folderList.length; idx++)\r\n\t\t{\r\n\t\t\tvar folderTbl = $.id(\"Folder_tbl\");\r\n\t\t\tvar row = folderTbl.insertRow(-1);\r\n\t\t\tvar cell = row.insertCell(-1);\t\r\n\t\t\tvar folderNameStr = escapeStr(folderList[idx].folderName);\t\r\n\r\n\t\t\tcell.innerHTML = \"<span class='a' onClick='browsePath(this);'>\" + folderNameStr + \"</span>\";\r\n\t\t}\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = \"/\" + currPath + \"/\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = currPath + \"/\";\r\n\t\t}\r\n\t\t\r\n\t\tvar currPathStr = escapeStr(currPath);\r\n\t\t$.id(\"volumeInfo\").innerHTML = \"/\" + currVolume + \"/\" + currPathStr;\r\n\t\tif (\"\" != currPath)\r\n\t\t{\r\n\t\t\t$.id(\"volumeInfo\").innerHTML += \"/\";\r\n\t\t}\r\n\t}\r\n\r\n}\r\nfunction loadVolume()\r\n{\r\n\tcurrVolume = $.id(\"volumeList\").value;\r\n\tcurrPath = \"\";\r\n\tif (\"\" == currVolume)\r\n\t{\r\n\t\tcleanTbl();\r\n\t\t$.id(\"currPath\").value = \"/\";\r\n\t\t$.id(\"volumeInfo\").innerHTML = \"\";\r\n\t\treturn;\r\n\t}\r\n\tsetupFolderTbl();\r\n}\r\nfunction changeVolume()\r\n{\r\n\tloadVolume();\r\n}\r\nfunction init()\r\n{\r\n\tusbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null, null);\r\n\tvolumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null, null);\r\n\tif (\"SMB\" == pageType)\r\n\t{\r\n\t\tfolderObj = SMB_SERVICE_FOLDER;\r\n\t\tuserObj = SMB_USER_ACCESS;\r\n\t\tuserList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\t\t$.removeClass($.id(\"t_info1\"), \"nd\");\r\n\t}\r\n\tif (\"FTP\" == pageType)\r\n\t{\r\n\t\tfolderObj = FTP_SERVER_FOLDER;\r\n\t\tuserObj = FTP_USER_ACCESS;\r\n\t\tuserList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\t\t$.removeClass($.id(\"t_info2\"), \"nd\");\r\n\t}\r\n\tif (\"DLNA\" == pageType)\r\n\t{\r\n\t\tfolderObj = DLNA_MEDIA_SERVER_FOLDER;\r\n\t\t$.removeClass($.id(\"t_info3\"), \"nd\");\r\n\t}\r\n\t\r\n\tif (\"\" != folderObj)\r\n\t{\r\n\t\taccessFolderList = $.act(ACT_GL, folderObj, null, null, null);\r\n\t}\r\n\tif (\"\" != userObj)\r\n\t{\r\n\t\tuserAccessList = $.act(ACT_GL, userObj, null, null, null);\r\n\t}\r\n\t\r\n\tif (!$.exe())\r\n\t{\r\n\t\t/* init folder browse info */\r\n\t\tvar option;\r\n\t\tvar sel = $.id(\"volumeList\");\r\n\t\tfor (idx = 0; idx < volumeList.length; idx++)\r\n\t\t{\r\n\t\t\tif (\"Online\" == volumeList[idx].status)\r\n\t\t\t{\r\n\t\t\t\tvar text;\r\n\t\t\t\tfor (i = 0; i < usbDeviceList.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (parseInt(usbDeviceList[i].__stack, 10) == parseInt(volumeList[idx].__stack, 10))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext = usbDeviceList[i].vendor + \" ( \" + usbDeviceList[i].model + \")\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttext += (\", \" + volumeList[idx].name + \"(\" + volumeList[idx].capacity + \",\" + volumeList[idx].fileSystem +\")\")\r\n\t\t\t\tvar option = $.c(\"option\");\r\n\t\t\t\toption.value = volumeList[idx].name;\r\n\t\t\t\toption.text = text;\r\n\t\t\t\tvar sel = $.id(\"volumeList\");\r\n\t\t\t\ttry{sel.add(option, null);}catch(e){sel.add(option);}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* init user info */\r\n\t\tif (\"DLNA\" == pageType)\r\n\t\t{\r\n\t\t\t$.addClass($.id(\"User_Account\"), \"nd\");\r\n\t\t}\r\n\t\telse if ((\"SMB\" == pageType) || (\"FTP\" == pageType))\r\n\t\t{\r\n\t\t\t/* SMB or FTP, Setup User_Account table */\r\n\t\t\tfor (idx = 1; idx <= userList.length; idx++)\r\n\t\t\t{\r\n\t\t\t\tvar user_tbl = $.id(\"user_tbl\");\r\n\t\t\t\tvar newrow = user_tbl.insertRow(-1);\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tcell.innerHTML = idx;\r\n\t\t\t\tif (0 == userList[idx-1].enable)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.style[\"color\"] = \"#999\";\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == userList[idx-1].X_TP_SupperUser)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML += \"*\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML += \"&nbsp;\";\r\n\t\t\t\t}\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tcell.innerHTML = escapeStr(userList[idx-1].username);\r\n\t\t\t\tvar cell = newrow.insertCell(-1);\r\n\t\t\t\tif (\"\" != userList[idx-1].username)\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML = \"<input name=\\\"access\" + idx + \"\\\" id=\\\"access_rw_\" + idx + \"\\\" type=\\\"radio\\\" /><span class=\\\"T T_faccess\\\">Full-Access\" + blank + \"</span><input name=\\\"access\" + idx + \"\\\" id=\\\"access_r_\" + idx + \"\\\" type=\\\"radio\\\" /><span class=\\\"T T_ronly\\\">Read-Only\" + blank + \"</span><input name=\\\"access\" + idx + \"\\\" id=\\\"access_n_\" + idx + \"\\\" type=\\\"radio\\\" checked /><span class=\\\"T T_naccess\\\">No-Access\" + blank + \"</span>\";\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tcell.innerHTML = \"&nbsp;\";\r\n\t\t\t\t}\r\n\t\t\t\tif (1 == userList[idx-1].X_TP_SupperUser)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_rw_\" + idx).checked = true;\r\n\t\t\t\t\t$.id(\"access_rw_\" + idx).disabled = true;\r\n\t\t\t\t\t$.id(\"access_r_\" + idx).disabled = true;\r\n\t\t\t\t\t$.id(\"access_n_\" + idx).disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t/* init path info */\r\n\t\tif (\"ADD\" == pageStatus)\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = \"/\";\r\n\t\t\tfolderIdx = accessFolderList.length;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.id(\"currPath\").value = pageInfo;\r\n\t\t\tfor (idx = 0; idx < accessFolderList.length; idx++)\r\n\t\t\t{\r\n\t\t\t\tif (pageInfo == accessFolderList[idx].name)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"shareName\").value = accessFolderList[idx].alias;\r\n\t\t\t\t\tfolderIdx = idx;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tfor (i = 0; i < userAccessList.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(accessFolderList[idx].__stack, 10) != parseInt(userAccessList[i].__stack, 10))\r\n\t\t\t\t{\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (7 == userAccessList[i].permissions)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_rw_\" + userAccessList[i].userId).checked = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (3 == userAccessList[i].permissions)\r\n\t\t\t\t{\r\n\t\t\t\t\t$.id(\"access_r_\" + userAccessList[i].userId).checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n}\r\n</script>\r\n<p class=\"et T\" id=\"et\">Folder Browse</p>\r\n<div class=\"con1 L\">\r\n<p class=\"ct\"></p>\r\n<p class=\"bl\"></p>\r\n<div class=\"con2\">\r\n<p class=\"L1 T\" >\r\n<span class=\"nd T\" id=\"t_info1\">This page allows you to set a shared folder and access authorization for Storage Sharing service! It will not take effect when Anonymous access been enabled.</span>\r\n<span class=\"nd T\" id=\"t_info2\">This page allows you to set a shared folder and access authorization for FTP service!</span>\r\n<span class=\"nd T\" id=\"t_info3\">This page allows you to set a scan folder for DLNA media service!</span>\r\n</p>\r\n<p class=\"br\"></p>\r\n<p><b class=\"item L T\" id=\"t_shname\">Share Name:</b><input id=\"shareName\" class=\"text\" size=\"31\" maxlength=\"31\" type=\"text\" /></p>\r\n<p><b class=\"item L T\" id=\"t_dir\">Directory:</b><input id=\"currPath\" class=\"text\" size=\"31\" maxlength=\"127\" type=\"text\" disabled /></p>\r\n<p><b class=\"item L T\">&nbsp;</b><input type=\"button\" id=\"Browse\" class=\"button M T T_browse\" value=\"Browse\" onclick=\"doBrowse()\"/></p>\r\n<p class=\"br\"></p>\r\n\t<div id=\"Folder_Browse\" style=\"width:800px;\" class=\"nd\">\r\n\t\t<p class=\"br\"></p>\r\n\t\t<p><b class=\"L T\" id=\"t_vol\">Select Volume:</b><select id=\"volumeList\" onchange=\"changeVolume();\" ><option class=\"T\" id=\"t_selvol\" value=\"\">--please choose volume--</option></select></p>\r\n\t\t<p class=\"br\"></p>\r\n\t\t<table class='tbody' id='Folder_tbl' width='90%' >\r\n\t\t\t<tr>\r\n\t\t\t\t<th width=\"450px\" style=\"text-align:left;\"><span id=\"volumeInfo\"></span></th>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t\t<p class=\"br\"></p>\r\n\t</div>\r\n\t<div id=\"bl_line\" class=\"nd\">\r\n\t\t<p class=\"bl\"></p>\r\n\t</div>\r\n\t<div id=\"User_Account\" width=\"100%\" >\r\n\t<p><b class=\"L T\" id=\"t_tbl\">User Access Control Table:</b></p>\r\n\t<table class='bdr tc' id='user_tbl' width='90%' >\r\n\t\t<tr>\r\n\t\t\t<th width=\"40px\" class=\"T T_index\">Index</th>\r\n\t\t\t<th width=\"300px\" class=\"T T_username\">Username</th>\r\n\t\t\t<th width=\"300px\" class=\"T\" id=\"t_author\">Access Authorization</th>\r\n\t\t</tr>\r\n\t</table>\r\n\t<p>* : <span class=\"T\" id=\"t_note\">\"Super User\". It has full-access permission (Read & Write) to all active volume(s) and share folder(s).</span></p>\r\n\t</div>\r\n</div>\r\n<p class=\"bl\"></p>\r\n<p class=\"tail\">\r\n<input type=\"button\" class=\"button M T T_apply\" id=\"applyButton\" value=\"Apply\" onclick=\"doSet()\"/>\r\n</p>\r\n</div>\r\n<script language=\"javascript\" type=\"text/javascript\">\r\nvar pageType;\r\nvar pageStatus;\r\nvar pageInfo;\r\n\r\nif ($.local)\r\n{\r\n\tpageType = \"SMB\";\r\n\tpageStatus = \"ADD\";\r\n\tpageInfo = \"/\";\r\n}\r\nelse\r\n{\r\n\tpageType = $.mainParam[0];\r\n\tpageStatus = $.mainParam[1];\r\n\tpageInfo = $.mainParam[2];\r\n}\r\n\r\ninit();\r\n</script>"
      }
    }, {
      "location" : {
        "uri" : "usbManage.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 55
      },
      "contents" : {
        "text" : "<h3 id=\"t_dSett\">Device Settings</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <button type=\"submit\" id=\"refresh\" class=\"blue left T_scan\">Scan</button>\r\n        <div id=\"usb_drawing\" class=\"part-separate\">\r\n        </div>\r\n        <div id=\"chart_cnt\" class=\"part-separate\">\r\n        </div>\r\n        <div id=\"chart_tip\" class=\"nd\">\r\n            <div id=\"chart_tips_point\"></div>\r\n            <p></p>\r\n            <div id=\"chart_tips_button\"></div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<h3 id=\"t_sSett\">Sharing Settings</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <label id=\"t_nsn\" for=\"server_name\">Network/Media Server Name:</label>\r\n        <input type=\"text\" id=\"server_name\" maxlength=\"15\" />\r\n        <button type=\"submit\" class=\"green T_save\" id='shareSettings'>Save</button>\r\n    </form>\r\n</div>\r\n\r\n<h3 id=\"t_info\">Folder Sharing</h3>\r\n<div class=\"content-container\">\r\n    <form class=\"pure-form pure-form-aligned\">\r\n        <div class=\"button-group-container\">\r\n            <b id=\"t_esa\">Share All:</b>\r\n            <ul>\r\n                <li>\r\n                    <button id=\"shareOn\" class=\"fst\" value=\"on\">On</button>\r\n                </li>\r\n                <li>\r\n                    <button id=\"shareOff\" class=\"lst\" value=\"off\">Off</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div class=\"browse-content-container nd\" id=\"folderSel\">\r\n            <div class=\"browse-content-container-wrap\">\r\n                <span><b id=\"t_brw\">Browse for folder path</b>\r\n                </span>\r\n                <br>\r\n                <br>\r\n                <div id=\"folderSelContent\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"inline-btn-right\">\r\n                <button type=\"submit\" class=\"green inline T_cancel\" id=\"cancelPathSel\">Cancel</button>\r\n                <button type=\"submit\" class=\"green inline T_save\" id=\"confirmPathSel\">Save</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"shareDrawing\" class=\"nd\">\r\n            <div class='table-op'>\r\n                <div class='table-btn'>\r\n                    <span class='add-icon' id=\"shareItemAdd\"></span>\r\n                    <label class=\"T_add\">Add</label>\r\n                    <span class='delete-icon'></span>\r\n                    <label class=\"T_del\">Delete</label>\r\n                </div>\r\n            </div>\r\n            <table id='shareTab'>\r\n                <thead></thead>\r\n                <tbody>\r\n                    <tr id=\"editShareFolder\" class=\"nd\">\r\n                        <td colspan=\"8\">\r\n                            <div>\r\n                                <b id=\"t_vol\">Volume Name:</b>\r\n                                <select id=\"shareVolume\">\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <b id=\"t_folP\">Folder Path:</b>\r\n                                <input type=\"text\" id=\"filename\" class=\"xl\" disabled required>\r\n                                <button type=\"submit\" class=\"blue\" id=\"t_browse\">Browse</button>\r\n                            </div>\r\n                            <div>\r\n                                <b id=\"t_shareN\">Folder Name:</b>\r\n                                <input type=\"text\" id=\"shareName\" class=\"xl\" maxlength=\"31\" required>\r\n                            </div>\r\n                            <div>\r\n                                <b></b>\r\n                                <input type=\"checkbox\" id=\"ea\" />\r\n                                <label id=\"t_ea\">Enable Authentication</label>\r\n                            </div>\r\n                            <div>\r\n                                <b></b>\r\n                                <input type=\"checkbox\" id=\"wa\" />\r\n                                <label id=\"t_wa\">Enable Write Access</label>\r\n                            </div>\r\n                            <div>\r\n                                <b></b>\r\n                                <input type=\"checkbox\" id=\"ems\" />\r\n                                <label id=\"t_ems\">Enable Media Sharing</label>\r\n                            </div>\r\n                            <div class=\"inline-btn-right\">\r\n                                <button type=\"submit\" class=\"green T_cancel\" id=\"edit-cancel\">Cancel</button>\r\n                                <button type=\"submit\" class=\"green T_save\" id=\"edit-ok\">Save</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"button-group-container\" id=\"authentication\">\r\n            <b id=\"t_ea_a\">Enable Authentication:</b>\r\n            <ul>\r\n                <li>\r\n                    <button id=\"authOn\" class=\"fst\" value=\"on\">On</button>\r\n                </li>\r\n                <li>\r\n                    <button id=\"authOff\" class=\"lst\" value=\"off\">Off</button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div id=\"authDrawing\" class=\"nd\">\r\n            <div class='table-op'>\r\n                <div class='table-btn'>\r\n                    <span class='refresh-icon' id=\"refShareSet\"></span>\r\n                    <label class=\"T_refresh\">Refresh</label>\r\n                </div>\r\n            </div>\r\n            <table id='authTab'>\r\n                <thead></thead>\r\n                <tbody></tbody>\r\n            </table>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<script language=\"javascript\" type=\"text/javascript\">\r\n(function() {\r\n    var usbDeviceList;\r\n    var volumeList;\r\n    var smbService;\r\n    var dlnaService;\r\n    var ftpServer;\r\n\r\n    var accessFolderList_samba;\r\n    var accessFolderList_ftp;\r\n    var accessFolderList_dlna;\r\n\r\n    var numAliveDev = 0;\r\n    var numAliveLog = 0;\r\n    var idx;\r\n\r\n    var currVolume = \"\";\r\n    var currPath = \"\";\r\n\r\n    var currentFolder = \"\";\r\n    var fPath = \"\";\r\n\r\n    var firstClick = 1;\r\n    var firstNode = 1;\r\n    var o;\r\n    var prevObj;\r\n\r\n    var folderPath = \"\";\r\n    var currentVol = \"\";\r\n\r\n    var folderIdx;\r\n    var shareTabStatus = \"\";\r\n    var editCurIndex;\r\n\r\n\r\n    $.tpInit(init);\r\n\r\n    $(\"#refresh\").click(function() {\r\n        $.addLoading($(this));\r\n        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n\r\n        if (!$.exe()) {\r\n            if (0 == usbDeviceList.length) {\r\n                $.removeLoading();\r\n                $.reload();\r\n                return;\r\n            }\r\n\r\n            var idx;\r\n\r\n            for (idx = 0; idx < usbDeviceList.length; idx++) {\r\n                usbDeviceList[idx].enable = 1;\r\n                mountUsb(idx);\r\n            }\r\n            $.removeLoading();\r\n            $.reload();\r\n        }\r\n    });\r\n\r\n    $(\"#chart_tips_button\").click(function(){\r\n        $.hideCover();\r\n        $('#mask').css({background: '#36444b', opacity: '0.2'});\r\n        $(\"#chart_tip\").addClass('nd');\r\n    });\r\n\r\n    $('#t_browse').click(function() {\r\n        showBrowse();\r\n    });\r\n\r\n    $('#folderSelContent').on('click', '.addFolder,.hideFolder', function() {\r\n        loadClick(this);\r\n    }).on('click', '.folderImg', function() {\r\n        foldSelect(this);\r\n    }).on('click', '.fName, span.span', function() {\r\n        getFolderPath(this);\r\n    });\r\n\r\n    $('#usb_drawing').on('click', 'span.safely-remove-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        $.addLoading();\r\n        handleUsb(index);\r\n    }).on('click', 'span.disable-icon, span.enable-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        ableFunc(index);\r\n    });\r\n\r\n    $('#shareTab').on('click', 'span.enable-icon, span.disable-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        ableShare(index);\r\n    }).on('click', 'span.edit-modify-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        modifyShare(index);\r\n    }).on('click', 'span.edit-trash-icon', function() {\r\n        var index = $(this).attr('data-index');\r\n        delShare(index);\r\n    }).on('click', '.share-table-checkbox', function() {\r\n        var index = $(this).attr('data-index');\r\n        selectJudge(index);\r\n    });\r\n\r\n    $('#shareDrawing').on('click', '.delete-icon', function() {\r\n        deleteItem();\r\n    });\r\n\r\n    $(\"#shareVolume\").click(function () {\r\n        currentVol = $(\"#shareVolume\").data(\"value\");\r\n    });\r\n\r\n    $(\"#shareItemAdd\").click(function () {\r\n        shareTabStatus = \"add\";\r\n    });\r\n\r\n    $(\"#cancelPathSel\").click(function () {\r\n        $.hideCover();\r\n        $(\"#folderSelContent\").empty();\r\n        $(\"#folderSel\").addClass(\"nd\");\r\n    });\r\n\r\n    $(\"#confirmPathSel\").click(function () {\r\n        $.hideCover();\r\n        $(\"#folderSelContent\").empty();\r\n        $(\"#folderSel\").addClass(\"nd\");\r\n        $(\"#filename\").val(transStr(folderPath));\r\n    });\r\n\r\n    $(\"#refShareSet\").click(function () {\r\n        initAuthTab();\r\n    });\r\n\r\n    $(\"#shareOn\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"shareAll=1\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"shareAll=1\"]);\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"shareAll=1\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            $(\"#authentication\").removeClass(\"nd\");\r\n            $(\"#shareDrawing\").addClass(\"nd\");\r\n            $(\"#authDrawing\").removeClass(\"nd\");\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    $(\"#shareOff\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"shareAll=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"shareAll=0\"]);\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, [\"shareAll=0\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            $(\"#authentication\").addClass(\"nd\");\r\n            $(\"#authDrawing\").addClass(\"nd\");\r\n            $(\"#shareDrawing\").removeClass(\"nd\");\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    $(\"#authOn\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"anonymous=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"anonymous=0\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    $(\"#authOff\").click(function () {\r\n        $.addLoading($(this));\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"anonymous=1\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"anonymous=1\"]);\r\n\r\n        if (!$.exe()) {\r\n            $.removeLoading();\r\n            var param = {};\r\n            param.scrollTop = $(\"#scroll\").scrollTop();\r\n            $.loadMain(\"usbManage.htm\", param);\r\n        }\r\n    });\r\n\r\n    function handleUsb(idx) {\r\n        var command = {};\r\n\r\n        if (\"Online\" == usbDeviceList[idx].status) {\r\n            command.enable = 0;\r\n            usbDeviceList[idx].enable = 0;\r\n        } else if ((\"Standby\" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {\r\n            usbDeviceList[idx].enable = 0;\r\n            command.enable = 0;\r\n        } else {\r\n            usbDeviceList[idx].enable = 1;\r\n            command.enable = 1;\r\n        }\r\n\r\n        $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);\r\n\r\n        $.exe(function() {\r\n            $.removeLoading();\r\n            $.reload();\r\n        });\r\n    }\r\n\r\n    function mountUsb(idx) {\r\n        var command = {};\r\n        if ((\"Standby\" == usbDeviceList[idx].status) && (1 == usbDeviceList[idx].enable)) {\r\n            command.enable = 1;\r\n            $.act(ACT_SET, USB_DEVICE, usbDeviceList[idx].__stack, null, command);\r\n\r\n            if (!$.exe()) {\r\n                $.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    function ableFunc(num) {\r\n        var command = {};\r\n\r\n        if (\"Online\" == volumeList[num].status) {\r\n            command.enable = 0;\r\n        } else if (\"Error\" == volumeList[num].status) {\r\n            return;\r\n        } else if ((\"Offline\" == volumeList[num].status) && (\"1\" == volumeList[num].enable)) {\r\n            handleVolumeForce(num);\r\n            return;\r\n        } else if ((\"Offline\" == volumeList[num].status)) {\r\n            command.enable = 1;\r\n        } else {\r\n            $.reload();\r\n        }\r\n\r\n        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);\r\n\r\n        $.exe(function() {\r\n            $.removeLoading();\r\n            $.reload();\r\n        });\r\n    }\r\n\r\n    function handleVolumeForce(num) {\r\n        var command = {};\r\n\r\n        command.enable = 1;\r\n        command.force = 1;\r\n        $.act(ACT_SET, LOGICAL_VOLUME, volumeList[num].__stack, null, command);\r\n\r\n        if (!$.exe()) {\r\n            $.reload();\r\n        }\r\n    }\r\n\r\n    function initTable() {\r\n        var array = [];\r\n        var i, rowspan;\r\n\r\n        for (idx = 1; idx <= usbDeviceList.length; idx++) {\r\n            if (\"Online\" == usbDeviceList[idx - 1].status) {\r\n                rowspan = 0;\r\n                for (i = 0; i < volumeList.length; i++) {\r\n                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {\r\n                        rowspan++;\r\n                    }\r\n                }\r\n                for (i = 0; i < volumeList.length; i++) {\r\n                    if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[i].__stack).split(','))[0]) {\r\n                        var ableControl;\r\n\r\n                        if (volumeList[i].status == \"Online\") {\r\n                            ableControl = true;\r\n                        } else if (\"Error\" == volumeList[i].status) {\r\n                            ableControl = false;\r\n                        } else if ((\"Offline\" == volumeList[i].status) && (1 == volumeList[i].enable)) {\r\n                            ableControl = false;\r\n                        } else {\r\n                            ableControl = false;\r\n                        }\r\n\r\n                        if ((0 == usbDeviceList[idx - 1].enable) || (\"Online\" != usbDeviceList[idx - 1].status)) {\r\n                            ableControl = false;\r\n                        }\r\n\r\n                        var removeTD = {\r\n                            \"text\": \"<span class='safely-remove-icon table-icon' data-index='\" + (idx-1)\r\n                            +\"'></span>\",\r\n                            \"width\": \"15%\",\r\n                            \"rowspan\": rowspan\r\n                        };\r\n\r\n                        array.push([{\r\n                            \"text\": volumeList[i].label + ':(' + volumeList[i].name + ')',\r\n                            \"width\": \"15%\"\r\n                        }, {\r\n                            \"text\": volumeList[i].capacity,\r\n                            \"width\": \"20%\"\r\n                        }, {\r\n                            \"text\": renderFreeSpace(getVolumeGB(volumeList[i].freeSpace), getVolumeGB(volumeList[i].capacity)),\r\n                            \"width\": \"38%\"\r\n                        }, {\r\n                            \"text\": '<span class=\"table-grid-icon'+(ableControl?' enable-icon':' disable-icon')+'\" data-index=\"'+\r\n                            i +'\"></span>',\r\n                            \"width\": \"12%\"\r\n                        }, removeTD]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $.initTableBody($('#volumeTbl'), array);\r\n        // $.tablePages($('#volumeTbl'), 5);\r\n        return array;\r\n    }\r\n\r\n    function init() {\r\n        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);\r\n        smbService = $.act(ACT_GET, SMB_SERVICE, null, null, null);\r\n        ftpServer = $.act(ACT_GET, FTP_SERVER, null, null, null);\r\n        dlnaService = $.act(ACT_GET, DLNA_MEDIA_SERVER, null, null, null);\r\n        accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n        accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n        accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n\r\n        userAccessList_samba = $.act(ACT_GL, SMB_USER_ACCESS, null, null, null);\r\n\r\n        userList = $.act(ACT_GL, USER_ACCOUNT, null, null, null);\r\n\r\n        var index, headArray;\r\n\r\n        $(\"#chart_tip p\").text(c_str.usbChartInfo);\r\n        $(\"#chart_tips_button\").text(m_str.ok);\r\n\r\n        if (!$.exe()) {\r\n            // USB Storage Device\r\n            if (0 < usbDeviceList.length) {\r\n                if (usbDeviceList.length <= 2 && checkVolumeNum(usbDeviceList, volumeList)) {\r\n                    drawChart(usbDeviceList, volumeList);\r\n                } else {\r\n                    for (idx = 0; idx < usbDeviceList.length; idx++) {\r\n                        if (\"Online\" == usbDeviceList[idx].status) {\r\n                            numAliveDev++;\r\n                        }\r\n                    }\r\n\r\n                    for (idx = 0; idx < volumeList.length; idx++) {\r\n                        if (\"Online\" == volumeList[idx].status) {\r\n                            numAliveLog++;\r\n                        }\r\n                    }\r\n\r\n                    var usbDrawing;\r\n                    usbDrawing = \"<table id='volumeTbl'><thead></thead><tbody></tbody></table>\";\r\n                    $(\"#usb_drawing\").append(usbDrawing).append(\"<br>\");\r\n\r\n                    headArray = [{\r\n                        \"text\": table_str.name,\r\n                        \"width\": \"15%\"\r\n                    }, {\r\n                        \"text\": table_str.total,\r\n                        \"width\": \"20%\"\r\n                    }, {\r\n                        \"text\": table_str.capacity,\r\n                        \"width\": \"38%\"\r\n                    }, {\r\n                        \"text\": table_str.enable,\r\n                        \"width\": \"12%\"\r\n                    }, {\r\n                        \"text\": m_str.remove,\r\n                        \"width\": \"15%\"\r\n                    }];\r\n\r\n                    $.initTableHead($('#volumeTbl'), headArray);\r\n                    $('#volumeTbl').tpTable(initTable);\r\n                }\r\n            }\r\n\r\n            // Sharing Settings\r\n            $(\"#server_name\").val(smbService.serverName);\r\n\r\n            // Folder Sharing\r\n            var authHeadArray = [{\r\n                \"text\": table_str.id,\r\n                width: \"10%\"\r\n            }, {\r\n                \"text\": table_str.shareName,\r\n                width: \"40%\"\r\n            }, {\r\n                \"text\": table_str.folderPath,\r\n                width: \"25%\"\r\n            }, {\r\n                \"text\": table_str.volume,\r\n                width: \"25%\"\r\n            }];\r\n\r\n            $.initTableHead($('#authTab'), authHeadArray);\r\n            $('#authTab').tpTable(initAuthTab);\r\n\r\n            headArray = [{\r\n                \"text\": '<div><input type=\"checkbox\" id=\"shareTitle\" class=\"table-select-all\"/><label></label></div>',\r\n                \"width\": \"8%\"\r\n            }, {\r\n                \"text\": table_str.id,\r\n                \"width\": \"5%\"\r\n            }, {\r\n                \"text\": table_str.shareName,\r\n                \"width\": \"15%\"\r\n            }, {\r\n                \"text\": table_str.folderPath,\r\n                \"width\": \"25%\"\r\n            }, {\r\n                \"text\": table_str.mediaSharing,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": table_str.volume,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": table_str.status,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": table_str.modify,\r\n                \"width\": \"17%\"\r\n            }];\r\n            $.initTableHead($('#shareTab'), headArray);\r\n            $('#shareTab').tpTable(initShareTab);\r\n\r\n            if (smbService.anonymous == 0) {\r\n                $(\"#authOn\").addClass(\"selected\");\r\n            } else {\r\n                $(\"#authOff\").addClass(\"selected\");\r\n            }\r\n\r\n            if (smbService.shareAll == false) {\r\n                $(\"#shareOff\").addClass(\"selected\");\r\n                $(\"#authentication\").addClass(\"nd\");\r\n                $(\"#authDrawing\").addClass(\"nd\");\r\n                $(\"#shareDrawing\").removeClass(\"nd\");\r\n            } else {\r\n                $(\"#shareOn\").addClass(\"selected\");\r\n                $(\"#shareDrawing\").addClass(\"nd\");\r\n                $(\"#authentication\").removeClass(\"nd\");\r\n\r\n                $(\"#authDrawing\").removeClass(\"nd\");\r\n            }\r\n\r\n            var i;\r\n            var $volNameSelect = $(\"#shareVolume\");\r\n\r\n            while ((i = $(\"#shareVolume option\").length) > 0) {\r\n                $(\"#shareVolume option[index='0']\").remove();\r\n            }\r\n\r\n            var $ispOption = $(\"<option>\" + table_str.selectopt + \"</option>\");\r\n            $ispOption.val(table_str.selectopt);\r\n\r\n            $volNameSelect.append($ispOption);\r\n\r\n            for (index = 0; index < volumeList.length; index++) {\r\n                if (\"Online\" == volumeList[index].status) {\r\n                    $ispOption = $(\"<option></option>\");\r\n                    $ispOption.val(volumeList[index].label + \":\");\r\n                    $ispOption.text(volumeList[index].label + \":\");\r\n\r\n                    $volNameSelect.append($ispOption);\r\n                }\r\n            }\r\n\r\n            folderIdx = accessFolderList_samba.length;\r\n\r\n            if ($.mainParam !== undefined) {\r\n                var param = $.mainParam || {};\r\n                $('#scroll').scrollTop(param.scrollTop);\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkVolumeNum(usbDeviceList, volumeList) {\r\n        var maxVolumeNum = 0;\r\n        for (var i = 0; i < usbDeviceList.length; i++) {\r\n            var tempNum = 0;\r\n            for (var j = 0; j < volumeList.length; j++) {\r\n                if ($.stkPop(volumeList[j].__stack) == usbDeviceList[i].__stack) {\r\n                    tempNum += 1;\r\n                }\r\n            }\r\n            if (tempNum > maxVolumeNum) {\r\n                maxVolumeNum = tempNum;\r\n            }\r\n            if (maxVolumeNum > 5) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function renderFreeSpace(free, total) {\r\n        var percent = 1-free/total,\r\n                len = percent*230;\r\n        var isAlert = (percent >= 0.9);\r\n        var inHTML='<div class=\"inline-block\">';\r\n        inHTML +=   '<div class=\"\" style=\"position: relative; display: inline-block;\">';\r\n        inHTML +=       '<div class=\"\" style=\"margin-bottom:10px;top:7px;position:relative;\">';\r\n        inHTML +=           '<div class=\"\" style=\"border: 0 none;background-color: #a7a9ac;width: 230px; height: 6px;\">';\r\n        inHTML +=               '<div class=\"progressbar-value'+(isAlert?' grid_alert':'')+'\" style=\"width:'+\r\n                len+'px;height:100%;overflow: hidden;\"></div>';\r\n        inHTML +=           '</div>';\r\n        inHTML +=       '</div>';\r\n        inHTML +=   '</div>';\r\n        inHTML +=   '<div class=\"volume-progress-text\">';\r\n        inHTML +=       '<span class=\"'+(isAlert?'grid_alert':'')+'\">'+s_str.used+':'+(total-free).toFixed(1)+'G</span>';\r\n        inHTML +=       '<span>'+s_str.free+':'+free+'G</span>';\r\n        inHTML +=   '</div>';\r\n        inHTML +='</div>';\r\n        return inHTML;\r\n    }\r\n\r\n    function getVolumeGB(data) {\r\n        var kb = /K/;\r\n        var mb = /M/;\r\n        var gb = /G/;\r\n        var cap;\r\n        if (kb.test(data)) {\r\n            cap = data.split(\" K\")[0]*1/1024/1024;\r\n            return cap.toFixed(1)*1;\r\n        } else if (mb.test(data)) {\r\n            cap = data.split(\" M\")[0]*1/1024;\r\n            return cap.toFixed(1)*1;\r\n        } else if (gb.test(data)) {\r\n            cap = data.split(\" G\")[0]*1;\r\n            return cap.toFixed(1)*1;\r\n        } else {\r\n            return (data*1).toFixed(1)*1;\r\n        }\r\n    }\r\n\r\n    function drawChart(deviceList, volumeList) {\r\n        var formatData,\r\n                colorArray=[\"#4ACBD6\",\"#11BBBF\",\"#0D9999\",\"#86E2E2\",\"#59E6EA\"],\r\n                div = [];\r\n\r\n        $(\"#chart_cnt\").empty().show();\r\n\r\n        $(\"#usb_drawing\").hide();\r\n\r\n        if(deviceList.length > 0 && (document.cookie.search('usbInfo=1') === -1)){\r\n            document.cookie = 'usbInfo=1';\r\n            $.showCover();\r\n            $('#mask').css({background: '#000', opacity: '0.3'});\r\n            $(\"#chart_tip\").removeClass('nd');\r\n            $(\"#main\").scrollTop(0);\r\n        }\r\n\r\n        for(var k = 0; k < deviceList.length; k++) {\r\n            if (\"Online\" != deviceList[k].status) {\r\n                continue;\r\n            }\r\n\r\n            var totalCapacity = 0, volumeIndex = 0;\r\n            div[k]=document.createElement(\"div\");\r\n            $(div[k]).attr(\"class\",\"device_chart\");\r\n            $(\"#chart_cnt\").append(div[k]);\r\n\r\n            $.each(volumeList, function(index) {\r\n                var that = this;\r\n                if ($.stkPop(that.__stack) == deviceList[k].__stack) {\r\n                    totalCapacity += getVolumeGB(that.capacity);\r\n                }\r\n            });\r\n\r\n            formatData = [];\r\n            var bgLine=document.createElement(\"canvas\");\r\n            bgLine.className=\"bg-line\";\r\n            bgLine.width=350;\r\n            bgLine.height=350;\r\n            var infoUl=document.createElement(\"ul\");\r\n            infoUl.className=\"device_info_ul\";\r\n            $.each(volumeList, function(index) {\r\n                var that = this;\r\n                if ($.stkPop(that.__stack) == deviceList[k].__stack) {\r\n                    (function(k, volumeIndex, bgLine, totalCapacity){\r\n                        formatData.push({\r\n                            value: getVolumeGB(that.capacity),\r\n                            color: that.enable == \"1\" ? colorArray[volumeIndex%5] : \"#A7A9AC\",\r\n                            label: that.label+':('+that.name+')',\r\n                            free: getVolumeGB(that.freeSpace),\r\n                            clickCallback:function(){\r\n                                $.addLoading();\r\n                                ableFunc(index);\r\n                            },\r\n                            showInfo:function(){\r\n                                var angle,\r\n                                        angleSum = 0,\r\n                                        total = 0,\r\n                                        index = 0;\r\n                                var r = this.outerRadius;\r\n                                var ctx = bgLine.getContext('2d');\r\n                                $(\"#chart_cnt .device_chart:eq(\"+k+\")\").find(\"div.device_info\").hide();\r\n                                ctx.clearRect(0,0,350,350);\r\n                                ctx.beginPath();\r\n                                ctx.strokeStyle = this.fillColor;\r\n                                ctx.lineWidth = 2;\r\n                                ctx.moveTo(170,170);\r\n\r\n                                $.each(volumeList, function() {\r\n                                    var that = this;\r\n                                    if ($.stkPop(that.__stack) == deviceList[k].__stack) {\r\n                                        if(index<volumeIndex) {\r\n                                            angleSum += getVolumeGB(that.capacity);\r\n                                        }\r\n                                        index++;\r\n                                    }\r\n                                });\r\n\r\n                                angleSum = angleSum/totalCapacity*2*Math.PI;\r\n                                angle = this.value/totalCapacity*2*Math.PI;\r\n                                if(this.value==totalCapacity) angle=2.3;\r\n                                var changeX = ((angleSum + angle/2)>Math.PI)?-1:0;\r\n\r\n                                var div = $(\"#chart_cnt .device_chart:eq(\"+k+\")\").find(\"div.device_info:eq(\"+volumeIndex+\")\");\r\n                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2),170-1.4*r*Math.cos(angleSum + angle/2));\r\n                                ctx.lineTo(170+1.4*r*Math.sin(angleSum + angle/2)+ (changeX==0?1:-1)*div.width(),170-1.4*r*Math.cos(angleSum + angle/2));\r\n\r\n                                ctx.stroke();\r\n                                if ( isIE8 ){\r\n                                    ctx.beginPath();\r\n                                    ctx.fillStyle=\"#ffffff\";\r\n                                    ctx.arc(170, 170, 36, 0, Math.PI*2, false);\r\n                                    ctx.fill();\r\n                                }\r\n                                div.show();\r\n                            },\r\n                            hideInfo:function(){\r\n                                var ctx = bgLine.getContext('2d');\r\n                                $(\"#chart_cnt .device_chart:eq(\"+k+\")\").find(\"div.device_info\").hide();\r\n                                ctx.clearRect(0,0,350,350);\r\n                            }\r\n                        });\r\n                    })(k, volumeIndex, bgLine, totalCapacity);\r\n                    volumeIndex++;\r\n                }\r\n            });\r\n            if (formatData.length === 1) {\r\n                formatData.push({\r\n                    value: 0.01,\r\n                    color: \"#fff\",\r\n                    label: '',\r\n                    free: 0.01,\r\n                    clickCallback: function () {\r\n                    },\r\n                    showInfo: function () {\r\n                    },\r\n                    hideInfo: function () {\r\n                    }\r\n                });\r\n            }\r\n\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append(bgLine);\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append(infoUl);\r\n            var canvas=document.createElement(\"canvas\");\r\n            canvas.width=140;\r\n            canvas.height=140;\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append(canvas);\r\n            // newfour\r\n            var isIE8 =( navigator.appName == \"Microsoft Internet Explorer\" && navigator.appVersion.split(\";\")[1].replace(/[ ]/g,\"\")==\"MSIE8.0\" );\r\n\r\n            if( isIE8 ){\r\n                canvas=window.G_vmlCanvasManager.initElement(canvas);\r\n                bgLine=window.G_vmlCanvasManager.initElement(bgLine);\r\n            }\r\n\r\n            (function(canvas,totalCapacity,bgLine){\r\n                new Chart(canvas.getContext(\"2d\")).Doughnut(formatData, {\r\n                    showTooltips: true,\r\n                    segmentStrokeWidth : 1,\r\n                    percentageInnerCutout : 45,\r\n                    animationSteps : 30,\r\n                    animationEasing: \"easeOutQuad\",\r\n                    //animation : false,\r\n                    onAnimationComplete:function(){\r\n                        var ctx=bgLine.getContext('2d');\r\n                        var div, li;\r\n                        var angle, angleSum=0;\r\n                        var changeX=0, changeY=0;\r\n                        var r = this.outerRadius;\r\n                        var usedValue, freeValue;\r\n                        var total;\r\n\r\n                        for(var i=0;i<this.segments.length;i++){\r\n                            angle = this.segments[i].value/this.total*2*Math.PI;\r\n                            if(this.segments.length==2)angle=2.3;\r\n                            div=document.createElement(\"div\");\r\n                            li=document.createElement(\"li\");\r\n                            div.className=\"device_info\";\r\n                            li.className=\"device_info_li\";\r\n                            $(canvas).closest(\".device_chart\").append(div);\r\n                            $(canvas).closest(\".device_chart\").find(\".device_info_ul\").append(li);\r\n\r\n                            changeX = ((angleSum + angle/2)>Math.PI)?-1:0;\r\n                            changeY = -1;\r\n\r\n                            $(div).css(\"top\",parseInt(r - 1.4*r*Math.cos(angleSum + angle/2) + changeY*div.offsetHeight - 1)+\"px\");\r\n                            $(div).css(\"left\",parseInt(r + 1.4*r*Math.sin(angleSum + angle/2) + changeX*div.offsetWidth + 20)+\"px\");\r\n\r\n                            usedValue = ((this.segments[i].value*1-this.segments[i].free*1+\"\").indexOf(\".\")>-1)?\r\n                                    (this.segments[i].value*1-this.segments[i].free*1).toFixed(1):\r\n                                    (this.segments[i].value*1-this.segments[i].free*1);\r\n                            freeValue = ((this.segments[i].free*1+\"\").indexOf(\".\")>-1)?\r\n                                    (this.segments[i].free*1).toFixed(1):(this.segments[i].free*1);\r\n\r\n                            div.innerHTML=\"<h4>\"+this.segments[i].label+\"</h4>\"+\"<ul><li class=\\\"\"+\r\n                                    ((usedValue/freeValue)>=9?\"alert\":\"\")+\"\\\">\"+s_str.used+\": \"+usedValue+\"G</li>\"+\"<li>\"+\r\n                                    s_str.free+\": \"+freeValue+\"G</li></ul>\";\r\n                            li.innerHTML=\"<div style=\\\"background:\"+this.segments[i].fillColor+\"\\\"></div>\"+this.segments[i].label.split('(')[0];\r\n                            angleSum+=angle;\r\n                            div.style.display=\"none\";\r\n                        }\r\n                        ctx.beginPath();\r\n                        ctx.fillStyle=\"#ffffff\";\r\n                        ctx.arc(170, 170, 36, 0, Math.PI*2, false);\r\n                        ctx.fill();\r\n                        totalCapacity = ((totalCapacity+\"\").indexOf(\".\")>-1)?(totalCapacity*1).toFixed(1):(totalCapacity*1);\r\n                        if ( isIE8 ) {\r\n                            total=\"<div class=\\\"device_total\\\" style=\\\"background:transparent;\\\">\"+totalCapacity+\"G</div>\";\r\n                        }else{\r\n                            total=\"<div class=\\\"device_total\\\">\"+totalCapacity+\"G</div>\";\r\n                        }\r\n                        $(canvas).closest(\".device_chart\").append($(total));\r\n                    }\r\n                });\r\n            })(canvas,totalCapacity,bgLine);\r\n\r\n            $(\"#chart_cnt .device_chart:eq(\"+k+\")\").append($('<button data-index=\"'+k+'\"'+\r\n                    ' type=\"submit\" class=\"bottom_button blue\">'+m_str.remove+'</button>'));\r\n        }\r\n\r\n\r\n        $('.bottom_button').click(function() {\r\n            var idx = $(this).attr('data-index');\r\n            $.addLoading();\r\n            handleUsb(idx);\r\n        });\r\n    }\r\n\r\n    function selectJudge(index) {\r\n        var i;\r\n        var selectAll = 1;\r\n\r\n        if ($(\"#cb\" + index).prop(\"data-checked\") == true) {\r\n            for (i = 0; i < accessFolderList_samba.length; i++) {\r\n                if ($(\"#cb\" + i).prop(\"data-checked\") == false) {\r\n                    selectAll = 0;\r\n                }\r\n            }\r\n\r\n            if (selectAll == 1) {\r\n                $(\"#shareTitle\").prop(\"checked\", true).tpCheckbox();\r\n            }\r\n        } else {\r\n            $(\"#shareTitle\").prop(\"checked\", false).tpCheckbox();\r\n        }\r\n    }\r\n\r\n    function initShareTab() {\r\n        var array = [];\r\n        var fp;\r\n        var matchVolume;\r\n        var status;\r\n        var dlnaEnable;\r\n        var ableControl;\r\n        var j;\r\n        var index;\r\n        var edit = \"\";\r\n        var del = \"\";\r\n        var i;\r\n\r\n        for (index = 0; index < accessFolderList_samba.length; index++) {\r\n            var match = false;\r\n            var volumeName = m_str.disconnected;\r\n            fp = accessFolderList_samba[index].volumeLabel + \":\" + accessFolderList_samba[index].name;\r\n\r\n            $.each(volumeList, function() {\r\n                if (this.uuid == accessFolderList_samba[index].volumeUuid) {\r\n                    matchVolume = this;\r\n                    match = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            dlnaEnable = table_str.off;\r\n            if (accessFolderList_dlna[index].enable == 1) {\r\n                dlnaEnable = table_str.on;\r\n            }\r\n\r\n            if ((accessFolderList_samba[index].volumeUuid != \"\") && (match == false)) {\r\n                ableControl = \"<span class='table-grid-icon inactive-disable-icon' id='sp\" + index + \"'></span>\";\r\n            } else if ((accessFolderList_samba[index].volumeUuid != \"\") && (matchVolume.status != \"Online\")) {\r\n                if (\"Error\" == matchVolume.status) {\r\n                    ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n                } else if ((\"Offline\" == matchVolume.status) && (matchVolume.enable == 1)) {\r\n                    ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n                } else {\r\n                    ableControl = \"<span class='table-grid-icon inactive-icon' id='sp\" + index + \"'></span>\";\r\n                }\r\n            } else {\r\n                if (1 == accessFolderList_samba[index].enable) {\r\n                    ableControl = \"<span class='table-grid-icon enable-icon' id='sp\" + index + \"' data-index='\"+index+\"'></span>\";\r\n                } else {\r\n                    ableControl = \"<span class='table-grid-icon disable-icon' id='sp\" + index + \"' data-index='\"+index+\"'></span>\";\r\n                }\r\n            }\r\n\r\n            edit = \"<span class='table-grid-icon edit-modify-icon' id='edit\" + index + \"' data-index='\"+index+\"'></span>\";\r\n            del = \"<span class='table-grid-icon edit-trash-icon' id='del\" + index + \"' data-index='\"+index+\"'></span>\";\r\n\r\n            for (i = 0; i < volumeList.length; i++) {\r\n                if (volumeList[i].label == accessFolderList_samba[index].volumeLabel) {\r\n                    volumeName = volumeList[i].name;\r\n                }\r\n            }\r\n\r\n            if (volumeName == undefined) {\r\n                volumeName = m_str.disconnected;\r\n            }\r\n\r\n            array.push([{\r\n                \"text\": '<div><input type=\"checkbox\" id=\"cb'+index+'\" class=\"table-select-one\" data-index=\"'\r\n                + index + '\"/><label></label></div>',\r\n                \"width\": \"8%\"\r\n            }, {\r\n                \"text\": (index + 1),\r\n                \"width\": \"5%\"\r\n            }, {\r\n                \"text\": accessFolderList_samba[index].alias,\r\n                \"width\": \"15%\"\r\n            }, {\r\n                \"text\": escapeStr(fp),\r\n                \"width\": \"25%\"\r\n            }, {\r\n                \"text\": dlnaEnable,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": volumeName,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": ableControl,\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": edit + del,\r\n                \"width\": \"17%\"\r\n            }]);\r\n        }\r\n\r\n        $.initTableBody($('#shareTab'), array);\r\n        $.tablePages($('#shareTab'), 8);\r\n        return array;\r\n    }\r\n\r\n    function ableShare(index) {\r\n        var command = {};\r\n\r\n        var matchVolume;\r\n        var match = false;\r\n        var _index;\r\n\r\n        $.each(volumeList, function () {\r\n            if (this.uuid == accessFolderList_samba[index].volumeUuid) {\r\n                matchVolume = this;\r\n                match = true;\r\n            }\r\n        });\r\n\r\n        if ((accessFolderList_samba[index].volumeUuid != \"\") && (match == false)) {\r\n\r\n        } else if ((accessFolderList_samba[index].volumeUuid != \"\") && (matchVolume.status != \"Online\")) {\r\n\r\n        } else {\r\n            if (1 == accessFolderList_samba[index].enable) {\r\n                command.enable = 0;\r\n            } else {\r\n                command.enable = 1;\r\n            }\r\n        }\r\n\r\n        $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, command);\r\n        $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, command);\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, command);\r\n\r\n        if (!$.exe()) {\r\n            $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n            $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n            if (!$.exe()) {\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"usbManage.htm\", param);\r\n            }\r\n        }\r\n    }\r\n\r\n    function modifyShare(index) {\r\n        var i;\r\n        editCurIndex = index;\r\n        var str = accessFolderList_samba[index].volumeLabel + \":\";\r\n\r\n        $(\"#shareVolume\").find(\"option[value='\" + str + \"']\").prop(\"selected\", \"selected\");\r\n        $(\"#shareVolume\").tpSelect({refresh: 1});\r\n\r\n        $(\"#filename\").val(accessFolderList_samba[index].volumeLabel + \":\" + accessFolderList_samba[index].name);\r\n        $(\"#shareName\").val(accessFolderList_samba[index].alias);\r\n\r\n        if (accessFolderList_samba[index].needAuth == 1) {\r\n            $(\"#ea\").prop(\"checked\", true).tpCheckbox();\r\n        }\r\n\r\n        for (i = 0; i < userAccessList_samba.length; i++) {\r\n            if (parseInt(accessFolderList_samba[index].__stack, 10) != parseInt(userAccessList_samba[i].__stack, 10)) {\r\n                continue;\r\n            }\r\n\r\n            if (parseInt(userList[0].__stack, 10) == userAccessList_samba[i].userId) {\r\n                if (userAccessList_samba[i].permissions == 7) {\r\n                    $(\"#wa\").prop(\"checked\", true).tpCheckbox();\r\n                } else {\r\n                    $(\"#wa\").prop(\"checked\", false).tpCheckbox();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (accessFolderList_dlna[index].enable == 1) {\r\n            $(\"#ems\").prop(\"checked\", true).tpCheckbox();\r\n        }\r\n\r\n        shareTabStatus = \"modify\";\r\n    }\r\n\r\n    function delShare(index) {\r\n\r\n        $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);\r\n        $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);\r\n        $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);\r\n\r\n\r\n        if (!$.exe()) {\r\n            $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n            $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n            if (!$.exe()) {\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"usbManage.htm\", param);\r\n            }\r\n        }\r\n    }\r\n\r\n    function delShareMul(index) {\r\n        var i;\r\n\r\n        $.act(ACT_DEL, SMB_SERVICE_FOLDER, accessFolderList_samba[index].__stack, null, null);\r\n        $.act(ACT_DEL, FTP_SERVER_FOLDER, accessFolderList_ftp[index].__stack, null, null);\r\n        $.act(ACT_DEL, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[index].__stack, null, null);\r\n\r\n        $.exe();\r\n    }\r\n\r\n    function initAuthTab() {\r\n        var array = [];\r\n        var index;\r\n\r\n        if (volumeList.length == 0) {\r\n            array.push([{\r\n                \"text\": \"--\",\r\n                \"width\": \"10%\"\r\n            }, {\r\n                \"text\": \"--\",\r\n                \"width\": \"40%\"\r\n            }, {\r\n                \"text\": \"--\",\r\n                \"width\": \"25%\"\r\n            }, {\r\n                \"text\": \"--\",\r\n                \"width\": \"25%\"\r\n            }]);\r\n        }\r\n\r\n        usbDeviceList = $.act(ACT_GL, USB_DEVICE, null, null);\r\n        volumeList = $.act(ACT_GL, LOGICAL_VOLUME, null, null);\r\n\r\n        if (!$.exe()) {\r\n            for (idx = 1; idx <= usbDeviceList.length; idx++) {\r\n                if (\"Online\" == usbDeviceList[idx - 1].status) {\r\n                    for (index = 0; index < volumeList.length; index++) {\r\n                        if (((usbDeviceList[idx - 1].__stack).split(','))[0] == ((volumeList[index].__stack).split(','))[0]) {\r\n                            if (volumeList[index].status == \"Online\") {\r\n                                array.push([{\r\n                                    \"text\": (index + 1),\r\n                                    \"width\": \"10%\"\r\n                                }, {\r\n                                    \"text\": \"volume(\" + volumeList[index].name + \")\",\r\n                                    \"width\": \"40%\"\r\n                                }, {\r\n                                    \"text\": volumeList[index].label + \":\",\r\n                                    \"width\": \"25%\"\r\n                                }, {\r\n                                    \"text\": volumeList[index].name,\r\n                                    \"width\": \"25%\"\r\n                                }]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            $.initTableBody($('#authTab'), array);\r\n            $.tablePages($('#authTab'), 5);\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    function getParentObj(obj) {\r\n        if (!obj.hasClass('cc')) {\r\n            currentFolder = obj.siblings().text();\r\n            if (fPath != \"\") {\r\n                currentFolder += (\"/\" + fPath);\r\n            }\r\n            fPath = currentFolder;\r\n            getParentObj(obj.parent());\r\n        } else {\r\n            fPath = \"/\" + fPath;\r\n        }\r\n    }\r\n\r\n    function escapeStr(str) {\r\n        return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/ /g, '&nbsp;');\r\n    }\r\n\r\n    function transStr(str) {\r\n        return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&nbsp;/g, ' ').replace(/\\s/g, ' ');\r\n    }\r\n\r\n    function getFolderPath(obj) {\r\n        var label;\r\n        var index;\r\n        var color, $prefol;\r\n\r\n        if (firstNode == 1) {\r\n            if (!$(obj).parent().hasClass('root')) {\r\n                folderPath = (\"/\" + $(obj).text());\r\n                o = obj;\r\n                firstNode = 0;\r\n                getFolderPath($(obj).parent());\r\n            } else {\r\n                folderPath = $(obj).text();\r\n\r\n                for (index = 0; index < volumeList.length; index++) {\r\n                    if ($(obj).text() == (volumeList[index].label + \":\")) {\r\n                        currVolume = volumeList[index].name;\r\n                    }\r\n                }\r\n\r\n                color = $(obj).css(\"color\");\r\n                $(obj).css(\"color\", \"#0CF\");\r\n                if (prevObj) {\r\n                    $(prevObj).css(\"color\", color);\r\n\r\n                    $prefol = $(prevObj).siblings(\".folderSel\");\r\n                    if (prevObj != obj) {\r\n                        $prefol.removeClass(\"folderSel\");\r\n                        $prefol.addClass(\"folderImg\");\r\n                    }\r\n                }\r\n                prevObj = obj;\r\n            }\r\n        } else {\r\n            if (!$(obj).parent().hasClass('root')) {\r\n                folderPath = (\"/\" + $(obj).siblings('span').text()) + folderPath;\r\n                getFolderPath($(obj).parent());\r\n            } else {\r\n                label = $(obj).siblings('.span').text();\r\n\r\n                for (index = 0; index < volumeList.length; index++) {\r\n                    if ($(obj).siblings('.span').text() == (volumeList[index].label + \":\")) {\r\n                        currVolume = volumeList[index].name;\r\n                    }\r\n                }\r\n\r\n                folderPath = label + folderPath;\r\n                firstNode = 1;\r\n\r\n                color = $(o).css(\"color\");\r\n                $(o).css(\"color\", \"#0CF\");\r\n\r\n                var $ofol = $(o).siblings(\".folderImg\");\r\n                $ofol.removeClass(\"folderImg\");\r\n                $ofol.addClass(\"folderSel\");\r\n\r\n                if (prevObj) {\r\n                    $(prevObj).css(\"color\", color);\r\n\r\n                    $prefol = $(prevObj).siblings(\".folderSel\");\r\n                    if (prevObj != o) {\r\n                        $prefol.removeClass(\"folderSel\");\r\n                        $prefol.addClass(\"folderImg\");\r\n                    }\r\n\r\n                }\r\n                prevObj = o;\r\n            }\r\n        }\r\n    }\r\n\r\n    function createChildFolder(obj) {\r\n        var index;\r\n\r\n        if (firstClick == 1) {\r\n            firstClick = 0;\r\n            o = obj;\r\n        }\r\n\r\n        if (!$(obj).parent().hasClass('root')) {\r\n            currentFolder = $(obj).siblings('.fName').text();\r\n\r\n            if (currPath != \"\") {\r\n                currentFolder += (\"/\" + currPath);\r\n            }\r\n            currPath = currentFolder;\r\n\r\n            createChildFolder($(obj).parent());\r\n        } else {\r\n            for (index = 0; index < volumeList.length; index++) {\r\n                if ($(obj).siblings('.span').text() == (volumeList[index].label + \":\")) {\r\n                    currVolume = volumeList[index].name;\r\n                }\r\n            }\r\n\r\n            var fullPath = currVolume + \"/\" + transStr(currPath);\r\n\r\n            var command = {};\r\n            command.targetPath = fullPath;\r\n            var ide;\r\n\r\n            $.act(ACT_SET, FOLDER_BROWSE, null, null, command);\r\n            folderList = $.act(ACT_GL, FOLDER_NODE, null, null, null);\r\n\r\n            if (!$.exe()) {\r\n                for (ide = 0; ide < folderList.length; ide++) {\r\n                    var folderNameStr = escapeStr(folderList[ide].folderName);\r\n                    text = '<div style=\"padding-left:23px;\" class=\"div\">'+\r\n                            '<div class=\"addFolder inline\"></div>'+\r\n                            '<div class=\"folderImg inline\" style=\"cursor:pointer;\"></div>&nbsp;'+\r\n                            '<span class=\"fName inline\" style=\"line-height:24px;vertical-align:top;cursor:pointer;\">'+\r\n                            folderNameStr + '</span></div>';\r\n                    $(o).parent().append(text);\r\n                }\r\n            }\r\n            firstClick = 1;\r\n            currPath = \"\";\r\n            if (!($(o).parent().hasClass(\"root\"))) {\r\n                $(o).parent().addClass(\"loaded\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function foldSelect(obj) {\r\n        $(obj).siblings(\".fName\").click();\r\n    }\r\n\r\n    function loadClick(obj) {\r\n        if ($(obj).hasClass(\"addFolder\")) {\r\n            if ($(obj).parent().hasClass(\"vol\")) {\r\n                $(obj).siblings('div').removeClass(\"nd\");\r\n                $(o).parent().removeClass(\"vol\");\r\n            } else if ($(obj).parent().hasClass(\"loaded\")) {\r\n                $(obj).siblings('div').removeClass(\"nd\");\r\n            } else {\r\n                createChildFolder(obj);\r\n            }\r\n\r\n            $(obj).removeClass(\"addFolder\");\r\n            $(obj).addClass(\"hideFolder\");\r\n        } else if ($(obj).hasClass(\"hideFolder\")) {\r\n            $(obj).removeClass(\"hideFolder\");\r\n            $(obj).addClass(\"addFolder\");\r\n\r\n            if ($(obj).parent().hasClass(\"root\")) {\r\n                $(obj).parent().addClass(\"vol\");\r\n            }\r\n\r\n            $(obj).siblings('div').addClass(\"nd\");\r\n        }\r\n    }\r\n\r\n    function showBrowse() {\r\n        $.setFixedCentral($(\"#folderSel\"));\r\n        $.showCover();\r\n        $(\"#folderSel\").removeClass(\"nd\");\r\n        var index;\r\n\r\n        for (index = 0; index < volumeList.length; index++) {\r\n            if (\"Online\" == volumeList[index].status && currentVol == (volumeList[index].label + \":\")) {\r\n                var text;\r\n                text = (\"<div style='padding-left:10px;' class='root'><div class='addFolder inline'></div>&nbsp;\"+\r\n                \"<span class='span inline' style='line-height:24px;vertical-align:top;cursor:pointer;'>\" +\r\n                volumeList[index].label + \":\" + \"</span></div>\");\r\n\r\n                $(\"#folderSelContent\").append(text);\r\n            }\r\n        }\r\n    }\r\n\r\n    function deleteItem() {\r\n        var index;\r\n\r\n        if ($(\"#shareTitle\").prop(\"data-checked\") == true) {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                delShareMul(index);\r\n            }\r\n        } else {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                if ($(\"#cb\" + index).prop(\"data-checked\") == true) {\r\n                    delShareMul(index);\r\n                }\r\n            }\r\n        }\r\n\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n        $.exe();\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"usbManage.htm\", param);\r\n    }\r\n\r\n    $(\"#shareSettings\").click(function () {\r\n        $.addLoading($(this));\r\n\r\n        if ($(\"#server_name\").val().length >= 16) {\r\n            $.alert(CMM_USB_SERVER_NAME_LENGTH);\r\n            return;\r\n        }\r\n\r\n        var newDlnaObj = {};\r\n        newDlnaObj.serverName = $(\"#server_name\").val();\r\n\r\n        if (newDlnaObj.serverName == \"\") {\r\n            $.alert(ERR_USB_DLNA_SERVER_NAME_EMPTY);\r\n            return;\r\n        }\r\n        if ($.asc(newDlnaObj.serverName, true)) {\r\n            $.alert(ERR_USB_DLNA_SERVER_NAME_NOT_ASCII);\r\n            return;\r\n        }\r\n        if ((/[\\\\\\/\\*\\?=+:;,.\"<>|@\\[\\]\\(\\)\\ ]+/).test(newDlnaObj.serverName)) {\r\n            $.alert(ERR_USB_DLNA_INVALID_SERVER_NAME);\r\n            return;\r\n        }\r\n\r\n        var command = {};\r\n        command.serverName = $(\"#server_name\").val();\r\n\r\n        $.act(ACT_SET, DLNA_MEDIA_SERVER, null, null, newDlnaObj);\r\n        $.act(ACT_SET, SMB_SERVICE, null, null, command);\r\n\r\n        $.exe(function (ret) {\r\n            if (!ret) {\r\n                $.removeLoading();\r\n                var param = {};\r\n                param.scrollTop = $(\"#scroll\").scrollTop();\r\n                $.loadMain(\"usbManage.htm\", param);\r\n            }\r\n        });\r\n    });\r\n\r\n    $(\"#edit-ok\").click(function () {\r\n        var newStr;\r\n        var selectVolumeUuid;\r\n        var selectVolumeLabel;\r\n        var index;\r\n        var command = {};\r\n        var command_ftp = {};\r\n        var command_dlna = {};\r\n        var stack_samba;\r\n        var enableDlna = 0;\r\n        var str;\r\n        var stack_ftp;\r\n        var curFolderPath;\r\n\r\n        $.addLoading($(this));\r\n\r\n        newStr = $(\"#shareName\").val();\r\n\r\n        if (newStr === \"\") {\r\n            $.alert(ERR_USB_SHARE_NAME_EMPTY);\r\n            return;\r\n        }\r\n\r\n        if ((/[\\\\\\/:\\*\\?\"<>|\\]\\ ]+/).test(newStr)) {\r\n            $.alert(ERR_USB_INVALID_CHAR_IN_FOLDER_NAME);\r\n            return;\r\n        }\r\n\r\n        if ($.asc(newStr)) {\r\n            $.alert(ERR_USB_SHARE_NAME_NOT_ASCII);\r\n            return;\r\n        }\r\n\r\n        selectVolumeUuid = \"\";\r\n        selectVolumeLabel = \"\";\r\n\r\n        $.each(volumeList, function () {\r\n            if (this.name == currVolume) {\r\n                selectVolumeUuid = this.uuid;\r\n                selectVolumeLabel = this.label;\r\n            }\r\n        });\r\n\r\n        str = $(\"#filename\").val();\r\n        if (str == \"\") {\r\n            $.alert(CMM_USB_BROWSE_FOLDER_PATH);\r\n            return;\r\n        }\r\n\r\n        if (str.length == 2 || str == \"ALL:\") {\r\n            curFolderPath = \"/\";\r\n        } else {\r\n            curFolderPath = str.substring(str.indexOf(\":\") + 1, str.length);\r\n        }\r\n\r\n        if (\"add\" == shareTabStatus) {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid)) {\r\n                    $.alert(ERR_USB_DIR_EXIST);\r\n                    return;\r\n                }\r\n\r\n                if ($(\"#shareName\").val() == accessFolderList_samba[index].alias) {\r\n                    $.alert(ERR_USB_SHARE_NAME_EXIST);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            command.name = curFolderPath;\r\n            command.alias = $(\"#shareName\").val();\r\n            command.enable = 1;\r\n            command.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n            command_ftp.name = curFolderPath;\r\n            command_ftp.alias = $(\"#shareName\").val();\r\n            command_ftp.enable = 1;\r\n            command_ftp.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_ftp.writePermission = ($(\"#wa\").prop(\"data-checked\") == true) ? 7 : 3;\r\n\r\n            command_dlna.name = curFolderPath;\r\n            command_dlna.alias = $(\"#shareName\").val();\r\n            command_dlna.enable = ($(\"#ems\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_dlna.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            if (selectVolumeUuid != \"\") {\r\n                command.volumeUuid = selectVolumeUuid;\r\n                command_ftp.volumeUuid = selectVolumeUuid;\r\n                command_dlna.volumeUuid = selectVolumeUuid;\r\n            }\r\n            if (selectVolumeLabel != \"\") {\r\n                command.volumeLabel = selectVolumeLabel;\r\n                command_ftp.volumeLabel = selectVolumeLabel;\r\n                command_dlna.volumeLabel = selectVolumeLabel;\r\n            }\r\n\r\n            $.act(ACT_ADD, SMB_SERVICE_FOLDER, null, null, command);\r\n            accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_ADD, FTP_SERVER_FOLDER, null, null, command_ftp);\r\n            accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_ADD, DLNA_MEDIA_SERVER_FOLDER, null, null, command_dlna);\r\n            accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n        } else {\r\n            for (index = 0; index < accessFolderList_samba.length; index++) {\r\n                if (($(\"#shareName\").val() == accessFolderList_samba[index].alias) && (index != editCurIndex)) {\r\n                    $.alert(ERR_USB_SHARE_NAME_EXIST);\r\n                    return;\r\n                }\r\n                if ((curFolderPath == accessFolderList_samba[index].name) && (selectVolumeUuid == accessFolderList_samba[index].volumeUuid) && (index != editCurIndex)) {\r\n                    $.alert(ERR_USB_DIR_EXIST);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            command.name = curFolderPath;\r\n            command.alias = $(\"#shareName\").val();\r\n            command.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n            command_ftp.name = curFolderPath;\r\n            command_ftp.alias = $(\"#shareName\").val();\r\n            command_ftp.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_ftp.writePermission = ($(\"#wa\").prop(\"data-checked\") == true) ? 7 : 3;\r\n\r\n            command_dlna.name = curFolderPath;\r\n            command_dlna.alias = $(\"#shareName\").val();\r\n            command_dlna.enable = ($(\"#ems\").prop(\"data-checked\") == true) ? 1 : 0;\r\n            command_dlna.needAuth = ($(\"#ea\").prop(\"data-checked\") == true) ? 1 : 0;\r\n\r\n            if (selectVolumeUuid != \"\") {\r\n                command.volumeUuid = selectVolumeUuid;\r\n                command_ftp.volumeUuid = selectVolumeUuid;\r\n                command_dlna.volumeUuid = selectVolumeUuid;\r\n            }\r\n            if (selectVolumeLabel != \"\") {\r\n                command.volumeLabel = selectVolumeLabel;\r\n                command_ftp.volumeLabel = selectVolumeLabel;\r\n                command_dlna.volumeLabel = selectVolumeLabel;\r\n            }\r\n\r\n            $.act(ACT_SET, SMB_SERVICE_FOLDER, accessFolderList_samba[editCurIndex].__stack, null, command);\r\n            accessFolderList_samba = $.act(ACT_GL, SMB_SERVICE_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_SET, FTP_SERVER_FOLDER, accessFolderList_ftp[editCurIndex].__stack, null, command_ftp);\r\n            accessFolderList_ftp = $.act(ACT_GL, FTP_SERVER_FOLDER, null, null, null);\r\n\r\n            $.act(ACT_SET, DLNA_MEDIA_SERVER_FOLDER, accessFolderList_dlna[editCurIndex].__stack, null, command_dlna);\r\n            accessFolderList_dlna = $.act(ACT_GL, DLNA_MEDIA_SERVER_FOLDER, null, null, null);\r\n        }\r\n\r\n        $.exe(function (ret) {\r\n            if (!ret) {\r\n                if (\"add\" == shareTabStatus) {\r\n                    stack_samba = accessFolderList_samba[folderIdx].__stack;\r\n                    stack_ftp = accessFolderList_ftp[folderIdx].__stack;\r\n                } else {\r\n                    stack_samba = accessFolderList_samba[editCurIndex].__stack;\r\n                    stack_ftp = accessFolderList_ftp[editCurIndex].__stack;\r\n                }\r\n\r\n                var newFlag = 1;\r\n                var userCommand = {};\r\n\r\n                for (index = 0; index < userAccessList_samba.length; index++) {\r\n                    if (parseInt(stack_samba, 10) != parseInt(userAccessList_samba[index].__stack, 10)) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (parseInt(userList[0].__stack, 10) == userAccessList_samba[index].userId) {\r\n                        userCommand.userId = 1;\r\n                        if ($(\"#wa\").prop(\"data-checked\") == true) {\r\n                            userCommand.permissions = 7;\r\n                        } else {\r\n                            userCommand.permissions = 3;\r\n                        }\r\n                    }\r\n\r\n                    $.act(ACT_SET, SMB_USER_ACCESS, userAccessList_samba[index].__stack, null, userCommand);\r\n                    newFlag = 0;\r\n                }\r\n                if (1 == newFlag) {\r\n                    userCommand.userId = 1;\r\n                    if ($(\"#wa\").prop(\"data-checked\") == true) {\r\n                        userCommand.permissions = 7;\r\n                    } else {\r\n                        userCommand.permissions = 3;\r\n                    }\r\n\r\n                    $.act(ACT_ADD, SMB_USER_ACCESS, null, stack_samba, userCommand);\r\n                }\r\n\r\n                $.exe(function (ret) {\r\n                    if (!ret) {\r\n                        $.act(ACT_SET, SMB_SERVICE, null, null, [\"modified=0\"]);\r\n                        $.act(ACT_SET, FTP_SERVER, null, null, [\"modified=0\"]);\r\n                        if (!$.exe()) {\r\n                            $.removeLoading();\r\n                            var param = {};\r\n                            param.scrollTop = $(\"#scroll\").scrollTop();\r\n                            $.loadMain(\"usbManage.htm\", param);\r\n                        }\r\n                    } else {\r\n                        $.removeLoading();\r\n                    }\r\n                });\r\n            } else {\r\n                $.removeLoading();\r\n            }\r\n        });\r\n    });\r\n\r\n    $(\"#edit-cancel\").click(function () {\r\n        var param = {};\r\n        param.scrollTop = $(\"#scroll\").scrollTop();\r\n        $.loadMain(\"usbManage.htm\", param);\r\n    });\r\n})();\r\n</script>\r\n"
      }
    }, {
      "location" : {
        "uri" : "jquery.tpMsg.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 56
      },
      "contents" : {
        "text" : "(function($) {\r\n    'use strict';\r\n\r\n    function TpMsg(elem, options) {\r\n        this.type = options.type;\r\n        this.title = options.title;\r\n        this.initialised = false;\r\n        this.elem = $(elem);\r\n        this.content = options.content || '';\r\n        this.yes = options.yes || '';\r\n        this.no = options.no || '';\r\n        this.callbackOk = options.callbackOk || '';\r\n        this.callbackNo = options.callbackNo || '';\r\n\t\tthis.closeFlag = options.closeFlag || 0;\r\n    }\r\n\r\n    TpMsg.prototype = {\r\n        constructor: TpMsg,\r\n\r\n        init: function() {\r\n            var isProgressBar = (this.type == \"progress-bar\"),\r\n                isComplexMsg = (this.type == \"complex-msg\"),\r\n                isSuccess = (this.type == \"toast-success\"),\r\n                isFail = (this.type == \"toast-fail\"),\r\n                inHTML = '';\r\n\r\n            inHTML += \"<div class=\\\"msg-wrap\\\">\";\r\n            inHTML += !isProgressBar ? \"<a class=\\\"widget-close msg-close\\\" href=\\\"javascript:void(0);\\\"></a>\" : \"\";\r\n            inHTML += \"<div class=\\\"msg-content-wrap\\\">\";\r\n            if (!!this.title) {\r\n                inHTML += \"<h3 class=\\\"widget-title msg-title\\\">\";\r\n                inHTML += \"<span class=\\\"msg-title-container\\\">\" + this.title + \"</span>\";\r\n                inHTML += \"</h3>\";\r\n            }\r\n            inHTML += \"<div class=\\\"widget-content msg-content-container\\\">\";\r\n\r\n            if (!isComplexMsg) {\r\n                inHTML += \"<div class=\\\"grid-warning-msg\\\">\";\r\n                inHTML += (!isProgressBar) ? (\"<span class=\\\"icon \" + (isSuccess ? \"icon-success\" : (isFail ? \"icon-fail\" : \"\")) + \"\\\"></span>\") : \"\";\r\n                inHTML += \"<span class=\\\"text\\\"\" + (isProgressBar ? \"style=\\\"display:inline;\\\"\" : \"\") + \">\" + this.content + \"</span>\";\r\n                inHTML += \"</div>\";\r\n            } else {\r\n                inHTML += \"<div id=\\\"complexMsg\\\"></div>\";\r\n            }\r\n\r\n            inHTML += \"</div>\";\r\n            inHTML += \"</div>\";\r\n            inHTML += \"</div>\";\r\n\r\n            if (this.type != \"progress-bar\" && !isComplexMsg) {\r\n                inHTML += \"<div class=\\\"msg-btn-container\\\">\";\r\n                inHTML += \"<div class=\\\"msg-btn-wrap\\\">\";\r\n                if (this.type == 'confirm' || isComplexMsg) {\r\n                    inHTML += \"<div class=\\\"button-container in-line\\\">\";\r\n                    inHTML += \"<button type=\\\"button\\\" class=\\\"button-button green pure-button btn-msg btn-msg-no btn-confirm\\\">\"\r\n                    inHTML += \"<span>\" + this.no + \"</span>\";\r\n                    inHTML += \"</button>\";\r\n                    inHTML += \"</div>\";\r\n                }\r\n                inHTML += \"<div class=\\\"button-container in-line\\\">\";\r\n                inHTML += \"<button type=\\\"button\\\" class=\\\"button-button green pure-button btn-msg btn-msg-ok btn-confirm\\\">\"\r\n                inHTML += (isSuccess || isFail) ? \"<span>\" + $.tpLang.m_str.ok + \"</span>\" : \"<span>\" + this.yes + \"</span>\";\r\n                inHTML += \"</button>\";\r\n                inHTML += \"</div>\";\r\n                inHTML += \"</div>\";\r\n                inHTML += \"</div>\";\r\n            }\r\n\r\n\r\n            inHTML = '<div class=\"position-center-right\">' + inHTML + '</div>';\r\n            inHTML = '<div class=\"position-center-left\">' + inHTML + '</div>';\r\n\r\n            inHTML = '<div class=\"position-top-right\"></div>' + inHTML;\r\n            inHTML = '<div class=\"position-top-center\"></div>' + inHTML;\r\n            inHTML = '<div class=\"position-top-left\"></div>' + inHTML;\r\n\r\n            inHTML += '<div class=\"position-bottom-left\"></div>';\r\n            inHTML += '<div class=\"position-bottom-center\"></div>';\r\n            inHTML += '<div class=\"position-bottom-right\"></div>';\r\n\r\n            inHTML = '<div class=\"msg-container-wrapper\">' + inHTML + '</div>';\r\n\r\n            this.elem.html(inHTML).addClass(\"widget-container msg-container grid-popup-msg msg-container-center\");\r\n\r\n            this._attachEvent();\r\n\r\n            return this;\r\n        },\r\n\r\n        destroy: function() {\r\n            this.initialised = false;\r\n            this.elem.off('.tpMsg').removeData('tpMsg').empty();\r\n            return this;\r\n        },\r\n\r\n        _attachEvent: function() {\r\n            if (!!this.initialised) return;\r\n\r\n            var self = this,\r\n\r\n                defaultOps = function(e) {\r\n                    e.preventDefault();\r\n                    $.removeLoading();\r\n                    if (this.type != \"complex-msg\") {\r\n                        $.hideCover();\r\n                    } else { //complex-msg�����mask�빫��mask����ͬһ��\n                        var tmp = $(\"div.mask#complex-mask\").length == 0 ? $(\"<div id=\\\"complex-mask\\\" class=\\\"mask\\\"><div id=\\\"complex-cover-loading\\\"></div></div>\").appendTo($(\"body#mainBody\")) : $(\"div.mask#complex-mask\");\r\n                        tmp.fadeOut(200, function() {\r\n                            $(this).css(\"display\", \"none\");\r\n                        })\r\n                    }\r\n                    this.elem.hide();\r\n                    $('body').off('.tpMsg');\r\n                    try {\r\n                    this.activeEl && this.activeEl.focus();\r\n                    } catch (e) {}\r\n\r\n                };\r\n\r\n\r\n            this.elem.on(\"click.tpMsg\", \"a.msg-close\", function(e) {\r\n                defaultOps.call(self, e);\r\n\t\t\t\tif (self.closeFlag == 1)\r\n\t\t\t\t\t;\r\n\t\t\t\telse\r\n                !!self.callbackNo && self.callbackNo();\r\n\r\n            });\r\n\t\t\tthis.elem.on(\"click.tpMsg\", \"button.btn-msg-ok\", function(e) {\r\n                defaultOps.call(self, e);\r\n                !!self.callbackOk && self.callbackOk();\r\n            });\r\n\r\n            if (this.type == 'confirm') {\r\n                this.elem.on(\"click.tpMsg\", \"button.btn-msg-cancel\", function(e) {\r\n                    defaultOps.call(self, e);\r\n                }).on(\"click.tpMsg\", \"button.btn-msg-no\", function(e) {\r\n                    defaultOps.call(self, e);\r\n                    !!self.callbackNo && self.callbackNo();\r\n                });\r\n            }\r\n        },\r\n\r\n        _getActiveEl: function() {\r\n            var self = this;\r\n            $('body').on('keydown.tpMsg', function() {\r\n                self.activeEl === undefined && (self.activeEl = document.activeElement);\r\n                if (self.type != \"complex-msg\") {\r\n                    return false;\r\n                }\r\n            }).on('mousedown.tpMsg', function() {\r\n                self.activeEl === undefined && (self.activeEl = document.activeElement);\r\n            });\r\n\r\n        },\r\n\r\n        show: function() {\r\n            this._getActiveEl();\r\n            if (this.type != \"complex-msg\") {\r\n                $.showCover();\r\n            } else { //complex-msg�����mask�빫��mask����ͬһ��\r\n                var tmp = $(\"div.mask#complex-mask\").length == 0 ? $(\"<div id=\\\"complex-mask\\\" class=\\\"mask\\\"><div id=\\\"complex-cover-loading\\\"></div></div>\").appendTo($(\"body#mainBody\")) : $(\"div.mask#complex-mask\");\r\n                tmp.fadeIn(200, function() {\r\n                    $(this).css(\"display\", \"block\");\r\n                    if ($.browser.msie) {\r\n                        $(this).css(\"filter\", \"alpha(opacity=70)\");\r\n                    }\r\n                });\r\n            }\r\n            this.elem.show();\r\n        },\r\n\r\n        hide: function() {\r\n            $.removeLoading();\r\n            if (this.type != \"complex-msg\") {\r\n            \t$.hideCover();\r\n            } else { //complex-msg�����mask�빫��mask����ͬһ��\r\n                var tmp = $(\"div.mask#complex-mask\").length == 0 ? $(\"<div id=\\\"complex-mask\\\" class=\\\"mask\\\"><div id=\\\"complex-cover-loading\\\"></div></div>\").appendTo($(\"body#mainBody\")) : $(\"div.mask#complex-mask\");\r\n                tmp.fadeOut(200, function() {\r\n                    $(this).css(\"display\", \"none\");\r\n                })\r\n            }\r\n            this.elem.hide();\r\n            $('body').off('.tpMsg');\r\n            try {\r\n            this.activeEl && this.activeEl.focus();\r\n            } catch (e) {}\r\n            this.destroy();\r\n        }\r\n    };\r\n\r\n    TpMsg.options = {\r\n        type: 'alert',\r\n        yes: $.tpLang.m_str.yes,\r\n        no: $.tpLang.m_str.no\r\n    };\r\n\r\n\r\n    $.fn.tpLteSmsTips = function(options) {\r\n        options = $.extend({}, options);\r\n\r\n        var tmp = $(this);\r\n        var inHTML = \"\";\r\n\r\n        inHTML += \"<div class=\\\"msg-wrap\\\" style=\\\"border: none; background : #54c7e2;\\\">\";\r\n\r\n        inHTML += \"<a class=\\\"widget-close msg-close\\\" href=\\\"javascript:void(0);\\\" style=\\\"display: none;\\\"></a>\";\r\n        inHTML += \"<div class=\\\"msg-content-wrap\\\">\";\r\n\r\n        if (this._title) {\r\n            inHTML += \"<h3 class=\\\"widget-title msg-title\\\">\";\r\n            inHTML += \"<span class=\\\"msg-title-container\\\">\" + \"\" + \"</span>\";\r\n            inHTML += \"</h3>\";\r\n        };\r\n\r\n        inHTML += \"<div class=\\\"widget-content msg-content-container\\\">\";\r\n        inHTML += \"<div class=\\\"grid-warning-msg\\\">\";\r\n        inHTML += \"<span class=\\\"icon\\\"></span>\";\r\n        inHTML += \"<span class=\\\"text\\\" style=\\\"color: #ffffff; font-size: 16px;\\\"></span>\";\r\n        inHTML += \"</div>\";\r\n        inHTML += \"</div>\";\r\n        inHTML += \"</div>\";\r\n        inHTML += \"</div>\";\r\n\r\n        inHTML += \"<div class=\\\"msg-btn-container\\\" style=\\\"display: none;\\\">\";\r\n        inHTML += \"<div class=\\\"msg-btn-wrap\\\">\";\r\n        inHTML += \"<div class=\\\"button-container in-line\\\">\";\r\n        inHTML += \"<button type=\\\"button\\\" class=\\\"button-button green pure-button btn-msg btn-msg-ok btn-alert\\\">\"\r\n        inHTML += \"<span>\" + m_str.ok + \"</span>\";\r\n        inHTML += \"</button>\";\r\n        inHTML += \"</div>\";\r\n        inHTML += \"</div>\";\r\n        inHTML += \"</div>\";\r\n\r\n        inHTML = '<div class=\"position-center-right\">' + inHTML + '</div>';\r\n        inHTML = '<div class=\"position-center-left\">' + inHTML + '</div>';\r\n\r\n        inHTML = '<div class=\"position-top-right\" style=\"display: none;\"></div>' + inHTML;\r\n        inHTML = '<div class=\"position-top-center\" style=\"display: none;\"></div>' + inHTML;\r\n        inHTML = '<div class=\"position-top-left\" style=\"display: none;\"></div>' + inHTML;\r\n\r\n        inHTML += '<div class=\"position-bottom-left\" style=\"display: none;\"></div>';\r\n        inHTML += '<div class=\"position-bottom-center\" style=\"display: none;\"></div>';\r\n        inHTML += '<div class=\"position-bottom-right\" style=\"display: none;\"></div>';\r\n\r\n        tmp.empty();\r\n        tmp.append($(inHTML)).addClass(\"container widget-container msg-container grid-popup-msg\").css({\r\n            \"z-index\": \"999\",\r\n            \"display\": \"none\",\r\n            \"background\" : \"#54c7e2\",\r\n            \"opacity\" : \"0.7\"\r\n        })\r\n\r\n        tmp.delegate(\"a.msg-close\", \"click\", function(e) {\r\n            e.preventDefault();\r\n            $.removeLoading();\r\n            $.hideCover();\r\n            tmp.fadeOut(200, function() {\r\n                tmp.css(\"display\", \"none\");\r\n            });\r\n\r\n        }).delegate(\"button.btn-msg-ok\", \"click\", function(e) {\r\n            e.preventDefault();\r\n            $.removeLoading();\r\n            $.hideCover();\r\n            tmp.fadeOut(200, function() {\r\n                tmp.css(\"display\", \"none\");\r\n            });\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n    $.fn.tpMsg = function(option) {\r\n        return this.each(function() {\r\n\r\n            var $this = $(this),\r\n                data = $this.data('tpMsg'),\r\n                options = typeof option === 'object' && option;\r\n\r\n            options = $.extend(true, {}, TpMsg.options, options);\r\n\r\n            if (!data) {\r\n                data = new TpMsg(this, options);\r\n                data.init();\r\n                $this.data('tpMsg', data);\r\n            }\r\n            if (typeof option === 'string') {\r\n                data[option]();\r\n            }\r\n        });\r\n    };\r\n\r\n    $.extend({\r\n        alertPC: function() {\r\n            var errno = arguments[0],\r\n                l = arguments.length,\r\n                i;\r\n\r\n            if (arguments[l - 1] === true) return errno;\r\n\r\n            var str;\r\n            if (typeof errno === 'string') {\r\n                str = errno\r\n            } else {\r\n                str = e_str[errno] || e_str[ERR_UNKOWN];\r\n            }\r\n\r\n            for (i = 1; i < l; i++) {\r\n                str = str.replace(\"$\", arguments[i]);\r\n            }\r\n\r\n            var content;\r\n            if (typeof errno === 'string') {\r\n                content = str\r\n            } else {\r\n                content = '<strong>' + $.tpLang.m_str.errno + \": \" + errno + \"</strong><br />\" + str;\r\n            }\r\n            var $alertContainer = $(\"div.alert-container\"),\r\n                options = {\r\n                    type: 'alert',\r\n                    content: content,\r\n                    yes: $.tpLang.m_str.ok\r\n                };\r\n\r\n            if (!$alertContainer.length) {\r\n                $alertContainer = $(\"<div id=\\\"alert-container\\\" class=\\\"alert-container\\\"></div>\").appendTo($(\"body#mainBody\"));\r\n                $alertContainer.tpMsg(options);\r\n            } else {\r\n                $alertContainer.tpMsg('destroy').tpMsg(options);\r\n                $alertContainer.removeClass(\"progress-bar\");\r\n            }\r\n\r\n            $alertContainer.tpMsg('show');\r\n\r\n            return errno;\r\n        },\r\n\r\n        alertAsnycPC: function(args) {\r\n            typeof args === 'number' && $.alert.call($, args);\r\n        },\r\n\r\n    lteSmsTips: function(iconChose, str, timeOut) {\r\n\r\n        if(iconChose == undefined || !str) {\r\n            return;\r\n        }\r\n\t\tif (timeOut == undefined || timeOut < 800)\r\n\t\t\ttimeOut = 800;\r\n\r\n        var tmp = $(\"div.lteSmsTips-container\");\r\n        if (iconChose ==0) {\r\n            tmp.find(\"span.icon\").removeClass(\"correct-icon-lteSmsTips\");\r\n            tmp.find(\"span.icon\").addClass(\"false-icon-lteSmsTips\");\r\n        }\r\n        else if(iconChose ==1) {\r\n            tmp.find(\"span.icon\").removeClass(\"false-icon-lteSmsTips\");\r\n            tmp.find(\"span.icon\").addClass(\"correct-icon-lteSmsTips\");\r\n        }\r\n        tmp.find(\"span.text\").html($.turnqss(str));\r\n        $.setCentralPosition(tmp);\r\n        $.lock();\r\n        $.showCover();\r\n        tmp.fadeIn(500, function() {\r\n            tmp.css(\"display\", \"block\");\r\n        });\r\n        var activeObj;\r\n        $('body').on(\"mousedown.focus\", function(e) {\r\n            if (activeObj === undefined) {\r\n                activeObj = document.activeElement;\r\n            }\r\n        });\r\n\r\n        $('body').on('keydown.focus', function(e) {\r\n            return false;\r\n        });\r\n\r\n        tmp.delegate(\"button.btn-msg-ok\", \"click.focus\", function(e) {\r\n            activeObj.focus();\r\n            $('body').off('mousedown.focus');\r\n            $('body').off('keydown.focus');\r\n            tmp.undelegate('button.btn-msg-ok', 'click.focus');\r\n            tmp.undelegate('a.msg-close', 'click.focus');\r\n        });\r\n\r\n        tmp.delegate(\"a.msg-close\", \"click.focus\", function(e) {\r\n            activeObj.focus();\r\n            $('body').off('mousedown.focus');\r\n            $('body').off('keydown.focus');\r\n            tmp.undelegate('button.btn-msg-ok', 'click.focus')\r\n            tmp.undelegate('a.msg-close', 'click.focus')\r\n        });\r\n\r\n        var fadeOutFunc = function() {\r\n            tmp.fadeOut(500, function() {\r\n                $('body').mousedown();\r\n                $(\"a.msg-close\").click();\r\n            });\r\n        };\r\n\r\n\t\tsetTimeout(fadeOutFunc, timeOut);\r\n        //setTimeout(fadeOutFunc, 800);\r\n\r\n        return;\r\n    },\r\n        confirm: function(str, ok, no, replaceStr, okStr, cancelStr) {\r\n            if (replaceStr !== undefined) {\r\n                var str = str.replace('$', replaceStr);\r\n            }\r\n\r\n            var $confirmContainer = $(\"div.alert-container\"),\r\n                options = {\r\n                    type: 'confirm',\r\n                    content: str,\r\n                    yes: okStr?okStr : \"yes\",\r\n\t\t\t\t\tno: cancelStr?cancelStr : \"no\",\r\n\t\t\t\t\tcloseFlag: (replaceStr == \"lteBackup\")?1:0,\r\n                    callbackOk: $.isFunction(ok) ? ok : '',\r\n                    callbackNo: $.isFunction(no) ? no : ''\r\n                };\r\n\r\n            if (!$confirmContainer.length) {\r\n                $confirmContainer = $(\"<div id=\\\"alert-container\\\" class=\\\"alert-container\\\"></div>\").appendTo($(\"body#mainBody\"));\r\n                $confirmContainer.tpMsg(options);\r\n            } else {\r\n                $confirmContainer.tpMsg('destroy').tpMsg(options);\r\n                $confirmContainer.removeClass(\"progress-bar\");\r\n            }\r\n\r\n            $confirmContainer.tpMsg('show');\r\n        },\r\n\r\n        complexMsg: function(path, title, ok, no, callbackOk, callbackNo) {\r\n            var $confirmContainer = $(\"div.alert-container-complex-msg\"),\r\n                options = {\r\n                    type: 'complex-msg'\r\n                        /*,\r\n                                            title: title,\r\n                                            ok: ok,\r\n                                            no: no,\r\n                                            callbackOk: callbackOk,\r\n                                            callbackNo: callbackNo*/\r\n                };\r\n\r\n            if (!$confirmContainer.length) {\r\n                $confirmContainer = $(\"<div id=\\\"complex-msg-container\\\" class=\\\"alert-container-complex-msg\\\"></div>\").appendTo($(\"body#mainBody\"));\r\n                $confirmContainer.tpMsg(options);\r\n                $confirmContainer.find('.msg-container-wrapper').addClass('complex-msg');\r\n            } else {\r\n                $confirmContainer.tpMsg('destroy').tpMsg(options);\r\n                $confirmContainer.find('.msg-container-wrapper').addClass('complex-msg');\r\n            }\r\n\r\n            $.loadPage(\"complexMsg\", path);\r\n\r\n            $confirmContainer.find('div.msg-wrap').css('max-height', $(window).height() - 150);\r\n            $confirmContainer.tpMsg('show');\r\n        },\r\n        toast: function(success, str) {\r\n            if (success == false) {\r\n                if (str == undefined) {\r\n                    var str = $.tpLang.m_str.fail;\r\n                }\r\n            } else {\r\n                if (str == undefined) {\r\n                    var str = $.tpLang.m_str.success;\r\n                }\r\n            }\r\n\r\n            var options = {\r\n                type: 'toast' + (success == false ? '-fail' : '-success'),\r\n                content: str\r\n            };\r\n            var $toastContainer = $(\"div.alert-container\");\r\n\r\n            if (!$toastContainer.length) {\r\n                $toastContainer = $(\"<div id=\\\"alert-container\\\" class=\\\"alert-container\\\"></div>\").appendTo($(\"body#mainBody\"));\r\n                $toastContainer.tpMsg(options);\r\n            } else {\r\n                $toastContainer.tpMsg('destroy').tpMsg(options);\r\n                $toastContainer.removeClass(\"progress-bar\");\r\n            }\r\n\r\n            $toastContainer.tpMsg('show');\r\n\r\n            return $toastContainer;\r\n        },\r\n\r\n        progressBar: function() {\r\n            var str = arguments[0],\r\n                $barContainer = $(\"div.alert-container\"),\r\n                options = {\r\n                    type: 'progress-bar',\r\n                    content: str\r\n                };\r\n\r\n            if (!$barContainer.length) {\r\n                $barContainer = $(\"<div id=\\\"alert-container\\\" class=\\\"alert-container progress-bar\\\"></div>\").appendTo($(\"body#mainBody\"));\r\n                $barContainer.tpMsg(options);\r\n            } else {\r\n                $barContainer.tpMsg('destroy').tpMsg(options);\r\n                $barContainer.addClass(\"progress-bar\");\r\n            }\r\n\r\n            $barContainer.tpMsg('show');\r\n\r\n            return $barContainer;\r\n        }\r\n    });\r\n\r\n})(jQuery);\r\n"
      }
    }, {
      "location" : {
        "uri" : "lib_1.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 57
      },
      "contents" : {
        "text" : "/*!\r\n * Mini JS Library 1.0\r\n *\r\n * Copyright(c) 2011 Shenzhen TP-LINK Technologies Co.Ltd\r\n * Author: Wang Wenhao \r\n */\r\nvar ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\n\r\n(function(){\r\nvar window = this,\r\n\tundefined;\r\n\t\r\n\twindow.$ = {\r\n\t\t// for quick use\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\t// web settings\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: true,\r\n\t\tqss: true,\r\n\t\tsysMode:\"DSL\",\r\n\t\t\r\n\t\t// private use\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\t// developer use\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\t// global config from server \r\n\t\tmodel: \"\",\t// device model\r\n\t\tdesc: \"\",\t// device description\r\n\t\tports: 4,\t// lan ports\r\n\t\titv: 2, \t// iTV port num\r\n\t\t\r\n\t\t//functions\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n/*\r\n\t\tfind: function(container, query) {\r\n\t\t\tif (query === undefined) {\r\n\t\t\t\tquery = container;\r\n\t\t\t\tcontainer = $.d;\r\n\t\t\t}\r\n\t\t\tif ((container.nodeType && container.nodeType == 1 || container == $.d) && typeof query === \"string\") {\r\n\t\t\t\tquery = \" \" + query;\r\n\t\t\t\tvar qs = query.match(/\\s*[#\\.]?\\w+/g);\r\n\t\t\t\tvar ql;\r\n\t\t\t\tvar ret = (container instanceof Array) ? container : [container];\r\n\r\n\t\t\t\tvar contains = $.d.compareDocumentPosition ? function(a, b){\r\n\t\t\t\t\treturn !!(a.compareDocumentPosition(b) & 16);\r\n\t\t\t\t} : function(a, b){\r\n\t\t\t\t\treturn a !== b && (a.contains ? a.contains(b) : true);\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\twhile(ql = qs.shift()){\r\n\t\t\t\t\tvar newRet = [];\r\n\t\t\t\t\tvar exp = ql.match(/(\\s*)([#\\.]?)(\\w+)/);\r\n\t\t\t\t\tif (exp)\r\n\t\t\t\t\t\tswitch (exp[2]) {\r\n\t\t\t\t\t\tcase '#':\r\n\t\t\t\t\t\t\tvar obj = $.d.getElementById(exp[3]);\r\n\r\n\t\t\t\t\t\t\tif (obj && ((exp[1] && !$.each(ret, function(arg){if (contains(this, arg)) return false}, obj))\r\n\t\t\t\t\t\t\t\t|| (!exp[1] && $.inArray(obj, ret))))\r\n\t\t\t\t\t\t\t\tnewRet = [obj];\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase '.':\r\n\t\t\t\t\t\t\t$.each(ret, function(){\r\n\t\t\t\t\t\t\t\tif (exp[1])\r\n\t\t\t\t\t\t\t\t\t$.surf(this, function(){if ($.hasClass(this, exp[3]) && !$.inArray(this, newRet)) newRet.push(this)});\r\n\t\t\t\t\t\t\t\telse if ($.hasClass(this, exp[3]) && !$.inArray(this, newRet))\r\n\t\t\t\t\t\t\t\t\tnewRet.push(this);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t$.each(ret, function(){$.merge(newRet, this.getElementsByTagName(exp[3]))});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tif (newRet.length) {\r\n\t\t\t\t\t\tret = newRet; \r\n\t\t\t\t\t\tnewRet = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t},\r\n*/\t\t\r\n/*\t\t\r\n\t\t//do not change DOM structure\r\n\t\tsurfAll: function(container, handle, argument) {\r\n\t\t\tif (container.nodeType && container.nodeType == 1 || container == $.d)\r\n\t\t\t\t$.each(container.childNodes, function(arg){\r\n\t\t\t\t\tif (handle.call(this, arg[1]) !== false)\r\n\t\t\t\t\t\t$.surfAll(this, arg[0], arg[1]);\r\n\t\t\t\t\t}, [handle, argument]);\r\n\t\t},\r\n\t\t\r\n\t\t//do not change DOM structure\r\n\t\tsurf: function(container, handle, argument) {\r\n\t\t\t$.surfAll(container, function(arg){\r\n\t\t\t\tif (this.nodeType == 1) \r\n\t\t\t\t\treturn arg[0].call(this, arg[1]);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn false;\r\n\t\t\t}, [handle, argument])\r\n\t\t},\r\n*/\t\t\r\n\t\t//can change DOM structure\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n/*\t\t\r\n\t\tremoveNode: function(arr, node) {\r\n\t\t\tfor ( var i = 0, l = arr.length; i < l; i++)\r\n\t\t\t\tif (arr[i] === node) {\r\n\t\t\t\t\treturn arr.splice(i, 1)[0];\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n*/\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\t//tmp = null;\t/* this will make 'data' take effect only once */\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\t\t//should not use opacity as CSS\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n/*\t\t\r\n\t\tprepend: function(elem, value) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.insertBefore(this, elem.firstChild)});\r\n\t\t}, \r\n\t\t\r\n\t\tbefore: function(elem, value) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.parentNode.insertBefore(this, elem)});\r\n\t\t},\r\n\t\t\r\n\t\tafter: function(elem, value) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.parentNode.insertBefore(this, elem.nextSibling)});\r\n\t\t},\r\n*/\t\t\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL)); /*71000-72000: httpd error*/\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\r\n\t\t// add on\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = \"刷 新\";\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = \"刷 新\";\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = \"返 回\";\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>ERROR</p><div class='con1 M'><p class='ct'>错误</p><p class='bl'></p><div class='con2'><p class='L1'>错误代码：\"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\t\"main\",\r\n\t\t\t\ttrue,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");},\r\n\t\t\t\tbFile ? $.trans : undefined\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='帮 助' />\");\r\n\t\t\t//else\r\n\t\t\t\t//$.load(path, \"help\", true);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='返 回' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n\t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t});\r\n\t\t},\r\n/*\t\t\r\n\t\tloadDiag: function(path, opacity) {\r\n\t\t\t$.load(path, \"diag\", true, function(){\r\n\t\t\t\t$.loadCover(\"<p></p>\", 0.2);\r\n\t\t\t\t$.removeClass($.id(\"diag\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"diag\"), opacity);\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tunloadDiag: function() {\r\n\t\t\t$.addClass($.id(\"diag\"), \"nd\");\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n*/\t\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) +  (page ? \"/#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n/*\t\t\t\t\tif (!$.cn) $.id(\"help\").style[\"height\"] = \"auto\";*/\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\t/*fix ie7 bug*/\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n/*\t\t\t\t\tif (!$.cn) $.id(\"help\").style[\"height\"] = height - 100 + \"px\";*/\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\t/*fix ie7 bug*/\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t//if (!$.flag)\r\n\t\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t},\r\n\t\tsizeSubStr: function(str, len)\r\n\t\t{\r\n\t\t\tvar tmplen = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\ttmplen += str.charCodeAt(i) > 127 ? 2 : 1;\r\n\t\t\t\tif (tmplen > len) break;\r\n\t\t\t}\r\n\t\t\treturn str.substr(0, i);\r\n\t\t},\r\n\t\tsizeLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? 2 : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr;\r\n\t\t\tif ($.sizeLen(val) > num) {\r\n\t\t\t\ttmpStr = $.sizeSubStr(val, num) + \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar count = 0;\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif($.sizeLen(val) > num)\r\n\t\t\t{\r\n\t\t\t\tvar len = 0;\r\n\t\t\t\tfor (var i = 0, l = val.length; i < l; i++) \r\n\t\t\t\t{\r\n\t\t\t\t\tlen += val.charCodeAt(i) > 127 ? 2 : 1;\r\n\t\t\t\t\tif(len >= num)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttmpStr += val.slice(count, i);\r\n\t\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\t\tlen = 0; \r\n\t\t\t\t\t\tcount = i;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(len < num)\r\n\t\t\t\t\ttmpStr += val.slice(count, i);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttmpStr = val;\r\n\t\t\t}\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 18 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0);\r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n/*\t\t\r\n\t\taddLoading1: function(obj, interval, hook) {\r\n\t\t\t$.addClass($.id(\"cover\"), \"cover\");\r\n\t\t\t$.loadCover(\"<p></p>\", 0.5);\r\n\t\t\tif (interval) {\r\n\t\t\t\tsetTimeout(function(){if (hook) if (hook() !== false) {$.removeClass($.id(\"cover\"), \"cover\"); $.unloadCover();}}, interval);\r\n\t\t\t}\t\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading1: function() {\r\n\t\t\t$.removeClass($.id(\"cover\"), \"cover\");\r\n\t\t\t$.unloadCover();\r\n\t\t},\t\t\r\n*/\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, interval, 1, args, hook, id);\r\n\t\t\t}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t//act stack\r\n\t\tds: [],\t\t//returned data stack\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t//add\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t//get\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t//get list\r\n\t\t\t\tcase ACT_GS:\t\t//get list sub\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t//set\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t//del\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\r\n\t\t\t\tindex++;\r\n\t\t\t}\t\t\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\t//\talert(\"错误代码：\" + errno + \"\\n\\n\" + str);\r\n\t\t\talert($.turnqss(str));\r\n\t\t\t//alert(\"错误代码：\" + errno);\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\t//let the device to check whether can use type C subnet and 255 host addr\r\n\t\t\t//if (net >= -64 && net < -32) if ((ip & 0xff) == 0xff) return $.alert(ERR_IP_SUBNETC_HOST_255, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((ip & ~mask) == ~mask || (ip & ~mask) == 0) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\t//add by Yang Jinge\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n/*\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n*/\r\n\t\ttrans: function() {\r\n\t\t\tif (!$.qss && ($.curPage == \"wlQss.htm\" || $.curPage == \"wlQssAdv.htm\" || $.curPage == \"wlSec.htm\"))\r\n\t\t\t\t$.each([\"p\", \"span\", \"b\", \"i\"], function(){\r\n\t\t\t\t\t$.each($.id(\"main\").getElementsByTagName(this), function() {\r\n\t\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\t\t$.h(this, $.turnqss($.h(this)));\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"./css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"./css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"./css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"./css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\t\t\t\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\r\n\t\t$.exe();\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"DSL\"};\r\n\t\t}\r\n\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\t\t\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t})();\r\n})();"
      }
    }, {
      "location" : {
        "uri" : "lib_2.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 58
      },
      "contents" : {
        "text" : "var ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\nvar ACT_OP_L2TP_CONN = \"ACT_L2TP_CONN\";\r\nvar ACT_OP_L2TP_DISCONN = \"ACT_L2TP_DISCONN\";\r\nvar ACT_OP_PPTP_CONN = \"ACT_PPTP_CONN\";\r\nvar ACT_OP_PPTP_DISCONN = \"ACT_PPTP_DISCONN\";\r\nvar ACT_OP_WAN_TYPE_DETECT = \"ACT_WAN_TYPE_DETECT\";\r\nvar ACT_OP_BPA_CONN = \"ACT_BPA_CONN\";\r\nvar ACT_OP_BPA_DISCONN = \"ACT_BPA_DISCONN\";\r\nvar ACT_OP_IPPING = \"ACT_OP_IPPING\";\r\nvar ACT_OP_TRACERT = \"ACT_OP_TRACERT\";\r\n\r\n(function(){\r\nvar window = this,\r\n\tundefined;\r\n\t\r\n\twindow.$ = {\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: false,\r\n\t\tqss: false,\r\n\t\tsysMode:\"DSL\",\r\n\t\tguageInterval:700,\r\n\t\t\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\tmodel: \"\",\t\r\n\t\tdesc: \"\",\t\r\n\t\tports: 4,\t\r\n\t\titv: 2, \t\r\n\t\t\r\n\t\ttmpval:{},\r\n\t\t\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!elem)\r\n\t\t\t\treturn;\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\t\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n\t\t\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdeleteCookie: function(name) { \r\n\t\t\tvar LargeExpDate = new Date ();\r\n\t\t\tdocument.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n\t\t},\r\n\t\t\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(errno == ERR_NOT_ACCEPTED)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\twindow.location.reload();\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = m_str.reload;\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = m_str.refresh;\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = m_str.back;\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\t/* back to previous \"dir\" page */\r\n\t\terrBack: function(errno, dir) {\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.loadMain(dir)})\";\r\n\t\t\tvar value = m_str.back;\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadPage: function(id, path, hook1, hook2) {\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\tid, true, hook1,\r\n\t\t\t\tfunction(){if (bFile) $.trans(); if (hook2) hook2();}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.loadPage(\r\n\t\t\t\t\"main\",\r\n\t\t\t\tpath,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='help />\");\r\n\t\t},\r\n\r\n\t\tloadHelpFrame: function(path) {\r\n\t\t\tif(!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t\r\n\t\t\tif(window.parent !== window) {\r\n\t\t\t\tif (window.parent.topFrame.hl !== path) {\r\n\t\t\t        window.parent.topFrame.hl = path;\r\n\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"GET\",\r\n\t\t\t\t\t\turl: path,\r\n\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\tsuccess:function(data)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.write(data);\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.close();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror:function(errno)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    },\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='back' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n \t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t}); \r\n\t\t},\r\n\t\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, frame, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefreshWindow: function(domain, port, frame, page) {\r\n        \t\tif ($.local) location.reload(true);\r\n        \t\telse {\r\n            \t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            \t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n        \t\t}\r\n    \t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\t/*\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\t\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$.fixTbl();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t\t$.each(document.getElementsByTagName(\"div\"), function(){\r\n\t\t\t\tif (this.offsetWidth != 0 && ($.hasClass(this, \"thead\") || $.hasClass(this, \"tbody\")))\r\n\t\t\t\t\tthis.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could not be edited, show the whole string. \r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(val.length > index)\r\n\t\t\t{\r\n\t\t\t\tif(val.length > (index+num))\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index, index+num);\r\n\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\tindex += num;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index,val.length);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could be edited,  show the string with ellipsis. \r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif (val.length > num)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < num; i++)\r\n\t\t\t\t\ttmpStr += val.charAt(i);\r\n\t\t\t\ttmpStr += \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t \t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0); \r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n\t\t\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto_interval:0,\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\t$.auto_interval = interval;\r\n\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, $.auto_interval, 1, args, hook, id);\r\n\t\t\t}, $.auto_interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t\r\n\t\t\tvar completed = false;\r\n\t\t\tvar count = 0;\r\n\t\t\tvar count_max = 5000/interval;\r\n\t\t\tvar retTmp = false;\r\n\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tif(!completed)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(args[2] >= (args[3]/2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count++ > count_max)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\t\ttype = \"GET\";\r\n\t\t\t\t\t\t\turl = \"/main/status.htm?_=\" + (+new Date());\r\n\t\t\t\t\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\t\t\t\txhr.open(type, url, true);\r\n\t\t\t\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\t\t\t\t\txhr.onreadystatechange = function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (xhr.readyState == 4)\r\n\t\t\t\t\t\t\t\t\tcompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\txhr.send(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.auto_interval = 5000/step;\t\r\n\t\t\t\t}\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t\r\n\t\tds: [],\t\t\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t\r\n\t\t\t\tcase ACT_GS:\t\t\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\r\n\t\t\t\tindex++;\r\n\t\t\t}\t\t\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\talert($.turnqss(str));\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((mask^0xfffffffe) && ((ip & ~mask) == ~mask || (ip & ~mask) == 0)) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\thtmlEncodeStr: function(str) {\r\n\t\t\tif(str ==undefined || str==\"\")   return str;\r\n\t\t\treturn str.replace(/[<>&\"]/g,function(c){return {'<':'&lt;','>':'&gt;','&':'&amp;','\"':'&quot;'}[c];});\r\n\t\t},\r\n\r\n\t\treverseStr: function(str){\r\n\t\t\tvar newStr=\"\";\r\n\t\t\tfor(var i = 0; i < str.length; i++ )\r\n\t\t\t{\r\n\t\t\t\tnewStr += str.substring(str.length-1-i, str.length-i);\r\n\t\t\t}\r\n\t\t\treturn newStr;\r\n\t\t},\r\n\t\t\r\n\t\tformatNum:function(num){\r\n\t\t\tvar numNew = $.reverseStr(num.toString());\r\n\t\t\tif(numNew.length > 3)\r\n\t\t\t{\r\n\t\t\t\tnumNew = numNew.replace(/(\\d\\d\\d)/g, function($0,$1){return $1+\",\"});\r\n\t\t\t}\r\n\t\t\tnumNew = (numNew.charAt(numNew.length-1) == ',')? numNew.substring(0, numNew.length-1):numNew;\r\n\t\t\treturn $.reverseStr(numNew);\r\n\t\t},\r\n\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tval = $.turnqss(val);\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif ($.hasClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t//for localization\r\n\t\t\t\t//$.removeClass(elem, \"T\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\ttrans: function() {\r\n\t\t\tvar elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\"];\r\n\t\t\tvar strs = n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]];\r\n\t\t\tfor (var i in strs) {\r\n\t\t\t\t$.chgElem(document.getElementById(i), strs[i]);\r\n\t\t\t}\r\n\t\t\tvar main = $.id(\"main\");\r\n\t\t\t$.each(elems, function(){\r\n\t\t\t\t$.each(main.getElementsByTagName(this), function() {\r\n\t\t\t\t\tvar tag;\r\n\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\ttag = this.className.match(/\\bT_(\\w+)\\b/);\r\n\t\t\t\t\tif (tag && tag[1]) {\r\n\t\t\t\t\t\tif (s_str[tag[1]]) $.chgElem(this, s_str[tag[1]]);\r\n\t\t\t\t\t\telse if (m_str[tag[1]]) $.chgElem(this, m_str[tag[1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ttransHelp: function(helpUrl) {\r\n\t\t\tvar title = (window.parent.topFrame.hl && window.parent.topFrame.hl.match(/(\\w+)\\.htm$/)[1]) || helpUrl.match(/(\\w+)\\.htm$/)[1];\r\n\t\t\tvar tags = Array(\"h1\", \"p\", \"li\", \"td\");\r\n\t\t\tfor (var k in tags)\r\n\t\t\t{\r\n\t\t\t\telem = window.parent.helpFrame.document.getElementsByTagName(tags[k]);\r\n\t\t\t\tfor (var i=0; i<elem.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name_str[title][elem[i].className])\r\n\t\t\t\t\t\telem[i].innerHTML = name_str[title][elem[i].className];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"/css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"/css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"/css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"/css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t/*$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\r\n\t\t$.act(ACT_CGI, \"/cgi/info\");\r\n\t\t\r\n\t\t$.exe();\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"DSL\"};\r\n\t\t}\r\n\r\n\t\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t$.fd = infoobj.X_TP_isFD;\r\n\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t\t\r\n\t})();\r\n})();"
      }
    }, {
      "location" : {
        "uri" : "lib_3.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 59
      },
      "contents" : {
        "text" : "var ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\nvar ACT_SIG = 9;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\nvar ACT_OP_L2TP_CONN = \"ACT_L2TP_CONN\";\r\nvar ACT_OP_L2TP_DISCONN = \"ACT_L2TP_DISCONN\";\r\nvar ACT_OP_PPTP_CONN = \"ACT_PPTP_CONN\";\r\nvar ACT_OP_PPTP_DISCONN = \"ACT_PPTP_DISCONN\";\r\nvar ACT_OP_WAN_TYPE_DETECT = \"ACT_WAN_TYPE_DETECT\";\r\nvar ACT_OP_BPA_CONN = \"ACT_BPA_CONN\";\r\nvar ACT_OP_BPA_DISCONN = \"ACT_BPA_DISCONN\";\r\nvar ACT_OP_IPPING = \"ACT_OP_IPPING\";\r\nvar ACT_OP_TRACERT = \"ACT_OP_TRACERT\";\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI = 71017;\r\n\r\nvar regionParam = [\r\n\t{\"switchSpec\":\"DEFAULT_NO_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_MEXICO_SPEC\",\"region\":\"es_MX\"}, \r\n\t{\"switchSpec\":\"INCLUDE_CANADA_SPEC\",\"region\":\"fr_FR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_JAPAN_SPEC\",\"region\":\"jp_JP\"}, \r\n\t{\"switchSpec\":\"INCLUDE_KOREA_SPEC\",\"region\":\"ko_KR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_PL_SPEC\",\"region\":\"pl_PL\"}, \r\n\t{\"switchSpec\":\"INCLUDE_BR_SPEC\",\"region\":\"pt_BR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_ROMANIA_SPEC\",\"region\":\"ro_RO\"}, \r\n\t{\"switchSpec\":\"INCLUDE_RUSSIA_SPEC\",\"region\":\"ru_RU\"}, \r\n\t{\"switchSpec\":\"INCLUDE_US_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_VN_SPEC\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_VIETNAM_FPT\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_TW_SPEC\",\"region\":\"zh_TW\"},\r\n\t{\"switchSpec\":\"INCLUDE_ES_SPEC\",\"region\":\"es_MX\"}\r\n];\r\n\r\n\r\nvar checkUrlTable = [\r\n\t{\"url\":\"/cgi_gdpr\", \"flag\":1},\r\n\t{\"url\":\"/cgi/log\", \"flag\":1},\r\n\t{\"url\":\"/cgi/route\", \"flag\":1},\r\n\t{\"url\":\"/frame/menu.cgi\", \"flag\":1}\r\n];\r\n\r\n(function(){\r\n\t$.extend({\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: false,\r\n\t\tqss: false,\r\n\t\tsysMode:\"DSL\",\r\n\t\tguageInterval:700,\r\n\t\t\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\tmodel: \"\",\t\r\n\t\tdesc: \"\",\t\r\n\t\tports: 4,\t\r\n\t\titv: 2, \t\r\n\t\t\r\n\t\ttmpval:{},\r\n\t\t\r\n\t\tee:\"\",\r\n\t\tnn:\"\",\r\n\t\tseq:\"\",\r\n\t\tsignaturehead: \"\",\r\n\t\tnewencryptorManager:{},\r\n\t\tIencryptor:{},\r\n\t\t/*\r\n\t\textend: function(target, options){\r\n\t\t\tfor (name in options)\r\n\t\t\t{\r\n\t\t\t\ttarget[name] = options[name];\r\n\t\t\t}\r\n\t\t\treturn target;\r\n\t\t},\r\n\t\t*/\r\n\t\tcheckUrlmatch: function(url){\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < checkUrlTable.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif(url.match(checkUrlTable[i].url) != null)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!elem)\r\n\t\t\t\treturn;\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\t\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n\t\t\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\t\r\n\t\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT &&  s.type != \"GET\" && s.url.match(\"/cgi_gdpr\") != null)\r\n\t\t\t{\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvar stmp = {};\r\n\t\t\t\t\tstmp.data = {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(s.data.match(\"/cgi/login\") == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstmp.data = $.Iencryptor.AESEncrypt(s.data, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstmp.data = $.Iencryptor.AESEncrypt(s.data, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ts.data = \"sign=\"+stmp.data.sign+\"\\r\\n\"+\"data=\"+stmp.data.data+\"\\r\\n\";\r\n\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\t//$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT && $.checkUrlmatch(s.url) == true )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//console.log(\"return en xhr.responseText: \", xhr.responseText);\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tvar responseTextTmp =$.Iencryptor.AESDecrypt(xhr.responseText);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t\t\t$.script(responseTextTmp);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\t\t\ts.success(s.bScript ? 0 : responseTextTmp);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//console.log(\"return de responseTextTmp: \", responseTextTmp);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch(e)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t\t//console.log(\"can't find $.newencryptorManager \");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdeleteCookie: function(name) { \r\n\t\t\tvar LargeExpDate = new Date ();\r\n\t\t\tdocument.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n\t\t},\r\n\t\t\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(errno == ERR_NOT_ACCEPTED)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\twindow.location.reload();\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\tif(!$.id(id))\r\n\t\t\t\treturn ;\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = m_str.reload;\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = m_str.refresh;\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = m_str.back;\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\t/* back to previous \"dir\" page */\r\n\t\terrBack: function(errno, dir) {\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.loadMain(dir)})\";\r\n\t\t\tvar value = m_str.back;\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadPage: function(id, path, hook1, hook2) {\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\tid, true, hook1,\r\n\t\t\t\tfunction(){if (bFile) $.trans(); if (hook2) hook2();}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.loadPage(\r\n\t\t\t\t\"main\",\r\n\t\t\t\tpath,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='help />\");\r\n\t\t},\r\n\r\n\t\tloadHelpFrame: function(path) {\r\n\t\t\tif(!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t\r\n\t\t\tif(window.parent !== window) {\r\n\t\t\t\tif (window.parent.topFrame.hl !== path) {\r\n\t\t\t        window.parent.topFrame.hl = path;\r\n\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"GET\",\r\n\t\t\t\t\t\turl: path,\r\n\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\tsuccess:function(data)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.write(data);\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.close();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror:function(errno)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    },\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='back' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n \t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t}); \r\n\t\t},\r\n\t\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, frame, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefreshWindow: function(domain, port, frame, page) {\r\n        \t\tif ($.local) location.reload(true);\r\n        \t\telse {\r\n            \t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            \t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n        \t\t}\r\n    \t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\t/*\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\t\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$.fixTbl();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t\t$.each(document.getElementsByTagName(\"div\"), function(){\r\n\t\t\t\tif (this.offsetWidth != 0 && ($.hasClass(this, \"thead\") || $.hasClass(this, \"tbody\")))\r\n\t\t\t\t\tthis.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could not be edited, show the whole string. \r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(val.length > index)\r\n\t\t\t{\r\n\t\t\t\tif(val.length > (index+num))\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index, index+num);\r\n\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\tindex += num;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index,val.length);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could be edited,  show the string with ellipsis. \r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif (val.length > num)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < num; i++)\r\n\t\t\t\t\ttmpStr += val.charAt(i);\r\n\t\t\t\ttmpStr += \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t \t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = true;\r\n\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0); \r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t \t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = false;\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n\t\t\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto_interval:0,\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\t$.auto_interval = interval;\r\n\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, $.auto_interval, 1, args, hook, id);\r\n\t\t\t}, $.auto_interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t\r\n\t\t\tvar completed = false;\r\n\t\t\tvar count = 0;\r\n\t\t\tvar count_max = 5000/interval;\r\n\t\t\tvar retTmp = false;\r\n\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tif(!completed)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(args[2] >= (args[3]/2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count++ > count_max)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\t\ttype = \"GET\";\r\n\t\t\t\t\t\t\turl = \"/main/status.htm?_=\" + (+new Date());\r\n\t\t\t\t\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\t\t\t\txhr.open(type, url, true);\r\n\t\t\t\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\t\t\t\t\txhr.onreadystatechange = function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (xhr.readyState == 4)\r\n\t\t\t\t\t\t\t\t\tcompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\txhr.send(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.auto_interval = 5000/step;\t\r\n\t\t\t\t}\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t\r\n\t\tds: [],\t\t\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t\r\n\t\t\t\tcase ACT_GS:\t\t\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr, securityLevel) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\t\t\t\r\n\t\t\tvar tmpdata = \"\";\r\n\t\t\t\r\n\t\t\tif( INCLUDE_LOGIN_GDPR_ENCRYPT && securityLevel != 0)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\ttry{\r\n\t\t\t\t\turl=\"/cgi_gdpr?\";\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT && url.match(\"/cgi_gdpr\") != null)\r\n\t\t\t{\r\n\t\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\t\t//url = \"/cgi\";\r\n\t\t\t\t\ttmpdata += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\t\t//url += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\t\t\t\t\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\t\r\n\t\t\t\ttmpdata = tmpdata.substr(0, tmpdata.length - 1);\r\n\t\t\t\ttmpdata = tmpdata + \"\\r\\n\"+data;\r\n\t\t\t\tdata = tmpdata;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\t\t\t\t\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){\r\n\t\t\t\t$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\talert($.turnqss(str));\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((mask^0xfffffffe) && ((ip & ~mask) == ~mask || (ip & ~mask) == 0)) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\thtmlEncodeStr: function(str) {\r\n\t\t\tif(str ==undefined || str==\"\")   return str;\r\n\t\t\treturn str.replace(/[<>&\"]/g,function(c){return {'<':'&lt;','>':'&gt;','&':'&amp;','\"':'&quot;'}[c];});\r\n\t\t},\r\n\r\n\t\treverseStr: function(str){\r\n\t\t\tvar newStr=\"\";\r\n\t\t\tfor(var i = 0; i < str.length; i++ )\r\n\t\t\t{\r\n\t\t\t\tnewStr += str.substring(str.length-1-i, str.length-i);\r\n\t\t\t}\r\n\t\t\treturn newStr;\r\n\t\t},\r\n\t\t\r\n\t\tformatNum:function(num){\r\n\t\t\tvar numNew = $.reverseStr(num.toString());\r\n\t\t\tif(numNew.length > 3)\r\n\t\t\t{\r\n\t\t\t\tnumNew = numNew.replace(/(\\d\\d\\d)/g, function($0,$1){return $1+\",\"});\r\n\t\t\t}\r\n\t\t\tnumNew = (numNew.charAt(numNew.length-1) == ',')? numNew.substring(0, numNew.length-1):numNew;\r\n\t\t\treturn $.reverseStr(numNew);\r\n\t\t},\r\n\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tval = $.turnqss(val);\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif ($.hasClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t//for localization\r\n\t\t\t\t//$.removeClass(elem, \"T\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCountry:function(curVersion){\r\n            for (var i = 0; i < regionParam.length; i++)\r\n\t\t\t{\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(eval(regionParam[i].switchSpec) == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is current localization !!\");\r\n\t\t\t\t\t\t$.country = regionParam[i].region;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is not existed !!\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        },\r\n\t\ttrans: function() {\r\n\t\t\tvar elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\"];\r\n\t\t\tvar strs = n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]];\r\n\t\t\tfor (var i in strs) {\r\n\t\t\t\t$.chgElem(document.getElementById(i), strs[i]);\r\n\t\t\t}\r\n\t\t\tvar main = $.id(\"main\");\r\n\t\t\t$.each(elems, function(){\r\n\t\t\t\t$.each(main.getElementsByTagName(this), function() {\r\n\t\t\t\t\tvar tag;\r\n\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\ttag = this.className.match(/\\bT_(\\w+)\\b/);\r\n\t\t\t\t\tif (tag && tag[1]) {\r\n\t\t\t\t\t\tif (s_str[tag[1]]) $.chgElem(this, s_str[tag[1]]);\r\n\t\t\t\t\t\telse if (m_str[tag[1]]) $.chgElem(this, m_str[tag[1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ttransHelp: function(helpUrl) {\r\n\t\t\tvar title = (window.parent.topFrame.hl && window.parent.topFrame.hl.match(/(\\w+)\\.htm$/)[1]) || helpUrl.match(/(\\w+)\\.htm$/)[1];\r\n\t\t\tvar tags = Array(\"h1\", \"p\", \"li\", \"td\");\r\n\t\t\tfor (var k in tags)\r\n\t\t\t{\r\n\t\t\t\telem = window.parent.helpFrame.document.getElementsByTagName(tags[k]);\r\n\t\t\t\tfor (var i=0; i<elem.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name_str[title][elem[i].className])\r\n\t\t\t\t\t\telem[i].innerHTML = name_str[title][elem[i].className];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\t/*\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"/css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"/css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"/css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"/css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t*/\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t/*$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\", \"X_TP_ProductVersion\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t{\r\n\t\t\tif(INCLUDE_MULTIMODE)\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, MULTIMODE, null, null, [\"mode\"]);\r\n\t\t\telse\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\t\t}\r\n\t\t\t\r\n\t\t$.act(ACT_CGI, \"/cgi/info\");\r\n\t\t\t\r\n\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT)\r\n\t\t{\r\n\t\t\t$.exe(null,false,0);\r\n\t\t\tif($.curPage != \"login.htm\")\r\n\t\t\t{\r\n\t\t\t\ttry{\r\n\t\t\t\t\t$.newencryptorManager = $.encrypt.encryptManager;\r\n\t\t\t\t\t$.Iencryptor =  $.newencryptorManager.getEncryptor();\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.exe();\r\n\t\t}\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"DSL\"};\r\n\t\t}\r\n\r\n\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t$.fd = infoobj.X_TP_isFD;\r\n\t\t\r\n\t\t$.setCountry(infoobj.X_TP_ProductVersion);\r\n\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t})();\r\n})();\r\n"
      }
    }, {
      "location" : {
        "uri" : "lib_4.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 60
      },
      "contents" : {
        "text" : "var ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\nvar ACT_OP_OMCI_RESTART = \"ACT_OMCI_RESTART\";\r\n(function(){\r\nvar window = this,\r\n\tundefined;\r\n\t\r\n\twindow.$ = {\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: false,\r\n\t\tqss: false,\r\n\t\tsysMode:\"PON\",\r\n\t\tguageInterval:550,\r\n\t\t\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\tmodel: \"\",\t\r\n\t\tdesc: \"\",\t\r\n\t\tports: 4,\t\r\n\t\titv: 2, \t\r\n\t\t\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = m_str.reload;\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = m_str.refresh;\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = m_str.back;\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\terrBack: function(errno, dir) {\r\n\t\t\t$.clearAsync();\r\n\t\t\tclick = \"$.addLoading(this, 500, function(){$.loadMain(dir)})\";\r\n\t\t\tvalue = m_str.back;\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\r\n\t\tloadPage: function(id, path, hook1, hook2) {\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\tid, true, hook1,\r\n\t\t\t\tfunction(){if (bFile) $.trans(); if (hook2) hook2();}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.loadPage(\r\n\t\t\t\t\"main\",\r\n\t\t\t\tpath,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='帮 助' />\");\r\n\t\t},\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='返 回' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n\t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t});\r\n\t\t},\r\n\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, frame, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$.fixTbl();\r\n\t\t\t}\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t\t$.each(document.getElementsByTagName(\"div\"), function(){\r\n\t\t\t\tif (this.offsetWidth != 0 && ($.hasClass(this, \"thead\") || $.hasClass(this, \"tbody\")))\r\n\t\t\t\t\tthis.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(val.length > index)\r\n\t\t\t{\r\n\t\t\t\tif(val.length > (index+num))\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index, index+num);\r\n\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\tindex += num;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index,val.length);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t \t\t\r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif (val.length > num)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < num; i++)\r\n\t\t\t\t\ttmpStr += val.charAt(i);\r\n\t\t\t\ttmpStr += \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0);\r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\t\t\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto_interval:0,\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\t$.auto_interval = interval;\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, $.auto_interval, 1, args, hook, id);\r\n\t\t\t}, $.auto_interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t\r\n\t\t\tvar completed = false;\r\n\t\t\tvar count = 0;\r\n\t\t\tvar count_max = 5000/interval;\r\n\t\t\tvar retTmp = false;\r\n\t\t\t\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tif(!completed || !retTmp.softwareVersion)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(args[2] >= (args[3]/2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count++ > count_max)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\t\tretTmp = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"softwareVersion\", \"hardwareVersion\", \"upTime\"]);\r\n\t\t\t\t\t\t\t$.exe(function(ret){\r\n\t\t\t\t\t\t\t\tif(!ret)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcompleted = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.auto_interval = 5000/step;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t\r\n\t\tds: [],\t\t\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t\r\n\t\t\t\tcase ACT_GS:\t\t\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\r\n\t\t\t\tindex++;\r\n\t\t\t}\t\t\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\t\t\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\talert($.turnqss(str));\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((ip & ~mask) == ~mask || (ip & ~mask) == 0) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\thtmlEncodeStr: function(str) {\r\n\t\t\tif(str ==undefined || str==\"\")   return str;\r\n\t\t\treturn str.replace(/[<>&\"]/g,function(c){return {'<':'&lt;','>':'&gt;','&':'&amp;','\"':'&quot;'}[c];});\r\n\t\t},\r\n\r\n\t\treverseStr: function(str){\r\n\t\t\tvar newStr=\"\";\r\n\t\t\tfor(var i = 0; i < str.length; i++ )\r\n\t\t\t{\r\n\t\t\t\tnewStr += str.substring(str.length-1-i, str.length-i);\r\n\t\t\t}\r\n\t\t\treturn newStr;\r\n\t\t},\r\n\r\n\t\tformatNum:function(num){\r\n\t\t\tvar numNew = $.reverseStr(num.toString());\r\n\t\t\tif(numNew.length > 3)\r\n\t\t\t{\r\n\t\t\t\tnumNew = numNew.replace(/(\\d\\d\\d)/g, function($0,$1){return $1+\",\"});\r\n\t\t\t}\r\n\t\t\tnumNew = (numNew.charAt(numNew.length-1) == ',')? numNew.substring(0, numNew.length-1):numNew;\r\n\t\t\treturn $.reverseStr(numNew);\r\n\t\t},\r\n\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tval = $.turnqss(val);\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif ($.hasClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//$.removeClass(elem, \"T\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\ttrans: function() {\r\n\t\t\tvar elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\"];\r\n\t\t\tvar strs = n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]];\r\n\t\t\tfor (var i in strs) {\r\n\t\t\t\t$.chgElem(document.getElementById(i), strs[i]);\r\n\t\t\t}\r\n\t\t\tvar main = $.id(\"main\");\r\n\t\t\t$.each(elems, function(){\r\n\t\t\t\t$.each(main.getElementsByTagName(this), function() {\r\n\t\t\t\t\tvar tag;\r\n\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\ttag = this.className.match(/\\bT_(\\w+)\\b/);\r\n\t\t\t\t\tif (tag && tag[1]) {\r\n\t\t\t\t\t\tif (s_str[tag[1]]) $.chgElem(this, s_str[tag[1]]);\r\n\t\t\t\t\t\telse if (m_str[tag[1]]) $.chgElem(this, m_str[tag[1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"./css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"./css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"./css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"./css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\t\t\t\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\t\t\t\r\n\t\t$.exe();\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"PON\"};\r\n\t\t}\r\n\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\t\t\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t})();\r\n})();"
      }
    }, {
      "location" : {
        "uri" : "lib_5.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 61
      },
      "contents" : {
        "text" : "var ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\nvar ACT_OP_L2TP_CONN = \"ACT_L2TP_CONN\";\r\nvar ACT_OP_L2TP_DISCONN = \"ACT_L2TP_DISCONN\";\r\nvar ACT_OP_PPTP_CONN = \"ACT_PPTP_CONN\";\r\nvar ACT_OP_PPTP_DISCONN = \"ACT_PPTP_DISCONN\";\r\nvar ACT_OP_WAN_TYPE_DETECT = \"ACT_WAN_TYPE_DETECT\";\r\nvar ACT_OP_BPA_CONN = \"ACT_BPA_CONN\";\r\nvar ACT_OP_BPA_DISCONN = \"ACT_BPA_DISCONN\";\r\nvar ACT_OP_IPPING = \"ACT_OP_IPPING\";\r\nvar ACT_OP_TRACERT = \"ACT_OP_TRACERT\";\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI;\r\n\r\nvar regionParam = [\r\n\t{\"switchSpec\":\"DEFAULT_NO_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_MEXICO_SPEC\",\"region\":\"es_MX\"}, \r\n\t{\"switchSpec\":\"INCLUDE_CANADA_SPEC\",\"region\":\"fr_FR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_JAPAN_SPEC\",\"region\":\"jp_JP\"}, \r\n\t{\"switchSpec\":\"INCLUDE_KOREA_SPEC\",\"region\":\"ko_KR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_PL_SPEC\",\"region\":\"pl_PL\"}, \r\n\t{\"switchSpec\":\"INCLUDE_BR_SPEC\",\"region\":\"pt_BR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_ROMANIA_SPEC\",\"region\":\"ro_RO\"}, \r\n\t{\"switchSpec\":\"INCLUDE_RUSSIA_SPEC\",\"region\":\"ru_RU\"}, \r\n\t{\"switchSpec\":\"INCLUDE_US_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_VN_SPEC\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_VIETNAM_FPT\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_TW_SPEC\",\"region\":\"zh_TW\"},\r\n\t{\"switchSpec\":\"INCLUDE_ES_SPEC\",\"region\":\"es_MX\"}\r\n];\r\n\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI = 71017;\r\n\r\n(function(){\r\nvar window = this,\r\n\tundefined;\r\n\t\r\n\twindow.$ = {\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: false,\r\n\t\tqss: false,\r\n\t\tsysMode:\"DSL\",\r\n\t\tguageInterval:700,\r\n\t\t\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\tmodel: \"\",\t\r\n\t\tdesc: \"\",\t\r\n\t\tports: 4,\t\r\n\t\titv: 2, \t\r\n\t\t\r\n\t\ttmpval:{},\r\n\t\t\r\n\t\t/*********************for multilang**********************/\r\n\t\tDEFAULT_LAN_TYPE: \"en_US\",\r\n\t\tSTR_JS:\"./locale/%LAN_TYPE%/str.js\",\r\n\t\tERR_JS:\"./locale/%LAN_TYPE%/err.js\",\r\n\t\tHELP_JS:\"./locale/%LAN_TYPE%/help.js\",\r\n\t\tcountry: \"en_US\",\r\n\t\t/*****************************************************/\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!elem)\r\n\t\t\t\treturn;\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\t\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n\t\t\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdeleteCookie: function(name) { \r\n\t\t\tvar LargeExpDate = new Date ();\r\n\t\t\tdocument.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n\t\t},\r\n\t\t\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(errno == ERR_NOT_ACCEPTED)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\twindow.location.reload();\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\tif(!$.id(id))\r\n\t\t\t\treturn ;\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = m_str.reload;\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = m_str.refresh;\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = m_str.back;\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\t/* back to previous \"dir\" page */\r\n\t\terrBack: function(errno, dir) {\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.loadMain(dir)})\";\r\n\t\t\tvar value = m_str.back;\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadPage: function(id, path, hook1, hook2) {\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\tid, true, hook1,\r\n\t\t\t\tfunction(){if (bFile) $.trans(); if (hook2) hook2();}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.loadPage(\r\n\t\t\t\t\"main\",\r\n\t\t\t\tpath,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='help />\");\r\n\t\t},\r\n\r\n\t\tloadHelpFrame: function(path) {\r\n\t\t\tif(!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t\r\n\t\t\tif(window.parent !== window) {\r\n\t\t\t\tif (window.parent.topFrame.hl !== path) {\r\n\t\t\t        window.parent.topFrame.hl = path;\r\n\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"GET\",\r\n\t\t\t\t\t\turl: path,\r\n\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\tsuccess:function(data)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.write(data);\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.close();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror:function(errno)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    },\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='back' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n \t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t}); \r\n\t\t},\r\n\t\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, frame, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefreshWindow: function(domain, port, frame, page) {\r\n        \t\tif ($.local) location.reload(true);\r\n        \t\telse {\r\n            \t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            \t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n        \t\t}\r\n    \t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\t/*\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\t\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$.fixTbl();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t\t$.each(document.getElementsByTagName(\"div\"), function(){\r\n\t\t\t\tif (this.offsetWidth != 0 && ($.hasClass(this, \"thead\") || $.hasClass(this, \"tbody\")))\r\n\t\t\t\t\tthis.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could not be edited, show the whole string. \r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(val.length > index)\r\n\t\t\t{\r\n\t\t\t\tif(val.length > (index+num))\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index, index+num);\r\n\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\tindex += num;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index,val.length);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could be edited,  show the string with ellipsis. \r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif (val.length > num)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < num; i++)\r\n\t\t\t\t\ttmpStr += val.charAt(i);\r\n\t\t\t\ttmpStr += \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t\t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = true;\r\n\t \t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0); \r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t\t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = false;\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n\t\t\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto_interval:0,\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\t$.auto_interval = interval;\r\n\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, $.auto_interval, 1, args, hook, id);\r\n\t\t\t}, $.auto_interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t\r\n\t\t\tvar completed = false;\r\n\t\t\tvar count = 0;\r\n\t\t\tvar count_max = 5000/interval;\r\n\t\t\tvar retTmp = false;\r\n\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tif(!completed)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(args[2] >= (args[3]/2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count++ > count_max)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\t\ttype = \"GET\";\r\n\t\t\t\t\t\t\turl = \"/main/status.htm?_=\" + (+new Date());\r\n\t\t\t\t\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\t\t\t\txhr.open(type, url, true);\r\n\t\t\t\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\t\t\t\t\txhr.onreadystatechange = function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (xhr.readyState == 4)\r\n\t\t\t\t\t\t\t\t\tcompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\txhr.send(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.auto_interval = 5000/step;\t\r\n\t\t\t\t}\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t\r\n\t\tds: [],\t\t\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t\r\n\t\t\t\tcase ACT_GS:\t\t\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\r\n\t\t\t\tindex++;\r\n\t\t\t}\t\t\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\talert($.turnqss(str));\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((mask^0xfffffffe) && ((ip & ~mask) == ~mask || (ip & ~mask) == 0)) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\thtmlEncodeStr: function(str) {\r\n\t\t\tif(str ==undefined || str==\"\")   return str;\r\n\t\t\treturn str.replace(/[<>&\"]/g,function(c){return {'<':'&lt;','>':'&gt;','&':'&amp;','\"':'&quot;'}[c];});\r\n\t\t},\r\n\r\n\t\treverseStr: function(str){\r\n\t\t\tvar newStr=\"\";\r\n\t\t\tfor(var i = 0; i < str.length; i++ )\r\n\t\t\t{\r\n\t\t\t\tnewStr += str.substring(str.length-1-i, str.length-i);\r\n\t\t\t}\r\n\t\t\treturn newStr;\r\n\t\t},\r\n\t\t\r\n\t\tformatNum:function(num){\r\n\t\t\tvar numNew = $.reverseStr(num.toString());\r\n\t\t\tif(numNew.length > 3)\r\n\t\t\t{\r\n\t\t\t\tnumNew = numNew.replace(/(\\d\\d\\d)/g, function($0,$1){return $1+\",\"});\r\n\t\t\t}\r\n\t\t\tnumNew = (numNew.charAt(numNew.length-1) == ',')? numNew.substring(0, numNew.length-1):numNew;\r\n\t\t\treturn $.reverseStr(numNew);\r\n\t\t},\r\n\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tval = $.turnqss(val);\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif ($.hasClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t//for localization\r\n\t\t\t\t//$.removeClass(elem, \"T\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCountry:function(curVersion){\r\n            for (var i = 0; i < regionParam.length; i++)\r\n\t\t\t{\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(eval(regionParam[i].switchSpec) == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is current localization !!\");\r\n\t\t\t\t\t\t$.country = regionParam[i].region;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is not existed !!\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        },\r\n\t\t/* multilang 多语言框架  */\r\n\t\tscriptAdd: function(id, src) {\r\n\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\tscript.type = \"text/javascript\";\r\n\t\t\tscript.id = id ;\r\n\t\t\tscript.src = src;\r\n\r\n\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\tscript.onreadystatechange = function() { \r\n\t\t\t\tvar r = script.readyState; \r\n\t\t\t\tif (r == 'loaded' || r == 'complete') { \r\n\t\t\t\t\tscript.onreadystatechange = null; \r\n\t\t\t$.head.removeChild(script);\r\n\t\t\t\t} \r\n\t\t\t};\r\n\t\t\tscript.onload = function() { \r\n\t\t\t\t$.head.removeChild(script); \r\n\t\t\t}; \r\n\t\t\r\n\t\t}, \r\n\t\t\r\n\t\t\r\n\t\ttranstxtChangeType: function(region){\r\n\t\t\tvar lanType = region || this.DEFAULT_LAN_TYPE;\r\n\t\t\t//this.country = lanType;\r\n\t\t\tvar STR_JS = this.STR_JS.replace(\"%LAN_TYPE%\", lanType);\r\n\t\t\tvar ERR_JS = this.ERR_JS.replace(\"%LAN_TYPE%\", lanType);\r\n\t\t\tvar HELP_JS = this.HELP_JS.replace(\"%LAN_TYPE%\", lanType);\r\n\t\t\r\n\t\t\t$.remove($.id(\"str-js\"));\r\n\t\t\t$.remove($.id(\"err-js\"));\r\n\t\t\t$.remove($.id(\"help-js\"));\r\n\t\t\t\r\n\t\t\t$.scriptAdd( \"str-js\" , STR_JS);\r\n\t\t\t$.scriptAdd( \"err-js\" , ERR_JS);\r\n\t\t\t$.scriptAdd( \"help-js\", HELP_JS);\r\n\t   },\r\n\t   \r\n\t   transtxtGet: function(){\r\n\t\t   \tvar STR_JS = this.ERR_JS;\r\n\t\t\tvar ERR_JS  =  this.ERR_JS;\r\n\t\t\tvar HELP_JS = this.HELP_JS;\r\n\t\t\r\n\t\t\t$.transtxtChangeType($.country);\r\n\t\t   \r\n\t   },\r\n\t \r\n\t    transtxtSet: function(region){\r\n\t\t\tvar lanType = region || this.DEFAULT_LAN_TYPE;\r\n\t\t\tthis.country = lanType;\r\n\t\t\r\n\t\t\t$.transtxtChangeType($.country);\r\n\t   },\r\n\t\ttrans: function() {\r\n\t\t\tvar elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\"];\r\n\t\t\tvar strs = n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]];\r\n\t\t\tfor (var i in strs) {\r\n\t\t\t\t$.chgElem(document.getElementById(i), strs[i]);\r\n\t\t\t}\r\n\t\t\tvar main = $.id(\"main\");\r\n\t\t\t$.each(elems, function(){\r\n\t\t\t\t$.each(main.getElementsByTagName(this), function() {\r\n\t\t\t\t\tvar tag;\r\n\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\ttag = this.className.match(/\\bT_(\\w+)\\b/);\r\n\t\t\t\t\tif (tag && tag[1]) {\r\n\t\t\t\t\t\tif (s_str[tag[1]]) $.chgElem(this, s_str[tag[1]]);\r\n\t\t\t\t\t\telse if (m_str[tag[1]]) $.chgElem(this, m_str[tag[1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\ttransHelp: function(helpUrl) {\r\n\t\t\tvar title = (window.parent.topFrame.hl && window.parent.topFrame.hl.match(/(\\w+)\\.htm$/)[1]) || helpUrl.match(/(\\w+)\\.htm$/)[1];\r\n\t\t\tvar tags = Array(\"h1\", \"p\", \"li\", \"td\");\r\n\t\t\tfor (var k in tags)\r\n\t\t\t{\r\n\t\t\t\telem = window.parent.helpFrame.document.getElementsByTagName(tags[k]);\r\n\t\t\t\tfor (var i=0; i<elem.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name_str[title][elem[i].className])\r\n\t\t\t\t\t\telem[i].innerHTML = name_str[title][elem[i].className];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\t/*\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"/css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"/css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"/css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"/css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t*/\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t/*$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\", \"X_TP_ProductVersion\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\tvar langObj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"X_TP_SupportedLanguages\", \"X_TP_CurrentLanguage\", \"X_TP_LanguageSetByUser\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t{\r\n\t\t\tif(INCLUDE_MULTIMODE)\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, MULTIMODE, null, null, [\"mode\"]);\r\n\t\t\telse\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\t\t}\r\n\t\t\t\r\n\t\t$.act(ACT_CGI, \"/cgi/info\");\r\n\t\t\r\n\t\t$.exe();\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"DSL\"};\r\n\t\t}\r\n\r\n\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t$.fd = infoobj.X_TP_isFD;\r\n\t\t\r\n\t\t$.setCountry(infoobj.X_TP_ProductVersion);\r\n\t\t\r\n\t\tif(INCLUDE_MULTI_LANGUAGE_Q)\r\n\t\t{\t\r\n\t\t\tvar selectLangItem =  langObj.X_TP_CurrentLanguage || $.country ; \r\n\t\t\t$.country = langObj.X_TP_CurrentLanguage || $.country;\r\n\t\t\t//if($.curPage != \"login.htm\" )\r\n\t\t\tif(document.cookie != \"\" )\r\n\t\t\t\t$.transtxtSet(selectLangItem);\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t\t\r\n\t})();\r\n})();\r\n"
      }
    }, {
      "location" : {
        "uri" : "lib_6.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 62
      },
      "contents" : {
        "text" : "var ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\nvar ACT_OP_L2TP_CONN = \"ACT_L2TP_CONN\";\r\nvar ACT_OP_L2TP_DISCONN = \"ACT_L2TP_DISCONN\";\r\nvar ACT_OP_PPTP_CONN = \"ACT_PPTP_CONN\";\r\nvar ACT_OP_PPTP_DISCONN = \"ACT_PPTP_DISCONN\";\r\nvar ACT_OP_WAN_TYPE_DETECT = \"ACT_WAN_TYPE_DETECT\";\r\nvar ACT_OP_BPA_CONN = \"ACT_BPA_CONN\";\r\nvar ACT_OP_BPA_DISCONN = \"ACT_BPA_DISCONN\";\r\nvar ACT_OP_IPPING = \"ACT_OP_IPPING\";\r\nvar ACT_OP_TRACERT = \"ACT_OP_TRACERT\";\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI;\r\n\r\nvar regionParam = [\r\n\t{\"switchSpec\":\"DEFAULT_NO_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_MEXICO_SPEC\",\"region\":\"es_MX\"}, \r\n\t{\"switchSpec\":\"INCLUDE_CANADA_SPEC\",\"region\":\"fr_FR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_JAPAN_SPEC\",\"region\":\"jp_JP\"}, \r\n\t{\"switchSpec\":\"INCLUDE_KOREA_SPEC\",\"region\":\"ko_KR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_PL_SPEC\",\"region\":\"pl_PL\"}, \r\n\t{\"switchSpec\":\"INCLUDE_BR_SPEC\",\"region\":\"pt_BR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_ROMANIA_SPEC\",\"region\":\"ro_RO\"}, \r\n\t{\"switchSpec\":\"INCLUDE_RUSSIA_SPEC\",\"region\":\"ru_RU\"}, \r\n\t{\"switchSpec\":\"INCLUDE_US_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_VN_SPEC\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_VIETNAM_FPT\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_TW_SPEC\",\"region\":\"zh_TW\"},\r\n\t{\"switchSpec\":\"INCLUDE_ES_SPEC\",\"region\":\"es_MX\"}\r\n];\r\n\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI = 71017;\r\n\r\n(function(){\r\nvar window = this,\r\n\tundefined;\r\n\t\r\n\twindow.$ = {\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: false,\r\n\t\tqss: false,\r\n\t\tsysMode:\"DSL\",\r\n\t\tguageInterval:700,\r\n\t\t\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\tmodel: \"\",\t\r\n\t\tdesc: \"\",\t\r\n\t\tports: 4,\t\r\n\t\titv: 2, \t\r\n\t\t\r\n\t\ttmpval:{},\r\n\t\t\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!elem)\r\n\t\t\t\treturn;\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\t\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n\t\t\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdeleteCookie: function(name) { \r\n\t\t\tvar LargeExpDate = new Date ();\r\n\t\t\tdocument.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n\t\t},\r\n\t\t\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(errno == ERR_NOT_ACCEPTED)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\twindow.location.reload();\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\tif(!$.id(id))\r\n\t\t\t\treturn ;\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = m_str.reload;\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = m_str.refresh;\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = m_str.back;\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\t/* back to previous \"dir\" page */\r\n\t\terrBack: function(errno, dir) {\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.loadMain(dir)})\";\r\n\t\t\tvar value = m_str.back;\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadPage: function(id, path, hook1, hook2) {\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\tid, true, hook1,\r\n\t\t\t\tfunction(){if (bFile) $.trans(); if (hook2) hook2();}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.loadPage(\r\n\t\t\t\t\"main\",\r\n\t\t\t\tpath,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='help />\");\r\n\t\t},\r\n\r\n\t\tloadHelpFrame: function(path) {\r\n\t\t\tif(!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t\r\n\t\t\tif(window.parent !== window) {\r\n\t\t\t\tif (window.parent.topFrame.hl !== path) {\r\n\t\t\t        window.parent.topFrame.hl = path;\r\n\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"GET\",\r\n\t\t\t\t\t\turl: path,\r\n\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\tsuccess:function(data)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.write(data);\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.close();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror:function(errno)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    },\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='back' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n \t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t}); \r\n\t\t},\r\n\t\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, frame, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefreshWindow: function(domain, port, frame, page) {\r\n        \t\tif ($.local) location.reload(true);\r\n        \t\telse {\r\n            \t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            \t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n        \t\t}\r\n    \t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\t/*\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\t\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$.fixTbl();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t\t$.each(document.getElementsByTagName(\"div\"), function(){\r\n\t\t\t\tif (this.offsetWidth != 0 && ($.hasClass(this, \"thead\") || $.hasClass(this, \"tbody\")))\r\n\t\t\t\t\tthis.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could not be edited, show the whole string. \r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(val.length > index)\r\n\t\t\t{\r\n\t\t\t\tif(val.length > (index+num))\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index, index+num);\r\n\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\tindex += num;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index,val.length);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could be edited,  show the string with ellipsis. \r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif (val.length > num)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < num; i++)\r\n\t\t\t\t\ttmpStr += val.charAt(i);\r\n\t\t\t\ttmpStr += \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t \t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = true;\r\n\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0); \r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t \t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = false;\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n\t\t\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto_interval:0,\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\t$.auto_interval = interval;\r\n\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, $.auto_interval, 1, args, hook, id);\r\n\t\t\t}, $.auto_interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t\r\n\t\t\tvar completed = false;\r\n\t\t\tvar count = 0;\r\n\t\t\tvar count_max = 5000/interval;\r\n\t\t\tvar retTmp = false;\r\n\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tif(!completed)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(args[2] >= (args[3]/2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count++ > count_max)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\t\ttype = \"GET\";\r\n\t\t\t\t\t\t\turl = \"/main/status.htm?_=\" + (+new Date());\r\n\t\t\t\t\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\t\t\t\txhr.open(type, url, true);\r\n\t\t\t\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\t\t\t\t\txhr.onreadystatechange = function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (xhr.readyState == 4)\r\n\t\t\t\t\t\t\t\t\tcompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\txhr.send(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.auto_interval = 5000/step;\t\r\n\t\t\t\t}\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t\r\n\t\tds: [],\t\t\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t\r\n\t\t\t\tcase ACT_GS:\t\t\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\r\n\t\t\t\tindex++;\r\n\t\t\t}\t\t\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\talert($.turnqss(str));\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((mask^0xfffffffe) && ((ip & ~mask) == ~mask || (ip & ~mask) == 0)) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\thtmlEncodeStr: function(str) {\r\n\t\t\tif(str ==undefined || str==\"\")   return str;\r\n\t\t\treturn str.replace(/[<>&\"]/g,function(c){return {'<':'&lt;','>':'&gt;','&':'&amp;','\"':'&quot;'}[c];});\r\n\t\t},\r\n\r\n\t\treverseStr: function(str){\r\n\t\t\tvar newStr=\"\";\r\n\t\t\tfor(var i = 0; i < str.length; i++ )\r\n\t\t\t{\r\n\t\t\t\tnewStr += str.substring(str.length-1-i, str.length-i);\r\n\t\t\t}\r\n\t\t\treturn newStr;\r\n\t\t},\r\n\t\t\r\n\t\tformatNum:function(num){\r\n\t\t\tvar numNew = $.reverseStr(num.toString());\r\n\t\t\tif(numNew.length > 3)\r\n\t\t\t{\r\n\t\t\t\tnumNew = numNew.replace(/(\\d\\d\\d)/g, function($0,$1){return $1+\",\"});\r\n\t\t\t}\r\n\t\t\tnumNew = (numNew.charAt(numNew.length-1) == ',')? numNew.substring(0, numNew.length-1):numNew;\r\n\t\t\treturn $.reverseStr(numNew);\r\n\t\t},\r\n\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tval = $.turnqss(val);\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif ($.hasClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t//for localization\r\n\t\t\t\t//$.removeClass(elem, \"T\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCountry:function(curVersion){\r\n            for (var i = 0; i < regionParam.length; i++)\r\n\t\t\t{\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(eval(regionParam[i].switchSpec) == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is current localization !!\");\r\n\t\t\t\t\t\t$.country = regionParam[i].region;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is not existed !!\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        },\r\n\t\ttrans: function() {\r\n\t\t\tvar elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\"];\r\n\t\t\tvar strs = n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]];\r\n\t\t\tfor (var i in strs) {\r\n\t\t\t\t$.chgElem(document.getElementById(i), strs[i]);\r\n\t\t\t}\r\n\t\t\tvar main = $.id(\"main\");\r\n\t\t\t$.each(elems, function(){\r\n\t\t\t\t$.each(main.getElementsByTagName(this), function() {\r\n\t\t\t\t\tvar tag;\r\n\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\ttag = this.className.match(/\\bT_(\\w+)\\b/);\r\n\t\t\t\t\tif (tag && tag[1]) {\r\n\t\t\t\t\t\tif (s_str[tag[1]]) $.chgElem(this, s_str[tag[1]]);\r\n\t\t\t\t\t\telse if (m_str[tag[1]]) $.chgElem(this, m_str[tag[1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ttransHelp: function(helpUrl) {\r\n\t\t\tvar title = (window.parent.topFrame.hl && window.parent.topFrame.hl.match(/(\\w+)\\.htm$/)[1]) || helpUrl.match(/(\\w+)\\.htm$/)[1];\r\n\t\t\tvar tags = Array(\"h1\", \"p\", \"li\", \"td\");\r\n\t\t\tfor (var k in tags)\r\n\t\t\t{\r\n\t\t\t\telem = window.parent.helpFrame.document.getElementsByTagName(tags[k]);\r\n\t\t\t\tfor (var i=0; i<elem.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name_str[title][elem[i].className])\r\n\t\t\t\t\t\telem[i].innerHTML = name_str[title][elem[i].className];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\t/*\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"/css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"/css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"/css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"/css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t*/\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t/*$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\", \"X_TP_ProductVersion\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t{\r\n\t\t\tif(INCLUDE_MULTIMODE)\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, MULTIMODE, null, null, [\"mode\"]);\r\n\t\t\telse\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\t\t}\r\n\t\t\t\r\n\t\t$.act(ACT_CGI, \"/cgi/info\");\r\n\t\t\r\n\t\t$.exe();\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"DSL\"};\r\n\t\t}\r\n\r\n\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t$.fd = infoobj.X_TP_isFD;\r\n\t\t\r\n\t\t$.setCountry(infoobj.X_TP_ProductVersion);\r\n\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t\t\r\n\t})();\r\n})();\r\n"
      }
    }, {
      "location" : {
        "uri" : "lib_7.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 63
      },
      "contents" : {
        "text" : "var ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\nvar ACT_OP_L2TP_CONN = \"ACT_L2TP_CONN\";\r\nvar ACT_OP_L2TP_DISCONN = \"ACT_L2TP_DISCONN\";\r\nvar ACT_OP_PPTP_CONN = \"ACT_PPTP_CONN\";\r\nvar ACT_OP_PPTP_DISCONN = \"ACT_PPTP_DISCONN\";\r\nvar ACT_OP_WAN_TYPE_DETECT = \"ACT_WAN_TYPE_DETECT\";\r\nvar ACT_OP_BPA_CONN = \"ACT_BPA_CONN\";\r\nvar ACT_OP_BPA_DISCONN = \"ACT_BPA_DISCONN\";\r\nvar ACT_OP_IPPING = \"ACT_OP_IPPING\";\r\nvar ACT_OP_TRACERT = \"ACT_OP_TRACERT\";\r\n\r\nvar regionParam = [\r\n\t{\"switchSpec\":\"DEFAULT_NO_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_MEXICO_SPEC\",\"region\":\"es_MX\"}, \r\n\t{\"switchSpec\":\"INCLUDE_CANADA_SPEC\",\"region\":\"fr_FR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_JAPAN_SPEC\",\"region\":\"jp_JP\"}, \r\n\t{\"switchSpec\":\"INCLUDE_KOREA_SPEC\",\"region\":\"ko_KR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_PL_SPEC\",\"region\":\"pl_PL\"}, \r\n\t{\"switchSpec\":\"INCLUDE_BR_SPEC\",\"region\":\"pt_BR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_ROMANIA_SPEC\",\"region\":\"ro_RO\"}, \r\n\t{\"switchSpec\":\"INCLUDE_RUSSIA_SPEC\",\"region\":\"ru_RU\"}, \r\n\t{\"switchSpec\":\"INCLUDE_US_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_VN_SPEC\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_VIETNAM_FPT\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_TW_SPEC\",\"region\":\"zh_TW\"},\r\n\t{\"switchSpec\":\"INCLUDE_ES_SPEC\",\"region\":\"es_MX\"}\r\n];\r\n\r\n(function(){\r\nvar window = this,\r\n\tundefined;\r\n\t\r\n\twindow.$ = {\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: false,\r\n\t\tqss: false,\r\n\t\tsysMode:\"DSL\",\r\n\t\tguageInterval:700,\r\n\t\t\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\tmodel: \"\",\t\r\n\t\tdesc: \"\",\t\r\n\t\tports: 4,\t\r\n\t\titv: 2, \t\r\n\t\t\r\n\t\ttmpval:{},\r\n\t\t\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!elem)\r\n\t\t\t\treturn;\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\t\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n\t\t\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdeleteCookie: function(name) { \r\n\t\t\tvar LargeExpDate = new Date ();\r\n\t\t\tdocument.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n\t\t},\r\n\t\t\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(errno == ERR_NOT_ACCEPTED)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\twindow.location.reload();\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = m_str.reload;\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = m_str.refresh;\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = m_str.back;\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\t/* back to previous \"dir\" page */\r\n\t\terrBack: function(errno, dir) {\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.loadMain(dir)})\";\r\n\t\t\tvar value = m_str.back;\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadPage: function(id, path, hook1, hook2) {\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\tid, true, hook1,\r\n\t\t\t\tfunction(){if (bFile) $.trans(); if (hook2) hook2();}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.loadPage(\r\n\t\t\t\t\"main\",\r\n\t\t\t\tpath,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='help />\");\r\n\t\t},\r\n\r\n\t\tloadHelpFrame: function(path) {\r\n\t\t\tif(!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t\r\n\t\t\tif(window.parent !== window) {\r\n\t\t\t\tif (window.parent.topFrame.hl !== path) {\r\n\t\t\t        window.parent.topFrame.hl = path;\r\n\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"GET\",\r\n\t\t\t\t\t\turl: path,\r\n\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\tsuccess:function(data)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.write(data);\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.close();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror:function(errno)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    },\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='back' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n \t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t}); \r\n\t\t},\r\n\t\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, frame, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefreshWindow: function(domain, port, frame, page) {\r\n        \t\tif ($.local) location.reload(true);\r\n        \t\telse {\r\n            \t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            \t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n        \t\t}\r\n    \t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\t/*\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\t\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$.fixTbl();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t\t$.each(document.getElementsByTagName(\"div\"), function(){\r\n\t\t\t\tif (this.offsetWidth != 0 && ($.hasClass(this, \"thead\") || $.hasClass(this, \"tbody\")))\r\n\t\t\t\t\tthis.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could not be edited, show the whole string. \r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(val.length > index)\r\n\t\t\t{\r\n\t\t\t\tif(val.length > (index+num))\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index, index+num);\r\n\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\tindex += num;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index,val.length);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could be edited,  show the string with ellipsis. \r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif (val.length > num)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < num; i++)\r\n\t\t\t\t\ttmpStr += val.charAt(i);\r\n\t\t\t\ttmpStr += \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t\t\tif( window.parent.curlock != undefined  )\r\n\t\t\t\twindow.parent.curlock = true;\r\n\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0); \r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t\t\tif( window.parent.curlock != undefined  )\r\n\t\t\t\twindow.parent.curlock = false;\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n\t\t\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto_interval:0,\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\t$.auto_interval = interval;\r\n\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, $.auto_interval, 1, args, hook, id);\r\n\t\t\t}, $.auto_interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t\r\n\t\t\tvar completed = false;\r\n\t\t\tvar count = 0;\r\n\t\t\tvar count_max = 5000/interval;\r\n\t\t\tvar retTmp = false;\r\n\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tif(!completed)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(args[2] >= (args[3]/2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count++ > count_max)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\t\ttype = \"GET\";\r\n\t\t\t\t\t\t\turl = \"/main/status.htm?_=\" + (+new Date());\r\n\t\t\t\t\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\t\t\t\txhr.open(type, url, true);\r\n\t\t\t\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\t\t\t\t\txhr.onreadystatechange = function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (xhr.readyState == 4)\r\n\t\t\t\t\t\t\t\t\tcompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\txhr.send(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.auto_interval = 5000/step;\t\r\n\t\t\t\t}\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t\r\n\t\tds: [],\t\t\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t\r\n\t\t\t\tcase ACT_GS:\t\t\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\r\n\t\t\t\tindex++;\r\n\t\t\t}\t\t\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\talert($.turnqss(str));\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((mask^0xfffffffe) && ((ip & ~mask) == ~mask || (ip & ~mask) == 0)) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\thtmlEncodeStr: function(str) {\r\n\t\t\tif(str ==undefined || str==\"\")   return str;\r\n\t\t\treturn str.replace(/[<>&\"]/g,function(c){return {'<':'&lt;','>':'&gt;','&':'&amp;','\"':'&quot;'}[c];});\r\n\t\t},\r\n\r\n\t\treverseStr: function(str){\r\n\t\t\tvar newStr=\"\";\r\n\t\t\tfor(var i = 0; i < str.length; i++ )\r\n\t\t\t{\r\n\t\t\t\tnewStr += str.substring(str.length-1-i, str.length-i);\r\n\t\t\t}\r\n\t\t\treturn newStr;\r\n\t\t},\r\n\t\t\r\n\t\tformatNum:function(num){\r\n\t\t\tvar numNew = $.reverseStr(num.toString());\r\n\t\t\tif(numNew.length > 3)\r\n\t\t\t{\r\n\t\t\t\tnumNew = numNew.replace(/(\\d\\d\\d)/g, function($0,$1){return $1+\",\"});\r\n\t\t\t}\r\n\t\t\tnumNew = (numNew.charAt(numNew.length-1) == ',')? numNew.substring(0, numNew.length-1):numNew;\r\n\t\t\treturn $.reverseStr(numNew);\r\n\t\t},\r\n\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tval = $.turnqss(val);\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif ($.hasClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t//for localization\r\n\t\t\t\t//$.removeClass(elem, \"T\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCountry:function(curVersion){\r\n\t\t\tfor (var i = 0; i < regionParam.length; i++)\r\n\t\t\t{\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(eval(regionParam[i].switchSpec) == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is current localization !!\");\r\n\t\t\t\t\t\t$.country = regionParam[i].region;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is not existed !!\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\ttrans: function() {\r\n\t\t\tvar elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\"];\r\n\t\t\tvar strs = n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]];\r\n\t\t\tfor (var i in strs) {\r\n\t\t\t\t$.chgElem(document.getElementById(i), strs[i]);\r\n\t\t\t}\r\n\t\t\tvar main = $.id(\"main\");\r\n\t\t\t$.each(elems, function(){\r\n\t\t\t\t$.each(main.getElementsByTagName(this), function() {\r\n\t\t\t\t\tvar tag;\r\n\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\ttag = this.className.match(/\\bT_(\\w+)\\b/);\r\n\t\t\t\t\tif (tag && tag[1]) {\r\n\t\t\t\t\t\tif (s_str[tag[1]]) $.chgElem(this, s_str[tag[1]]);\r\n\t\t\t\t\t\telse if (m_str[tag[1]]) $.chgElem(this, m_str[tag[1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\ttransHelp: function(helpUrl) {\r\n\t\t\tvar title = (window.parent.topFrame.hl && window.parent.topFrame.hl.match(/(\\w+)\\.htm$/)[1]) || helpUrl.match(/(\\w+)\\.htm$/)[1];\r\n\t\t\tvar tags = Array(\"h1\", \"p\", \"li\", \"td\");\r\n\t\t\tfor (var k in tags)\r\n\t\t\t{\r\n\t\t\t\telem = window.parent.helpFrame.document.getElementsByTagName(tags[k]);\r\n\t\t\t\tfor (var i=0; i<elem.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name_str[title][elem[i].className])\r\n\t\t\t\t\t\telem[i].innerHTML = name_str[title][elem[i].className];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\t/*\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"/css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"/css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"/css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"/css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t*/\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t/*$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\", \"X_TP_ProductVersion\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\r\n\t\t$.act(ACT_CGI, \"/cgi/info\");\r\n\t\t\r\n\t\t$.exe();\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"DSL\"};\r\n\t\t}\r\n\r\n\t\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t$.fd = infoobj.X_TP_isFD;\r\n\t\t\r\n\t\t$.setCountry(infoobj.X_TP_ProductVersion);\r\n\t\t\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t\t\r\n\t})();\r\n})();\r\n"
      }
    }, {
      "location" : {
        "uri" : "lib_8.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 64
      },
      "contents" : {
        "text" : "var ACT_GET = 1;\r\nvar ACT_SET = 2;\r\nvar ACT_ADD = 3;\r\nvar ACT_DEL = 4;\r\nvar ACT_GL = 5;\r\nvar ACT_GS = 6;\r\nvar ACT_OP = 7;\r\nvar ACT_CGI = 8;\r\nvar ACT_SIG = 9;\r\n\r\nvar ACT_OP_REBOOT = \"ACT_REBOOT\";\r\nvar ACT_OP_FACTORY_RESET = \"ACT_FACTORY_RESET\";\r\nvar ACT_OP_DHCP_RENEW = \"ACT_DHCP_RENEW\";\r\nvar ACT_OP_DHCP_RELEASE = \"ACT_DHCP_RELEASE\";\r\nvar ACT_OP_PPP_CONN = \"ACT_PPP_CONN\";\r\nvar ACT_OP_PPP_DISCONN = \"ACT_PPP_DISCONN\";\r\nvar ACT_OP_WLAN_GET_NEW_PIN = \"ACT_WLAN_GET_NEW_PIN\";\r\nvar ACT_OP_WLAN_RESTORE_PIN = \"ACT_WLAN_RESTORE_PIN\";\r\nvar ACT_OP_WLAN_UPDATE_ASSOC = \"ACT_WLAN_UPDATE_ASSOC\";\r\nvar ACT_OP_WLAN_WPS_PBC = \"ACT_WLAN_WPS_PBC\";\r\nvar ACT_OP_WLAN_WPS_PIN = \"ACT_WLAN_WPS_PIN\";\r\nvar ACT_OP_WLAN_SCAN = \"ACT_WLAN_SCAN\";\r\nvar ACT_OP_NTP_REQUEST = \"ACT_NTP_REQUEST\";\r\nvar ACT_OP_DLNA_MANUAL_SCAN = \"ACT_DLNA_MANUAL_SCAN\";\r\nvar ACT_OP_L2TP_CONN = \"ACT_L2TP_CONN\";\r\nvar ACT_OP_L2TP_DISCONN = \"ACT_L2TP_DISCONN\";\r\nvar ACT_OP_PPTP_CONN = \"ACT_PPTP_CONN\";\r\nvar ACT_OP_PPTP_DISCONN = \"ACT_PPTP_DISCONN\";\r\nvar ACT_OP_WAN_TYPE_DETECT = \"ACT_WAN_TYPE_DETECT\";\r\nvar ACT_OP_BPA_CONN = \"ACT_BPA_CONN\";\r\nvar ACT_OP_BPA_DISCONN = \"ACT_BPA_DISCONN\";\r\nvar ACT_OP_IPPING = \"ACT_OP_IPPING\";\r\nvar ACT_OP_TRACERT = \"ACT_OP_TRACERT\";\r\nvar ERR_HTTP_ERR_CGI_INVALID_ANSI = 71017;\r\n\r\nvar regionParam = [\r\n\t{\"switchSpec\":\"DEFAULT_NO_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_MEXICO_SPEC\",\"region\":\"es_MX\"}, \r\n\t{\"switchSpec\":\"INCLUDE_CANADA_SPEC\",\"region\":\"fr_FR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_JAPAN_SPEC\",\"region\":\"jp_JP\"}, \r\n\t{\"switchSpec\":\"INCLUDE_KOREA_SPEC\",\"region\":\"ko_KR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_PL_SPEC\",\"region\":\"pl_PL\"}, \r\n\t{\"switchSpec\":\"INCLUDE_BR_SPEC\",\"region\":\"pt_BR\"}, \r\n\t{\"switchSpec\":\"INCLUDE_ROMANIA_SPEC\",\"region\":\"ro_RO\"}, \r\n\t{\"switchSpec\":\"INCLUDE_RUSSIA_SPEC\",\"region\":\"ru_RU\"}, \r\n\t{\"switchSpec\":\"INCLUDE_US_SPEC\",\"region\":\"en_US\"}, \r\n\t{\"switchSpec\":\"INCLUDE_VN_SPEC\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_VIETNAM_FPT\",\"region\":\"vi_VN\"},\r\n\t{\"switchSpec\":\"INCLUDE_TW_SPEC\",\"region\":\"zh_TW\"},\r\n\t{\"switchSpec\":\"INCLUDE_ES_SPEC\",\"region\":\"es_MX\"}\r\n];\r\n\r\nvar checkUrlTable = [\r\n\t{\"url\":\"/cgi_gdpr\", \"flag\":1},\r\n\t{\"url\":\"/cgi/log\", \"flag\":1},\r\n\t{\"url\":\"/cgi/route\", \"flag\":1},\r\n\t{\"url\":\"/frame/menu.cgi\", \"flag\":1}\r\n];\r\n\r\n(function(){\r\n\t$.extend({\r\n\t\tw: window,\r\n\t\td: document,\r\n\t\tc: function (obj) {\r\n\t\t\treturn document.createElement(obj);\r\n\t\t},\r\n\t\thead: document.getElementsByTagName(\"head\")[0],\r\n\t\tdiv: document.createElement(\"div\"),\r\n\t\tbak: document.createElement(\"div\"),\r\n\t\tret: 0,\r\n\t\t\r\n\t\tsim: false,\r\n\t\tparams: \"./js/local.js\",\r\n\t\tcn: false,\r\n\t\tqss: false,\r\n\t\tsysMode:\"DSL\",\r\n\t\tguageInterval:700,\r\n\t\t\r\n\t\tmagic: \"0y8nc5094yeyrnoq\",\r\n\t\tlocal: location.protocol == \"file:\",\r\n\t\tflag: navigator.appVersion.match(/MSIE/) ? parseInt(navigator.appVersion.match(/MSIE\\s(\\d)/)[1]) : 0,\r\n\t\t\t\r\n\t\tcurPage: undefined,\r\n\t\tmainParam: undefined,\r\n\t\tdiagParam: undefined,\r\n\t\tcoverParam: undefined,\r\n\t\taccStack: [],\r\n\t\t\r\n\t\tmodel: \"\",\t\r\n\t\tdesc: \"\",\t\r\n\t\tports: 4,\t\r\n\t\titv: 2, \t\r\n\t\t\r\n\t\ttmpval:{},\r\n\t\t\r\n\t\t/*********************for multilang**********************/\r\n\t\tDEFAULT_LAN_TYPE: \"en_US\",\r\n\t\tSTR_JS:\"./locale/%LAN_TYPE%/str.js\",\r\n\t\tERR_JS:\"./locale/%LAN_TYPE%/err.js\",\r\n\t\tHELP_JS:\"./locale/%LAN_TYPE%/help.js\",\r\n\t\tcountry: \"en_US\",\r\n\t\t/*****************************************************/\r\n\r\n\t\tee:\"\",\r\n\t\tnn:\"\",\r\n\t\tseq:\"\",\r\n\t\tsignaturehead: \"\",\r\n\t\tnewencryptorManager:{},\r\n\t\tIencryptor:{},\r\n\t\t/*\r\n\t\textend: function(target, options){\r\n\t\t\tfor (name in options)\r\n\t\t\t{\r\n\t\t\t\ttarget[name] = options[name];\r\n\t\t\t}\r\n\t\t\treturn target;\r\n\t\t},\r\n\t\t*/\r\n\t\tcheckUrlmatch: function(url){\r\n\t\t\t\r\n\t\t\tfor (var i = 0; i < checkUrlTable.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif(url.match(checkUrlTable[i].url) != null)\r\n\t\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\teach: function (elems, handle, argument) {\r\n\t\t\tvar l = elems.length;\r\n\t\t\tif (l === undefined) {\r\n\t\t\t\tfor (var obj in elems)\r\n\t\t\t\t\tif (handle.call(elems[obj], argument, obj) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\tif (handle.call(elems[i], argument, i) === false)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tchgChd: function(childs, handle)\r\n\t\t{\r\n\t\t\tvar tmp = $.mkArr(childs);\r\n\t\t\t$.each(tmp, function(){if (this.nodeType == 1) return handle.call(this);});\r\n\t\t\ttmp = null;\r\n\t\t},\r\n\t\t\r\n\t\tid: function (id) {\r\n\t\t\treturn $.d.getElementById(id);\r\n\t\t},\r\n\t\t\r\n\t\tmerge: function (arr1, arr2) {\r\n\t\t\tfor (var i = 0, l = arr2.length; i < l; i++)\r\n\t\t\t\tif (!$.inArray(arr2[i], arr1))\r\n\t\t\t\t\tarr1.push(arr2[i]);\r\n\t\t},\r\n\t\t\r\n\t\tmkArr: function(array) {\r\n\t\t\tif (!array) return [];\r\n\t\t\tvar ret = [];\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++)\r\n\t\t\t\tret[i] = array[i];\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tinArray: function(elem, elems) {\r\n\t\t\tfor ( var i = 0, l = elems.length; i < l; i++)\r\n\t\t\t\tif (elems[i] === elem)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\trealLen: function(str) {\r\n\t\t\tvar len = 0;\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++) {\r\n\t\t\t\tlen += str.charCodeAt(i) > 127 ? ($.cn ? 2 : 3) : 1;\r\n\t\t\t}\r\n\t\t\treturn len;\r\n\t\t},\r\n\t\t\r\n\t\tattach: function(elem, type, data, handler) {\r\n\t\t\tvar tmp;\r\n\t\t\tif (handler)\r\n\t\t\t\ttmp = data;\r\n\t\t\telse \r\n\t\t\t\thandler = data;\r\n\t\t\tvar handle = function (e) {\r\n\t\t\t\tvar event = event || e;\r\n\t\t\t\tvar ret = handler.call(elem, event, tmp);\r\n\t\t\t\treturn ret;\r\n\t\t\t};\r\n\t\t\tif (elem.addEventListener)\r\n\t\t\t\telem.addEventListener(type, handle, false);\r\n\t\t\telse if (elem.attachEvent)\r\n\t\t\t\telem.attachEvent(\"on\" + type, handle);\r\n\t\t},\r\n\t\t\r\n\t\thasClass: function(elem, className) {\r\n\t\t\treturn elem && $.inArray(className, (elem.className ? elem.className : \"\").split(/\\s+/));\r\n\t\t},\r\n\t\t\r\n\t\taddClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && !$.hasClass(elem, className))\r\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\r\n\t\t},\r\n\t\t\r\n\t\tremoveClass: function (elem, className) {\r\n\t\t\tif (elem && elem.nodeType == 1 && $.hasClass(elem, className)) {\r\n\t\t\t\telem.className = elem.className.replace(className, \"\");\r\n\t\t\t\telem.className = elem.className.replace(/\\s+/, \" \");\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\tcssFloat: function(elem, type) {\r\n\t\t\tvar floattype = (elem.style.cssFloat === undefined ? \"styleFloat\" : \"cssFloat\");\r\n\t\t\tif (type == \"left\" || type == \"right\" || type == \"none\")\r\n\t\t\t\telem.style[floattype] = type;\r\n\t\t\telse\r\n\t\t\t\treturn elem.style[floattype];\r\n\t\t},\r\n\r\n\t\topacity: function(elem, opacity) {\r\n\t\t\tif (!elem)\r\n\t\t\t\treturn;\r\n\t\t\tif (!opacity)\r\n\t\t\t\topacity = 0;\r\n\t\t\tif (elem.style.opacity === undefined)\t\r\n\t\t\t{\r\n\t\t\t\telem.zoom = 1;\r\n\t\t\t\telem.style.filter = (elem.style.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\r\n\t\t\t\t\t\t\t\t\t(parseInt(opacity) + '' == \"NaN\" ? \"\" : \"alpha(opacity=\" + opacity * 100 + \")\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\telem.style[\"opacity\"] = opacity;\r\n\t\t},\r\n\t\t\r\n\t\thtml: function(elem, value) {\r\n\t\t\tif (elem && elem.innerHTML !== undefined){\r\n\t\t\t\tif (value === undefined)\r\n\t\t\t\t\treturn elem.innerHTML;\r\n\t\t\t\telse\r\n\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t\r\n\t\tdhtml: function(str, hook, midhook) {\r\n\t\t\t$.div.innerHTML = \"div\" + str;\r\n\t\t\t$.div.removeChild($.div.firstChild);\r\n\t\t\tvar scripts = [];\r\n\t\t\t$.chgChd($.div.childNodes, function() {\r\n\t\t\t\tif (this.nodeName && this.nodeName.toLowerCase() === \"script\")\r\n\t\t\t\t\tscripts.push(this);\r\n\t\t\t\telse\r\n\t\t\t\t\thook.call(this);\r\n\t\t\t});\r\n\t\t\tif (midhook) midhook();\r\n\t\t\t$.each(scripts, function() {$.script(this.text || this.textContent || this.innerHTML || \"\")});\r\n\t\t\t$.empty($.div);\r\n\t\t},\r\n\t\t\r\n\t\tappend: function(elem, value, midhook) {\r\n\t\t\tif (elem && elem.nodeType == 1 && typeof value === \"string\")\r\n\t\t\t\t$.dhtml(value, function (){elem.appendChild(this)}, midhook);\r\n\t\t}, \r\n\t\t\r\n\t\tremove: function(elem) {\r\n\t\t\tif (elem && elem.parentNode)\r\n\t\t\t\telem.parentNode.removeChild(elem);\r\n\t\t},\r\n\t\t\r\n\t\tempty: function(elem) {\r\n\t\t\twhile (elem && elem.firstChild)\r\n\t\t\t\telem.removeChild(elem.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\tscript: function(data) {\r\n\t\t\tif (data && /\\S/.test(data)) {\r\n\t\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\t\tscript.type = \"text/javascript\";\r\n\t\t\t\tif (script.text === undefined)\r\n\t\t\t\t\tscript.appendChild($.d.createTextNode(data));\r\n\t\t\t\telse\r\n\t\t\t\t\tscript.text = data;\r\n\r\n\t\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\t\t$.head.removeChild(script);\r\n\t\t\t}\r\n\t\t}, \r\n\t\t\r\n\t\tajax: function(s) {\r\n\t\t\tif (s.type)\r\n\t\t\t\ts.type = s.type.toUpperCase();\r\n\t\t\telse\r\n\t\t\t\ts.type = \"GET\";\r\n\t\t\t\r\n\t\t\tif (s.data && typeof s.data !== \"string\")\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tif (s.type == \"GET\")\r\n\t\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + \"_=\" + (+new Date());\r\n\t\t\t\t\r\n\t\t\tvar requestDone = false;\r\n\t\t\t\t\r\n\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\txhr.open(s.type, s.url, s.async);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_EXIT);\r\n\t\t\t}\r\n\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\r\n\t\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT &&  s.type != \"GET\" && s.url.match(\"/cgi_gdpr\") != null)\r\n\t\t\t{\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvar stmp = {};\r\n\t\t\t\t\tstmp.data = {};\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(s.data.match(\"/cgi/login\") == null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstmp.data = $.Iencryptor.AESEncrypt(s.data, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstmp.data = $.Iencryptor.AESEncrypt(s.data, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ts.data = \"sign=\"+stmp.data.sign+\"\\r\\n\"+\"data=\"+stmp.data.data+\"\\r\\n\";\r\n\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\t//$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar onreadystatechange = function(){\r\n\t\t\t\tif (xhr.readyState == 0) {\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!requestDone && xhr && xhr.readyState == 4) {\r\n\t\t\t\t\trequestDone = true;\r\n\r\n\t\t\t\t\tif (ival) {\r\n\t\t\t\t\t\tclearInterval(ival);\r\n\t\t\t\t\t\tival = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($.ajok(xhr)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT && $.checkUrlmatch(s.url) == true )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t//console.log(\"return en xhr.responseText: \", xhr.responseText);\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tvar responseTextTmp =$.Iencryptor.AESDecrypt(xhr.responseText);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t\t\t$.script(responseTextTmp);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\t\t\ts.success(s.bScript ? 0 : responseTextTmp);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//console.log(\"return de responseTextTmp: \", responseTextTmp);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch(e)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t\t\t\t//console.log(\"can't find $.newencryptorManager \");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (s.bScript)\r\n\t\t\t\t\t\t\t\t$.script(xhr.responseText);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (s.success)\r\n\t\t\t\t\t\t\t\ts.success(s.bScript ? 0 : xhr.responseText);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (s.error) {\r\n\t\t\t\t\t\ts.error(typeof xhr.status !== \"number\" ? ERR_INTERNAL : (xhr.status + ERR_INTERNAL));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( s.async )\r\n\t\t\t\t\t\txhr = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif ( s.async ) {\r\n\t\t\t\tvar ival = setInterval(onreadystatechange, 13);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(s.data);\r\n\t\t\t} catch(e) {\r\n\t\t\t\tif (s.error) s.error(ERR_NONE_FILE);\r\n\t\t\t}\r\n\r\n\t\t\tif ( !s.async )\r\n\t\t\t\tonreadystatechange();\r\n\t\t}, \r\n\r\n\t\tajok: function(xhr) {\r\n\t\t\ttry {\r\n\t\t\t\treturn !xhr.status && $.local ||\r\n\t\t\t\t\t( xhr.status >= 200 && xhr.status < 300 ) || xhr.status == 304 || xhr.status === 0;\r\n\t\t\t} catch(e){}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\tasyncId: 1,\r\n\t\tasyncStack: {},\r\n\r\n\t\tgetAsync: function() {\r\n\t\t\tvar id = $.asyncId;\r\n\t\t\t$.asyncStack[id] = true;\r\n\t\t\t$.asyncId ++;\r\n\t\t\treturn id;\r\n\t\t},\r\n\t\t\r\n\t\tcheckAsync: function(id) {\r\n\t\t\treturn $.asyncStack[id];\r\n\t\t},\r\n\t\t\r\n\t\tclearAsync: function() {\r\n\t\t\tfor (var i in $.asyncStack) delete $.asyncStack[i];\r\n\t\t},\r\n\t\t\t\t\r\n\t\tdeleteCookie: function(name) { \r\n\t\t\tvar LargeExpDate = new Date ();\r\n\t\t\tdocument.cookie = name + \"=; expires=\" +LargeExpDate.toGMTString(); \r\n\t\t},\r\n\t\t\r\n\t\tio: function(path, bScript, hook, data, noquit, unerr) {\r\n\t\t\tvar ret = 0; \r\n\t\t\tvar async = !!hook;\r\n\t\t\thook = typeof hook === \"function\" ? hook : null;\r\n\t\t\tvar id;\r\n\t\t\tif (hook && !noquit) id = $.getAsync();\r\n\t\t\t$.ajax(\r\n\t\t\t{\r\n\t\t\t\ttype: data ? \"POST\" : \"\",\r\n\t\t\t\turl: path,\r\n\t\t\t\tbScript: bScript,\r\n\t\t\t\tasync: async,\r\n\t\t\t\tdata: data ? data : null,\r\n\t\t\t\tsuccess:function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = data;\r\n\t\t\t\t},\r\n\t\t\t\terror:function(errno)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(errno == ERR_NOT_ACCEPTED)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//$.deleteCookie(\"Authorization\");\r\n\t\t\t\t\t\twindow.location.reload();\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (errno > ERR_NETWORK) errno = ERR_NETWORK;\r\n\t\t\t\t\t\t$.err(\"io\", errno, unerr);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (hook) {\r\n\t\t\t\t\t\tif ($.checkAsync(id) || noquit) hook(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tret = errno;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tstkPop: function(stack, times)\r\n\t\t{\r\n\t\t\ttimes = times ? times : 1;\r\n\t\t\tif (stack instanceof Array) stack = stack.join(\",\");\r\n\t\t\tstack = stack.split(\",\");\r\n\t\t\tfor (var i = 1, l = stack.length; i < l; i++) {\r\n\t\t\t\tif (stack[i] == 0) break;\r\n\t\t\t}\r\n\t\t\tfor (i--; times > 0; i--, times--)\r\n\t\t\t\tstack[i] = 0;\r\n\t\t\treturn stack.join(\",\");\r\n\t\t},\r\n\t\t\r\n\t\tarr2obj: function(arr, param) {\r\n\t\t\tvar ret = {};\r\n\t\t\tif (param === undefined) return ret;\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tif (arr[i][param]) ret[arr[i][param]] = arr[i];\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tobj2str: function(obj, sign1, sign2, tailing) {\r\n\t\t\tvar ret = \"\";\r\n\t\t\tfor (var i in obj)\r\n\t\t\t\tret += i + (obj[i] || obj[i] === 0 || obj[i] === \"\" ? sign1 + obj[i] : \"\") + sign2;\r\n\t\t\tif (tailing)\r\n\t\t\t\treturn ret;\r\n\t\t\telse\r\n\t\t\t\treturn ret.substr(0, ret.length - sign2.length);\r\n\t\t},\r\n\t\t\r\n\t\ttoStr: function(data, sign1, sign2, tailing) {\r\n\t\t\treturn data ? (typeof data === \"string\" && data || data instanceof Array && data.join(sign2) + (tailing ? sign2 : \"\") || $.obj2str(data, sign1, sign2, tailing)) : \"\";\r\n\t\t},\r\n\t\t\r\n\t\tcgi: function(path, arg, hook, noquit, unerr) {\r\n\t\t\tvar expr = /(^|\\/)(\\w+)\\.htm$/;\r\n\t\t\tif ($.local || $.sim) path = $.params;\r\n\t\t\telse path = (path ? path : $.curPage.replace(/\\.htm$/, \".cgi\")) + (arg ? \"?\" + $.toStr(arg, \"=\", \"&\") : \"\");\r\n\t\t\t$.ret = 0;\r\n\t\t\tvar func = hook ? function(ret) {if (!ret && (ret = $.ret)) $.err(\"cgi\", $.ret, unerr); if (typeof hook === \"function\") hook(ret);} : null;\r\n\t\t\tvar ret =  $.io(path, true, func, null, noquit, unerr);\r\n\t\t\t\r\n\t\t\tif (!ret && (ret = $.ret))\r\n\t\t\t\t$.err(\"cgi\", $.ret, unerr);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\tbackup: function(id) {\r\n\t\t\t$.empty($.bak);\r\n\t\t\t// IE will lost checked info after append\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar con = $.id(id);\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr(con.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\tif(!$.id(id))\r\n\t\t\t\treturn ;\r\n\t\t\t$.chgChd($.id(id).childNodes, function(){$.bak.appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\trestore: function(id) {\r\n\t\t\t$.empty($.id(id));\r\n\t\t\tif ($.flag) {\r\n\t\t\t\tvar checks  = [];\r\n\t\t\t\tvar inputs = $.mkArr($.bak.getElementsByTagName(\"input\"));\r\n\t\t\t\t$.each(inputs, function(arg, index){ if (this.checked) checks[index] = true;});\r\n\t\t\t}\r\n\t\t\t$.chgChd($.bak.childNodes, function(){$.id(id).appendChild(this)});\r\n\t\t\tif ($.flag) $.each(checks, function(arg, index){ if (this == true) {inputs[index].checked = true;}});\r\n\t\t},\r\n\t\t\r\n\t\terr: function(src, errno, unerr) {\r\n\t\t\tif (unerr) return errno;\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.reload($.mainParam)})\";\r\n\t\t\tvar value = m_str.reload;\r\n\t\t\tif (src != \"exe\" && src != \"main\") {\r\n\t\t\t\tclick = \"$.addLoading(this, 500, function(){$.refresh()})\";\r\n\t\t\t\tvalue = m_str.refresh;\r\n\t\t\t}\r\n\t\t\telse if (errno > 1000 && errno < 10000) {\r\n\t\t\t\t\t$.removeLoading();\r\n\t\t\t\t\t$.backup(\"main\");\r\n\t\t\t\t\tclick = \"$.restore(\\\"main\\\")\";\r\n\t\t\t\t\tvalue = m_str.back;\r\n\t\t\t\t}\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\t/* back to previous \"dir\" page */\r\n\t\terrBack: function(errno, dir) {\r\n\t\t\t$.clearAsync();\r\n\t\t\tvar click = \"$.addLoading(this, 500, function(){$.loadMain(dir)})\";\r\n\t\t\tvar value = m_str.back;\r\n\r\n\t\t\tvar obj = \"<p class='et'>\"+m_str.err+\"</p><div class='con1 M'><p class='ct'></p><p class='bl'></p><div class='con2'><p class='L1'>\"+m_str.errno+\": \"+errno+\"</p><p class='br'></p>\"\r\n\t\t\t\t\t+ \"<p class='L1'>\" + (e_str[errno] ? e_str[errno] : e_str[ERR_UNKOWN]) +\"</p></div><p class='bl'></p>\";\r\n\t\t\tobj += \"<p class='tail'><input type='button' class='button L' value='\"+value+\"' onclick='\"+click+\"' /></p></div>\";\r\n\t\t\t$.loadMain(obj, $.mainParam);\r\n\t\t},\r\n\t\t\r\n\t\tload: function(html, id, resize, hook1, hook2, midhook) {\r\n\t\t\tvar con = $.id(id);\r\n\t\t\tif (html.indexOf(\"<\") < 0) {\r\n\t\t\t\t$.io(html, false, function(ret) {\r\n\t\t\t\t\tif (typeof ret !== \"number\")\r\n\t\t\t\t\t\t$.fill(con, ret, hook1, hook2, resize, midhook)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t$.err(id, ret);\r\n\t\t\t\t}, null, id == \"ban\" || id == \"menu\" || id == \"help\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t$.fill(con, html, hook1, hook2, resize, midhook);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function(container, content, hook1, hook2, resize, midhook) {\r\n\t\t\tif (hook1) hook1();\r\n\t\t\t$.empty(container);\r\n\t\t\t$.append(container, content, midhook);\r\n\t\t\tif (hook2) hook2();\r\n\t\t\tif (resize) $.resize();\r\n\t\t},\r\n\t\t\r\n\t\tloadBanner: function(path) {\r\n\t\t\t$.load(path, \"ban\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadMenu: function(path) {\r\n\t\t\t$.load(path, \"menu\", false);\r\n\t\t},\r\n\t\t\r\n\t\tloadPage: function(id, path, hook1, hook2) {\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\t$.load(\r\n\t\t\t\tbFile ? \"./main/\" + path : path,\r\n\t\t\t\tid, true, hook1,\r\n\t\t\t\tfunction(){if (bFile) $.trans(); if (hook2) hook2();}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadMain: function(path, arg) {\r\n\t\t\tif (!path) path = $.curPage;\r\n\t\t\tvar bFile = (path.indexOf(\"<\") < 0);\r\n\t\t\tif (bFile) {\r\n\t\t\t\t$.empty($.bak);\r\n\t\t\t\t$.clearAsync();\r\n\t\t\t}\r\n\t\t\t$.loadPage(\r\n\t\t\t\t\"main\",\r\n\t\t\t\tpath,\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tif (bFile) {\r\n\t\t\t\t\t\t$.curPage = path;\r\n\t\t\t\t\t\t$.accStack.push(path);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.mainParam = arg;\r\n\t\t\t\t\twhile($.as.length) $.as.pop();\r\n\t\t\t\t\twhile($.ds.length) $.ds.pop();\r\n\t\t\t\t\twhile($.ansiarg.length) $.ansiarg.pop();\r\n\t\t\t\t\t$.addClass($.id(\"main\"), \"nv\");\r\n\t\t\t\t\t$.unlock();\r\n\t\t\t\t},\r\n\t\t\t\tfunction(){$.removeClass($.id(\"main\"), \"nv\");}\r\n\t\t\t);\r\n\t\t},\r\n\t\t\r\n\t\tloadHelp: function(path) {\r\n\t\t\treturn 0;\r\n\t\t\tif (!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t$.remove($.id(\"helpBtn\"));\r\n\t\t\tif ($.cn)\r\n\t\t\t\t$.append($.id(\"tail\"), \"<input type='button' class='button L' id='helpBtn' onclick='$.loadHelpCn(\\\"\"+path+\"\\\")' value='help />\");\r\n\t\t},\r\n\r\n\t\tloadHelpFrame: function(path) {\r\n\t\t\tif(!path)\r\n\t\t\t\tpath = \"./help/\" + $.curPage.match(/(\\w+)\\.htm$/)[1] + \"_h.htm\";\r\n\t\t\telse\r\n\t\t\t\tpath = \"./help/\" + path;\r\n\t\t\t\r\n\t\t\tif(window.parent !== window) {\r\n\t\t\t\tif (window.parent.topFrame.hl !== path) {\r\n\t\t\t        window.parent.topFrame.hl = path;\r\n\t\t\t\t\t$.ajax(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"GET\",\r\n\t\t\t\t\t\turl: path,\r\n\t\t\t\t\t\tasync: false,\r\n\t\t\t\t\t\tsuccess:function(data)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.write(data);\r\n\t\t\t\t\t\t\tif (localStorage.getItem(\"lang\") === \"ar_AR\") {\r\n\t\t\t\t\t\t\t\tvar att = window.parent.helpFrame.window.document.createAttribute(\"dir\");\r\n\t\t\t\t\t\t\t\tatt.value = \"rtl\";\r\n\t\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.getElementsByTagName(\"html\")[0].setAttributeNode(att);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twindow.parent.helpFrame.window.document.close();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror:function(errno)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    },\r\n\t\t\r\n\t\tloadHelpCn: function(path) {\r\n\t\t\t$.backup(\"main\");\r\n\t\t\t$.load(\"<div class='con1 L' id='con1'></div>\", \"main\");\r\n\t\t\t$.load(path, \"con1\", true, null, function(){$.append($.id(\"con1\"), \"<p class='tail'><input type='button' class='button L' value='back' onclick='$.restore(\\\"main\\\")' /></p>\")});\r\n\t\t},\r\n\t\t\r\n\t\tloadCover: function(path, opacity, arg) {\r\n \t\t\t$.load(path, \"cover\", false, function(){\r\n\t\t\t\t$.diagParam = arg;\r\n\t\t\t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t\t$.opacity($.id(\"cover\"), opacity);\r\n\t\t\t}); \r\n\t\t},\r\n\t\t\r\n\t\treload: function(arg) {\r\n\t\t\t$.loadMain(null, arg);\r\n\t\t},\r\n\t\t\r\n\t\trefresh: function(domain, port, frame, page) {\r\n\t\t\tif ($.local) location.reload(true);\r\n\t\t\telse {\r\n\t\t\t\tvar ret = location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n\t\t\t\tlocation.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\trefreshWindow: function(domain, port, frame, page) {\r\n        \t\tif ($.local) location.reload(true);\r\n        \t\telse {\r\n            \t\t\tvar ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n            \t\t\twindow.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n        \t\t}\r\n    \t\t},\r\n\t\t\r\n\t\tresize: function () {\r\n\t\t\t/*\r\n\t\t\tif (arguments[0] && arguments[0].nodeName){\r\n\t\t\t\tswitch (arguments[0].nodeName.toLowerCase()) {\r\n\t\t\t\tcase \"table\":\r\n\t\t\t\t\t$.resizeTlb.apply(this, arguments);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch ($.flag)\t{\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = \"auto\";\r\n\t\t\t\t\t$.w.scrollBy(0, 1);\t\t\r\n\t\t\t\t\tvar height = $.d.body.clientHeight;\r\n\t\t\t\t\t$.id(\"menu\").style[\"height\"] = height - $.id(\"ban\").clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0)- 30 + \"px\";\r\n\t\t\t\t\t$.w.scrollBy(0, -1);\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$.id(\"con\").style[\"minHeight\"] = $.d.documentElement.clientHeight - ($.id(\"bottom\") ? $.id(\"bottom\").clientHeight : 0) + \"px\";\r\n\t\t\t\t\t\t$.id(\"cover\").style[\"height\"] = $.d.body.clientHeight + \"px\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$.fixTbl();\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t},\r\n\t\tfixTbl: function() {\r\n\t\t\t$.each(document.getElementsByTagName(\"div\"), function(){\r\n\t\t\t\tif (this.offsetWidth != 0 && ($.hasClass(this, \"thead\") || $.hasClass(this, \"tbody\")))\r\n\t\t\t\t\tthis.getElementsByTagName(\"table\")[0].style[\"width\"] = this.offsetWidth - 20 + \"px\";\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could not be edited, show the whole string. \r\n\t\tresizeStrList: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\twhile(val.length > index)\r\n\t\t\t{\r\n\t\t\t\tif(val.length > (index+num))\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index, index+num);\r\n\t\t\t\t\ttmpStr += \"<br/>\";\r\n\t\t\t\t\tindex += num;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\ttmpStr += val.slice(index,val.length);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\t//If the table list could be edited,  show the string with ellipsis. \r\n\t\tresizeStr: function(val, num)\r\n\t\t{\r\n\t\t\tvar tmpStr = \"\";\r\n\t\t\tif (val.length > num)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < num; i++)\r\n\t\t\t\t\ttmpStr += val.charAt(i);\r\n\t\t\t\ttmpStr += \"...\";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\ttmpStr = val;\r\n\t\t\r\n\t\t\treturn tmpStr;\r\n\t\t},\r\n\t\t\r\n\t\tresizeTlb: function(tlb, rows, rowLines) {\r\n\t\t\tvar div = tlb.parentNode;\r\n\t\t\tif (tlb.rows.length > rows) {\r\n\t\t\t\tdiv.style[\"height\"] = ((rowLines ? rowLines : 1) * 22 + 3) * rows + \"px\";\r\n\t\t\t\t$.addClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdiv.style[\"height\"] = \"auto\";\r\n\t\t\t\t$.removeClass(div, \"scroll\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tlock: function() {\r\n\t\t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = true;\r\n\t \t\t$.removeClass($.id(\"cover\"), \"nd\");\r\n\t\t\t$.opacity($.id(\"cover\"), 0); \r\n\t\t},\r\n\t\t\r\n\t\tunlock: function() {\r\n\t\t\tif( window.parent.curlock != undefined )\r\n\t\t\t\twindow.parent.curlock = false;\r\n\t\t\t$.addClass($.id(\"cover\"), \"nd\");\r\n\t\t},\r\n\r\n\t\tlocked: function() {\r\n\t\t\treturn $.hasClass($.id(\"cover\"), \"nd\") ? false : true;\r\n\t\t},\r\n\t\t\r\n\t\taddLoading: function(obj, interval, hook) {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.lock();\r\n\t\t\t$.append(obj.parentNode, \"<span class='load' id='_load'></span>\");\r\n\t\t\tif (interval){\r\n\t\t\t\t$.timeout(function(){if (!hook || hook() !== false) $.removeLoading(); }, interval);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tremoveLoading: function() {\r\n\t\t\t$.remove($.id(\"_load\"));\r\n\t\t\t$.unlock();\r\n\t\t},\r\n\t\t\r\n\t\ttimeout: function(hook, interval) {\r\n\t\t\tvar id = $.getAsync();\r\n\t\t\treturn setTimeout(function(){if ($.checkAsync(id) && hook) hook();}, interval);\r\n\t\t},\r\n\t\t\r\n\t\tauto_interval:0,\r\n\t\tauto: function(handle, interval, imediate, args, hook, id) {\r\n\t\t\t$.auto_interval = interval;\r\n\r\n\t\t\tif (id) {\r\n\t\t\t\tif (!$.checkAsync(id)) return;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tid = $.getAsync();\r\n\t\t\tif (imediate) {\r\n\t\t\t\tif (handle(args) === false) {\r\n\t\t\t\t\tif (hook) hook(args);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn setTimeout(function(){\r\n\t\t\t\t$.auto(handle, $.auto_interval, 1, args, hook, id);\r\n\t\t\t}, $.auto_interval);\r\n\t\t},\r\n\t\t\r\n\t\tguage: function(strs, step, interval, hook, start, end, diag) {\r\n\t\t\tvar str = \"<p class='et'>\"+strs[0]+\"</p><div class='con1 L'><p class='ct'>\"\r\n\t\t\t+strs[0]+\"</p><p class='bl'></p><div class='con2'><p class='center'>\"\r\n\t\t\t+strs[1]+\"</p><p class='br'></p><div><b class='gitem' id='_gitem'></b><div class='gbar' id='_gbar'></div></div><p class='br'></p></div><p class='bl'></p><p class='tail'>&nbsp;</p></div>\";\r\n\t\t\tif (diag) $.loadCover(str, 1); else $.loadMain(str);\r\n\t\t\t\r\n\t\t\tvar completed = false;\r\n\t\t\tvar count = 0;\r\n\t\t\tvar count_max = 5000/interval;\r\n\t\t\tvar retTmp = false;\r\n\r\n\t\t\t$.auto(function(args){\r\n\t\t\t\tif(!completed)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(args[2] >= (args[3]/2))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count++ > count_max)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\t\ttype = \"GET\";\r\n\t\t\t\t\t\t\turl = \"/main/status.htm?_=\" + (+new Date());\r\n\t\t\t\t\t\t\tvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\r\n\t\t\t\t\t\t\txhr.open(type, url, true);\r\n\t\t\t\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"text/plain\");\r\n\t\t\t\t\t\t\txhr.onreadystatechange = function()\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (xhr.readyState == 4)\r\n\t\t\t\t\t\t\t\t\tcompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\txhr.send(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$.auto_interval = 5000/step;\t\r\n\t\t\t\t}\r\n\t\t\t\tvar percent = Math.floor(args[2] * 100 / args[3]);\r\n\t\t\t\t$.h(args[0], percent + \"%\");\r\n\t\t\t\targs[1].style.width = (4.5*percent + \"px\");\r\n\t\t\t\tif (args[2] >= args[3])\r\n\t\t\t\t\treturn false;\r\n\t\t\t\targs[2]++;\r\n\t\t\t}, interval, true,[$.id(\"_gitem\"), $.id(\"_gbar\"), start ? start : 0, step, end ? end : step], hook);\r\n\t\t},\r\n\t\t\r\n\t\tansiarg: [],\r\n\t\t\r\n\t\tansi: function(str) {\r\n\t\t\tvar arr = str.split(\"\\r\\n\");\r\n\t\t\tfor (var i = 0, l = arr.length; i < l; i++) {\r\n\t\t\t\tvar ret = arr[i].split('=');\r\n\t\t\t\tret = [ret.shift(), ret.join(\"=\")];\r\n\t\t\t\tif (ret[1] && $.asc(ret[1], true)) {\r\n\t\t\t\t\tarr[i] = \"\\\\\" + ret[0];\r\n\t\t\t\t\t$.ansiarg.push(ret);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arr.join(\"\\r\\n\");\r\n\t\t},\r\n\t\t\r\n\t\tas: [],\t\t\r\n\t\tds: [],\t\t\r\n\t\t\r\n\t\tact: function(type, oid, stack, pStack, attrs) {\r\n\t\t\tif (!type || !oid)\r\n\t\t\t\treturn false;\r\n\t\t\tstack = stack ? stack : \"0,0,0,0,0,0\";\r\n\t\t\tpStack = pStack ? pStack : \"0,0,0,0,0,0\";\r\n\t\t\tattrs = $.toStr(attrs, \"=\", \"\\r\\n\", true);\r\n\t\t\tattrs = attrs.replace(/__stack=[0-9,]*\\r\\n/, \"\");\r\n\t\t\tvar ret = null;\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase ACT_ADD:\t\t\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_GET:\t\t\r\n\t\t\t\t\tret = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_GL:\t\t\r\n\t\t\t\tcase ACT_GS:\t\t\r\n\t\t\t\t\tret = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase ACT_SET:\t\t\r\n\t\t\t\tcase ACT_CGI:\r\n\t\t\t\t\toid = oid ? oid : $.curPage.replace(/\\.htm$/, \".cgi\");\r\n\t\t\t\t\tif ($.cn) attrs = $.ansi(attrs);\r\n\t\t\t\tcase ACT_DEL:\t\t\r\n\t\t\t\tcase ACT_OP:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: \r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t$.as.push([type, null, oid, stack, pStack, attrs, attrs ? attrs.match(/\\r\\n/g).length : 0]);\r\n\t\t\t$.ds.push(ret);\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\t\r\n\t\texe: function(hook, unerr, securityLevel) {\r\n\t\t\tvar url = \"/cgi?\";\r\n\t\t\tvar data = \"\";\r\n\t\t\tvar index = 0;\r\n\t\t\tvar obj;\r\n\t\t\tvar bAnsi = false;\r\n\r\n\t\t\tvar tmpdata = \"\";\r\n\t\t\t\r\n\t\t\tif( INCLUDE_LOGIN_GDPR_ENCRYPT && securityLevel != 0)\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\ttry{\r\n\t\t\t\t\turl=\"/cgi_gdpr?\";\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ($.as.length == 0 || $.local || $.sim) {\r\n\t\t\t\tif (hook && typeof hook === \"function\") $.timeout(hook, 200);\r\n\t\t\t\twhile($.as.pop() !== undefined);\r\n\t\t\t\twhile($.ds.pop() !== undefined);\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$.empty($.id(\"ansiform\"));\r\n\t\t\twhile ($.ansiarg.length) {\r\n\t\t\t\tobj = $.ansiarg.shift();\r\n\t\t\t\t$.append($.id(\"ansiform\"), \"<input type='hidden' name='\"+obj[0]+\"' value='\"+obj[1].replace(/\\&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/'/g, \"&apos;\")+\"' />\");\r\n\t\t\t\tbAnsi = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT && url.match(\"/cgi_gdpr\") != null)\r\n\t\t\t{\r\n\t\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\t\t//url = \"/cgi\";\r\n\t\t\t\t\ttmpdata += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\t\t//url += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\t\t\t\t\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\t\r\n\t\t\t\ttmpdata = tmpdata.substr(0, tmpdata.length - 1);\r\n\t\t\t\ttmpdata = tmpdata + \"\\r\\n\"+data;\r\n\t\t\t\tdata = tmpdata;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\twhile(obj = $.as.shift()){\r\n\t\t\t\t\turl += obj[0] + (obj[1] ? \"=\" + obj[1] : \"\") + \"&\";\r\n\t\t\t\t\tdata += \"[\" + obj[2] + \"#\" + obj[3] + \"#\" + obj[4] + \"]\" + index + \",\" + obj[6] + \"\\r\\n\" + obj[5];\t\t\t\t\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t}\t\r\n\t\t\t}\t\r\n\t\t\turl = url.substr(0, url.length - 1);\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar tmpds = $.mkArr($.ds);\r\n\t\t\t\twhile($.ds.length) $.ds.pop();\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar resolve = function(ret, ds) {\r\n\t\t\t\tif (typeof ret !== \"number\") {\r\n\t\t\t\t\tvar lines = ret.split('\\n');\r\n\t\t\t\t\tret = 0;\r\n\t\t\t\t\t$.ret = 0;\r\n\t\t\t\t\tvar scripts = \"\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (var i = 0, l = lines.length; i < l; i++) {\r\n\t\t\t\t\t\tif (lines[i] == \"\") continue;\r\n\t\t\t\t\t\tif (lines[i].charAt(0) == \"[\") {\r\n\t\t\t\t\t\t\tif (scripts != \"\") {\r\n\t\t\t\t\t\t\t\t$.script(scripts);\r\n\t\t\t\t\t\t\t\tif ($.ret) {\r\n\t\t\t\t\t\t\t\t\tret = $.ret;\r\n\t\t\t\t\t\t\t\t\t$.err(\"cgi\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tscripts = \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar n = lines[i].indexOf(\"]\");\r\n\t\t\t\t\t\t\tvar j = parseInt(lines[i].substr(n+1), 10);\r\n\t\t\t\t\t\t\tvar stack = lines[i].substr(1, n-1);\r\n\t\t\t\t\t\t\tvar instance;\r\n\t\t\t\t\t\t\tif (stack == \"error\") {\r\n\t\t\t\t\t\t\t\tif (j) {\r\n\t\t\t\t\t\t\t\t\tret = j;\r\n\t\t\t\t\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) $.err(\"exe\", ret, unerr);\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] instanceof Array) {\r\n\t\t\t\t\t\t\t\tinstance = {__stack: stack};\r\n\t\t\t\t\t\t\t\tds[j].push(instance);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (ds[j] != null) {\r\n\t\t\t\t\t\t\t\tinstance  = ds[j];\r\n\t\t\t\t\t\t\t\tinstance.__stack = stack;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (stack == \"cgi\") {\r\n\t\t\t\t\t\t\t\tscripts += lines[i] + '\\n';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tvar attr = lines[i].split(\"=\");\r\n\t\t\t\t\t\t\t\tinstance[attr[0]] = attr.slice(1).join('=');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile(ds.length) ds.pop();\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (bAnsi) {\r\n\t\t\t\tvar formObj = $.d.forms[0];\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformObj.target = \"up_frame\";\r\n\t\t\t\t\tformObj.action = \"/cgi/ansi\";\r\n\t\t\t\t\tformObj.submit();\r\n\t\t\t\t}catch(e){}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (hook) {\r\n\t\t\t\tvar resolve2 = function(){$.io(url, false, function(ret){ ret = resolve(ret, tmpds); if (typeof hook === \"function\") hook(ret);}, data, false, unerr)};\r\n\t\t\t\tif (bAnsi) $.timeout(resolve2, 100);\r\n\t\t\t\telse resolve2();\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(ret = $.io(url, false, null, data, false, unerr)) {\r\n\t\t\t\t\tret = resolve(ret, $.ds);\r\n\t\t\t\t\tif (ret != ERR_HTTP_ERR_CGI_INVALID_ANSI) return ret;\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count > 3) return $.err(\"exe\", ERR_HTTP_ERR_CGI_INVALID_ANSI, unerr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tturnqss: function(str) {\r\n\t\t\tif ($.qss) return str.replace(/\\bWPS\\b/g, \"QSS\");\r\n\t\t\telse return str.replace(/\\bQSS\\b/g, \"WPS\");\r\n\t\t},\r\n\r\n\t\talert: function() {\r\n\t\t\tvar errno = arguments[0];\r\n\t\t\tvar l = arguments.length;\r\n\t\t\tif (arguments[l - 1] === true) return errno;\r\n\t\t\tif (e_str[errno]) {\r\n\t\t\t\tstr = e_str[errno];\r\n\t\t\t\tfor (var i = 1; i < l; i++)\r\n\t\t\t\t\tstr = str.replace(\"$\", arguments[i]);\r\n\t\t\t}\r\n\t\t\telse str = e_str[ERR_UNKOWN];\r\n\t\t\talert($.turnqss(str));\r\n\t\t\treturn errno;\r\n\t\t},\r\n\r\n\t\tnum: function() {\r\n\t\t\tvar l = arguments.length - 1;\r\n\t\t\tvar unalert = arguments[l];\r\n\t\t\tif (unalert !== true) { l++; unalert = false; }\r\n\t\t\tvar val = arguments[0];\r\n\t\t\tif (typeof val === \"string\" && val.match(/\\D/))\r\n\t\t\t\treturn $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tvar val = parseInt(val, 10);\r\n\t\t\tif (isNaN(val)) return $.alert(ERR_NUM_INVAD, unalert);\r\n\t\t\tif (l == 1) return 0;\r\n\t\t\tfor (var i = 1; i < l; i++) {\r\n\t\t\t\tif (val >= arguments[i][0] && val <= arguments[i][1] || val === arguments[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn $.alert(ERR_NUM_OUTRANGE, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tstep: function(num, step) {\r\n\t\t\treturn Math.round(parseInt(num,10)/step)*step;\r\n\t\t},\r\n\t\t\r\n\t\tasc: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) > 127) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tcheckAscii: function(str, unalert) {\r\n\t\t\tfor (var i = 0, l = str.length; i < l; i++)\r\n\t\t\t\tif (str.charCodeAt(i) < 33 || str.charCodeAt(i) > 126) return $.alert(90201, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tip2num: function(ip) {\r\n\t\t\tif (typeof ip === \"number\") return ip;\r\n\t\t\tvar ret, val;\r\n\t\t\tif (!(ret = ip.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/))) return false;\r\n\t\t\tfor (var i = 1, val = 0; i <= 4; i++) {\r\n\t\t\t\tif (parseInt(ret[i], 10) > 255) return false;\r\n\t\t\t\tval = (val << 8) + parseInt(ret[i], 10);\r\n\t\t\t}\r\n\t\t\treturn val;\r\n\t\t},\r\n\t\t\r\n\t\tnum2ip: function(num) {\r\n\t\t\tif (typeof num !== \"number\") return false;\r\n\t\t\treturn \"\" + ((num >> 24) + 256) % 256 + \".\" + (num >> 16 & 0xff) + \".\" + (num >> 8 & 0xff) + \".\" + (num & 0xff);\r\n\t\t},\r\n\t\t\r\n\t\tifip: function(ip, unalert) {\r\n\t\t\tif ((ip = $.ip2num(ip)) === false) return $.alert(ERR_IP_FORMAT, unalert);\r\n\t\t\tif (ip == -1) return $.alert(ERR_IP_BROADCAST, unalert);\r\n\t\t\tvar net = ip >> 24;\r\n\t\t\tif (net == 0) return $.alert(ERR_IP_SUBNETA_NET_0, unalert);\r\n\t\t\tif (net == 127) return $.alert(ERR_IP_LOOPBACK, unalert);\r\n\t\t\tif (net >= -32 && net < -16) return $.alert(ERR_IP_MULTICAST, unalert);\r\n\t\t\tif (net >= -16 && net < 0) return $.alert(ERR_IP_PRESERVED, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmask: function(mask, unalert) {\r\n\t\t\tif ((mask = $.ip2num(mask)) >= 0) return $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t\tfor (var i = 32; i > 0; i--, mask = mask >> 1)\r\n\t\t\t\tif (mask % 2) return mask == -1 ? 0 : $.alert(ERR_MASK_INVAD, unalert);\r\n\t\t},\r\n\t\t\r\n\t\tipmask: function(ip, mask, unalert) {\r\n\t\t\tvar temp;\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tif ((ip & mask) == mask || (ip & mask) == 0) return $.alert(ERR_IPMASK_SUBNET_INVAD, unalert);\r\n\t\t\tif ((mask^0xfffffffe) && ((ip & ~mask) == ~mask || (ip & ~mask) == 0)) return $.alert(ERR_IPMASK_HOST_INVAD, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tipmaskgw: function(ip, mask, gw, unalert) {\r\n\t\t\tip  = $.ip2num(ip);\r\n\t\t\tmask = $.ip2num(mask);\r\n\t\t\tgw = $.ip2num(gw);\r\n\t\t\tif ((ip & mask) != (gw & mask)) return $.alert(ERR_IPGW_NOT_SAME_SUBNET, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\t\t\r\n\t\tmac: function(mac, unalert) {\r\n\t\t\tif (!(ret = mac.match(/^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}$/))) return $.alert(ERR_MAC_FORMAT, unalert);\r\n\t\t\tif (mac== \"00:00:00:00:00:00\") return $.alert(ERR_MAC_ZERO, unalert);\r\n\t\t\tif (mac.match(/^[fF]{2}(:[fF]{2}){5}$/)) return $.alert(ERR_MAC_BROADCAST, unalert);\r\n\t\t\tif (parseInt(ret[1], 16) % 2) return $.alert(ERR_MAC_MULTICAST, unalert);\r\n\t\t\treturn 0;\r\n\t\t},\r\n\r\n\t\tip2ip: function (ip)\r\n\t\t{\r\n\t\t\tvar ipParts = ip.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tipParts[i] = parseInt(ipParts[i], 10);\r\n\t\t\t}\r\n\t\t\tvar ipStr = ipParts[0] + \".\" + ipParts[1] + \".\" + ipParts[2] + \".\" + ipParts[3];\r\n\t\t\treturn ipStr;\r\n\t\t},\r\n\r\n\t\tisname:function(pName){\r\n\t\t\treturn pName.length && (pName.match(/[\\\\\\/\\\"\\:\\*\\?\\<\\>\\|\\&]|\\s$/) == null ? true : false);\r\n\t\t},\r\n\r\n\t\tisdomain: function(domain){\r\n\t\t\tvar c; \r\n\t\t\tvar gotDot = false;\r\n\t\t\tvar ch = \"-.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\t\t\tif ((domain.charAt(0) == \".\")\r\n\t\t\t\t\t|| (domain.charAt(0) == \"-\")\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \".\"))\r\n\t\t\t\t\t|| ((domain.charAt(domain.length - 1) == \"-\")))\r\n\t\t\t\treturn false;\r\n\t\t\tfor (var i = 0; i < domain.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = domain.charAt(i);\r\n\t\t\t\tif (ch.indexOf(c) == -1)\r\n\t\t\t\t\treturn false; \r\n\t\t\t\tif ((c == \"-\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == true))\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tif ((c == \".\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c == \"-\") && (gotDot == false))\r\n\t\t\t\t\tgotDot = true;\r\n\t\t\t\tif ((c != \".\") && (c != \"-\") && (gotDot == true))\r\n\t\t\t\t\tgotDot = false;\r\n\t\t\t} \r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tisnum:function(num_string){\r\n\t\t\tvar c;\r\n\t\t\tvar ch = \"0123456789\";\r\n\t\t\tfor (var i = 0; i < num_string.length; i++)\r\n\t\t\t{\r\n\t\t\t\tc = num_string.charAt(i); \r\n\t\t\t\tif (ch.indexOf(c) == -1) \r\n\t\t\t\treturn false; \r\n\t\t\t}\r\n\t\t\treturn true; \r\n\t\t},\r\n\t\t\r\n\t\tgetrightfirstonebitpos: function(num){\r\n\t\t\tvar i;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tfor ( i = 0; i < 8; i++ )\r\n\t\t\t{\r\n\t\t\t\tif ( ((num & numArr[i]) >> i) == 0 )\r\n\t\t\t\t\tpos++;\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tgetmaskbit: function(mask){\r\n\t\t\tvar i, j;\r\n\t\t\tvar pos = 0;\r\n\t\t\tvar numArr = [1, 2, 4, 8, 16, 32, 64, 128];\r\n\t\t\tvar maskPart = mask.split(\".\");\r\n\t\t\tfor ( i = 3; i >= 0; i--)\r\n\t\t\t{\r\n\t\t\t\tfor ( j = 0; j < 8; j++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( ((maskPart[i] & numArr[j]) >> j) == 0 )\r\n\t\t\t\t\t\tpos++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn pos;\r\n\t\t},\r\n\t\t\r\n\t\tisOrderIp: function(ip1, ip2){\r\n\t\t\tvar ipS = ip1.split(\".\");\r\n\t\t\tvar ipE = ip2.split(\".\");\r\n\t\t\tfor (var i = 0; i < 4; i++)\r\n\t\t\t{\r\n\t\t\t\tif (parseInt(ipS[i], 10) < parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (parseInt(ipS[i], 10) > parseInt(ipE[i], 10))\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\thtmlEncodeStr: function(str) {\r\n\t\t\tif(str ==undefined || str==\"\")   return str;\r\n\t\t\treturn str.replace(/[<>&\"]/g,function(c){return {'<':'&lt;','>':'&gt;','&':'&amp;','\"':'&quot;'}[c];});\r\n\t\t},\r\n\r\n\t\treverseStr: function(str){\r\n\t\t\tvar newStr=\"\";\r\n\t\t\tfor(var i = 0; i < str.length; i++ )\r\n\t\t\t{\r\n\t\t\t\tnewStr += str.substring(str.length-1-i, str.length-i);\r\n\t\t\t}\r\n\t\t\treturn newStr;\r\n\t\t},\r\n\t\t\r\n\t\tformatNum:function(num){\r\n\t\t\tvar numNew = $.reverseStr(num.toString());\r\n\t\t\tif(numNew.length > 3)\r\n\t\t\t{\r\n\t\t\t\tnumNew = numNew.replace(/(\\d\\d\\d)/g, function($0,$1){return $1+\",\"});\r\n\t\t\t}\r\n\t\t\tnumNew = (numNew.charAt(numNew.length-1) == ',')? numNew.substring(0, numNew.length-1):numNew;\r\n\t\t\treturn $.reverseStr(numNew);\r\n\t\t},\r\n\r\n\t\tchgElem: function(elem, val) {\r\n\t\t\tif (elem && elem.nodeName) {\r\n\t\t\t\tval = $.turnqss(val);\r\n\t\t\t\tswitch (elem.nodeName.toLowerCase())\r\n\t\t\t\t{\r\n\t\t\t\t\tcase \"input\":\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"option\":\r\n\t\t\t\t\t\telem.text = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif ($.hasClass(elem, \"item\")) val = val.replace(/:?\\s*$/, \":\");\r\n\t\t\t\t\t\telem.innerHTML = val;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t//for localization\r\n\t\t\t\t//$.removeClass(elem, \"T\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetCountry:function(curVersion){\r\n            for (var i = 0; i < regionParam.length; i++)\r\n\t\t\t{\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(eval(regionParam[i].switchSpec) == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is current localization !!\");\r\n\t\t\t\t\t\t$.country = regionParam[i].region;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e){\r\n\t\t\t\t\t//console.log(regionParam[i].switchSpec + \" is not existed !!\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n        },\r\n\t\t/* multilang 多语言框架  */\r\n\t\tscriptAdd: function(id, src) {\r\n\t\t\tvar script = $.d.createElement(\"script\");\r\n\r\n\t\t\tscript.type = \"text/javascript\";\r\n\t\t\tscript.id = id ;\r\n\t\t\tscript.src = src;\r\n\r\n\t\t\t$.head.insertBefore(script, $.head.firstChild);\r\n\t\t\tscript.onreadystatechange = function() { \r\n\t\t\t\tvar r = script.readyState; \r\n\t\t\t\tif (r == 'loaded' || r == 'complete') { \r\n\t\t\t\t\tscript.onreadystatechange = null; \r\n\t\t\t$.head.removeChild(script);\r\n\t\t\t\t} \r\n\t\t\t};\r\n\t\t\tscript.onload = function() { \r\n\t\t\t\t$.head.removeChild(script); \r\n\t\t\t}; \r\n\t\t\r\n\t\t}, \r\n\t\t\r\n\t\tcssAdd: function(src) {\r\n\t\t\tvar css = $.c(\"link\");\r\n\t\t\tcss.rel = \"Stylesheet\";\r\n\t\t\tcss.type = \"text/css\";\r\n\t\t\tcss.href = src;\r\n\t\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t},\r\n\t\t\r\n\t\ttranstxtChangeType: function(region){\r\n\t\t\tvar lanType = region || this.DEFAULT_LAN_TYPE;\r\n\t\t\t//this.country = lanType;\r\n\t\t\tvar STR_JS = this.STR_JS.replace(\"%LAN_TYPE%\", lanType);\r\n\t\t\tvar ERR_JS = this.ERR_JS.replace(\"%LAN_TYPE%\", lanType);\r\n\t\t\tvar HELP_JS = this.HELP_JS.replace(\"%LAN_TYPE%\", lanType);\r\n\r\n\t\t\tif (lanType == \"ar_AR\") {\r\n\t\t\t\t$.cssAdd(\"./css/rtl.css\");\r\n\t\t\t}\r\n\t\t\r\n\t\t\t$.remove($.id(\"str-js\"));\r\n\t\t\t$.remove($.id(\"err-js\"));\r\n\t\t\t$.remove($.id(\"help-js\"));\r\n\t\t\t\r\n\t\t\t$.scriptAdd( \"str-js\" , STR_JS);\r\n\t\t\t$.scriptAdd( \"err-js\" , ERR_JS);\r\n\t\t\t$.scriptAdd( \"help-js\", HELP_JS);\r\n\t   },\r\n\t   \r\n\t   transtxtGet: function(){\r\n\t\t   \tvar STR_JS = this.ERR_JS;\r\n\t\t\tvar ERR_JS  =  this.ERR_JS;\r\n\t\t\tvar HELP_JS = this.HELP_JS;\r\n\t\t\r\n\t\t\t$.transtxtChangeType($.country);\r\n\t\t   \r\n\t   },\r\n\t \r\n\t    transtxtSet: function(region){\r\n\t\t\tvar lanType = region || this.DEFAULT_LAN_TYPE;\r\n\t\t\tthis.country = lanType;\r\n\t\t\r\n\t\t\t$.transtxtChangeType($.country);\r\n\t   },\r\n\t\ttrans: function() {\r\n\t\t\tvar elems = [\"input\", \"option\", \"span\", \"td\", \"th\", \"b\", \"p\"];\r\n\t\t\tvar strs = n_str[$.curPage.match(/(\\w+)\\.htm$/)[1]];\r\n\t\t\tfor (var i in strs) {\r\n\t\t\t\t$.chgElem(document.getElementById(i), strs[i]);\r\n\t\t\t}\r\n\t\t\tvar main = $.id(\"main\");\r\n\t\t\t$.each(elems, function(){\r\n\t\t\t\t$.each(main.getElementsByTagName(this), function() {\r\n\t\t\t\t\tvar tag;\r\n\t\t\t\t\tif ($.hasClass(this, \"T\"))\r\n\t\t\t\t\t\ttag = this.className.match(/\\bT_(\\w+)\\b/);\r\n\t\t\t\t\tif (tag && tag[1]) {\r\n\t\t\t\t\t\tif (s_str[tag[1]]) $.chgElem(this, s_str[tag[1]]);\r\n\t\t\t\t\t\telse if (m_str[tag[1]]) $.chgElem(this, m_str[tag[1]]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\ttransHelp: function(helpUrl) {\r\n\t\t\tvar title = (window.parent.topFrame.hl && window.parent.topFrame.hl.match(/(\\w+)\\.htm$/)[1]) || helpUrl.match(/(\\w+)\\.htm$/)[1];\r\n\t\t\tvar tags = Array(\"h1\", \"p\", \"li\", \"td\");\r\n\t\t\tfor (var k in tags)\r\n\t\t\t{\r\n\t\t\t\telem = window.parent.helpFrame.document.getElementsByTagName(tags[k]);\r\n\t\t\t\tfor (var i=0; i<elem.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (name_str[title][elem[i].className])\r\n\t\t\t\t\t\telem[i].innerHTML = name_str[title][elem[i].className];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\t\r\n\t(function(){\r\n\t\t$.h = $.html;\r\n\t\t$.unloadCover = $.unlock;\r\n\t\t\r\n\t\ttry{document.execCommand('BackgroundImageCache', false, true);}catch(e){};\r\n\t\t\r\n\t\tvar newcss = function() {\r\n\t\t\tvar link = $.c(\"link\");\r\n\t\t\tlink.rel = \"Stylesheet\";\r\n\t\t\tlink.type = \"text/css\";\r\n\t\t\treturn link;\r\n\t\t}\r\n\t\t/*\r\n\t\tvar css = newcss();\r\n\t\tswitch($.flag) {\r\n\t\tcase 5:\r\n\t\tcase 6:\r\n\t\t\tcss.href = \"/css/ie6.css\"; break;\r\n\t\tcase 7:\r\n\t\t\tcss.href = \"/css/ie7.css\"; break;\r\n\t\tcase 8:\r\n\t\t\tcss.href = \"/css/ie8.css\"; break;\r\n\t\tdefault:\r\n\t\t\tcss.href = \"/css/other.css\"; break;\r\n\t\t}\r\n\t\t\r\n\t\t$.head.insertBefore(css, $.head.firstChild);\r\n\t\t*/\r\n\t\t$.w.onresize=$.resize;\r\n\t\t\r\n\t\t/*$.attach(document.documentElement, \"keydown\", function(e){\r\n\t\t\tvar key = e.keyCode ? e.keyCode : e.charCode;\r\n\t\t\tif (key == 116) {\r\n\t\t\t\t$.refresh();\r\n\t\t\t\tif (document.all) {\r\n\t\t\t\t\te.keyCode = 0;\r\n\t\t\t\t\te.returnValue = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\te.cancelBubble = true;\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\tif ($.local)\r\n\t\t\t$.io($.params, true);\r\n\r\n\t\tvar infoobj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"modelName\", \"description\", \"X_TP_isFD\", \"X_TP_ProductVersion\"]);\r\n\t\tvar ethobj = $.act(ACT_GET, ETH_SWITCH, null, null, [\"numberOfVirtualPorts\"]);\r\n\t\tvar langObj = $.act(ACT_GET, IGD_DEV_INFO, null, null, [\"X_TP_SupportedLanguages\", \"X_TP_CurrentLanguage\", \"X_TP_LanguageSetByUser\"]);\r\n\t\t\r\n\t\tvar sysmodeobj;\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t{\r\n\t\t\tif(INCLUDE_MULTIMODE)\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, MULTIMODE, null, null, [\"mode\"]);\r\n\t\t\telse\r\n\t\t\t\tsysmodeobj = $.act(ACT_GET, SYS_MODE, null, null, [\"mode\"]);\r\n\t\t}\r\n\t\t\t\r\n\t\t$.act(ACT_CGI, \"/cgi/info\");\r\n\t\t\r\n\t\tif(INCLUDE_LOGIN_GDPR_ENCRYPT)\r\n\t\t{\r\n\t\t\t$.exe(null,false,0);\r\n\t\t\tif($.curPage != \"login.htm\")\r\n\t\t\t{\r\n\t\t\t\ttry{\r\n\t\t\t\t\t$.newencryptorManager = $.encrypt.encryptManager;\r\n\t\t\t\t\t$.Iencryptor =  $.newencryptorManager.getEncryptor();\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e)\r\n\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$.exe();\r\n\t\t}\r\n\t\tif ($.local) {\r\n\t\t\tinfoobj = {modelName: \"TD-W89741N\", description: \"ADSL+ Router\"};\r\n\t\t\tethobj = {numberOfVirtualPorts: 4};\r\n\t\t\tsysmodeobj = {mode:\"DSL\"};\r\n\t\t}\r\n\r\n\t\t$.model = infoobj.modelName;\r\n\t\t$.desc = infoobj.description;\r\n\t\t$.ports = parseInt(ethobj.numberOfVirtualPorts, 10);\r\n\t\t$.fd = infoobj.X_TP_isFD;\r\n\t\t\r\n\t\t$.setCountry(infoobj.X_TP_ProductVersion);\r\n\t\t\r\n\t\tif(INCLUDE_MULTI_LANGUAGE_Q)\r\n\t\t{\t\r\n\t\t\tvar selectLangItem =  langObj.X_TP_CurrentLanguage || $.country ; \r\n\t\t\t$.country = langObj.X_TP_CurrentLanguage || $.country;\r\n\t\t\t//if($.curPage != \"login.htm\" )\r\n\t\t\tif(selectLangItem != \"\" )\r\n\t\t\t\t$.transtxtSet(selectLangItem);\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\tif (INCLUDE_WAN_MODE)\r\n\t\t\t$.sysMode = sysmodeobj.mode;\r\n\r\n\t\ttry { if ($.model) document.title = $.model; } catch(e) {}\r\n\t\t\r\n\t})();\r\n})();\r\n"
      }
    }, {
      "location" : {
        "uri" : "login.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 65
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n\r\n<head>\r\n    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../img/favicon.ico\"/>\r\n    <link rel=\"stylesheet\" href=\"../css/main.css\"/>\r\n    <link rel=\"stylesheet\" href=\"../css/login.css\"/>\r\n    <link rel=\"stylesheet\" href=\"../css/jquery.tpInput.css\"/>\r\n\r\n    <script src=\"../js/jquery-1.8.3.min.js\" type=\"text/javascript\"></script>\r\n\t\r\n\t<script src=\"../js/oid_str.js\" type=\"text/javascript\"></script>\r\n    <script src=\"../js/proxy.js\" type=\"text/javascript\"></script>\r\n\t\r\n    <script src=\"../js/lib.js\" type=\"text/javascript\"></script>\r\n    <script type=\"text/javascript\" src=\"../locale/language.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/locale.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/encrypt.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/jquery.tpInput.js\"></script>\r\n\t\r\n\t<script id=\"lan-str-js\" type=\"text/javascript\" src=\"../locale/en_US/str.js\"></script>\r\n\t<script id=\"lan-help-js\" type=\"text/javascript\" src=\"../locale/en_US/help.js\"></script>\r\n\t<script id=\"lan-err-js\" type=\"text/javascript\" src=\"../locale/en_US/err.js\"></script>\r\n\t<script id=\"lan-array-js\" type=\"text/javascript\" src=\"../locale/en_US/array.js\"></script>\r\n\t<script id=\"lan-css\" type=\"text/javascript\" src=\"../locale/en_US/lan.css\"></script>\r\n    <!--[if lte IE 8]>\r\n    <link href=\"./css/ie.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n    <style type=\"text/css\">\r\n        .input-err-container .input-err-delta, #pc-scroll div.widget-error-tips span.widget-error-tips-delta {\r\n            top: 4px;\r\n            left: 96px;\r\n        }\r\n\r\n        .input-container .input-err-container, .button-error-tips {\r\n            left: -11px;\r\n            top: 30px;\r\n        }\r\n\r\n        .input-container .input-wrapper {\r\n            background: url(\"../img/ie.png\") no-repeat -250px -226px;\r\n            border: none;\r\n            width: 184px;\r\n            height: 33px;\r\n        }\r\n\r\n        .input-container.err .input-wrapper {\r\n            background-position: -219px -173px;\r\n            border: none;\r\n        }\r\n\r\n        .input-container.focus .input-wrapper {\r\n            background-position: 1px -225px;\r\n            border: none;\r\n        }\r\n\r\n        button.button-button {\r\n            background: url(\"../img/ie.png\") no-repeat -255px -32px;\r\n        }\r\n\r\n        button.button-button:hover {\r\n            background: url(\"../img/ie.png\") no-repeat 0px -32px;\r\n        }\r\n\r\n        #pc-scroll div.widget-error-tips div.widget-error-tips-wrap, .input-err-container .input-err-content {\r\n            border: 0;\r\n            box-shadow: none;\r\n        }\r\n\r\n        .shadow-top {\r\n            background: url(\"../img/ie-01.png\") repeat-x 0 -5px;\r\n            top: -13px;\r\n            left: 0;\r\n            height: 13px;\r\n            margin: 0 17px 0 17px;\r\n        }\r\n\r\n        .shadow-bot {\r\n            background: url(\"../img/ie-01.png\") repeat-x center bottom;\r\n            bottom: -13px;\r\n            left: 0;\r\n            height: 13px;\r\n            margin: 0 17px 0 17px;\r\n        }\r\n\r\n        .shadow-top-left, .shadow-top-right, .shadow-bot-left, .shadow-bot-right {\r\n            position: absolute;\r\n            width: 17px;\r\n            height: 11px;\r\n            background: url(../img/ie-06.png) no-repeat 0px -56px;\r\n        }\r\n\r\n        .shadow-top-left {\r\n            background-position: 0px -56px;\r\n            left: 4px;\r\n            top: 4px;\r\n        }\r\n\r\n        .shadow-top-right {\r\n            background-position: 0px -38px;\r\n            right: 0;\r\n            top: 3px;\r\n        }\r\n\r\n        .shadow-bot-left {\r\n            background-position: 0px -76px;\r\n            left: 3px;\r\n            bottom: 8px;\r\n        }\r\n\r\n        .shadow-bot-right {\r\n            background-position: 0px -95px;\r\n            right: 0;\r\n            bottom: 8px;\r\n        }\r\n\r\n        .shadow-left {\r\n            padding-left: 11px;\r\n            background: url(../img/ie-02.png) no-repeat 0px 0px;\r\n        }\r\n\r\n        .shadow-right {\r\n            padding-right: 11px;\r\n            background: url(../img/ie-02.png) no-repeat center right;\r\n        }\r\n\r\n    </style>\r\n    <![endif]-->\r\n</head>\r\n\r\n<body>\r\n<div id=\"cover\" class=\"nd\"></div>\r\n<div id=\"mask\" class=\"mask\"></div>\r\n<span class=\"load\" style=\"display: none\">for cache</span>\r\n\r\n<div id=\"pc-div\">\r\n<div id=\"pc-top\">\r\n    <div id=\"pc-top-container\">\r\n        <a id=\"pc-top-product\" href=\"http://www.tp-link.com\" target=\"_blank\">\r\n            <span class=\"icon-logo\"></span>\r\n        </a>\r\n    </div>\r\n</div>\r\n<div id=\"pc-scroll\">\r\n    <div id=\"pc-arrowBg\"></div>\r\n    <div id=\"pc-main\">\r\n        <div class=\"pc-login-content\" id=\"pc-login\">\r\n            <div id=\"pc-login-forget\" class=\"nd\">\r\n                <h4 id=\"pc-login-forget-title\"></h4>\r\n                <p id=\"pc-login-forget-text\"></p>\r\n                <div class=\"button-container\">\r\n                    <form class=\"pure-form\">\r\n                        <button type=\"submit\" class=\"green T_save pure-button tp-btn-custom\" id=\"pc-login-forget-back\"><span class=\"\">Save</span></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div id=\"pc-login-main\">\r\n                <div class=\"pc-login-field\" id=\"pc-login-user-div\">\r\n                    <div class=\"pc-inputarea\">\r\n                        <label class=\"pc-login-username-label\">\r\n                            <span class=\"icon\"></span>\r\n                            <span class=\"text\"></span>\r\n                        </label>\r\n                        <input type=\"text\" id=\"pc-login-user\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"pc-login-field\">\r\n                    <div class=\"pc-inputarea\">\r\n                        <label class=\"pc-login-password-label\">\r\n                            <span class=\"icon\"></span>\r\n                        </label>\r\n                        <input type=\"password\" id=\"pc-login-password\" maxlength=\"15\" autocomplete=\"off\">\r\n                        <span class=\"pc-forgetPwd\"><a href=\"#\" id=\"pc-login-forgetPwd\">For get password</a></span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"button-wrapper\">\r\n                        <button id=\"pc-login-btn\" class=\"button-button\" type=\"button\">\r\n                            <span class=\"text button-text\">Log in</span>\r\n                        </button>\r\n                        <div class=\"button-error-tips widget-error-tips\">\r\n                            <div class=\"shadow-top-left\"></div>\r\n                            <div class=\"shadow-top\"></div>\r\n                            <div class=\"shadow-top-right\"></div>\r\n                            <div class=\"shadow-left\">\r\n                                <div class=\"shadow-right\">\r\n                                    <span class=\"widget-error-tips-delta\"></span>\r\n\r\n                                    <div class=\"widget-error-tips-wrap\">\r\n                                        <div class=\"content error-tips-content\">\r\n                                            <span id=\"errorContent\"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"shadow-bot-left\"></div>\r\n                            <div class=\"shadow-bot\"></div>\r\n                            <div class=\"shadow-bot-right\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"pc-login-content nd\" id=\"pc-setPwd\">\r\n            <div class=\"pc-login-field\">\r\n                <div class=\"pc-inputarea\">\r\n                    <label class=\"pc-login-password-label\">\r\n                        <span class=\"icon\"></span>\r\n                    </label>\r\n                    <input type=\"password\" id=\"pc-setPwd-new\" maxlength=\"15\" autocomplete=\"off\">\r\n                </div>\r\n            </div>\r\n            <div id=\"pwdCheck\" class=\"secLevel\" style=\"\">\r\n                <span id=\"pwdCheck-low\" class=\"level1 ori\">Low</span>\r\n                <span id=\"pwdCheck-middle\" class=\"level2 ori\">Middle</span>\r\n                <span id=\"pwdCheck-high\" class=\"level3 ori\">High</span>\r\n            </div>\r\n            <div class=\"pc-login-field\">\r\n                <div class=\"pc-inputarea\">\r\n                    <label class=\"pc-login-password-label\">\r\n                        <span class=\"icon\"></span>\r\n                    </label>\r\n                    <input type=\"password\" id=\"pc-setPwd-confirm\" maxlength=\"15\" autocomplete=\"off\">\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div class=\"button-wrapper\">\r\n                    <button id=\"pc-setPwd-btn\" class=\"button-button\" type=\"button\">\r\n                        <span class=\"text button-text\">Log in</span>\r\n                    </button>\r\n                    <div class=\"button-error-tips widget-error-tips\">\r\n                        <div class=\"shadow-top-left\"></div>\r\n                        <div class=\"shadow-top\"></div>\r\n                        <div class=\"shadow-top-right\"></div>\r\n                        <div class=\"shadow-left\">\r\n                            <div class=\"shadow-right\">\r\n                                <span class=\"widget-error-tips-delta\"></span>\r\n\r\n                                <div class=\"widget-error-tips-wrap\">\r\n                                    <div class=\"content error-tips-content\">\r\n                                        <span id=\"errorContent\"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"shadow-bot-left\"></div>\r\n                        <div class=\"shadow-bot\"></div>\r\n                        <div class=\"shadow-bot-right\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"pc-cloud\" class=\"nd\">\r\n            <div class=\"pc-login-content\" id=\"pc-cloud-form\">\r\n                <div class=\"login-field\">\r\n                    <div class=\"pc-inputarea\">\r\n                        <label class=\"pc-login-username-label\">\r\n                            <span class=\"icon\"></span>\r\n                        </label>\r\n                        <input type=\"text\" id=\"pc-cloud-user\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"pc-login-field\">\r\n                    <div class=\"pc-inputarea\">\r\n                        <label class=\"pc-login-password-label\">\r\n                            <span class=\"icon\"></span>\r\n                        </label>\r\n                        <input type=\"password\" id=\"pc-cloud-password\" autocomplete=\"off\">\r\n                        <span class=\"pc-forgetPwd\">\r\n                            <a href=\"#\" id=\"pc-cloud-forgetPwd\">For get password</a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"button-wrapper\">\r\n                        <button id=\"pc-cloud-btn\" class=\"button-button\" type=\"button\">\r\n                            <span class=\"text button-text\">Log in</span>\r\n                        </button>\r\n                        <div class=\"button-error-tips widget-error-tips\">\r\n                            <div class=\"shadow-top-left\"></div>\r\n                            <div class=\"shadow-top\"></div>\r\n                            <div class=\"shadow-top-right\"></div>\r\n                            <div class=\"shadow-left\">\r\n                                <div class=\"shadow-right\">\r\n                                    <span class=\"widget-error-tips-delta\"></span>\r\n\r\n                                    <div class=\"widget-error-tips-wrap\">\r\n                                        <div class=\"content error-tips-content\">\r\n                                            <span id=\"errorContent\"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"shadow-bot-left\"></div>\r\n                            <div class=\"shadow-bot\"></div>\r\n                            <div class=\"shadow-bot-right\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <iframe frameborder=\"0\" id=\"cloud-login\" name=\"cloud-login\" scrolling=\"no\" class=\"nd\"></iframe>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"pc-bottomContainer\">\r\n        <div id=\"pc-bottom\">\r\n            <span id=\"pc-bot-productName\"></span>\r\n            <span id=\"pc-bot-app\" ></span>\r\n            <span id=\"pc-bot-modelDesc\"></span>\r\n        </div>\r\n        <div class=\"pc-bottom-background\"></div>\r\n        <div class=\"qr-code-container login nd\" id=\"qr-code-container\">\r\n            <div class=\"qr-code-container-wrapper\">\r\n                <div class=\"qr-code\">\r\n                    <span id=\"qr-close-icon\" class=\"close-icon\"></span>\r\n                    <div class=\"characters-illustrate\">\r\n                        <span id=\"characters-illustrate-title\" class=\"characters-illustrate-title\"></span>\r\n                        <span id=\"characters-illustrate-note\" class=\"characters-illustrate-note\"></span>\r\n                    </div>\r\n                    <span class=\"qr-code-picture\"></span>\r\n                    <div class=\"app-download-place\">\r\n                        <a href=\"https://itunes.apple.com/us/app/tp-link-tether/id599496594?ls=1&mt=8\" target=\"_blank\"><span class=\"apple-store\"></span></a>\r\n                        <a href=\"https://play.google.com/store/apps/details?id=com.tplink.tether\" target=\"_blank\"><span class=\"google-play\"></span></a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"qr-code-container-delta\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n<div id=\"alert-container\"\r\n     class=\"alert-container widget-container msg-container grid-popup-msg msg-container-center\">\r\n    <div class=\"msg-container-wrapper\">\r\n        <div class=\"position-top-left\"></div>\r\n        <div class=\"position-top-center\"></div>\r\n        <div class=\"position-top-right\"></div>\r\n        <div class=\"position-center-left\">\r\n            <div class=\"position-center-right\">\r\n                <div class=\"msg-wrap\"><a class=\"widget-close msg-close\" href=\"javascript:void(0);\"></a>\r\n\r\n                    <div class=\"msg-content-wrap\">\r\n                        <div class=\"widget-content msg-content-container\">\r\n                            <div class=\"grid-warning-msg\"><span class=\"icon\"></span><span class=\"text\">The device will reboot. Are you sure to continue?</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"msg-btn-container\">\r\n                    <div class=\"msg-btn-wrap\">\r\n                        <div class=\"button-container in-line\">\r\n                            <button type=\"button\" class=\"button-button green pure-button btn-msg btn-msg-no btn-confirm\"\r\n                                    id=\"confirm-no\">\r\n                                <span>No</span></button>\r\n                        </div>\r\n                        <div class=\"button-container in-line\">\r\n                            <button type=\"button\" class=\"button-button green pure-button btn-msg btn-msg-ok btn-confirm\"\r\n                                    id=\"confirm-yes\">\r\n                                <span>Yes</span></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"position-bottom-left\"></div>\r\n        <div class=\"position-bottom-center\"></div>\r\n        <div class=\"position-bottom-right\"></div>\r\n    </div>\r\n</div>\r\n<div id=\"welcome\" class=\"nd\">\r\n    <div class=\"wel-top\">\r\n        <div class=\"icon-router sprite o-network-router\"></div>\r\n        <div id=\"wel-usb\" class=\"sprite icon icon-usb e-welcome-usb\"></div>\r\n        <div id=\"wel-wireless\" class=\"sprite icon icon-wireless e-welcome-wireless\"></div>\r\n        <div id=\"wel-internet\" class=\"sprite icon icon-internet e-welcome-internet\"></div>\r\n        <div id=\"wel-guest\" class=\"sprite icon icon-guest e-welcome-guest\"></div>\r\n        <div id=\"wel-device\" class=\"sprite icon icon-device e-welcome-device\"></div>\r\n        <div id=\"wel-phone\" class=\"sprite icon icon-phone e-welcome-phone\"></div>\r\n    </div>\r\n    <div id=\"wel-logo\" class=\"sprite n-logoPhone\"></div>\r\n    <div class=\"company\">TP-Link Technologies Co., Ltd.<br>All rights reserved</div>\r\n</div>\r\n<div id=\"ph-div\" style=\"display: none;\">\r\n    <div class=\"ph-header\">\r\n        <div class=\"ph-logo\">\r\n        </div>\r\n        <!--<div style=\"text-align: center\"><span id=\"ph-productName\" class=\"ph-productName\"></span></div>-->\r\n    </div>\r\n    <div class=\"ph-form\">\r\n        <form id=\"ph-setPwd\">\r\n            <div class=\"form-line\">\r\n                <span class=\"sprite c-login-password\"></span>\r\n                <input type=\"password\" id=\"ph-setPwd-new\" maxlength=\"15\" class=\"form-inputText\" placeholder=\"New Password\"\r\n                       autocomplete=\"off\">\r\n\r\n                <div class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\">errTips</p>\r\n                </div>\r\n                <div id=\"passwordLevelP\" class=\"password-level\">\r\n                    <span id=\"pwdCheckP-low\" class=\"low\">Low</span>\r\n                    <span id=\"pwdCheckP-middle\" class=\"middle\">Middle</span>\r\n                    <span id=\"pwdCheckP-high\" class=\"high\">High</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"mt11 form-line\">\r\n                <span class=\"sprite c-login-password\"></span>\r\n                <input type=\"password\" id=\"ph-setPwd-confirm\" maxlength=\"15\" class=\"form-inputText\" placeholder=\"Confirm Password\"\r\n                       autocomplete=\"off\">\r\n\r\n                <div class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\">errTips</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-line mt20\">\r\n                <input type=\"button\" id=\"ph-setPwd-btn\" class=\"form-lgBt\" value=\"Let's Get Started\">\r\n\r\n                <div id=\"ph-setPwd-note\" class=\"noteDivP mt11\">\r\n                    <p class=\"errTextP\">errTips</p>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <form id=\"ph-login\" class=\"nd\">\r\n            <div class=\"mt11 form-line nd\" id=\"ph-login-user-div\">\r\n                <span class=\"sprite c-login-account\"></span>\r\n            <input type=\"text\" id=\"ph-login-user\" class=\"form-inputText\" placeholder=\"Username\"\r\n                       autocomplete=\"off\">\r\n\r\n                <div class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\"></p>\r\n                </div>\r\n            </div>\r\n            <div class=\"mt11 form-line\">\r\n                <span class=\"sprite c-login-password\"></span>\r\n                <input type=\"password\" id=\"ph-login-password\" maxlength=\"15\" class=\"form-inputText\" placeholder=\"Password\"\r\n                       autocomplete=\"off\">\r\n\r\n                <div class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\"></p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-line mt20\">\r\n                <input type=\"button\" id=\"ph-login-btn\" class=\"form-lgBt\" value=\"Login\">\r\n\r\n                <div id=\"ph-login-note\" class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\">errTips</p>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <form id=\"ph-cloud\" class=\"nd\">\r\n            <div class=\"mt11 form-line\" id=\"ph-cloud-user-div\">\r\n                <span class=\"sprite c-login-account\"></span>\r\n                <input type=\"text\" id=\"ph-cloud-user\" class=\"form-inputText\" placeholder=\"Username\"\r\n                       autocomplete=\"off\">\r\n\r\n                <div class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\"></p>\r\n                </div>\r\n            </div>\r\n            <div class=\"mt11 form-line\">\r\n                <span class=\"sprite c-login-password\"></span>\r\n                <input type=\"password\" id=\"ph-cloud-password\" class=\"form-inputText\" placeholder=\"Password\"\r\n                       autocomplete=\"off\">\r\n\r\n                <div class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\"></p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class=\"form-line mt20\">\r\n                <input type=\"button\" id=\"ph-cloud-btn\" class=\"form-lgBt\" value=\"Login\">\r\n\r\n                <div id=\"ph-cloud-note\" class=\"errDivP mt11 nd\">\r\n                    <span class=\"sprite b-error-alert\"></span>\r\n\r\n                    <p class=\"errTextP\">errTips</p>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"ph-bot\">\r\n        <a href=\"javascript:void(0);\" id=\"pb-phone\" class=\"ph-bot-phone selected\"></a>\r\n        <span>|</span>\r\n        <a href=\"javascript:void(0);\" id=\"pb-pc\" class=\"ph-bot-pc\"></a>\r\n    </div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n$(function () {\r\n    var INCLUDE_LOGIN_USERNAME = 0;      //控制普通登录是否有用户名\r\n\r\n    if (location.protocol != \"https:\") {\r\n        //if local https function is enable and protocol is no https:, jump to https;\r\n        if ('httpsLocalEnabled'in window && httpsLocalEnabled == '1') {\r\n            window.location.href = \"https://\" + location.hostname + (('httpsLocalPort' in window && httpsLocalPort == \"\") ? \"\" : (\":\" + httpsLocalPort));\r\n        }\r\n    }\r\n    /*=================================\r\n     *multi language\r\n     ===================================*/\r\n\t//var locale_language=\"en_US\";\r\n    try {\r\n        $.locale.load(locale_language, null, null, true);\r\n    } catch (e) {\r\n    }\r\n//set text and html with $.tpLang\r\n    var timesText = $.tpLang.login.timesText;\r\n\r\n    $('#pc-top-product').attr('href', $.su.CHAR.SUPPORT[$.locale.locale.toUpperCase()]);\r\n    $('#pc-login-btn,#pc-cloud-btn').html('<span class=\"text button-text\">' + $.tpLang.login.login + '</span>');\r\n    $('#pc-setPwd-btn').html('<span class=\"text button-text\">' + $.tpLang.login.start + '</span>');\r\n    $('#pwdCheck-low').html($.tpLang.login.low);\r\n    $('#pwdCheck-middle').html($.tpLang.login.middle);\r\n    $('#pwdCheck-high').html($.tpLang.login.high);\r\n    $('#pc-login-forget-text').html($.tpLang.login.forgetNote);\r\n    $('#pc-login-forget-title').html($.tpLang.login.forgetPwd);\r\n    $('#pc-login-forget-back').html('<span class=\"text button-text\">' + $.tpLang.m_str.back + '</span>');\r\n/*\r\n    //二维码\r\n    $('#pc-bot-app').html($.tpLang.qrApp.HELP_APP);\r\n    $(\"span#characters-illustrate-title\").html($.tpLang.qrApp.CHARACTERS_ILLUSTRETE_TITLE);\r\n    $(\"span#characters-illustrate-note\").html($.tpLang.qrApp.CHARACTERS_ILLUSTRETE_NOTE);\r\n    $('#qr-close-icon').on('click', function() {\r\n        $('#qr-code-container').hide();\r\n        document.cookie = 'qrClose=true';\r\n    });\r\n*/\r\n    $('#pc-bot-app').on('click', function () {\r\n        if (!$('#qr-code-container').is(':visible')) {\r\n            $('#qr-code-container').show();\r\n            $.deleteCookie('qrClose');\r\n        } else {\r\n            $('#qr-code-container').hide();\r\n            document.cookie = 'qrClose=true';\r\n        }\r\n    });\r\n\r\n    $('#pc-login-password').tpInput({\r\n        placeholder: $.tpLang.login.password\r\n    });\r\n    $('#pc-login-user').tpInput({\r\n        placeholder: $.tpLang.login.userName\r\n    });\r\n\r\n    $('#pc-setPwd-new').tpInput({\r\n        placeholder: $.tpLang.login.newPassword\r\n    });\r\n    $('#pc-setPwd-confirm').tpInput({\r\n        placeholder: $.tpLang.login.confirmPassword\r\n    });\r\n\r\n//phone\r\n    $('#pb-phone').html($.tpLang.login.phone);\r\n    $('#pb-pc').html($.tpLang.login.pc);\r\n\r\n    $('#ph-setPwd-new').attr('placeholder', $.tpLang.login.newPassword);\r\n    $('#ph-setPwd-confirm').attr('placeholder', $.tpLang.login.confirmPassword);\r\n    $('#pwdCheckP-low').html($.tpLang.login.low);\r\n    $('#pwdCheckP-middle').html($.tpLang.login.middle);\r\n    $('#pwdCheckP-high').html($.tpLang.login.high);\r\n    $('#ph-setPwd-btn').prop('value', $.tpLang.login.start);\r\n\r\n    $('#ph-login-user').attr('placeholder', $.tpLang.login.userName);\r\n    $('#ph-login-password').attr('placeholder', $.tpLang.login.password);\r\n    $('#ph-login-btn').attr('value', $.tpLang.login.login);\r\n\r\n    $('#ph-cloud-user').attr('placeholder', $.tpLang.login.email);\r\n    $('#ph-cloud-password').attr('placeholder', $.tpLang.login.password);\r\n    $('#ph-cloud-btn').attr('value', $.tpLang.login.login).on('click', function () {\r\n        cloudSubmit(true);\r\n    });\r\n\r\n    var PCSubWin = function () {\r\n    };\r\n    try {\r\n        if (modelName) {\r\n            document.title = modelName;\r\n            $(\"#pc-bot-productName\").html(modelName);\r\n            $(\"#pc-bot-modelDesc\").html(modelDesc || '');\r\n            //for phone\r\n            $(\"#ph-productName\").html(modelName);\r\n\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    /*=============================\r\n     *logic\r\n     * =============================*/\r\n    var isLocked = false;\r\n    var isMF = 0;     //isMobileFlag\r\n\r\n\r\n    $('body').on('keydown', function (event) {\r\n        if (event.keyCode == 13) {\r\n            PCSubWin(isMF);\r\n        }\r\n    });\r\n\r\n    function buttonError(obj, text, notHide) {\r\n        var tip = $(obj).next('.widget-error-tips');\r\n        if (text === false) {\r\n            tip.hide();\r\n            return;\r\n        }\r\n        if (tip.length == 0) {\r\n            tip = $('<div class=\"button-error-tips widget-error-tips\"><span class=\"widget-error-tips-delta\"></span><div class=\"widget-error-tips-wrap\"><div class=\"content error-tips-content\"><span id=\"errorContent\"></span></div></div></div>').insertAfter($(obj));\r\n        }\r\n        tip.show().find('#errorContent').html(text);\r\n        $('body').off('click.buttonError');\r\n        if (notHide !== true) {\r\n            $('body').on('click.buttonError', function () {\r\n                tip.hide();\r\n                $('body').off('click.buttonError');\r\n            });\r\n        }\r\n    }\r\n\r\n    var rsaEncrypt = $.rsa.encrypt;\r\n\r\n\r\n    function lockWeb(bLock) {\r\n        $(\"#pc-login-password\").tpInput('disabled', bLock);\r\n        $(\"#pc-login-user\").tpInput('disabled', bLock);\r\n        //for phone\r\n        $(\"#ph-login-password\").prop('disabled', bLock);\r\n        $(\"#ph-login-user\").prop('disabled', bLock);\r\n\r\n        //cloud\r\n        $(\"#pc-cloud-password\").tpInput('disabled', bLock);\r\n        $(\"#pc-cloud-user\").tpInput('disabled', bLock);\r\n        $(\"#ph-cloud-password\").prop('disabled', bLock);\r\n        $(\"#ph-cloud-user\").prop('disabled', bLock);\r\n    }\r\n\r\n    function getHttpObject(hook) {\r\n        var xmlHttp = null;\r\n        try {\r\n            xmlHttp = new XMLHttpRequest();\r\n        } catch (e) {\r\n            try {\r\n                xmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n            } catch (e) {\r\n                try {\r\n                    xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n                } catch (e) {\r\n                    /* How to handle this error? */\r\n                }\r\n            }\r\n        }\r\n        xmlHttp.onreadystatechange = function () {\r\n            if (xmlHttp.readyState == 4) {\r\n                if (hook)\r\n                    hook();\r\n            }\r\n        };\r\n        return xmlHttp;\r\n    }\r\n\r\n    var n;\r\n    var e;\r\n    var us; //userSetting\r\n\r\n    /**\r\n     * get userSetting、ee、nn\r\n     */\r\n    function getAuthParm() {\r\n        var xmlHttpObj;\r\n        xmlHttpObj = getHttpObject(function () {\r\n            if (xmlHttpObj.status == 200) {\r\n                return;\r\n\r\n            } else {\r\n                window.location.href= window.location.protocol + \"//\" + window.location.host;\r\n            }\r\n        });\r\n\r\n        //bAsync must be set False to waiting entire response is received.\r\n        xmlHttpObj.open(\"POST\", window.location.protocol + \"//\" + window.location.host + \"/cgi/getParm\", false);\r\n        xmlHttpObj.send(null);\r\n        eval(xmlHttpObj.responseText);\r\n        n = nn;\r\n        e = ee;\r\n        us = userSetting;\r\n    }\r\n\r\n    function getBusy(callback) {\r\n        var xmlHttpObj;\r\n        var retry = 0;\r\n        var sendCgi = function () {\r\n        xmlHttpObj = getHttpObject(function () {\r\n            if (xmlHttpObj.status == 200) {\r\n                eval(xmlHttpObj.responseText);\r\n                callback.call(null, {\r\n                    isLogined: isLogined,\r\n                    isBusy: isBusy\r\n                });\r\n\r\n            } else {\r\n                    if (retry < 1) {\r\n                        retry++;\r\n                        sendCgi();\r\n                    } else {\r\n                window.location.href= window.location.protocol + \"//\" + window.location.host;\r\n            }\r\n                }\r\n        });\r\n\r\n        //bAsync must be set False to waiting entire response is received.\r\n        xmlHttpObj.open(\"POST\", window.location.protocol + \"//\" + window.location.host + \"/cgi/getBusy\", callback? true: false);\r\n        xmlHttpObj.send(null);\r\n        };\r\n\r\n        sendCgi();\r\n        if (callback === undefined) {\r\n            eval(xmlHttpObj.responseText);\r\n            return {\r\n                isLogined: isLogined,\r\n                isBusy: isBusy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /*==================================\r\n     *js for phone\r\n     ====================================*/\r\n    $('#pb-pc').on('click', function () {\r\n        document.cookie = 'UserChange=true';\r\n        window.location.href = window.location.protocol + \"//\" + window.location.host;\r\n    });\r\n\r\n    $('#ph-setPwd-new, #ph-setPwd-confirm, #ph-login-user, #ph-login-password, #ph-cloud-user, #ph-cloud-password').on('focus', function () {\r\n        $(this).removeClass('err').next('div.errDivP').hide();\r\n    });\r\n    /**\r\n     * 给文本框显示或隐藏提示\r\n     * @param obj {jQuery} input\r\n     * @param text {string/boolean} 为字符串是显示提示，等于false时隐藏提示\r\n     * @param isMobile {boolean} true表示手机\r\n     */\r\n    function inputError(obj, text, isMobile) {\r\n        if (text === false) {\r\n            if (isMobile) {\r\n                $(obj).removeClass('err').next('div.errDivP').hide();\r\n            } else {\r\n                $(obj).tpInput('hideError');\r\n            }\r\n        } else {\r\n            if (isMobile === true) {\r\n                $(obj).addClass('err').next('div.errDivP').show().find('.errTextP').html(text);\r\n            } else {\r\n                $(obj).tpInput('showError', text);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    $('#pb-phone').on('click', function () {\r\n        $.deleteCookie(\"UserChange\");\r\n    });\r\n\r\n    /*============================================\r\n     *init\r\n     ==============================================*/\r\n    if (document.getElementById(\"mainBody\") != null) {\r\n        (function (domain, port, frame, page) {\r\n            if ($.local) {\r\n                location.reload(true);\r\n            } else {\r\n                var ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n                window.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n            }\r\n        })();\r\n    }\r\n\r\n    /*==========================================\r\n     * code for setPwd\r\n     ==========================================*/\r\n    var pwdCheckOK = false;\r\n    $('#pc-setPwd-btn').on('click', function () {\r\n        setPwdSubmit();\r\n    });\r\n    $('#pc-setPwd-confirm').on('ev_focus', function () {\r\n        if (pwdCheckOK == false) {\r\n            $('#pc-setPwd-new').tpInput('focus');\r\n            checkPwd();\r\n        }\r\n    });\r\n    $(\"#pc-setPwd-new\").on('keyup', function () {\r\n        checkPwd();\r\n    });\r\n\r\n//for setPwd phone\r\n    $('#ph-setPwd-btn').on('click', function () {\r\n        setPwdSubmit(true);\r\n    });\r\n    $('#ph-setPwd-confirm').on('focus', function () {\r\n        if (pwdCheckOK == false) {\r\n            $('#ph-setPwd-new').focus();\r\n            checkPwd(true);\r\n        }\r\n    });\r\n    $(\"#ph-setPwd-new\").on('keyup', function () {\r\n        checkPwd(true);\r\n    });\r\n\r\n    function doSetPassword(pwd, callback) {\r\n        var xmlHttpObj;\r\n        if (us != 0 && us != 3) {\r\n            return;\r\n        }\r\n        xmlHttpObj = getHttpObject(function () {\r\n            if (xmlHttpObj.status == 200) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            } else\r\n                return;\r\n        });\r\n        var prePwd = encodeURIComponent($.Base64Encoding(pwd));\r\n        xmlHttpObj.open(\"POST\", window.location.protocol + \"//\" + window.location.host + \"/cgi/setPwd?pwd=\" + prePwd, true);\r\n        xmlHttpObj.send(null);\r\n    }\r\n\r\n    var setPwdSubmit = function (isMobile) {\r\n        var $password = $(\"#pc-setPwd-new\");\r\n        var $confirm = $(\"#pc-setPwd-confirm\");\r\n        var value = $password.tpInput('val');\r\n        var confirmValue = $confirm.tpInput('val');\r\n        if (isMobile === true) {\r\n            $password = $(\"#ph-setPwd-new\");\r\n            $confirm = $(\"#ph-setPwd-confirm\");\r\n            value = $password.val();\r\n            confirmValue = $confirm.val();\r\n        }\r\n        if (value == \"\") {\r\n            inputError($password, $.tpLang.login.tipsText, isMobile);\r\n            return;\r\n        }\r\n        if (value.length > 15) {\r\n            inputError($password, $.tpLang.login.tipsTextLength, isMobile);\r\n            return;\r\n        }\r\n        if (confirmValue == \"\") {\r\n            inputError($confirm, $.tpLang.login.tipsText, isMobile);\r\n            return;\r\n        }\r\n        if (confirmValue != value) {\r\n            inputError($confirm, $.tpLang.login.tipsTextConfirm, isMobile);\r\n            return;\r\n        }\r\n\r\n        doSetPassword(value, function() {\r\n            //do login after set password\r\n            var auth = rsaEncrypt($.Base64Encoding(value), n, e);\r\n            var name = rsaEncrypt('admin', n, e);\r\n            var action = 1;\r\n//            if (isMobile) {\r\n//                action = 3;\r\n//            }\r\n\r\n            doLogin(name, auth, action, isMobile, (isMobile ? $('#ph-setPwd-btn') : $('#pc-setPwd-btn')));\r\n        });\r\n    };\r\n\r\n    function checkPwd(isMobile) {\r\n        var $password = $(\"#pc-setPwd-new\");\r\n        var $pwdCheck = $('#pwdCheck');\r\n        var value = $password.tpInput('val');\r\n\r\n        if (isMobile === true) {\r\n            $password = $(\"#ph-setPwd-new\");\r\n            $pwdCheck = $('#passwordLevelP');\r\n            value = $password.val();\r\n        }\r\n\r\n        var asciiWithoutSpace = /^(?=[^ ]+$)[\\x21-\\x7f]+$/;\r\n        var upperRe = /[A-Z]/;\r\n        var lowerRe = /[a-z]/;\r\n        var otherRe = /(.[^a-zA-Z0-9])/;\r\n        var digitRe = /\\d/;\r\n\r\n        var hasUpper = 0;\r\n        var hasLower = 0;\r\n        var hasDigit = 0;\r\n        var hasOther = 0;\r\n        var largeLength = 0;\r\n\r\n        var level = 0;\r\n\r\n        if (asciiWithoutSpace.test(value) === false) {\r\n            $pwdCheck.removeClass('level1 level2 level3');\r\n            if (value == '') {\r\n                inputError($password, $.tpLang.login.tipsText, isMobile);\r\n            } else {\r\n                inputError($password, $.tpLang.login.tipsTextAscii, isMobile);\r\n            }\r\n            pwdCheckOK = false;\r\n            return;\r\n        } else {\r\n            inputError($password, false, isMobile);\r\n            if (upperRe.test(value)) {\r\n                hasUpper = 1;\r\n            } else {\r\n                hasUpper = 0;\r\n            }\r\n\r\n            if (lowerRe.test(value)) {\r\n                hasLower = 1;\r\n            } else {\r\n                hasLower = 0;\r\n            }\r\n\r\n            if (digitRe.test(value)) {\r\n                hasDigit = 1;\r\n            } else {\r\n                hasDigit = 0;\r\n            }\r\n\r\n            if (otherRe.test(value)) {\r\n                hasOther = 1;\r\n            } else {\r\n                hasOther = 0;\r\n            }\r\n\r\n            if (value.length > 10) {\r\n                largeLength = 1;\r\n            } else {\r\n                largeLength = 0;\r\n            }\r\n\r\n            level = hasUpper + hasLower + hasDigit + largeLength + hasOther;\r\n\r\n            if (value.length <= 5) {\r\n                if (level <= 2) {\r\n                    $pwdCheck.removeClass('level2 level3').addClass('level1');\r\n                } else if (level == 3 || level == 4) {\r\n                    $pwdCheck.removeClass('level1 level3').addClass('level2');\r\n                }\r\n            } else {\r\n                if (level <= 1) {\r\n                    $pwdCheck.removeClass('level2 level3').addClass('level1');\r\n                } else if (level == 2 || level == 3) {\r\n                    $pwdCheck.removeClass('level1 level3').addClass('level2');\r\n                } else if (level >= 4) {\r\n                    $pwdCheck.removeClass('level2 level1').addClass('level3');\r\n                }\r\n            }\r\n\r\n            pwdCheckOK = true;\r\n        }\r\n    }\r\n\r\n    function initSetPwd(isMobile) {\r\n        $('#pc-login').addClass('nd');\r\n        $('#pc-cloud').addClass('nd');\r\n        $('#pc-setPwd').removeClass('nd');\r\n        $('#qr-code-container').removeClass('nd');\r\n\r\n        buttonError($('#pc-setPwd-btn'), \"<span class='red'>\" + $.tpLang.login.notePart1 + \":</span> <br />\" + $.tpLang.login.notePart2);\r\n        //phone\r\n        $('#ph-setPwd').removeClass('nd');\r\n        $('#ph-login').addClass('nd');\r\n        $('#ph-cloud').addClass('nd');\r\n        $('#ph-setPwd-note').show().find('.errTextP').html(\"<span class='red'>\" + $.tpLang.login.notePart1 + \":</span> <br />\" + $.tpLang.login.notePart2);\r\n\r\n    }\r\n\r\n    /*==========================================\r\n     * code for login\r\n     ==========================================*/\r\n    $('#pc-login-password').on('ev_focus', function () {\r\n        if (INCLUDE_LOGIN_USERNAME && $('#pc-login-user').val() == '') {\r\n            inputError($('#pc-login-user'), $.tpLang.login.tipsText);\r\n        }\r\n    });\r\n    $('#pc-login-btn').on('click', function () {\r\n        loginSubmit();\r\n    });\r\n\r\n    $('#pc-login-forgetPwd').html($.tpLang.login.forgetPwd).on(\"click\", function (e) {\r\n        $('#pc-login-forget').removeClass('nd');\r\n        $('#pc-login-main').addClass('nd');\r\n    });\r\n    $('#pc-login-forget-back').on(\"click\", function (e) {\r\n        $('#pc-login-forget').addClass('nd');\r\n        $('#pc-login-main').removeClass('nd');\r\n        return false;\r\n    });\r\n//for phone\r\n    $('#ph-login-password').on('focus', function () {\r\n        if (INCLUDE_LOGIN_USERNAME && $('#ph-login-user').val() == '') {\r\n            inputError($('#pc-login-user'), $.tpLang.login.tipsText, true);\r\n        }\r\n    });\r\n\r\n    $('#ph-login-btn').on('click', function () {\r\n        loginSubmit(true);\r\n    });\r\n\r\n    function showWelcome() {\r\n        $('#welcome').removeClass('nd');\r\n        $('#ph-div').addClass('nd');\r\n        var icons = ['usb', 'wireless', 'internet', 'guest', 'device', 'phone'];\r\n        for (var i = 0; i < icons.length; i++) {\r\n            (function() {\r\n                var id = 'wel-'+icons[i];\r\n                var name = icons[i]+'-show';\r\n                setTimeout(function() {\r\n                    $('#' + id).addClass(name);\r\n                }, 100*(i+1));\r\n            })();\r\n        }\r\n        setTimeout(function() {\r\n            $('#wel-logo').addClass('logo-show');\r\n        }, 1500);\r\n        setTimeout(function() {\r\n            showLoginMobile();\r\n        }, 3500);\r\n    }\r\n\r\n    function showLoginMobile() {\r\n        $('#welcome').addClass('nd');\r\n        $('#ph-div').removeClass('nd');\r\n    }\r\n\r\n    function initLogin(isMobile) {\r\n        $('#pc-login').removeClass('nd');\r\n        $('#pc-cloud').addClass('nd');\r\n        $('#pc-setPwd').addClass('nd');\r\n\r\n        $('#ph-login').removeClass('nd');\r\n        $('#ph-setPwd').addClass('nd');\r\n        $('#ph-cloud').addClass('nd');\r\n\r\n        //开机动画\r\n        if (isMobile == true && authTimes == 0) {\r\n            showWelcome();\r\n        } else {\r\n            showLoginMobile();\r\n        }\r\n\r\n        if (INCLUDE_LOGIN_USERNAME) {\r\n            $('#pc-login-user-div').removeClass('nd');\r\n            $('#ph-login-user-div').removeClass('nd');\r\n        }\r\n        if (authTimes > 0) {\r\n            var text = $.tpLang.login.errorText;\r\n            if (INCLUDE_LOGIN_USERNAME) {\r\n                text = $.tpLang.login.errorText2;\r\n            }\r\n            buttonError($('#pc-login-btn'), text);\r\n            inputError($('#ph-login-password'), text, true);\r\n            if (INCLUDE_LOGIN_USERNAME) {\r\n                $('#ph-login-password').removeClass('err');\r\n            }\r\n\r\n        }\r\n        if (authTimes >= 5) {\r\n            isLocked = true;\r\n            lockWeb(true);\r\n            var count = 600 - forbidTime;\r\n            buttonError($('#pc-login-btn'), timesText.replace('$', count), true);\r\n            inputError($('#ph-login-password'), timesText.replace('$', count), true);\r\n            if (INCLUDE_LOGIN_USERNAME) {\r\n                $('#ph-login-password').removeClass('err');\r\n            }\r\n            setTimeout(function () {\r\n                if (count < 1) {\r\n                    buttonError($('#pc-login-btn'), false);\r\n                    inputError($('#ph-login-password'), false, true);\r\n                    isLocked = false;\r\n                    lockWeb(false);\r\n                    if (INCLUDE_LOGIN_USERNAME) {\r\n                        if (isMF) {\r\n                            $('#ph-login-user').focus();\r\n                        } else {\r\n                            $('#pc-login-user').focus();\r\n                        }\r\n                    } else {\r\n                        if (isMF) {\r\n                            $('#ph-login-password').focus();\r\n                        } else {\r\n                            $('#pc-login-password').focus();\r\n                        }\r\n                    }\r\n\r\n                    window.location.reload();\r\n                    return;\r\n                }\r\n                count--;\r\n                buttonError($('#pc-login-btn'), timesText.replace('$', count), true);\r\n                inputError($('#ph-login-password'), timesText.replace('$', count), true);\r\n                if (INCLUDE_LOGIN_USERNAME) {\r\n                    $('#ph-login-password').removeClass('err');\r\n                }\r\n                window.setTimeout(arguments.callee, 1000);\r\n            }, 1000);\r\n        } else {\r\n            if (INCLUDE_LOGIN_USERNAME) {\r\n                if (isMF) {\r\n                    $('#ph-login-user').focus();\r\n                } else {\r\n                    $('#pc-login-user').focus();\r\n                }\r\n            } else {\r\n                if (isMF) {\r\n//                    $('#ph-login-password').focus();\r\n                } else {\r\n                    $('#pc-login-password').focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\tvar doPCsimpleLogin = function(usr, pwd){\r\n\t\tif (isLocked == true)\r\n\t\t{\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\t\t\r\n\t\tvar auth;\r\n\t\tvar password = pwd;\r\n\t\tvar userName = usr;\r\n\t\r\n\t\tif (forbidAdminLogin == 1){\r\n\t\t\t//$(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t//$(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\tauth = \"Basic \"+$.Base64Encoding(userName+\":\"+password);\r\n\t\tdocument.cookie = \"Authorization=\" + auth;\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n    var loginSubmit = function (isMobile) {\r\n        if (isLocked == true) {\r\n            return;\r\n        }\r\n\r\n        var auth;\r\n        var name;\r\n        var action = 1;\r\n        var $password = $(\"#pc-login-password\");\r\n        var $user = $(\"#pc-login-user\");\r\n\t\t\r\n        var pwd = $(\"#pc-login-password\").tpInput('val');\r\n\t\t/* for this platform*/\r\n\t\tif(1)\r\n\t\t{\r\n\t\t\tvar usr = $(\"#pc-login-password\").tpInput('val');\r\n\t\t\tdoPCsimpleLogin(usr, pwd);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (isMobile === true) {\r\n\t\t\t\t$password = $(\"#ph-login-password\");\r\n\t\t\t\t$user = $(\"#ph-login-user\");\r\n\t\t\t\tpwd = $password.val();\r\n\t\t\t}\r\n\r\n\t\t\tvar user = $user.val();\r\n\r\n\t\t\tif (INCLUDE_LOGIN_USERNAME && user == '') {\r\n\t\t\t\tinputError($user, $.tpLang.login.tipsText, isMobile);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (pwd == \"\") {\r\n\t\t\t\tinputError($password, $.tpLang.login.tipsText, isMobile);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tauth = rsaEncrypt($.Base64Encoding(pwd), n, e);\r\n\t\t\tif (INCLUDE_LOGIN_USERNAME) {\r\n\t\t\t\tname = rsaEncrypt(user, n, e);\r\n\t\t\t} else {\r\n\t\t\t\tname = rsaEncrypt('admin', n, e);\r\n\t\t\t}\r\n\r\n\t//        if (isMobile) {\r\n\t//            action = 3;\r\n\t//        }\r\n\r\n\t\t\tdoLogin(name, auth, action, isMobile, (isMobile ? $('#ph-login-btn') : $('#pc-login-btn')));\r\n\t\t\t\r\n\t\t}\r\n    };\r\n\r\n    /**\r\n     * 普通登录，云登录，手机登录共用的接口\r\n     * @param name {string} 用户名\r\n     * @param auth {string} 密码\r\n     * @param action {number} 操作，这里只会出现1:普通登录和云登录，3:手机登录\r\n     * @param isMobile {boolean} 手机UI标志位，用于addLoading\r\n     * @param btn {jQuery object} 当前登录的按钮，用于addLoading\r\n     */\r\n    function doLogin(name, auth, action, isMobile, btn) {\r\n\r\n        if (!isMobile) {\r\n            $.addLoading(btn);\r\n        } else {\r\n            $.showCover();\r\n        }\r\n\r\n        var xmlHttpObj = getHttpObject(function () {\r\n            if (!isMobile) {\r\n                $.removeLoading();\r\n            }\r\n            window.location.href= window.location.protocol + \"//\" + window.location.host;\r\n        });\r\n\r\n        xmlHttpObj.open(\"POST\", window.location.protocol + \"//\" + window.location.host + \"/cgi/login?UserName=\" + name + \"&Passwd=\" + auth + \"&Action=\" + action + \"&LoginStatus=0\", true);\r\n\r\n        getBusy(function(status) {\r\n            if (status.isLogined == 0) {\r\n                //没人登录则直接登录\r\n                xmlHttpObj.send(null);\r\n            } else {\r\n                //弹出提示说已经有人登录是不是要强制登录\r\n                tpConfirm($.tpLang.login.forceLogout, function () {\r\n                    if (!isMobile) {\r\n                        $.addLoading(btn);\r\n                    } else {\r\n                        $.showCover();\r\n                    }\r\n\r\n                    if (status.isBusy == 1) {\r\n                        var delay = 1000;\r\n                        var count = 0;\r\n                        var timesTotal = 2;\r\n                        var ask = function() {\r\n                            getBusy(function(satus) {\r\n                                if (status.isBusy == 0 || count >= timesTotal) {\r\n                                    //空闲或轮询次数到达最大次数就直接登录\r\n                                    xmlHttpObj.send(null);\r\n                                } else {\r\n                                    count++;\r\n                                    //轮询次数未到最大次数，进入递归\r\n                                    setTimeout(ask, delay);\r\n                                }\r\n                            });\r\n                        };\r\n                        setTimeout(ask, delay);\r\n                    } else {\r\n                        xmlHttpObj.send(null);\r\n                    }\r\n                }, function () {\r\n                    if (!isMobile) {\r\n                        $.removeLoading();\r\n                    }\r\n                }, null, $.tpLang.login.login, $.tpLang.m_str.cancel);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 确认框\r\n     * @param str {string} 提示文本\r\n     * @param ok {function} 确认回调\r\n     * @param no {function} 取消回调\r\n     * @param replaceStr {string} 保留未用\r\n     * @param okStr {string} 确认按钮的文本\r\n     * @param cancelStr {string} 取消按钮的文本\r\n     */\r\n    function tpConfirm(str, ok, no, replaceStr, okStr, cancelStr) {\r\n        $('#mask').show();\r\n        var container = $('#alert-container');\r\n        if (isMF) {\r\n            container.addClass('ph');\r\n        } else {\r\n            container.removeClass('ph');\r\n        }\r\n        container.show()\r\n                .find('.grid-warning-msg span.text').html(str);\r\n        $('#confirm-no').html('<span>' + (cancelStr || $.tpLang.m_str.cancel) + '</span>').off('click').on('click', function () {\r\n            $('#alert-container').hide();\r\n            $('#mask').hide();\r\n            if (no) {\r\n                no();\r\n            }\r\n        });\r\n\r\n        $('#alert-container .msg-close').off('click').on('click', function () {\r\n            $('#alert-container').hide();\r\n            $('#mask').hide();\r\n            if (no) {\r\n                no();\r\n            }\r\n        });\r\n        $('#confirm-yes').html('<span>' + (okStr || $.tpLang.m_str.ok) + '</span>').off('click').on('click', function () {\r\n            $('#alert-container').hide();\r\n            $('#mask').hide();\r\n            if (ok) {\r\n                ok();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /*==========================================\r\n     * code for pc cloud\r\n     ==========================================*/\r\n    var token;\r\n    $('#pc-cloud-btn').on('click', function () {\r\n        cloudSubmit();\r\n    });\r\n    $('#pc-cloud-user').tpInput({\r\n        placeholder: $.tpLang.login.email\r\n    });\r\n    $('#pc-cloud-password').on('ev_focus', function () {\r\n        if ($('#pc-cloud-user').tpInput('val') == '') {\r\n            inputError($('#pc-cloud-user'), $.tpLang.login.tipsText);\r\n        }\r\n    }).tpInput({\r\n        placeholder: $.tpLang.login.password\r\n    });\r\n\r\n    $('#pc-cloud-forgetPwd').html($.tpLang.login.forgetPwd).on(\"click\", function (e) {\r\n        e.preventDefault();\r\n        onReceive({data: {eType: \"ev_goto\", url: \"findBackPassword\"}, source: null, origin: \"_self\"});\r\n    });\r\n\r\n    function initCloud(isMobile) {\r\n        $('#pc-login').addClass('nd');\r\n        $('#pc-cloud').removeClass('nd');\r\n        $('#pc-setPwd').addClass('nd');\r\n\r\n        $('#ph-login').addClass('nd');\r\n        $('#ph-cloud').removeClass('nd');\r\n        $('#ph-setPwd').addClass('nd');\r\n\r\n        //开机动画\r\n        if (isMobile == true && authTimes == 0) {\r\n            showWelcome();\r\n        } else {\r\n            showLoginMobile();\r\n        }\r\n\r\n        if (authTimes > 0) {\r\n            buttonError($('#pc-cloud-btn'), $.tpLang.login.errorText2);\r\n            inputError($('#ph-cloud-password'), $.tpLang.login.errorText2, true);\r\n        }\r\n        if (authTimes >= 5) {\r\n            isLocked = true;\r\n            lockWeb(true);\r\n            var count = 600 - forbidTime;\r\n            buttonError($('#pc-cloud-btn'), timesText.replace('$', count), true);\r\n            inputError($('#ph-cloud-password'), timesText.replace('$', count), true);\r\n\r\n            setTimeout(function () {\r\n                if (count < 1) {\r\n                    buttonError($('#pc-cloud-btn'), false);\r\n                    inputError($('#ph-cloud-password'), false, true);\r\n                    isLocked = false;\r\n                    lockWeb(false);\r\n                    $('#pc-cloud-user').focus();\r\n                    $('#ph-cloud-user').focus();\r\n\r\n                    window.location.href= window.location.protocol + \"//\" + window.location.host;\r\n                    return;\r\n                }\r\n                count--;\r\n                buttonError($('#pc-cloud-btn'), timesText.replace('$', count), true);\r\n                inputError($('#ph-cloud-password'), timesText.replace('$', count), true);\r\n                window.setTimeout(arguments.callee, 1000);\r\n            }, 1000);\r\n        }\r\n        /*else {\r\n         $('#pc-cloud-user').focus();\r\n         }*/\r\n    }\r\n\r\n    var cloudSubmit = function (isMobile) {\r\n\r\n        if (isLocked == true) {\r\n            return;\r\n        }\r\n\r\n        var auth;\r\n        var name;\r\n        var action = 1;\r\n        var $password = $(\"#pc-cloud-password\");\r\n        var $user = $(\"#pc-cloud-user\");\r\n        var pwd = $password.tpInput('val');\r\n        var user = $user.tpInput('val');\r\n\r\n        if (isMobile === true) {\r\n            $password = $(\"#ph-cloud-password\");\r\n            $user = $(\"#ph-cloud-user\");\r\n            pwd = $password.val();\r\n            user = $user.val();\r\n        }\r\n\r\n\r\n        if (user == '') {\r\n            inputError($user, $.tpLang.login.tipsText, isMobile);\r\n            return;\r\n        }\r\n        var regex = /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*$/;\r\n        if (!regex.test(user)) {\r\n            inputError($user, $.tpLang.login.emailFormat, isMobile);\r\n            return;\r\n        }\r\n        if (pwd == \"\") {\r\n            inputError($password, $.tpLang.login.tipsText, isMobile);\r\n            return;\r\n        }\r\n\r\n        auth = rsaEncrypt($.Base64Encoding(pwd), n, e);\r\n        name = rsaEncrypt(user, n, e);\r\n\r\n//        if (us == \"2\") {\r\n//            name = rsaEncrypt(\"zhujunjie@tp-link.net\", n, e);\r\n//        }\r\n//        else {\r\n//            name = rsaEncrypt(\"admin\", n, e);\r\n//        }\r\n\r\n        doLogin(name, auth, action, isMobile, (isMobile ? $('#ph-cloud-btn') : $('#pc-cloud-btn')));\r\n    };\r\n\r\n    /***************cloud event ********************/\r\n        //param e include e.data & e.source & e.origin\r\n    function onReceive(eObject) {\r\n        var e = eObject.originalEvent || eObject;\r\n        if (e.origin !== $.cloudOrigin && e.origin !== \"_self\" && e.origin != undefined) {\r\n            return;\r\n        }\r\n        var data = e.data;\r\n        if (typeof(e.data) == \"string\") {\r\n            data = $.parseJSON(data);\r\n        }\r\n        if (data) {\r\n            switch (data.eType) {\r\n                //module change\r\n                case \"ev_goto\":\r\n                {\r\n                    if (data.url) {\r\n                        //getToken and set iframe's src, then set wating event(10s timeout)\r\n                        $.getToken(data.url, null, false);\r\n                    }\r\n                    else {\r\n                        if (data.index == \"activation\") {\r\n                            ;\r\n                        }\r\n                    }\r\n                    if (\"login\" == data.url || \"login\" == data.index) {\r\n                        $(\"#cloud-login\").hide();\r\n                        $(\"#pc-cloud-form\").show();\r\n//                    $.su.layout.doLayout();        //only for login.html\r\n                    }\r\n                    else if (\"findBackPassword\" == data.url || \"findBackPassword\" == data.index) {\r\n                        $.showLoading();\r\n//                    $.su.loading.show(\"iframeResize\");\r\n                        $(\"#pc-cloud-form\").hide();\r\n                    }\r\n                    break;\r\n                }\r\n                case \"load\":\r\n                {\r\n                    var params = {};\r\n                    params.locale = locale_language;\r\n                    params.force = true;\r\n                    params.model = modelName;\r\n                    params.eType = \"ev_init\";\r\n                    var str = JSON.stringify(params);\r\n                    window.frames[\"cloud-login\"] && window.frames[\"cloud-login\"].postMessage(str, $.cloudOrigin);\r\n                    $.clearWaitingEvent(); //iframe load success\r\n                    $.postToken();\r\n                    $.getDeviceInfo(false);//false === don't have stok\r\n                    $(\"#cloud-login\").show();\r\n\r\n                }\r\n                case \"ev_reset\":\r\n                {\r\n                    $.iframeResize($(\"#cloud-login\"), data.height);\r\n                    break;\r\n                }\r\n                //cloud request has no response\r\n                case \"ev_error\":\r\n                {\r\n                    $(\"#cloud-login\").attr(\"src\", \"../main/offlineError.htm\");\r\n                    $(\"#cloud-login\").css({\"height\": 300});//offlineError.html's default height\r\n                    break;\r\n                }\r\n                case \"ev_windowResize\":\r\n                {\r\n                    var hasFrame = false;\r\n                    try {\r\n                        window.frames[\"cloud-login\"] && window.frames[\"cloud-login\"].name;\r\n                    } catch (error) {\r\n                        hasFrame = true;\r\n                    }\r\n                    if (hasFrame) {\r\n                        var params = {};\r\n                        params.eType = \"ev_windowResize\";\r\n                        params.windowHeight = $(window).height() - 90;//window's height - headHeight\r\n                        params.windowWidth = $(window).width();//window's width\r\n                        params.iframeTop = $(\"#cloud-login\").offset().top //iframe top\r\n                        var str = JSON.stringify(params);\r\n                        window.frames[\"cloud-login\"].postMessage(str, $.su.url.cloudOrigin);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    $(window).on(\"ev_watingTimeout\", function () {//iframe load failed\r\n        $.clearWaitingEvent();\r\n        $(\"#cloud-login\").attr(\"src\", \"../main/offlineError.htm\");\r\n        $(\"#cloud-login\").css({\"height\": 300});//offlineError.html's default height\r\n        $(\"#cloud-login\").show();\r\n        $.removeLoading();\r\n//    $.su.loading.hide(\"iframeResize\");\r\n    });\r\n    $(window).on(\"message\", onReceive);\r\n\r\n//btn in cloud\r\n//$('#findPwd_back').on('click', function () {\r\n//    $(\"#pc-cloud-form\").show();\r\n//});\r\n    /***************cloud event end********************/\r\n\r\n\r\n    /*==========================================\r\n     * entrance for this page\r\n     ==========================================*/\r\n\r\n    function initPhone() {\r\n        var setFontSize = document.createElement('script');\r\n        setFontSize.type = 'text/javascript';\r\n        setFontSize.innerHTML = 'var winX = $(window).width();var winY = $(window).height();var fontSize = 27 * ((winX < winY ? winX : winY) / 640);$(\"html\").css(\"font-size\", fontSize + \"px\");';\r\n        $('head').append(setFontSize);\r\n\r\n        $('#pc-div').hide();\r\n        $('#ph-div').show();\r\n        $('body').addClass('phoneBody');\r\n\r\n        switch (us) {\r\n            case 0:\r\n            case 3:\r\n                //重设密码\r\n                initSetPwd(true);\r\n                PCSubWin = setPwdSubmit;\r\n                break;\r\n            case 2:\r\n                //云登录\r\n                initCloud(true);\r\n                PCSubWin = cloudSubmit;\r\n                break;\r\n            case 1:\r\n            default :\r\n                //普通登录\r\n                initLogin(true);\r\n                PCSubWin = loginSubmit;\r\n                break;\r\n        }\r\n    }\r\n\r\n    function initPC() {\r\n        $('#pc-div').show();\r\n        $('#ph-div').hide();\r\n        $('body').removeClass('phoneBody');\r\n        switch (us) {\r\n            case 0:\r\n            case 3:\r\n                //重设密码\r\n                initSetPwd();\r\n                PCSubWin = setPwdSubmit;\r\n                break;\r\n            case 2:\r\n                //云登录\r\n                initCloud();\r\n                PCSubWin = cloudSubmit;\r\n                break;\r\n            case 1:\r\n            default :\r\n                //普通登录\r\n                initLogin();\r\n                PCSubWin = loginSubmit;\r\n                break;\r\n        }\r\n    }\r\n\r\n    function isMobile() {\r\n        if (!('hasMobile' in window && hasMobile === '1')) {\r\n            return false;\r\n        }\r\n        var check = false;\r\n        (function (a) {\r\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true\r\n        })(navigator.userAgent || navigator.vendor || window.opera);\r\n        isMF = check;\r\n        return check;\r\n\r\n    }\r\n\r\n    function checkPlatform() {\r\n        var meta;\r\n        meta = document.createElement('meta');\r\n        meta.id = \"viewport\";\r\n        meta.name = \"viewport\";\r\n        if (isMobile() && (document.cookie.search('UserChange=true') === -1)) {\r\n            meta.content = \"width=device-width, minimum-scale=1, maximum-scale=1,user-scalable=no\";\r\n            $('head').append($(meta));\r\n\r\n            initPhone();\r\n        } else {\r\n            $('head').append($(meta));\r\n            initPC();\r\n        }\r\n\r\n    }\r\n\r\n    //getAuthParm();\r\n    checkPlatform();\r\n});\r\n</script>\r\n</body>\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "login_8.htm",
        "uriBaseId" : "%SRCROOT%",
        "index" : 66
      },
      "contents" : {
        "text" : "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\r\n        \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n\r\n<head>\r\n    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"../img/favicon.ico\"/>\r\n    <link rel=\"stylesheet\" href=\"../css/main.css\"/>\r\n    <link rel=\"stylesheet\" href=\"../css/login.css\"/>\r\n    <link rel=\"stylesheet\" href=\"../css/jquery.tpInput.css\"/>\r\n\r\n    <script src=\"../js/jquery-1.8.3.min.js\" type=\"text/javascript\"></script>\r\n\t\r\n\t<script src=\"../js/oid_str.js\" type=\"text/javascript\"></script>\r\n    <script src=\"../js/proxy.js\" type=\"text/javascript\"></script>\r\n\t\r\n    <script src=\"../js/lib.js\" type=\"text/javascript\"></script>\r\n    <script type=\"text/javascript\" src=\"../locale/language.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/locale.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/encrypt.js\"></script>\r\n    <script type=\"text/javascript\" src=\"../js/jquery.tpInput.js\"></script>\r\n\t\r\n\t<script id=\"lan-str-js\" type=\"text/javascript\" src=\"../locale/en_US/str.js\"></script>\r\n\t<script id=\"lan-help-js\" type=\"text/javascript\" src=\"../locale/en_US/help.js\"></script>\r\n\t<script id=\"lan-err-js\" type=\"text/javascript\" src=\"../locale/en_US/err.js\"></script>\r\n\t<script id=\"lan-array-js\" type=\"text/javascript\" src=\"../locale/en_US/array.js\"></script>\r\n\t<script id=\"lan-css\" type=\"text/javascript\" src=\"../locale/en_US/lan.css\"></script>\r\n    <!--[if lte IE 8]>\r\n    <link href=\"./css/ie.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n    <style type=\"text/css\">\r\n        .input-err-container .input-err-delta, #pc-scroll div.widget-error-tips span.widget-error-tips-delta {\r\n            top: 4px;\r\n            left: 96px;\r\n        }\r\n\r\n        .input-container .input-err-container, .button-error-tips {\r\n            left: -11px;\r\n            top: 30px;\r\n        }\r\n\r\n        .input-container .input-wrapper {\r\n            background: url(\"../img/ie.png\") no-repeat -250px -226px;\r\n            border: none;\r\n            width: 184px;\r\n            height: 33px;\r\n        }\r\n\r\n        .input-container.err .input-wrapper {\r\n            background-position: -219px -173px;\r\n            border: none;\r\n        }\r\n\r\n        .input-container.focus .input-wrapper {\r\n            background-position: 1px -225px;\r\n            border: none;\r\n        }\r\n\r\n        button.button-button {\r\n            background: url(\"../img/ie.png\") no-repeat -255px -32px;\r\n        }\r\n\r\n        button.button-button:hover {\r\n            background: url(\"../img/ie.png\") no-repeat 0px -32px;\r\n        }\r\n\r\n        #pc-scroll div.widget-error-tips div.widget-error-tips-wrap, .input-err-container .input-err-content {\r\n            border: 0;\r\n            box-shadow: none;\r\n        }\r\n\r\n        .shadow-top {\r\n            background: url(\"../img/ie-01.png\") repeat-x 0 -5px;\r\n            top: -13px;\r\n            left: 0;\r\n            height: 13px;\r\n            margin: 0 17px 0 17px;\r\n        }\r\n\r\n        .shadow-bot {\r\n            background: url(\"../img/ie-01.png\") repeat-x center bottom;\r\n            bottom: -13px;\r\n            left: 0;\r\n            height: 13px;\r\n            margin: 0 17px 0 17px;\r\n        }\r\n\r\n        .shadow-top-left, .shadow-top-right, .shadow-bot-left, .shadow-bot-right {\r\n            position: absolute;\r\n            width: 17px;\r\n            height: 11px;\r\n            background: url(../img/ie-06.png) no-repeat 0px -56px;\r\n        }\r\n\r\n        .shadow-top-left {\r\n            background-position: 0px -56px;\r\n            left: 4px;\r\n            top: 4px;\r\n        }\r\n\r\n        .shadow-top-right {\r\n            background-position: 0px -38px;\r\n            right: 0;\r\n            top: 3px;\r\n        }\r\n\r\n        .shadow-bot-left {\r\n            background-position: 0px -76px;\r\n            left: 3px;\r\n            bottom: 8px;\r\n        }\r\n\r\n        .shadow-bot-right {\r\n            background-position: 0px -95px;\r\n            right: 0;\r\n            bottom: 8px;\r\n        }\r\n\r\n        .shadow-left {\r\n            padding-left: 11px;\r\n            background: url(../img/ie-02.png) no-repeat 0px 0px;\r\n        }\r\n\r\n        .shadow-right {\r\n            padding-right: 11px;\r\n            background: url(../img/ie-02.png) no-repeat center right;\r\n        }\r\n\r\n    </style>\r\n    <![endif]-->\r\n</head>\r\n<body>\r\n<div id=\"cover\" class=\"nd\"></div>\r\n<div id=\"mask\" class=\"mask\"></div>\r\n<span class=\"load\" style=\"display: none\">for cache</span>\r\n\r\n<div id=\"pc-div\">\r\n<div id=\"pc-top\">\r\n    <div id=\"pc-top-container\">\r\n        <a id=\"pc-top-product\" href=\"http://www.tp-link.com\" target=\"_blank\">\r\n            <span class=\"icon-logo\"></span>\r\n        </a>\r\n    </div>\r\n</div>\r\n<div id=\"pc-scroll\">\r\n    <div id=\"pc-arrowBg\"></div>\r\n    <div id=\"pc-main\">\r\n        <div class=\"pc-login-content\" id=\"pc-login\">\r\n            <div id=\"pc-login-forget\" class=\"nd\">\r\n                <h4 id=\"pc-login-forget-title\"></h4>\r\n                <p id=\"pc-login-forget-text\"></p>\r\n                <div class=\"button-container\">\r\n                    <form class=\"pure-form\">\r\n                        <button type=\"submit\" class=\"green T_save pure-button tp-btn-custom\" id=\"pc-login-forget-back\"><span class=\"\">Save</span></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div id=\"pc-login-main\">\r\n                <!-- div class=\"pc-login-field nd\" id=\"pc-login-user-div\"> -->\r\n\t\t\t\t<div class=\"pc-login-field\" id=\"pc-login-user-div\">\r\n                    <div class=\"pc-inputarea\">\r\n                        <label class=\"pc-login-username-label\">\r\n                            <span class=\"icon\"></span>\r\n                            <span class=\"text\"></span>\r\n                        </label>\r\n                        <input type=\"text\" id=\"pc-login-user\" autocomplete=\"off\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"pc-login-field\">\r\n                    <div class=\"pc-inputarea\">\r\n                        <label class=\"pc-login-password-label\">\r\n                            <span class=\"icon\"></span>\r\n                        </label>\r\n                        <input type=\"password\" id=\"pc-login-password\" maxlength=\"15\" autocomplete=\"off\">\r\n                        <span class=\"pc-forgetPwd\"><a href=\"#\" id=\"pc-login-forgetPwd\">For get password</a></span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div class=\"button-wrapper\">\r\n                        <button id=\"pc-login-btn\" class=\"button-button\" type=\"button\">\r\n                            <span class=\"text button-text\">Log in</span>\r\n                        </button>\r\n                        <div class=\"button-error-tips widget-error-tips\">\r\n                            <div class=\"shadow-top-left\"></div>\r\n                            <div class=\"shadow-top\"></div>\r\n                            <div class=\"shadow-top-right\"></div>\r\n                            <div class=\"shadow-left\">\r\n                                <div class=\"shadow-right\">\r\n                                    <span class=\"widget-error-tips-delta\"></span>\r\n\r\n                                    <div class=\"widget-error-tips-wrap\">\r\n                                        <div class=\"content error-tips-content\">\r\n                                            <span id=\"errorContent\"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"shadow-bot-left\"></div>\r\n                            <div class=\"shadow-bot\"></div>\r\n                            <div class=\"shadow-bot-right\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\t\t\t\r\n        </div>\r\n\r\n      \r\n    </div>\r\n\r\n    <div id=\"pc-bottomContainer\">\r\n        <div id=\"pc-bottom\">\r\n            <span id=\"pc-bot-productName\"></span>\r\n            <span id=\"pc-bot-app\" ></span>\r\n            <span id=\"pc-bot-modelDesc\"></span>\r\n        </div>\r\n        <div class=\"pc-bottom-background\"></div>\r\n        <div class=\"qr-code-container login nd\" id=\"qr-code-container\">\r\n            <div class=\"qr-code-container-wrapper\">\r\n                <div class=\"qr-code\">\r\n                    <span id=\"qr-close-icon\" class=\"close-icon\"></span>\r\n                    <div class=\"characters-illustrate\">\r\n                        <span id=\"characters-illustrate-title\" class=\"characters-illustrate-title\"></span>\r\n                        <span id=\"characters-illustrate-note\" class=\"characters-illustrate-note\"></span>\r\n                    </div>\r\n                    <span class=\"qr-code-picture\"></span>\r\n                    <div class=\"app-download-place\">\r\n                        <a href=\"https://itunes.apple.com/us/app/tp-link-tether/id599496594?ls=1&mt=8\" target=\"_blank\"><span class=\"apple-store\"></span></a>\r\n                        <a href=\"https://play.google.com/store/apps/details?id=com.tplink.tether\" target=\"_blank\"><span class=\"google-play\"></span></a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"qr-code-container-delta\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n<div id=\"alert-container\"\r\n     class=\"alert-container widget-container msg-container grid-popup-msg msg-container-center\">\r\n    <div class=\"msg-container-wrapper\">\r\n        <div class=\"position-top-left\"></div>\r\n        <div class=\"position-top-center\"></div>\r\n        <div class=\"position-top-right\"></div>\r\n        <div class=\"position-center-left\">\r\n            <div class=\"position-center-right\">\r\n                <div class=\"msg-wrap\"><a class=\"widget-close msg-close\" href=\"javascript:void(0);\"></a>\r\n\r\n                    <div class=\"msg-content-wrap\">\r\n                        <div class=\"widget-content msg-content-container\">\r\n                            <div class=\"grid-warning-msg\"><span class=\"icon\"></span><span class=\"text\">The device will reboot. Are you sure to continue?</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"msg-btn-container\">\r\n                    <div class=\"msg-btn-wrap\">\r\n                        <div class=\"button-container in-line\">\r\n                            <button type=\"button\" class=\"button-button green pure-button btn-msg btn-msg-no btn-confirm\"\r\n                                    id=\"confirm-no\">\r\n                                <span>No</span></button>\r\n                        </div>\r\n                        <div class=\"button-container in-line\">\r\n                            <button type=\"button\" class=\"button-button green pure-button btn-msg btn-msg-ok btn-confirm\"\r\n                                    id=\"confirm-yes\">\r\n                                <span>Yes</span></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"position-bottom-left\"></div>\r\n        <div class=\"position-bottom-center\"></div>\r\n        <div class=\"position-bottom-right\"></div>\r\n    </div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n$(function () {\r\n\tvar authTimes = 0;\r\n    var INCLUDE_LOGIN_USERNAME = 0;      //控制普通登录是否有用户名\r\n\r\n    if ($(\"div#main\").length > 0){\r\n        window.parent.location.href = \"/\";\r\n    }\r\n\r\n    if (location.protocol != \"https:\") {\r\n        //if local https function is enable and protocol is no https:, jump to https;\r\n        if ('httpsLocalEnabled'in window && httpsLocalEnabled == '1') {\r\n            window.location.href = \"https://\" + location.hostname + (('httpsLocalPort' in window && httpsLocalPort == \"\") ? \"\" : (\":\" + httpsLocalPort));\r\n        }\r\n    }\r\n    /*=================================\r\n     *multi language\r\n     ===================================*/\r\n\t//var locale_language=\"en_US\";\r\n    try {\r\n        $.locale.load(locale_language, null, null, true);\r\n    } catch (e) {\r\n    }\r\n//set text and html with $.tpLang\r\n    var timesText = $.tpLang.login.timesText;\r\n\r\n    $('#pc-top-product').attr('href', $.su.CHAR.SUPPORT[$.locale.locale.toUpperCase()]);\r\n    $('#pc-login-btn,#pc-cloud-btn').html('<span class=\"text button-text\">' + $.tpLang.login.login + '</span>');\r\n    $('#pc-setPwd-btn').html('<span class=\"text button-text\">' + $.tpLang.login.start + '</span>');\r\n    $('#pwdCheck-low').html($.tpLang.login.low);\r\n    $('#pwdCheck-middle').html($.tpLang.login.middle);\r\n    $('#pwdCheck-high').html($.tpLang.login.high);\r\n    $('#pc-login-forget-text').html($.tpLang.login.forgetNote);\r\n    $('#pc-login-forget-title').html($.tpLang.login.forgetPwd);\r\n    $('#pc-login-forget-back').html('<span class=\"text button-text\">' + $.tpLang.m_str.back + '</span>');\r\n\r\n    //二维码\r\n    $('#pc-bot-app').html($.tpLang.qrApp.HELP_APP);\r\n    $(\"span#characters-illustrate-title\").html($.tpLang.qrApp.CHARACTERS_ILLUSTRETE_TITLE);\r\n    $(\"span#characters-illustrate-note\").html($.tpLang.qrApp.CHARACTERS_ILLUSTRETE_NOTE);\r\n    $('#qr-close-icon').on('click', function() {\r\n        $('#qr-code-container').hide();\r\n        document.cookie = 'qrClose=true';\r\n    });\r\n/**/\r\n    $('#pc-bot-app').on('click', function () {\r\n        if (!$('#qr-code-container').is(':visible')) {\r\n            $('#qr-code-container').show();\r\n            $.deleteCookie('qrClose');\r\n        } else {\r\n            $('#qr-code-container').hide();\r\n            document.cookie = 'qrClose=true';\r\n        }\r\n    });\r\n\r\n    $('#pc-login-password').tpInput({\r\n        placeholder: $.tpLang.login.password\r\n    });\r\n    $('#pc-login-user').tpInput({\r\n        placeholder: $.tpLang.login.userName\r\n    });\r\n\r\n\ttry {\r\n        if (modelName) {\r\n            document.title = modelName;\r\n            $(\"#pc-bot-productName\").html(modelName);\r\n            $(\"#pc-bot-modelDesc\").html(modelDesc || '');\r\n            //for phone\r\n            $(\"#ph-productName\").html(modelName);\r\n\r\n        }\r\n    } catch (e) {\r\n    }\r\n\r\n    function lockWeb(bLock) {\r\n        $(\"#pc-login-password\").tpInput('disabled', bLock);\r\n        $(\"#pc-login-user\").tpInput('disabled', bLock);\r\n    }\r\n\r\n    function getHttpObject(hook) {\r\n        var xmlHttp = null;\r\n        try {\r\n            xmlHttp = new XMLHttpRequest();\r\n        } catch (e) {\r\n            try {\r\n                xmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n            } catch (e) {\r\n                try {\r\n                    xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n                } catch (e) {\r\n                    /* How to handle this error? */\r\n                }\r\n            }\r\n        }\r\n        xmlHttp.onreadystatechange = function () {\r\n            if (xmlHttp.readyState == 4) {\r\n                if (hook)\r\n                    hook();\r\n            }\r\n        };\r\n        return xmlHttp;\r\n    }\r\n\r\n\r\n    /**\r\n     * 给文本框显示或隐藏提示\r\n     * @param obj {jQuery} input\r\n     * @param text {string/boolean} 为字符串是显示提示，等于false时隐藏提示\r\n     * @param isMobile {boolean} true表示手机\r\n     */\r\n    function inputError(obj, text, isMobile) {\r\n        if (text === false) {\r\n            if (isMobile) {\r\n                $(obj).removeClass('err').next('div.errDivP').hide();\r\n            } else {\r\n                $(obj).tpInput('hideError');\r\n            }\r\n        } else {\r\n            if (isMobile === true) {\r\n                $(obj).addClass('err').next('div.errDivP').show().find('.errTextP').html(text);\r\n            } else {\r\n                $(obj).tpInput('showError', text);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /*============================================\r\n     *init\r\n     ==============================================*/\r\n    if (document.getElementById(\"mainBody\") != null) {\r\n        (function (domain, port, frame, page) {\r\n            if ($.local) {\r\n                location.reload(true);\r\n            } else {\r\n                var ret = window.parent.location.href.match(/(https?):\\/\\/([^:\\/]+)(:\\d+)?\\/?([^?]*)/);\r\n                window.parent.location.href = ret[1] + \"://\" + (domain ? domain : ret[2]) + (port ? \":\" + port : (ret[3] ? ret[3] : \"\")) + \"/\" + (frame ? frame : (ret[4] ? ret[4] : \"\")) + (page ? \"#__\" + page.match(/\\w+\\.htm$/) : \"\");\r\n            }\r\n        })();\r\n    }\r\n\r\n   \r\n    function checkPwd(isMobile) {\r\n        var $password = $(\"#pc-setPwd-new\");\r\n        var $pwdCheck = $('#pwdCheck');\r\n        var value = $password.tpInput('val');\r\n\r\n        if (isMobile === true) {\r\n            $password = $(\"#ph-setPwd-new\");\r\n            $pwdCheck = $('#passwordLevelP');\r\n            value = $password.val();\r\n        }\r\n\r\n        var asciiWithoutSpace = /^(?=[^ ]+$)[\\x21-\\x7f]+$/;\r\n        var upperRe = /[A-Z]/;\r\n        var lowerRe = /[a-z]/;\r\n        var otherRe = /(.[^a-zA-Z0-9])/;\r\n        var digitRe = /\\d/;\r\n\r\n        var hasUpper = 0;\r\n        var hasLower = 0;\r\n        var hasDigit = 0;\r\n        var hasOther = 0;\r\n        var largeLength = 0;\r\n\r\n        var level = 0;\r\n\r\n        if (asciiWithoutSpace.test(value) === false) {\r\n            $pwdCheck.removeClass('level1 level2 level3');\r\n            if (value == '') {\r\n                inputError($password, $.tpLang.login.tipsText, isMobile);\r\n            } else {\r\n                inputError($password, $.tpLang.login.tipsTextAscii, isMobile);\r\n            }\r\n            pwdCheckOK = false;\r\n            return;\r\n        } else {\r\n            inputError($password, false, isMobile);\r\n            if (upperRe.test(value)) {\r\n                hasUpper = 1;\r\n            } else {\r\n                hasUpper = 0;\r\n            }\r\n\r\n            if (lowerRe.test(value)) {\r\n                hasLower = 1;\r\n            } else {\r\n                hasLower = 0;\r\n            }\r\n\r\n            if (digitRe.test(value)) {\r\n                hasDigit = 1;\r\n            } else {\r\n                hasDigit = 0;\r\n            }\r\n\r\n            if (otherRe.test(value)) {\r\n                hasOther = 1;\r\n            } else {\r\n                hasOther = 0;\r\n            }\r\n\r\n            if (value.length > 10) {\r\n                largeLength = 1;\r\n            } else {\r\n                largeLength = 0;\r\n            }\r\n\r\n            level = hasUpper + hasLower + hasDigit + largeLength + hasOther;\r\n\r\n            if (value.length <= 5) {\r\n                if (level <= 2) {\r\n                    $pwdCheck.removeClass('level2 level3').addClass('level1');\r\n                } else if (level == 3 || level == 4) {\r\n                    $pwdCheck.removeClass('level1 level3').addClass('level2');\r\n                }\r\n            } else {\r\n                if (level <= 1) {\r\n                    $pwdCheck.removeClass('level2 level3').addClass('level1');\r\n                } else if (level == 2 || level == 3) {\r\n                    $pwdCheck.removeClass('level1 level3').addClass('level2');\r\n                } else if (level >= 4) {\r\n                    $pwdCheck.removeClass('level2 level1').addClass('level3');\r\n                }\r\n            }\r\n\r\n            pwdCheckOK = true;\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    /*==========================================\r\n     * code for login\r\n     ==========================================*/\r\n    $('#pc-login-password').on('ev_focus', function () {\r\n        if (INCLUDE_LOGIN_USERNAME && $('#pc-login-user').val() == '') {\r\n            inputError($('#pc-login-user'), $.tpLang.login.tipsText);\r\n        }\r\n    });\r\n\t\r\n\t$('body').on('keydown', function (event) {\r\n\t\t//console.log(\"event.keyCode \", event.keyCode);\r\n        if (event.keyCode == \"Enter\" ||  event.keyCode == 13) {\r\n            loginSubmit(false);\r\n        }\r\n    });\r\n \r\n    $('#pc-login-btn').on('click', function (e,value,key,keyCode) {\r\n\t\t//console.log(\"what is function \");\r\n\t\t//console.log(\"keyCode: \", keyCode);\r\n\t\tloginSubmit(false);\r\n        /*\r\n\t\tif (key == \"Enter\" || keyCode == 13)\r\n\t\t{\r\n\t\t\tloginSubmit(false);\r\n\t\t}\r\n\t\t*/\r\n    });\r\n\r\n    $('#pc-login-forgetPwd').html($.tpLang.login.forgetPwd).on(\"click\", function (e) {\r\n        $('#pc-login-forget').removeClass('nd');\r\n        $('#pc-login-main').addClass('nd');\r\n    });\r\n    $('#pc-login-forget-back').on(\"click\", function (e) {\r\n        $('#pc-login-forget').addClass('nd');\r\n        $('#pc-login-main').removeClass('nd');\r\n        return false;\r\n    });\r\n\r\n\tvar isLocked = false;\r\n\r\n    function initLogin(isMobile) {\r\n        $('#pc-login').removeClass('nd');\r\n        if (authTimes > 0) {\r\n            var text = $.tpLang.login.errorText;\r\n            buttonError($('#pc-login-btn'), text);\r\n        }\r\n        if (authTimes >= 5) {\r\n            isLocked = true;\r\n            lockWeb(true);\r\n            var count = 600 - forbidTime;\r\n            buttonError($('#pc-login-btn'), timesText.replace('$', count), true);\r\n            inputError($('#ph-login-password'), timesText.replace('$', count), true);\r\n            if (INCLUDE_LOGIN_USERNAME) {\r\n                $('#ph-login-password').removeClass('err');\r\n            }\r\n            setTimeout(function () {\r\n                if (count < 1) {\r\n                    buttonError($('#pc-login-btn'), false);\r\n                    inputError($('#ph-login-password'), false, true);\r\n                    isLocked = false;\r\n                    lockWeb(false);\r\n\t\t\t\t\t$('#pc-login-user').focus();\r\n\r\n                    window.location.reload();\r\n                    return;\r\n                }\r\n                count--;\r\n                buttonError($('#pc-login-btn'), timesText.replace('$', count), true);\r\n                inputError($('#ph-login-password'), timesText.replace('$', count), true);\r\n                window.setTimeout(arguments.callee, 1000);\r\n            }, 1000);\r\n        } else {\r\n\t\t\t$('#pc-login-user').focus();\r\n        }\r\n    }\r\n\r\n\tvar doPCsimpleLogin = function(usr, pwd){\r\n\t\tif (isLocked == true)\r\n\t\t{\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\t\t\r\n\t\tvar auth;\r\n\t\tvar password = pwd;\r\n\t\tvar userName = usr;\r\n\t\t//var forbidAdminLogin = 0 ;\r\n\t\tif (forbidAdminLogin == 1){\r\n\t\t\ttpConfirm($.tpLang.login.loginConflict, null, null, null, null,$.tpLang.m_str.confirm);\r\n\t\t\t//$(\"note\").innerHTML = \"NOTE:\";\r\n\t\t\t//$(\"tip\").innerHTML = \"The router allows only one administrator to login at the same time, please try again later.\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\tauth = \"Basic \"+$.Base64Encoding(userName+\":\"+password);\r\n\t\tdocument.cookie = \"Authorization=\" + auth;\r\n\t\twindow.location.reload();\r\n\t\treturn ;\r\n\t}\r\n\r\n\r\n    var loginSubmit = function (isMobile) {\r\n        if (isLocked == true) {\r\n            return;\r\n        }\r\n        var auth;\r\n        var name;\r\n        var action = 1;\r\n        var $password = $(\"#pc-login-password\");\r\n        var $user = $(\"#pc-login-user\");\r\n\t\tvar usr = $(\"#pc-login-user\").tpInput('val');\r\n        var pwd = $(\"#pc-login-password\").tpInput('val');\r\n\t\t/* for this platform*/\r\n       \r\n\t\tdoPCsimpleLogin(usr, pwd);\r\n        //doLogin(name, auth, action, isMobile, (isMobile ? $('#ph-login-btn') : $('#pc-login-btn')));\r\n\r\n    };\r\n\r\n    /**\r\n     * 普通登录，云登录，手机登录共用的接口\r\n     * @param name {string} 用户名\r\n     * @param auth {string} 密码\r\n     * @param action {number} 操作，这里只会出现1:普通登录和云登录，3:手机登录\r\n     * @param isMobile {boolean} 手机UI标志位，用于addLoading\r\n     * @param btn {jQuery object} 当前登录的按钮，用于addLoading\r\n     */\r\n    function doLogin(name, auth, action, isMobile, btn) {\r\n\r\n        if (!isMobile) {\r\n            $.addLoading(btn);\r\n        } else {\r\n            $.showCover();\r\n        }\r\n\r\n        var xmlHttpObj = getHttpObject(function () {\r\n            if (!isMobile) {\r\n                $.removeLoading();\r\n            }\r\n            window.location.href= window.location.protocol + \"//\" + window.location.host;\r\n        });\r\n\r\n        xmlHttpObj.open(\"POST\", window.location.protocol + \"//\" + window.location.host + \"/cgi/login?UserName=\" + name + \"&Passwd=\" + auth + \"&Action=\" + action + \"&LoginStatus=0\", true);\r\n\r\n        getBusy(function(status) {\r\n            if (status.isLogined == 0) {\r\n                //没人登录则直接登录\r\n                xmlHttpObj.send(null);\r\n            } else {\r\n                //弹出提示说已经有人登录是不是要强制登录\r\n                tpConfirm($.tpLang.login.forceLogout, function () {\r\n                    if (!isMobile) {\r\n                        $.addLoading(btn);\r\n                    } else {\r\n                        $.showCover();\r\n                    }\r\n\r\n                    if (status.isBusy == 1) {\r\n                        var delay = 1000;\r\n                        var count = 0;\r\n                        var timesTotal = 2;\r\n                        var ask = function() {\r\n                            getBusy(function(satus) {\r\n                                if (status.isBusy == 0 || count >= timesTotal) {\r\n                                    //空闲或轮询次数到达最大次数就直接登录\r\n                                    xmlHttpObj.send(null);\r\n                                } else {\r\n                                    count++;\r\n                                    //轮询次数未到最大次数，进入递归\r\n                                    setTimeout(ask, delay);\r\n                                }\r\n                            });\r\n                        };\r\n                        setTimeout(ask, delay);\r\n                    } else {\r\n                        xmlHttpObj.send(null);\r\n                    }\r\n                }, function () {\r\n                    if (!isMobile) {\r\n                        $.removeLoading();\r\n                    }\r\n                }, null, $.tpLang.login.login, $.tpLang.m_str.cancel);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 确认框\r\n     * @param str {string} 提示文本\r\n     * @param ok {function} 确认回调\r\n     * @param no {function} 取消回调\r\n     * @param replaceStr {string} 保留未用\r\n     * @param okStr {string} 确认按钮的文本\r\n     * @param cancelStr {string} 取消按钮的文本\r\n     */\r\n    function tpConfirm(str, ok, no, replaceStr, okStr, cancelStr) {\r\n        $('#mask').show();\r\n        var container = $('#alert-container');\r\n        //if (isMF) {\r\n        //    container.addClass('ph');\r\n        //} else {\r\n        //    container.removeClass('ph');\r\n        //}\r\n        container.show()\r\n                .find('.grid-warning-msg span.text').html(str);\r\n        if (cancelStr !== null){\r\n            $('#confirm-no').show();\r\n            $('#confirm-no').html('<span>' + (cancelStr || $.tpLang.m_str.cancel) + '</span>').off('click').on('click', function () {\r\n            $('#alert-container').hide();\r\n            $('#mask').hide();\r\n            if (no) {\r\n                no();\r\n            }\r\n            });\r\n        }else{\r\n            $('#confirm-no').hide();\r\n        }\r\n\r\n        $('#alert-container .msg-close').off('click').on('click', function () {\r\n            $('#alert-container').hide();\r\n            $('#mask').hide();\r\n            if (no) {\r\n                no();\r\n            }\r\n        });\r\n        if (okStr !== null){\r\n            $('#confirm-yes').show();\r\n            $('#confirm-yes').html('<span>' + (okStr || $.tpLang.m_str.ok) + '</span>').off('click').on('click', function () {\r\n            $('#alert-container').hide();\r\n            $('#mask').hide();\r\n            if (ok) {\r\n                ok();\r\n            }\r\n            });\r\n        }else{\r\n             $('#confirm-yes').hide();\r\n        }\r\n\r\n    }\r\n\t\r\n\r\n\tinitLogin();\r\n});\r\n</script>\r\n</body>\r\n</html>\r\n"
      }
    }, {
      "location" : {
        "uri" : "localeModule.js",
        "uriBaseId" : "%SRCROOT%",
        "index" : 67
      },
      "contents" : {
        "text" : "/*\n * brief:\tlocale processing module\n * author:\txiejiabai@tp-link.com.cn\n * history: 2017.4.12, create file.\n * \t\t\t2017.4.13, add notes and debug.\n */\n\nvar execSync=require('child_process').execSync;\nvar util=require('util');\nvar fs=require('fs');\nvar path=require('path');\nvar crypto=require('crypto');\nvar xlsx = require('node-xlsx');\n\nexports.DEBUG_LEVEL=5;\nvar DEBUG = function(str,level)\n{\n\tif (!level || (level <= exports.DEBUG_LEVEL))\n\t{\n\t\tconsole.log(str);\n\t}\n}\nObject.defineProperties(Array.prototype, {\n\t/*\n\t * brief:\tdelete duplicate elements of an array. \n\t * \t\t\tOnly the first one of the duplicates will be reserved. \n\t */\n\tsubstractDup:{value:function(){\n\t\tvar __obj={};\n\t\tvar __arr=[];\n\t\tthis.forEach(function(x,i,a){\n\t\t\tif (x){\n\t\t\t\t\n\t\t\t\tif (__obj[hashHex(x.toString())]==null){\n\t\t\t\t\t__arr.push(x);\n\t\t\t\t\t__obj[hashHex(x.toString())]=x.toString;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn __arr;\n\t}, enumerable:false}\n});\n\n\n\nObject.defineProperties(Object.prototype, {\n\t\n\t/* \n\t * brief:\tmerge src and ref\n\t * \t\t\teverything in src will not be modified\n\t * \t\t\tsrc:{as:'fafa', ac:'faf'} ref:{as:'fdsfa'} and the merge result is {as:'fafa', ac:'faf'}\n\t * input:\t\t\t\treference object\n\t * level:\t\t\t\tmax level depth of operation, if null then unlimited\n\t * return:\t\t\t\tmerged object\n\t */\n\tmerge :  { value: function (input,level){\n\t\tvar __merge = function (src, ref,currlevel){\n\t\t\tif (level && (currlevel>=level) )\n\t\t\t\treturn;\n\t\t\tif (typeof(src)!='object') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// don't process array\n\t\t\t\tif (!Array.isArray(src)){\n\t\t\t\t\tfor (var i in ref){\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!src[i] && typeof(src[i])!='string') {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsrc[i]=ref[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t__merge(src[i],ref[i],currlevel+1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t};\n\t\t// do not change input object\n\t\tvar merge=this.copy();\n\t\t\n\t\t__merge(merge,input,0);\n\t\t\n\t\treturn merge;\n\t}, enumerable:false},\n\t\n\t/* \n\t * brief:\tsame as merge, but this function will merge arrays only if they have the same length. \n\t */\n\tmergeA :  { value: function (input,level){\n\t\tvar __merge = function (src, ref,currlevel){\n\t\t\tif (level && (currlevel>=level)) \n\t\t\t\treturn;\n\t\t\tif (typeof(src)!='object') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (!Array.isArray(src)){\n\t\t\t\t\tfor (var i in ref){\n\t\t\t\t\t\tif (!src[i] && typeof(src[i])!='string') {\n\t\t\t\t\t\t\tsrc[i]=ref[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif (Array.isArray(src[i]) && Array.isArray(ref[i]) && (src[i].length == ref[i].length))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tDEBUG('found array ' + i + ' with the same length, merge it', 5);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t__merge(src[i],ref[i],currlevel+1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (Array.isArray(src) && Array.isArray(ref) && (src.length == ref.length)){\n\t\t\t\t\t\tfor (var i in ref){\n\t\t\t\t\t\t\t__merge(src[i],ref[i],currlevel+1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t};\n\t\t\n\t\t\n\t\tvar merge=this.copy();\n\t\t\n\t\t__merge(merge,input,0);\n\t\t\n\t\treturn merge;\n\t}, enumerable:false},\n\t\n\t/*\n\t * brief:\treturn an copy of the object\n\t * return:\tcopied object\n\t */ \n\tcopy :{value: function (){\n\t\tvar __copy = function(src){\n\t\t\tvar copy;\n\t\t\tif (typeof(src)!='object') {\n\t\t\t\tcopy=src;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tvar copy=Array.isArray(src)?[]:{};\n\t\t\t\tfor (i in src){\n\t\t\t\t\tcopy[i]=__copy(src[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t};\n\t\treturn __copy(this);\n\t}, enumerable:false},\n\t\n\t/*\n\t * brief:\tdiff 2 object\n\t * \t\t\treturn something in the object but not in input. only compare properties.\n\t * \t\t\tA:{ab:'fa'}, B:{ab:'as'}, and we say A is same as B\n\t * \t\t\tA:{ab:'fa',2:'re'}, B:{ab:'as'} ==> {2:'re'}\n\t * input:\treference objct\n\t * level:\tmax compare level, if null then unlimited\n\t * return:\tdiff result.\n\t */\n\tdiff: {value:function(input,level){\n\t\tvar __diff = function (src,obj,currlevel){\n\t\t\tif (level && (currlevel>=level)) return null;\n\t\t\t\t\t\t\n\t\t\t// if src is not an object, ignore it */\n\t\t\tif (typeof(src)!='object') return null ;\t\t\t\t\t\n\t\t\tvar lack=null;\n\t\t\t/* ignore array */\n\t\t\tif (!Array.isArray(src)){ \n\t\t\t\tfor (var i in src)\t{\n\t\t\t\t\tif (!obj[i]) {\n\t\t\t\t\t\tif (!lack) lack={};\n\t\t\t\t\t\t\t\tlack[i]=src[i];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\t{\n\t\t\t\t\t\tif (typeof(obj[i])=='object') \t{\n\t\t\t\t\t\t\tvar res=__diff(src[i],obj[i],currlevel+1);\n\t\t\t\t\t\t\tif (res){\n\t\t\t\t\t\t\t\tif (!lack) lack={};\n\t\t\t\t\t\t\t\tlack[i]=res;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn lack;\n\t\t};\n\t\treturn __diff(this,input,0);\n\t},enumerable:false},\n\t\n\t/*\n\t * brief:\toutput this object to a file \n\t * fileName:\toutput file name\n\t * return:\tnone\n\t */\n\ttoFile:{value:function(fileName){\n\t\tvar fd;\n\t\texec('rm -rf '+fileName);\n\t\tfd=fs.openSync(fileName,'w+');\n\t\tfs.writeSync(fd,util.inspect(this,{depth:null}));\n\t\tfs.closeSync(fd);\n\t}, enumerable:false},\n\t\n\t/*\n\t * brief:\textend this object and input\n\t * \t\t\teverything will be replaced.\n\t * return:\tnew this object\n\t */ \n\textend:{value:function(input){\n\t\tfor (prop in input)\n\t\t\tthis[prop]=input[prop];\n\t\t\n\t\treturn this;\n\t},enumerable:false},\n});\n\n/*\n * brief:\trepersents an locale input file, such as lan.js help.js\n * return:\tLocaleInput class\n */\nfunction LocaleInput(fileName)\n{\n\tthis.filename =fileName;\n\tthis.type = this.getType();\n\tthis.obj = this.getObj();\n\tthis.localeName = this.getLocaleName();\n}\n\nLocaleInput.prototype = {\n\n\t/* \n\t * brief:\tabstract function\n\t */\n\tgetType: function(){\n\t\treturn '';\n\t},\n\t\n\t/* \n\t * brief:\tabstract function\n\t */\n\tgetObj:function(){\n\t\treturn {};\n\t},\n\t\n\t/*\n\t * brief:\treturn locale name\n\t *\t\t\t/en_US/lan.js ==> en_US\n\t */\n\tgetLocaleName:function(){\n\t\treturn path.basename(path.dirname(this.filename));\n\t},\n\t\n\t/*\n\t * brief:\tadd locale name to the object properties\n\t * \t\t\t{'a':'b'} ==> {'a':{'en_US':'b'}}\n\t * return:\tlocaleTrans object\n\t */\n\tgetLocaleTransObj :  function()   {\n\t\tvar __toLanLocaleNameObj = function (obj, localeObj, localeName)\n\t\t{\n\t\t\tif (typeof(obj)=='object')\n\t\t\t{\n\t\t\t\tfor (var i in obj)\n\t\t\t\t{\n\t\t\t\t\tlocaleObj[i] = {};\n\t\t\t\t\tif (typeof(obj[i])=='string')\n\t\t\t\t\t{\n\t\t\t\t\t\tlocaleObj[i][localeName] = obj[i];\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Array.isArray(obj[i]))   {\n\t\t\t\t\t\t\tlocaleObj[i]=[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__toLanLocaleNameObj(obj[i], localeObj[i], localeName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tvar localeObj={};\n\t\t\n\t\t\n\t\t__toLanLocaleNameObj(this.obj, localeObj, this.localeName);\n\t\t\n\t\t\n\t\treturn localeObj;\n\t},\n};\n\n/* brief:\tMtk locale file */\nfunction MtkLocaleInput(fileName)\n{\n\tLocaleInput.apply(this,arguments);\n}\n\nMtkLocaleInput.prototype = Object.create(LocaleInput.prototype);\n\nMtkLocaleInput.prototype = MtkLocaleInput.prototype.extend(\n{\n\t/*\n\t * brief:\treturn object\n\t */\n\tgetObj : function(){\n\t\n\t\tvar str=fs.readFileSync(this.filename,'utf8');\n\t\tif (this.getType() == 'str')\n\t\t\tvar obj = this.jsToObj();\n\t\t\n\t\tif (this.getType() == 'help')\n\t\t\tvar obj = this.jsToObj();\n\t\t\n\t\tif (this.getType() == 'err')\n\t\t\tvar obj = this.errJsToObj();\n\t\t\n\t\treturn obj;\n\t\n\t},\n\t\n\t/*\t\n\t * brief:\treturn type of the input file according to the file name.\n\t * return:\tlocale file type\n\t */\n\tgetType : function(){\n\t\tvar type = '';\n\t\tif (path.basename(this.filename).match(/str/))\t{\n\t\t\ttype =  'str';\n\t\t}\n\t\tif (path.basename(this.filename).match(/help/))\t{\n\t\t\ttype =  'help';\n\t\t}\n\t\tif (path.basename(this.filename).match(/err/))\t{\n\t\t\ttype =  'err';\n\t\t}\n\t\treturn type;\n\t},\n\t\n\t/*\n\t * brief:\tread into help.js and str.js and transform it to \n\t * \t\t\tobject \n\t * return:\tlocale object\n\t */\n\tjsToObj: function(){\n\t\tvar str='';\n\t\tstr +='(function f(){globalVars={};\\n';\n\t\tvar strFile=fs.readFileSync(this.filename,'utf8');\n\t\tstr += strFile;\n\t\tvar glovalVarsArr=[];\n\t\tstrFile.split('\\n').forEach(function(x,i,a)\n\t\t{\n\t\t\tvar mat=x.match(/(var)[\\s\\t]+([\\w]+)[\\s\\t]*=/g);\n\t\t\tif (mat)\n\t\t\t{\n\t\t\t\tmat.forEach(function(x,i,a)\n\t\t\t\t{\n\t\t\t\t\tvar mat=x.match(/(var)[\\s\\t]+([\\w]+)[\\s\\t]*=/);\n\t\t\t\t\tif (mat)\n\t\t\t\t\t{\n\t\t\t\t\t\t/* get all globally defined variables */\n\t\t\t\t\t\tglovalVarsArr.push(mat[2]);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t\n\t\tglovalVarsArr.forEach(function(x,i,a)\n\t\t{\n\t\t\tstr+='\\nglobalVars.'+x+'='+x+';\\n';\n\t\t});\n\t\t\n\t\tstr+='\\nreturn globalVars;})()';\n\t\t\n\t\t\n\t\treturn eval(str);\n\t},\n\t\n\t/*\n\t * brief:\tRead into mtk err.js and return locale object\n\t * return:\tlocale object\n\t */\n\terrJsToObj:function(){\n\t\tvar str='';\n\t\tstr +='(function f(){window={};e_str={};';\n\t\tstr+=fs.readFileSync(this.filename,'utf8');\n\t\t\n\t\tstr+='\\nreturn e_str;})()';\n\t\treturn eval(str);\n\t},\n\t\n\t\n\t/* \n\t * brief:\toutput other locale file according to English locale file format\n\t * fileName:\toutput locale file name\n\t * transLib:\tinput source TransLib class\n\t * localeName:\toutput locale name\n\t */\n\ttoLocaleFileFormat : function(fileName, transLib,localeName)\t{\n\t\texec('rm -rf '+fileName);\n\t\tvar fd=fs.openSync(fileName,'w+');\n\t\t\n\t\tvar enFileStr = fs.readFileSync(this.filename, 'utf8');\n\t\tvar untrans=[];\n\t\tenFileStr.split('\\n').forEach(function(x,i,a){\n\t\t\t/* do not process // */\n\t\t\tif (!x.match(/^[\\s\\t]*\\/\\//))\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t * et: \"IPv6 LAN Settings\",\n\t\t\t\t * \"address\": \"<B>To edit a IP Address, you can follow these steps</B>:\",\n\t\t\t\t * \"Germany\",\n\t\t\t\t * e_str[CMM_FW_SET_URL_FAILED] = \"Failed to configure URL!\";\n\t\t\t\t *\"example\": \"<B>Example:</B> If you want to use binding to assign 192.168.0.4 to PC A (MAC: 00:E0:4C:00:07:BE) and to keep other PCs from using the address. First, enable the \\\"ARP Binding\\\". Then add a new item in the binding table so that the table resembles the one below.\",\n\t\t\t\t * \"header\": WlanNetworkHelpRpm.header,\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\t/* find the last pair of \"\"  but be aware of \\\"\n\t\t\t\t *\t\t\t use nongreedy mode\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\treg=/([^\\\\]?)(\\\".*?[^\\\\]\\\")/g;\n\t\t\t\t/* find the last one */\n\t\t\t\tvar resLast=null;\n\t\t\t\tvar indexLast=0;\n\t\t\t\twhile(res=reg.exec(x))\n\t\t\t\t{\n\t\t\t\t\tresLast=res;\n\t\t\t\t\tindexLast=reg.lastIndex;\n\t\t\t\t}\n\t\t\t\t/* we need to check if this last pair of \"\" is located in the end of the sentence \n\t\t\t\t * in case of \"header\": WlanNetworkHelpRpm.header, */\n\t\t\t\tvar lastStr=x.slice(indexLast);\n\t\t\t\tif (resLast&&\n\t\t\t\t\t(lastStr.match(/^[\\s\\t]*[,;]?[\\s\\t]*[\\r]?$/)))\n\t\t\t\t{\n\t\t\t\t\tenStr = eval(resLast[2]);\n\t\t\t\t\tlocaleStr = transLib.search(enStr, localeName);\n\t\t\t\t\tif (localeStr) \t{\n\t\t\t\t\t\tlocaleStr=localeStr.toString();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t/* have a try */\n\t\t\t\t\t\tvar match;\n\t\t\t\t\t\tif (match=enStr.match(/^([\\s\\t:.,]*)(.*?)([\\s\\t:.,]+)$/))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar enStrStart = match[1];\n\t\t\t\t\t\t\tvar enStrMiddle = match[2];\n\t\t\t\t\t\t\tvar enStrEnd = match[3];\n\t\t\t\t\t\t\tif (localeStr = transLib.search(enStrMiddle, localeName))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocaleStr = enStrStart + localeStr + enStrEnd;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (localeStr) \t{\n\t\t\t\t\t\tif (localeStr.localeCompare('__NOT_USED__')==0) {\n\t\t\t\t\t\t\tlocaleStr = enStr;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tlocaleStr = localeStr.replace(/\\\\/g,'\\\\\\\\').replace(/\\\"/g, \"\\\\\\\"\");\n\t\t\t\t\t\tvar strBefore=x.slice(0, resLast.index);\n\t\t\t\t\t\tvar strAfter=x.slice(indexLast);\n\t\t\t\t\t\tx=strBefore+resLast[1]+'\"'+localeStr+'\"'+strAfter;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\t\n\t\t\t\t\t\t/* ignore number */\n\t\t\t\t\t\tif (isNaN(parseFloat(enStr.trim())))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (untrans.indexOf(enStr)==-1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuntrans.push(enStr);\n\t\t\t\t\t\t\t\tconsole.log(enStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tfs.writeSync(fd,x+'\\n','utf8');\n\t\t});\t\t\n\t\tfs.closeSync(fd);\n\t\treturn untrans;\n\t},\n\t\n\t/* \n\t * brief:\toutput other locale file according to locale object.\n\t *\t\t\tWARNING: mtk format is damn complicated. this function won't work.\n\t * fileName:\toutput file name\n\t * transLib:\tinput source TransLib class\n\t * localeName:\toutput locale name\n\t * return:\t\tnone\n\t */\n\ttoLocaleFile : function (fileName, transLib, localeName)\t{\n\t\texec('rm -rf '+fileName);\n\t\tvar fd=fs.openSync(fileName,'w+');\n\t\t/* TODO */\n\t\t/* pick up strings \n\t\t * {'a':'b','c':'d'} ==> ['b','c']\n\t\t */\n\t\t\n\t\tvar __getOtherLocaleObj = function (enObj,transLib, localeName){\n\t\t\t/* array is somekind of object */\n\t\t\tif (typeof(enObj)=='object'){\n\t\t\t\tfor (var i in enObj){\n\t\t\t\t\tif ((typeof(enObj[i])=='string') && enObj[i])\t{\n\t\t\t\t\t\tvar str = transLib.search(enObj[i], localeName);\n\t\t\t\t\t\tif (str)\n\t\t\t\t\t\t\tenObj[i] = str;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t__getLanObj(enObj[i], transLib);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar localeObj = this.obj.copy();\n\t\t__getOtherLocaleObj(localeObj, transLib, localeName);\n\t\t\n\t\t\n\t\tfs.writeSync(fd,util.inspect(localeObj,{depth:null}),\"utf8\");\n\t\tfs.closeSync(fd);\n\t},\n});\n\n\n/* \n * brief:\tipf locale intput class\n * fileName:\tlocale file name\n */\nfunction IpfLocaleInput(fileName)\n{\n\tLocaleInput.apply(this,arguments);\n}\n\nIpfLocaleInput.prototype = Object.create(LocaleInput.prototype);\n\nIpfLocaleInput.prototype = IpfLocaleInput.prototype.extend(\n{\n\t/*\n\t * brief:\treturn internal object\n\t * return:\tinternel object\n\t */\n\tgetObj : function(){\n\t\t\n\t\tvar str=fs.readFileSync(this.filename,'utf8');\n\t\tif (this.getType() == 'lan')\n\t\t\tvar obj = this.lanJsToObj();\n\t\t\n\t\tif (this.getType() == 'help')\n\t\t\tvar obj = this.helpJsToObj();\n\t\t\n\t\treturn obj;\n\t\t\n\t},\n\t\n\t/*\n\t * brief:\treturn locale file type\n\t * return:\tlocale file type\n\t */\n\tgetType : function(){\n\t\tvar type = '';\n\t\tif (path.basename(this.filename).match(/lan/))\t{\n\t\t\ttype =  'lan';\n\t\t}\n\t\tif (path.basename(this.filename).match(/help/))\t{\n\t\t\ttype =  'help';\n\t\t}\n\t\treturn type;\n\t},\n\n\t/*\n\t * brief:\ttransform lan.js into object\n\t * return:\tobject\n\t */\n\tlanJsToObj: function(){\n\t\tvar str='';\n\t\tstr +='(function (){jQuery={};';\n\t\tvar strFile=fs.readFileSync(this.filename,'utf8');\n\t\tstr += strFile;\n\t\tstr+='return jQuery.su.CHAR;})()';\n\t\treturn eval(str);\n\t},\n\t\n\t/*\n\t * brief:\ttransform help.js into object\n\t * return:\tobject\n\t */\n\thelpJsToObj:function(){\n\t\tvar str='';\n\t\tstr +='(function f(){jQuery={};';\n\t\tstr+=fs.readFileSync(this.filename,'utf8');\n\t\tstr+='return jQuery.su.CHAR.HELP;})()';\n\t\treturn eval(str);\n\t},\n\t\n\t/*\n\t * brief:\toutput other locale file according to the format of english file\n\t * \t\t\tonly Eng locale file may call this function\n\t * fileName:\toutput file name\n\t * transLib:\tsource TransLib Class\n\t * localeName:\toutptu locale name \n\t * return:\tnone\n\t */\n\ttoLocaleFileFormat : function(fileName, transLib,localeName)\t{\n\t\texec('rm -rf '+fileName);\n\t\tvar fd=fs.openSync(fileName,'w+');\n\t\tvar type = this.type;\n\t\tenFileStr = fs.readFileSync(this.filename, 'utf8');\n\t\tvar untrans = [];\n\t\tenFileStr.split('\\n').forEach(function(x,i,a){\n\t\t\tif (type=='lan'){\n\t\t\t\tvar reg = /(^[\\s\\t]*([\"]?)[\\w]+\\2[\\s\\t]*:[\\s\\t]*)(\".*\")([^\"]*$)/;\n\t\t\t\tvar res = x.match(reg);\n\t\t\t\tif (res){\n\t\t\t\t\tenStr = eval(res[3]);\n\t\t\t\t\tlocaleStr = transLib.search(enStr, localeName);\n\t\t\t\t\tif (localeStr) \t{\n\t\t\t\t\t\tlocaleStr=localeStr.toString();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (localeStr.localeCompare('__NOT_USED__')==0) {\n\t\t\t\t\t\t\tlocaleStr = enStr;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlocaleStr = localeStr.replace(/\\\\/g,'\\\\\\\\').replace(/\\\"/g, \"\\\\\\\"\");\n\t\t\t\t\t\tx = x.replace(reg, '$1'+'\"'+localeStr+'\"'+'$4');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (untrans.indexOf(enStr)==-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuntrans.push(enStr);\n\t\t\t\t\t\t\tconsole.log(enStr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type == 'help'){\n\t\t\t\tvar reg=/(^[\\s\\t]*(title|TITLE|content)[\\s\\t]*:[\\s\\t]*)(\".*\")([^\"]*$)/;\n\t\t\t\tvar res = x.match(reg);\n\t\t\t\tif (!res)\t{\n\t\t\t\t\t/* for\n\t\t\t\t\t * content:[\"1. Click Add.\",\n\t\t\t\t\t * \"2. Enter the MAC address of your desired client.\",\n\t\t\t\t\t * \"3. Enter the IP address that you want to reserve for the client.\",\n\t\t\t\t\t * \"4. Enter a description for the client.\",\n\t\t\t\t\t * \"5. Select Enable This Entry.\",\n\t\t\t\t\t * \"6. Click OK.\"\n\t\t\t\t\t *                 ] ***\n\t\t\t\t\t */\n\t\t\t\t\treg=/(^[\\s\\t]*|^[\\s\\t]*content[\\s\\t]*:[\\s\\t]*\\[[\\s\\t]*())(\".*\")([^\"]*$)/;\n\t\t\t\t\tres = x.match(reg);\n\t\t\t\t}\n\t\t\t\tif (res && res[3])\t{\n\t\t\t\t\ttry{\n\t\t\t\t\t\tenStr = eval(res[3]);\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err)\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('eval err:' + res[3])\n\t\t\t\t\t}\n\t\t\t\t\tlocaleStr = transLib.search(enStr, localeName);\n\t\t\t\t\tif (localeStr) \t{\n\t\t\t\t\t\t// in case that localeStr is a int\n\t\t\t\t\t\tlocaleStr=localeStr.toString();\n\t\t\t\t\t\tif (localeStr.localeCompare(\"__NOT_USED__\")==0)\n\t\t\t\t\t\t\tlocaleStr = enStr;\n\t\t\t\t\t\tlocaleStr = localeStr.replace(/\\\\/g,'\\\\\\\\').replace(/\\\"/g, \"\\\\\\\"\");\n\t\t\t\t\t\tx = x.replace(reg, '$1'+'\"'+localeStr+'\"'+'$4');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (untrans.indexOf(enStr)==-1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuntrans.push(enStr);\n\t\t\t\t\t\t\tconsole.log(enStr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfs.writeSync(fd,x+'\\n','utf8');\n\t\t});\t\t\n\t\tfs.closeSync(fd);\n\t\treturn untrans;\n\t\t\n\t},\n\t\n\t/*\n\t * brief:\toutput other locale file according to the locale object\n\t * \t\t\tonly Eng locale file may call this function.\n\t * \t\t\tthe output file's format is not the same as English file format, but is legal.\n\t * \t\t\ttoLocaleFileFormat is preferred.\n\t * fileName:\toutput file name\n\t * transLib:\tsource TransLib Class\n\t * localeName:\toutptu locale name \n\t * return:\t\tnone\n\t */\n\ttoLocaleFile : function (fileName, transLib, localeName)\t{\n\t\texec('rm -rf '+fileName);\n\t\tvar fd=fs.openSync(fileName,'w+');\n\t\t\n\t\tvar __getHelpLocaleObj = function (enObj,transLib, localeName)  {\n\t\t\tif (typeof(enObj)=='object') {\n\t\t\t\tfor (var i in enObj){\n\t\t\t\t\tif ((typeof(enObj[i])=='string') && enObj[i]){\n\t\t\t\t\t\t// pick up lang strings\n\t\t\t\t\t\tif ((i =='TITLE') \n\t\t\t\t\t\t\t|| (i == 'title')\n\t\t\t\t\t\t\t|| (i == 'content')\n\t\t\t\t\t\t\t|| (Array.isArray(enObj)))  {\n\t\t\t\t\t\t\t\tvar str = transLib.search(enObj[i], localeName);\n\t\t\t\t\t\t\t\tif (str)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tenObj[i] = str;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t__getHelpLocaleObj(enObj[i], transLib, localeName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\tvar __getLanLocaleObj = function (enObj,transLib, localeName)  {\n\t\t\tif (typeof(enObj)=='object'){\n\t\t\t\tfor (var i in enObj){\n\t\t\t\t\tif ((typeof(enObj[i])=='string') && enObj[i])\t{\n\t\t\t\t\t\tvar str = transLib.search(enObj[i], localeName);\n\t\t\t\t\t\tif (str){\n\t\t\t\t\t\t\tenObj[i] = str;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t__getLanLocaleObj(enObj[i], transLib, localeName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar localeObj = this.obj.copy();\n\t\t\n\t\tif (this.type == 'help'){\n\t\t\tfs.writeSync(fd,\"(function($){\\n$.su = $.su || {};\\n$.su.CHAR.HELP = \\n\",\"utf8\");\n\t\t\t__getHelpLocaleObj(localeObj,transLib, localeName);\n\t\t\t\n\t\t}\n\t\tif (this.type == 'lan'){\n\t\t\tfs.writeSync(fd,\"(function($){\\n\\n\\t$.su = $.su || {};\\n\\t$.su.CHAR = \\n\",\"utf8\");\n\t\t\t__getLanLocaleObj(localeObj, transLib,localeName);\n\t\t}\n\t\tfs.writeSync(fd,util.inspect(localeObj,{depth:null}),\"utf8\");\n\t\tfs.writeSync(fd,\";\\n})(jQuery);\",\"utf8\");\n\t\tfs.closeSync(fd);\n\t},\n});\n\n/*\n * brief:\treturn TransLib class\n * \t\t\tthe format of obj is\n * \t\t\t[{'en_US':'OK','zh_TW':'好的'},{'en_US':'Cancle','zh_TW':'取消'}]\n */\nfunction TransLib(obj)\n{\n\tthis.obj = obj;\n\tthis.hashObj = this.getHashObj();\n}\n\nTransLib.prototype = {\n\t/*\n\t * beief:\treturn hash lib object\n\t * return:\tlib hash object\n\t * \t\t\t{'OK_HASHCODE':{'en_US':'OK','zh_TW':'好的'},'CANCLE_HASHCODE':{'en_US':'Cancle','zh_TW':'取消'}]\n\t */\n\tgetHashObj:function(){\n\t\tvar res = {};\n\t\tthis.obj.forEach(function(x,i,a){\n\t\t\tif (x && x.en_US){\n\t\t\t\tres[hashHex(x.en_US)]=x;\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t},\n\t\n\t/*\n\t * brief:\treturn lib object\n\t * return:\tlib object\n\t * \t\t\t[{'en_US':'OK','zh_TW':'好的'},{'en_US':'Cancle','zh_TW':'取消'}]\n\t */\n\tgetObj:function(){\n\t\treturn this.obj;\n\t},\n\t\n\t/*\n\t * brief: return sorted lib\n\t * \t\t\tsort the lib according to en_US string alphabet sequence.\n\t * \t\t\tIn an entry, put en_US first, and sort other locale translations\n\t * \t\t\taccording to their locale name alphabet sequence.\n\t * \t\t\t[{'zh_TW':'好的','en_US':'OK'},{'en_US':'Cancle','zh_TW':'取消'}] ==>\n\t * \t\t\t[{'en_US':'Cancle','zh_TW':'取消'},{'en_US':'OK','zh_TW':'好的'}]\n\t * return:\tsorted lib object.\n\t */\n\tgetSeqObj:function(){\n\t\tvar res = [];\n\t\tthis.obj.forEach(function(entry){\n\t\t\tvar indexes = [];\n\t\t\tfor (var index in entry){\n\t\t\t\tif (index!='en_US')\n\t\t\t\t\tindexes.push(index);\n\t\t\t}\n\t\t\tindexes.sort(function(a,b){\n\t\t\t\treturn a.localeCompare(b);\n\t\t\t});\n\t\t\tvar newEntry={};\n\t\t\tnewEntry['en_US'] = entry.en_US;\n\t\t\tindexes.forEach(function(index){\n\t\t\t\tnewEntry[index] = entry[index];\n\t\t\t});\n\t\t\tres.push(newEntry);\n\t\t});\n\t\tres.sort(function(a,b){\n\t\t\treturn a.en_US.localeCompare(b.en_US);\n\t\t});\n\t\treturn res;\n\t},\n\t\n\t/*\n\t * brief:\toutput this lib to excel format\n\t * fileName:\tname of excel file\n\t * return:\tnone\n\t */\n\ttoExcel : function(fileName){\n\t\tvar book = [{name:'sheet1',data:[['en_US']]}];\n\t\t\n\t\tthis.obj.forEach(function(x,i,a){\n\t\t\tfor (var lang in x){\n\t\t\t\tif ((book[0].data[0].indexOf(lang))==-1){\n\t\t\t\t\tbook[0].data[0].push(lang);\n\t\t\t\t}\n\t\t\t\tvar pos=book[0].data[0].indexOf(lang);\n\t\t\t\tif (!book[0].data[i+1])\n\t\t\t\t\tbook[0].data[i+1]=[];\n\t\t\t\tbook[0].data[i+1][pos]=x[lang];\n\t\t\t}\n\t\t});\n\t\tvar buffer = xlsx.build(book);\n\t\t\n\t\tfs.writeFileSync(fileName, buffer);\n\t},\n\t\n\t/* brief:\t\tmerge this lib with another TransLib.\n\t * \t\t\t\teverything in this TransLib won't be changed.\n\t * ref:\t\t\treference lib\n\t * return:\t\tnew TransLib\n\t */\n\tmerge:function(ref){\n\t\tvar hashObjMerge = this.getHashObj().merge(ref.getHashObj());\n\t\tvar merge=[];\n\t\tfor (var i in hashObjMerge){\n\t\t\tmerge.push(hashObjMerge[i]);\n\t\t}\n\t\treturn new TransLib(merge);\n\t\t\n\t},\n\t/*\n\t * brief:\tsearch translation of English string eng in this lib\n\t * eng:\t\tEnglish string\n\t * localeName:\tlocale name\n\t * return:\ttranslation of the English string.\n\t */\n\tsearch : function (eng, localeName)\n\t{\n\t\treturn this.hashObj[hashHex(eng)] && this.hashObj[hashHex(eng)][localeName] || null;\n\t},\n\t\n\t\n}\n/* TODO use file name to distinguish modes. Not accurate. */\nvar MODE_TYPE_ARR={'mtk':['str', 'err', 'help'], 'ipf':['lan', 'help']};\n\nfunction LocaleDir(dir, mode){\n\tthis.dir = dir;\n\t\n\tif (!mode || (mode == 'auto'))\n\t{\n\t\tvar files=exec('find '+ dir +'/en_US/ -name \"*.js\" | xargs').split(' ');\n\t\tvar names=[];\n\t\tfiles.forEach(function(pathname){\n\t\t\tnames.push(path.basename(pathname));\n\t\t});\n\t\tfor (var i in MODE_TYPE_ARR)\n\t\t{\n\t\t\tmode = i;\n\t\t\tfor (var j in MODE_TYPE_ARR[i])\n\t\t\t{\n\t\t\t\tif (-1==names.indexOf(MODE_TYPE_ARR[i][j]+'.js'))\n\t\t\t\t{\n\t\t\t\t\tmode = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (mode)\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif (!mode) \n\t\t\tmode = 'mtk';\n\t}\n\tconsole.log('mode is '+ mode);\n\tthis.typeArr = MODE_TYPE_ARR[mode];\n\t\t\n\t\n\tthis.mode = mode;\n}\n\nLocaleDir.prototype = {\n\t/* \n\t * brief:\tget all translation from dir\n\t * \t\t\tIf same-length array exists, we will map it.\n\t * return:\tTransLib Object\n\t * en_US:{a:['OK','Cancle']}\n\t * \t\t\tzh_TW:{a:['好的','取消']}\n\t * \t\t\twe get {a:[{'en_US':'OK','zh_TW':'好的'},{'en_US':'Cancle','zh_TW':'取消'}]}\n\t */\n\tgetTransLib: function(){\n\t\tvar dir=this.dir;\n\t\tvar mode = this.mode;\n\t\tvar typeArr = this.typeArr;\n\t\tvar getAllLocaleNameObj = function()   {\n\t\t\tvar allLocaleTransObj={};\n\t\t\tvar files = {};\n\t\t\t\n\t\t\ttypeArr.forEach(function(type){\t\n\t\t\t\tallLocaleTransObj[type]={};\n\t\t\t\tfiles[type] = exec('find '+dir+'/ -name \"' + type + '.js\" | xargs').split(' ');\n\t\t\t\t\n\t\t\t\t/* get en_US obj */\n\t\t\t\tvar localeFile = GetLocaleInput(dir + '/en_US/'+type+'.js', mode);\n\t\t\t\tallLocaleTransObj[type] = localeFile.getLocaleTransObj();\n\t\t\t\t\n\t\t\t\t/* merge other locales */\n\t\t\t\tfiles[type].forEach(function(filename){\n\t\t\t\t\t//get locale name, en_US, pt_BR\n\t\t\t\t\tvar localeFile = GetLocaleInput(filename, mode);\n\t\t\t\t\t\n\t\t\t\t\tif (localeFile.getLocaleName() !='en_US')\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log('process ' + filename);\n\t\t\t\t\t\t/* if 2 arrays have the same length then merge it */\n\t\t\t\t\t\tallLocaleTransObj[type] = allLocaleTransObj[type].mergeA(localeFile.getLocaleTransObj());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\treturn allLocaleTransObj;\n\t\t};\n\t\t\n\t\t/*\t{'OK_HASHCODE':{'zh_TW':'好的','en_US':'OK'}, 'CANCLE_HASHCODE':{'zh_TW':'取消','en_US':'cancle'}} ==>\n\t\t * \n\t\t * [{'en_US':'OK','zh_TW':'好的'},{'en_US':'cancle','zh_TW':'取消'}]\n\t\t */\n\t\tvar transHashLibToTransLib = function(transHashLib)  {\n\t\t\tvar transLib = [];\n\t\t\t/* sort the lib. en_US first. */\n\t\t\tfor (var i in transHashLib)\n\t\t\t{\n\t\t\t\tvar transEntry={};\n\t\t\t\tif (transHashLib[i])\n\t\t\t\t{\n\t\t\t\t\ttransEntry.en_US=transHashLib[i].en_US;\n\t\t\t\t\tvar localeList=[];\n\t\t\t\t\tfor (var j in transHashLib[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (j != 'en_US')\n\t\t\t\t\t\t\tlocaleList.push(j);\n\t\t\t\t\t}\n\t\t\t\t\tlocaleList.sort(function(a,b)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn(a.localeCompare(b));\n\t\t\t\t\t});\n\t\t\t\t\tlocaleList.forEach(function(x,index,a)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (transHashLib[i][x])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttransEntry[x] = transHashLib[i][x];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\ttransLib.push(transEntry);\n\t\t\t}\n\t\t\ttransLib.sort(function(a,b)\n\t\t\t{\n\t\t\t\treturn(a.en_US.localeCompare(b.en_US));\n\t\t\t});\n\t\t\treturn transLib;\n\t\t};\n\t\t\n\t\t/* {'a':{'zh_TW':'好的','en_US':'OK'},'b':{'zh_TW':'取消','en_US':'cancle'}}\t ==>\n\t\t * \n\t\t * {'OK_HASHCODE':{'zh_TW':'好的','en_US':'OK'}, 'CANCLE_HASHCODE':{'zh_TW':'取消','en_US':'cancle'}}\n\t\t */\n\t\tvar allLocaleTransObjToTransHashLib = function(allLocaleTransObj){\n\t\t\tvar transHashLib={};\n\t\t\tvar __allLocaleTransObjToTransHashLib = function(allLocaleTransObj)  {\n\t\t\t\tif (allLocaleTransObj.en_US) {\n\t\t\t\t\tvar digest = hashHex(allLocaleTransObj.en_US);\n\t\t\t\t\tif (!transHashLib[digest])\n\t\t\t\t\t\ttransHashLib[digest] = allLocaleTransObj;\n\t\t\t\t\telse\n\t\t\t\t\t\ttransHashLib[digest] = transHashLib[digest].merge(allLocaleTransObj);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (typeof(allLocaleTransObj) == 'object')      {\n\t\t\t\t\t\tfor (var i in allLocaleTransObj)   {\n\t\t\t\t\t\t\t__allLocaleTransObjToTransHashLib(allLocaleTransObj[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t__allLocaleTransObjToTransHashLib(allLocaleTransObj);\n\t\t\treturn transHashLib;\n\t\t};\n        \n        var deleteSameWithEnTrans = function(transHashLib){\n            var newTransHashLib = {};\n            for (var hash in transHashLib){\n                newTransHashLib[hash]={};\n                newTransHashLib[hash].en_US = transHashLib[hash].en_US;\n                for (var lang in transHashLib[hash]){\n                    if ((lang !=\"en_US\") && (0!=transHashLib[hash][lang].localeCompare(transHashLib[hash].en_US))){\n                        newTransHashLib[hash][lang] = transHashLib[hash][lang];\n                    }\n                }\n            }\n            return newTransHashLib;\n        };\n\t\t\n\t\tvar allLocaleTransObj = getAllLocaleNameObj();\n\t\tvar transHashLib = allLocaleTransObjToTransHashLib(allLocaleTransObj);\n        transHashLib = deleteSameWithEnTrans(transHashLib);\n\t\t\n\t\tvar transLib = transHashLibToTransLib(transHashLib);\n\t\t\n\t\treturn new TransLib(transLib);\n\t},\n\t\n\t/*\n\t * brief:\tupdate all locale files excluding en_US according to TransLib input.\n\t * \t\t\tIt will also output excel files containing English strings whose translation are lost.\n\t * srcLib:\tinput TransLib Object\n\t * return:\tnone\n\t */\n\tupdateLangs:function(srcLib){\n\t\t\n\t\tvar allLocaleTransObj={};\n\t\tvar files = {};\n\t\tvar untransSum={};\n\t\tvar localeList = exec('find '+this.dir+'/ -maxdepth 1 -mindepth 1 -type d | xargs').split(' ');\n\t\tvar dir=this.dir;\n\t\tvar mode = this.mode;\n\t\tthis.typeArr.forEach(function(type){\t\n\t\t\t\n\t\t\tvar enFile = GetLocaleInput(dir + '/en_US/'+type+'.js', mode);\n\t\t\tif (enFile)\n\t\t\t{\n\t\t\t\tlocaleList.forEach(function(localeName){\n\t\t\t\t\tlocaleName = path.basename(localeName);\n\t\t\t\t\t\n\t\t\t\t\tif (localeName.match(/^[a-z]{2}_[A-Z]{2}$/))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar filename = (dir + '/' + localeName + '/'+type+'.js');\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (localeName != 'en_US'){\n\t\t\t\t\t\t\tconsole.log('update file '+filename+' according to en_US file\\n');\n\t\t\t\t\t\t\tvar untrans = enFile.toLocaleFileFormat(filename, srcLib, localeName);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!untransSum[localeName])\n\t\t\t\t\t\t\t\tuntransSum[localeName] = [];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tuntransSum[localeName]=untransSum[localeName].concat(untrans);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t});\n\t\tfor (var lang in untransSum)\n\t\t{\n\t\t\tvar output=[];\n\t\t\tuntransSum[lang] = untransSum[lang].substractDup();\n\t\t\tuntransSum[lang].forEach(function(x,i,a){\n\t\t\t\toutput.push({en_US:x});\n\t\t\t});\n\t\t\tvar untransLib=new TransLib(output);\n\t\t\tuntransLib.toExcel(this.dir+\"/\"+lang+\".xlsx\");\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}\n\nvar GetLocaleInput = function (filename, mode)\n{\n\tvar localeFile;\n\tif (!mode || (mode == 'mtk'))\n\t{\n\t\tlocaleInput = new MtkLocaleInput(filename);\n\t\treturn localeInput;\n\t}\n\tif (mode == 'ipf')\n\t{\n\t\tlocaleInput = new IpfLocaleInput(filename);\n\t\treturn localeInput;\n\t}\n};\n\nexports.GetLocaleInput = GetLocaleInput;\n\n\nexports.TransLib = TransLib;\n\n\nexports.LocaleDir = LocaleDir;\n\n/* \n * brief:\treturn hash of input str\n * str:\t\tinput str\n * return:\thash of input str, using sha-1\n */\nvar hashHex = function (str){\n\tvar hash=crypto.createHash('sha');\n\thash.update(str,'utf8');\n\treturn hash.digest('hex');\n};\n\nexports.hashHex = hashHex;\n\n/*\n * brief:\ttransform excel file into transLib Object\n * excelStr:\tinput excel file string\n * return:\ttransLib object\n */\nvar excelToJs = function(excelStr){\n\t\n\tvar res = xlsx.parse(excelStr);\n\tvar resFormat = [];\n\tvar header = res[0].data[0];\n\t/* the first line is 'en_US' 'zh_TW' */\n\tvar data = res[0].data.slice(1);\n\tdata.forEach(function(xe,i,a) {\n\t\tvar cell = {};\n\t\txe.forEach(function(x,i,a) {\n\t\t\t// cut all \\r \\n, neglect ''\n\t\t\tif (x)\n\t\t\t{\n\t\t\t\tcell[header[i]]=x.toString().replace(/\\r/g,'').replace(/\\n/g,'');\n\t\t\t}\n\n\t\t});\n\t\tif ((xe.length >0) && xe[0])\n\t\t\tresFormat.push(cell);\n\t\telse\n\t\t\tconsole.log(xe);\n\t});\n\treturn (resFormat);\n};\n\nexports.excelToJs = excelToJs;\n/*\n * brief:\texec shell command\n * reutrn\tshell output\n */\nfunction exec(cmd)\n{\n\tvar res = execSync(cmd,{encoding:'utf8',maxBuffer:1024*1024});\n\tres=res.replace(/\\n$/,\"\");//\tcut the last \\n\n\treturn res;\n}\n\nexports.exec=exec;\n"
      }
    } ],
    "results" : [ {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "div_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 582,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "div_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 589,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "div_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 604,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "div_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 610,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 138,
            "startColumn" : 24,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "200052ce96dd6f02:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 24,
            "endColumn" : 42
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a588c9765e53b9d:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 168,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b2268c61723b137:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 166,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 173,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b2268c61723b137:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 166,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 173,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b2268c61723b137:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_3.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 168,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_3.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b2268c61723b137:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 153,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 160,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 166,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan6_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 173,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b2268c61723b137:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 378,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 385,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_3.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 378,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_3.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 385,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 378,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 385,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 378,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 385,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 378,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 385,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_7.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 378,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_7.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 385,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 381,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ethWan_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 388,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fw6LanEdit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 136,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fw6LanEdit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 142,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fw6WanEdit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 147,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "fw6WanEdit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 153,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ipv6Tunnel.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 180,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1dbebd69b812af8:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ipv6Tunnel.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 187,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 1633,
            "startColumn" : 28,
            "endColumn" : 44
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1aff8c678b8ea08c:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 1638,
            "startColumn" : 28,
            "endColumn" : 46
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a588c9765e53b9d:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 1719,
            "startColumn" : 28,
            "endColumn" : 44
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1aff8c678b8ea08c:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 1724,
            "startColumn" : 28,
            "endColumn" : 46
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a588c9765e53b9d:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_9.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 1639,
            "startColumn" : 28,
            "endColumn" : 44
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1aff8c678b8ea08c:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_9.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 1644,
            "startColumn" : 28,
            "endColumn" : 46
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a588c9765e53b9d:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_9.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 1725,
            "startColumn" : 28,
            "endColumn" : 44
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1aff8c678b8ea08c:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_9.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 1730,
            "startColumn" : 28,
            "endColumn" : 46
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a588c9765e53b9d:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '__'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "marked.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 457,
            "startColumn" : 13,
            "endColumn" : 28
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b30345c25f525e39:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings starting with '*' and containing many repetitions of '**'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "marked.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 457,
            "startColumn" : 37,
            "endColumn" : 54
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b30345c25f525e39:1",
        "primaryLocationStartColumnFingerprint" : "34"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 107,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 230,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 236,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 107,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 230,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "route6Edit_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 236,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:2",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tunnel6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 188,
            "startColumn" : 15,
            "endColumn" : 31
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bab77c5fc1055d2:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/redos",
      "ruleIndex" : 7,
      "message" : {
        "text" : "This part of the regular expression may cause exponential backtracking on strings containing many repetitions of '::'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tunnel6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 194,
            "startColumn" : 15,
            "endColumn" : 33
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "67f04a5cf3817777:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "js/incomplete-url-scheme-check",
      "ruleIndex" : 10,
      "message" : {
        "text" : "This check does not consider data: and vbscript:."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "marked.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 871,
            "startColumn" : 9,
            "endColumn" : 42
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6be2ff2cd4a9fee1:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_10.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_10.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_11.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_11.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_12.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_12.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_13.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_13.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_7.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_7.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_9.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "index_9.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 147,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 147,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 326,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 326,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_3.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 315,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_3.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 315,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 241,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_4.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 241,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 443,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_5.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 443,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 147,
            "startColumn" : 5,
            "endColumn" : 40
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f65aa87f9c6ca98:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_6.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 147,
            "startColumn" : 17,
            "endColumn" : 34
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-url-substring-sanitization",
      "ruleIndex" : 11,
      "message" : {
        "text" : "'[tplinklogin.net](1)' can be anywhere in the URL, and arbitrary hosts may come before or after it."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setPwd.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 141,
            "startColumn" : 9,
            "endColumn" : 44
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c70b46455f6bf0fa:1",
        "primaryLocationStartColumnFingerprint" : "4"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "setPwd.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 141,
            "startColumn" : 21,
            "endColumn" : 38
          }
        },
        "message" : {
          "text" : "tplinklogin.net"
        }
      } ]
    }, {
      "ruleId" : "js/useless-regexp-character-escape",
      "ruleIndex" : 13,
      "message" : {
        "text" : "The escape sequence '\\.' is equivalent to just '.', so the sequence may still represent a meta-character when it is used in a [regular expression](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compressJsInHtml.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 18,
            "startColumn" : 36,
            "endColumn" : 38
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76668a50f9f26431:1",
        "primaryLocationStartColumnFingerprint" : "35"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compressJsInHtml.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 18,
            "startColumn" : 35,
            "endColumn" : 42
          }
        },
        "message" : {
          "text" : "regular expression"
        }
      } ]
    }, {
      "ruleId" : "js/useless-regexp-character-escape",
      "ruleIndex" : 13,
      "message" : {
        "text" : "The escape sequence '\\s' is equivalent to just 's', so the sequence is not a character class when it is used in a [regular expression](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wlBasicRE.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 239,
            "startColumn" : 25,
            "endColumn" : 27
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5861619e69097f3f:1",
        "primaryLocationStartColumnFingerprint" : "21"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wlBasicRE.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 239,
            "startColumn" : 24,
            "endColumn" : 72
          }
        },
        "message" : {
          "text" : "regular expression"
        }
      } ]
    }, {
      "ruleId" : "js/useless-regexp-character-escape",
      "ruleIndex" : 13,
      "message" : {
        "text" : "The escape sequence '\\s' is equivalent to just 's', so the sequence is not a character class when it is used in a [regular expression](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wlBasicRE.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 239,
            "startColumn" : 68,
            "endColumn" : 70
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5861619e69097f3f:1",
        "primaryLocationStartColumnFingerprint" : "64"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "wlBasicRE.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 239,
            "startColumn" : 24,
            "endColumn" : 72
          }
        },
        "message" : {
          "text" : "regular expression"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpRadio.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 27,
            "startColumn" : 57,
            "endColumn" : 60
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3a8c721d02c302a1:1",
        "primaryLocationStartColumnFingerprint" : "44"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpRadio.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 44
                },
                "region" : {
                  "startLine" : 26,
                  "startColumn" : 70,
                  "endColumn" : 85
                }
              },
              "message" : {
                "text" : "labelTmp.text()"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpRadio.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 44
                },
                "region" : {
                  "startLine" : 26,
                  "startColumn" : 20,
                  "endColumn" : 105
                }
              },
              "message" : {
                "text" : "\"<span  ... label>\""
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpRadio.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 44
                },
                "region" : {
                  "startLine" : 26,
                  "startColumn" : 13,
                  "endColumn" : 105
                }
              },
              "message" : {
                "text" : "str"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpRadio.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 44
                },
                "region" : {
                  "startLine" : 27,
                  "startColumn" : 57,
                  "endColumn" : 60
                }
              },
              "message" : {
                "text" : "str"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpRadio.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 70,
            "endColumn" : 85
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSearchInput.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 34,
            "endColumn" : 115
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "82a48d916ea60218:1",
        "primaryLocationStartColumnFingerprint" : "13"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 126,
                  "startColumn" : 42,
                  "endColumn" : 56
                }
              },
              "message" : {
                "text" : "tmpItem.text()"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 126,
                  "startColumn" : 31,
                  "endColumn" : 57
                }
              },
              "message" : {
                "text" : "regex.e ... text())"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 126,
                  "startColumn" : 23,
                  "endColumn" : 57
                }
              },
              "message" : {
                "text" : "match"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 131,
                  "startColumn" : 34,
                  "endColumn" : 39
                }
              },
              "message" : {
                "text" : "match"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 131,
                  "startColumn" : 34,
                  "endColumn" : 45
                }
              },
              "message" : {
                "text" : "match.input"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 131,
                  "startColumn" : 34,
                  "endColumn" : 115
                }
              },
              "message" : {
                "text" : "match.i ... rong>')"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 126,
                  "startColumn" : 42,
                  "endColumn" : 56
                }
              },
              "message" : {
                "text" : "tmpItem.text()"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 126,
                  "startColumn" : 31,
                  "endColumn" : 57
                }
              },
              "message" : {
                "text" : "regex.e ... text())"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 126,
                  "startColumn" : 23,
                  "endColumn" : 57
                }
              },
              "message" : {
                "text" : "match"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 131,
                  "startColumn" : 95,
                  "endColumn" : 100
                }
              },
              "message" : {
                "text" : "match"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 131,
                  "startColumn" : 64,
                  "endColumn" : 114
                }
              },
              "message" : {
                "text" : "'<stron ... trong>'"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSearchInput.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 45
                },
                "region" : {
                  "startLine" : 131,
                  "startColumn" : 34,
                  "endColumn" : 115
                }
              },
              "message" : {
                "text" : "match.i ... rong>')"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSearchInput.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 126,
            "startColumn" : 42,
            "endColumn" : 56
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSelect.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 74,
            "startColumn" : 36,
            "endColumn" : 49
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cf904b23e20ec5f9:1",
        "primaryLocationStartColumnFingerprint" : "15"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSelect.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 46
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 36,
                  "endColumn" : 49
                }
              },
              "message" : {
                "text" : "option.text()"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSelect.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 46
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 36,
                  "endColumn" : 49
                }
              },
              "message" : {
                "text" : "option.text()"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSelect.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 74,
            "startColumn" : 36,
            "endColumn" : 49
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSelect.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 36,
            "endColumn" : 49
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df13726e8f50cc5b:1",
        "primaryLocationStartColumnFingerprint" : "15"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSelect.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 46
                },
                "region" : {
                  "startLine" : 100,
                  "startColumn" : 36,
                  "endColumn" : 49
                }
              },
              "message" : {
                "text" : "option.text()"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSelect.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 46
                },
                "region" : {
                  "startLine" : 100,
                  "startColumn" : 36,
                  "endColumn" : 49
                }
              },
              "message" : {
                "text" : "option.text()"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSelect.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 36,
            "endColumn" : 49
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSelect.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 148,
            "startColumn" : 40,
            "endColumn" : 57
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2add8e333db4a335:1",
        "primaryLocationStartColumnFingerprint" : "15"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSelect.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 46
                },
                "region" : {
                  "startLine" : 148,
                  "startColumn" : 40,
                  "endColumn" : 57
                }
              },
              "message" : {
                "text" : "selectItem.text()"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "jquery.tpSelect.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 46
                },
                "region" : {
                  "startLine" : 148,
                  "startColumn" : 40,
                  "endColumn" : 57
                }
              },
              "message" : {
                "text" : "selectItem.text()"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpSelect.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 148,
            "startColumn" : 40,
            "endColumn" : 57
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "stat.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 39,
            "endColumn" : 63
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eebfac1045c6cdd2:1",
        "primaryLocationStartColumnFingerprint" : "22"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "stat.htm",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 47
                },
                "region" : {
                  "startLine" : 253,
                  "startColumn" : 39,
                  "endColumn" : 57
                }
              },
              "message" : {
                "text" : "$('#device').val()"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "stat.htm",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 47
                },
                "region" : {
                  "startLine" : 253,
                  "startColumn" : 39,
                  "endColumn" : 63
                }
              },
              "message" : {
                "text" : "$('#dev ... ) + ':'"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "stat.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 253,
            "startColumn" : 39,
            "endColumn" : 57
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "time.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 117,
            "startColumn" : 31,
            "endColumn" : 43
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6218bd1b7f9215b5:1",
        "primaryLocationStartColumnFingerprint" : "26"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "time.htm",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 48
                },
                "region" : {
                  "startLine" : 116,
                  "startColumn" : 21,
                  "endColumn" : 45
                }
              },
              "message" : {
                "text" : "$(\"#dat ... value')"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "time.htm",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 48
                },
                "region" : {
                  "startLine" : 116,
                  "startColumn" : 21,
                  "endColumn" : 56
                }
              },
              "message" : {
                "text" : "$(\"#dat ... it('/')"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "time.htm",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 48
                },
                "region" : {
                  "startLine" : 116,
                  "startColumn" : 9,
                  "endColumn" : 56
                }
              },
              "message" : {
                "text" : "dateArray"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "time.htm",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 48
                },
                "region" : {
                  "startLine" : 117,
                  "startColumn" : 31,
                  "endColumn" : 40
                }
              },
              "message" : {
                "text" : "dateArray"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "time.htm",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 48
                },
                "region" : {
                  "startLine" : 117,
                  "startColumn" : 31,
                  "endColumn" : 43
                }
              },
              "message" : {
                "text" : "dateArray[2]"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "time.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 116,
            "startColumn" : 21,
            "endColumn" : 45
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/xss-through-dom",
      "ruleIndex" : 26,
      "message" : {
        "text" : "[DOM text](1) is reinterpreted as HTML without escaping meta-characters."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "upgrade.html",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 474,
            "startColumn" : 53,
            "endColumn" : 54
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d5ef63e9d4e7ef3:1",
        "primaryLocationStartColumnFingerprint" : "44"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 466,
                  "startColumn" : 21,
                  "endColumn" : 40
                }
              },
              "message" : {
                "text" : "upgrade_input.value"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 466,
                  "startColumn" : 13,
                  "endColumn" : 40
                }
              },
              "message" : {
                "text" : "value"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 472,
                  "startColumn" : 17,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "value"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 472,
                  "startColumn" : 13,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "v"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 474,
                  "startColumn" : 53,
                  "endColumn" : 54
                }
              },
              "message" : {
                "text" : "v"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 466,
                  "startColumn" : 21,
                  "endColumn" : 40
                }
              },
              "message" : {
                "text" : "upgrade_input.value"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 466,
                  "startColumn" : 13,
                  "endColumn" : 40
                }
              },
              "message" : {
                "text" : "value"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 470,
                  "startColumn" : 17,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "value"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 470,
                  "startColumn" : 17,
                  "endColumn" : 47
                }
              },
              "message" : {
                "text" : "value.s ... ngth+1)"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 470,
                  "startColumn" : 13,
                  "endColumn" : 47
                }
              },
              "message" : {
                "text" : "v"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "upgrade.html",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 49
                },
                "region" : {
                  "startLine" : 474,
                  "startColumn" : 53,
                  "endColumn" : 54
                }
              },
              "message" : {
                "text" : "v"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "upgrade.html",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 466,
            "startColumn" : 21,
            "endColumn" : 40
          }
        },
        "message" : {
          "text" : "DOM text"
        }
      } ]
    }, {
      "ruleId" : "js/double-escaping",
      "ruleIndex" : 31,
      "message" : {
        "text" : "This replacement may produce '&' characters that are double-unescaped [here](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "folderSharing.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 782,
            "startColumn" : 12,
            "endColumn" : 82
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9eb53d03958ae8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "folderSharing.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 782,
            "startColumn" : 12,
            "endColumn" : 106
          }
        },
        "message" : {
          "text" : "here"
        }
      } ]
    }, {
      "ruleId" : "js/double-escaping",
      "ruleIndex" : 31,
      "message" : {
        "text" : "This replacement may produce '&' characters that are double-unescaped [here](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usb3g.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 1179,
            "startColumn" : 16,
            "endColumn" : 86
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9eb53d03958ae8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usb3g.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 1179,
            "startColumn" : 16,
            "endColumn" : 110
          }
        },
        "message" : {
          "text" : "here"
        }
      } ]
    }, {
      "ruleId" : "js/double-escaping",
      "ruleIndex" : 31,
      "message" : {
        "text" : "This replacement may produce '&' characters that are double-unescaped [here](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbFolderBrowse.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 9,
            "endColumn" : 79
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9eb53d03958ae8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbFolderBrowse.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 9,
            "endColumn" : 103
          }
        },
        "message" : {
          "text" : "here"
        }
      } ]
    }, {
      "ruleId" : "js/double-escaping",
      "ruleIndex" : 31,
      "message" : {
        "text" : "This replacement may produce '&' characters that are double-unescaped [here](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbFolderBrowse_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 9,
            "endColumn" : 79
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9eb53d03958ae8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbFolderBrowse_1.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 9,
            "endColumn" : 103
          }
        },
        "message" : {
          "text" : "here"
        }
      } ]
    }, {
      "ruleId" : "js/double-escaping",
      "ruleIndex" : 31,
      "message" : {
        "text" : "This replacement may produce '&' characters that are double-unescaped [here](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbFolderBrowse_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 9,
            "endColumn" : 79
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9eb53d03958ae8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbFolderBrowse_2.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 9,
            "endColumn" : 103
          }
        },
        "message" : {
          "text" : "here"
        }
      } ]
    }, {
      "ruleId" : "js/double-escaping",
      "ruleIndex" : 31,
      "message" : {
        "text" : "This replacement may produce '&' characters that are double-unescaped [here](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbManage.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 1179,
            "startColumn" : 16,
            "endColumn" : 86
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d9eb53d03958ae8a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "usbManage.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 1179,
            "startColumn" : 16,
            "endColumn" : 110
          }
        },
        "message" : {
          "text" : "here"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-multi-character-sanitization",
      "ruleIndex" : 33,
      "message" : {
        "text" : "This string may still contain [<!--](1), which may cause a HTML element injection vulnerability."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compressJsInHtml.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 9,
            "endColumn" : 43
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9df792277348a22a:1",
        "primaryLocationStartColumnFingerprint" : "7"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "compressJsInHtml.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 22,
            "endColumn" : 26
          }
        },
        "message" : {
          "text" : "<!--"
        }
      } ]
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "jquery.tpMsg.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 409,
            "startColumn" : 27,
            "endColumn" : 38
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "220c003fde4756cb:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_1.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 1020,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9e14ff4c5bf844db:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_2.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 984,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "339f69d578af07e1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_3.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 1121,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "339f69d578af07e1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_4.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 912,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "339f69d578af07e1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_5.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 1017,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "339f69d578af07e1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_6.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 1010,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "339f69d578af07e1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_7.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 1005,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "339f69d578af07e1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of \"$\"."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "lib_8.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 1132,
            "startColumn" : 12,
            "endColumn" : 23
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "339f69d578af07e1:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1089,
            "startColumn" : 45,
            "endColumn" : 62
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "394f1db24c0fcf22:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1090,
            "startColumn" : 49,
            "endColumn" : 66
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "354efa96d4689709:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1118,
            "startColumn" : 49,
            "endColumn" : 66
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "394f1db24c0fcf22:2",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1119,
            "startColumn" : 53,
            "endColumn" : 70
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "354efa96d4689709:2",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1373,
            "startColumn" : 45,
            "endColumn" : 62
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce77d8d1c392bb46:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1374,
            "startColumn" : 49,
            "endColumn" : 66
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ebe6d1eebaed221:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1389,
            "startColumn" : 49,
            "endColumn" : 66
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce77d8d1c392bb46:2",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 1390,
            "startColumn" : 53,
            "endColumn" : 70
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "be97b0789284effb:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 558,
            "startColumn" : 45,
            "endColumn" : 62
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "394f1db24c0fcf22:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 559,
            "startColumn" : 49,
            "endColumn" : 66
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "354efa96d4689709:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 575,
            "startColumn" : 49,
            "endColumn" : 66
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "394f1db24c0fcf22:2",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "js/incomplete-sanitization",
      "ruleIndex" : 34,
      "message" : {
        "text" : "This replaces only the first occurrence of '$'."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "login_8.htm",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 576,
            "startColumn" : 53,
            "endColumn" : 70
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1859547d5fec409:1",
        "primaryLocationStartColumnFingerprint" : "36"
      }
    }, {
      "ruleId" : "js/prototype-pollution-utility",
      "ruleIndex" : 66,
      "message" : {
        "text" : "Properties are copied from [ref](1) to [src](2) without guarding against prototype pollution."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "localeModule.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 8,
            "endColumn" : 11
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a60edc7919500d99:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 66,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 57,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 70,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 66,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 57,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 70,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 66,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 57,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 19
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 57,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 70,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 66,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 57,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 19
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 74,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 57,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 70,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "localeModule.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 20,
            "endColumn" : 23
          }
        },
        "message" : {
          "text" : "ref"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "localeModule.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 8,
            "endColumn" : 11
          }
        },
        "message" : {
          "text" : "src"
        }
      } ]
    }, {
      "ruleId" : "js/prototype-pollution-utility",
      "ruleIndex" : 66,
      "message" : {
        "text" : "Properties are copied from [ref](1) to [src](2) without guarding against prototype pollution."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "localeModule.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 8,
            "endColumn" : 11
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c6623e7fcf1e0363:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "codeFlows" : [ {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 101,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 93,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 103,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 101,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 93,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 103,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 101,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 93,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 117,
                  "startColumn" : 16,
                  "endColumn" : 19
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 117,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 93,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 103,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      }, {
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 101,
                  "startColumn" : 15,
                  "endColumn" : 16
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 20,
                  "endColumn" : 21
                }
              },
              "message" : {
                "text" : "i"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 110,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 93,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 117,
                  "startColumn" : 16,
                  "endColumn" : 19
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 117,
                  "startColumn" : 16,
                  "endColumn" : 22
                }
              },
              "message" : {
                "text" : "src[i]"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 93,
                  "startColumn" : 27,
                  "endColumn" : 30
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "localeModule.js",
                  "uriBaseId" : "%SRCROOT%",
                  "index" : 67
                },
                "region" : {
                  "startLine" : 103,
                  "startColumn" : 8,
                  "endColumn" : 11
                }
              },
              "message" : {
                "text" : "src"
              }
            }
          } ]
        } ]
      } ],
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "localeModule.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 101,
            "startColumn" : 20,
            "endColumn" : 23
          }
        },
        "message" : {
          "text" : "ref"
        }
      }, {
        "id" : 2,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "localeModule.js",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 8,
            "endColumn" : 11
          }
        },
        "message" : {
          "text" : "src"
        }
      } ]
    } ],
    "newlineSequences" : [ "\r\n", "\n", " ", " " ],
    "columnKind" : "utf16CodeUnits",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}